/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e={1983:(e,t,n)=>{"use strict";n(6266),n(990),n(911),n(4160),n(6197),n(6728),n(4039),n(3568),n(8051),n(8250),n(5434),n(4952),n(6337),n(5666)},1506:e=>{e.exports=function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}},4575:e=>{e.exports=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}},3913:e=>{function t(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}e.exports=function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}},9754:e=>{function t(n){return e.exports=t=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},t(n)}e.exports=t},2205:(e,t,n)=>{var r=n(9489);e.exports=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&r(e,t)}},8585:(e,t,n)=>{var r=n(8),i=n(1506);e.exports=function(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?i(e):t}},9489:e=>{function t(n,r){return e.exports=t=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},t(n,r)}e.exports=t},8:e=>{function t(n){return"function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?e.exports=t=function(e){return typeof e}:e.exports=t=function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t(n)}e.exports=t},9669:(e,t,n)=>{e.exports=n(1609)},5448:(e,t,n)=>{"use strict";var r=n(4867),i=n(6026),o=n(4372),a=n(5327),u=n(4097),l=n(4109),c=n(7985),s=n(5061);e.exports=function(e){return new Promise((function(t,n){var f=e.data,d=e.headers;r.isFormData(f)&&delete d["Content-Type"];var p=new XMLHttpRequest;if(e.auth){var h=e.auth.username||"",m=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";d.Authorization="Basic "+btoa(h+":"+m)}var v=u(e.baseURL,e.url);if(p.open(e.method.toUpperCase(),a(v,e.params,e.paramsSerializer),!0),p.timeout=e.timeout,p.onreadystatechange=function(){if(p&&4===p.readyState&&(0!==p.status||p.responseURL&&0===p.responseURL.indexOf("file:"))){var r="getAllResponseHeaders"in p?l(p.getAllResponseHeaders()):null,o={data:e.responseType&&"text"!==e.responseType?p.response:p.responseText,status:p.status,statusText:p.statusText,headers:r,config:e,request:p};i(t,n,o),p=null}},p.onabort=function(){p&&(n(s("Request aborted",e,"ECONNABORTED",p)),p=null)},p.onerror=function(){n(s("Network Error",e,null,p)),p=null},p.ontimeout=function(){var t="timeout of "+e.timeout+"ms exceeded";e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),n(s(t,e,"ECONNABORTED",p)),p=null},r.isStandardBrowserEnv()){var g=(e.withCredentials||c(v))&&e.xsrfCookieName?o.read(e.xsrfCookieName):void 0;g&&(d[e.xsrfHeaderName]=g)}if("setRequestHeader"in p&&r.forEach(d,(function(e,t){void 0===f&&"content-type"===t.toLowerCase()?delete d[t]:p.setRequestHeader(t,e)})),r.isUndefined(e.withCredentials)||(p.withCredentials=!!e.withCredentials),e.responseType)try{p.responseType=e.responseType}catch(t){if("json"!==e.responseType)throw t}"function"==typeof e.onDownloadProgress&&p.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&p.upload&&p.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then((function(e){p&&(p.abort(),n(e),p=null)})),f||(f=null),p.send(f)}))}},1609:(e,t,n)=>{"use strict";var r=n(4867),i=n(1849),o=n(321),a=n(7185);function u(e){var t=new o(e),n=i(o.prototype.request,t);return r.extend(n,o.prototype,t),r.extend(n,t),n}var l=u(n(5655));l.Axios=o,l.create=function(e){return u(a(l.defaults,e))},l.Cancel=n(5263),l.CancelToken=n(4972),l.isCancel=n(6502),l.all=function(e){return Promise.all(e)},l.spread=n(8713),l.isAxiosError=n(6268),e.exports=l,e.exports.default=l},5263:e=>{"use strict";function t(e){this.message=e}t.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},t.prototype.__CANCEL__=!0,e.exports=t},4972:(e,t,n)=>{"use strict";var r=n(5263);function i(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise((function(e){t=e}));var n=this;e((function(e){n.reason||(n.reason=new r(e),t(n.reason))}))}i.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},i.source=function(){var e;return{token:new i((function(t){e=t})),cancel:e}},e.exports=i},6502:e=>{"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},321:(e,t,n)=>{"use strict";var r=n(4867),i=n(5327),o=n(782),a=n(3572),u=n(7185);function l(e){this.defaults=e,this.interceptors={request:new o,response:new o}}l.prototype.request=function(e){"string"==typeof e?(e=arguments[1]||{}).url=arguments[0]:e=e||{},(e=u(this.defaults,e)).method?e.method=e.method.toLowerCase():this.defaults.method?e.method=this.defaults.method.toLowerCase():e.method="get";var t=[a,void 0],n=Promise.resolve(e);for(this.interceptors.request.forEach((function(e){t.unshift(e.fulfilled,e.rejected)})),this.interceptors.response.forEach((function(e){t.push(e.fulfilled,e.rejected)}));t.length;)n=n.then(t.shift(),t.shift());return n},l.prototype.getUri=function(e){return e=u(this.defaults,e),i(e.url,e.params,e.paramsSerializer).replace(/^\?/,"")},r.forEach(["delete","get","head","options"],(function(e){l.prototype[e]=function(t,n){return this.request(u(n||{},{method:e,url:t,data:(n||{}).data}))}})),r.forEach(["post","put","patch"],(function(e){l.prototype[e]=function(t,n,r){return this.request(u(r||{},{method:e,url:t,data:n}))}})),e.exports=l},782:(e,t,n)=>{"use strict";var r=n(4867);function i(){this.handlers=[]}i.prototype.use=function(e,t){return this.handlers.push({fulfilled:e,rejected:t}),this.handlers.length-1},i.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},i.prototype.forEach=function(e){r.forEach(this.handlers,(function(t){null!==t&&e(t)}))},e.exports=i},4097:(e,t,n)=>{"use strict";var r=n(1793),i=n(7303);e.exports=function(e,t){return e&&!r(t)?i(e,t):t}},5061:(e,t,n)=>{"use strict";var r=n(481);e.exports=function(e,t,n,i,o){var a=new Error(e);return r(a,t,n,i,o)}},3572:(e,t,n)=>{"use strict";var r=n(4867),i=n(8527),o=n(6502),a=n(5655);function u(e){e.cancelToken&&e.cancelToken.throwIfRequested()}e.exports=function(e){return u(e),e.headers=e.headers||{},e.data=i(e.data,e.headers,e.transformRequest),e.headers=r.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),r.forEach(["delete","get","head","post","put","patch","common"],(function(t){delete e.headers[t]})),(e.adapter||a.adapter)(e).then((function(t){return u(e),t.data=i(t.data,t.headers,e.transformResponse),t}),(function(t){return o(t)||(u(e),t&&t.response&&(t.response.data=i(t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)}))}},481:e=>{"use strict";e.exports=function(e,t,n,r,i){return e.config=t,n&&(e.code=n),e.request=r,e.response=i,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},e}},7185:(e,t,n)=>{"use strict";var r=n(4867);e.exports=function(e,t){t=t||{};var n={},i=["url","method","data"],o=["headers","auth","proxy","params"],a=["baseURL","transformRequest","transformResponse","paramsSerializer","timeout","timeoutMessage","withCredentials","adapter","responseType","xsrfCookieName","xsrfHeaderName","onUploadProgress","onDownloadProgress","decompress","maxContentLength","maxBodyLength","maxRedirects","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding"],u=["validateStatus"];function l(e,t){return r.isPlainObject(e)&&r.isPlainObject(t)?r.merge(e,t):r.isPlainObject(t)?r.merge({},t):r.isArray(t)?t.slice():t}function c(i){r.isUndefined(t[i])?r.isUndefined(e[i])||(n[i]=l(void 0,e[i])):n[i]=l(e[i],t[i])}r.forEach(i,(function(e){r.isUndefined(t[e])||(n[e]=l(void 0,t[e]))})),r.forEach(o,c),r.forEach(a,(function(i){r.isUndefined(t[i])?r.isUndefined(e[i])||(n[i]=l(void 0,e[i])):n[i]=l(void 0,t[i])})),r.forEach(u,(function(r){r in t?n[r]=l(e[r],t[r]):r in e&&(n[r]=l(void 0,e[r]))}));var s=i.concat(o).concat(a).concat(u),f=Object.keys(e).concat(Object.keys(t)).filter((function(e){return-1===s.indexOf(e)}));return r.forEach(f,c),n}},6026:(e,t,n)=>{"use strict";var r=n(5061);e.exports=function(e,t,n){var i=n.config.validateStatus;n.status&&i&&!i(n.status)?t(r("Request failed with status code "+n.status,n.config,null,n.request,n)):e(n)}},8527:(e,t,n)=>{"use strict";var r=n(4867);e.exports=function(e,t,n){return r.forEach(n,(function(n){e=n(e,t)})),e}},5655:(e,t,n)=>{"use strict";var r=n(4867),i=n(6016),o={"Content-Type":"application/x-www-form-urlencoded"};function a(e,t){!r.isUndefined(e)&&r.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}var u,l={adapter:(("undefined"!=typeof XMLHttpRequest||"undefined"!=typeof process&&"[object process]"===Object.prototype.toString.call(process))&&(u=n(5448)),u),transformRequest:[function(e,t){return i(t,"Accept"),i(t,"Content-Type"),r.isFormData(e)||r.isArrayBuffer(e)||r.isBuffer(e)||r.isStream(e)||r.isFile(e)||r.isBlob(e)?e:r.isArrayBufferView(e)?e.buffer:r.isURLSearchParams(e)?(a(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):r.isObject(e)?(a(t,"application/json;charset=utf-8"),JSON.stringify(e)):e}],transformResponse:[function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(e){}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};r.forEach(["delete","get","head"],(function(e){l.headers[e]={}})),r.forEach(["post","put","patch"],(function(e){l.headers[e]=r.merge(o)})),e.exports=l},1849:e=>{"use strict";e.exports=function(e,t){return function(){for(var n=new Array(arguments.length),r=0;r<n.length;r++)n[r]=arguments[r];return e.apply(t,n)}}},5327:(e,t,n)=>{"use strict";var r=n(4867);function i(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}e.exports=function(e,t,n){if(!t)return e;var o;if(n)o=n(t);else if(r.isURLSearchParams(t))o=t.toString();else{var a=[];r.forEach(t,(function(e,t){null!=e&&(r.isArray(e)?t+="[]":e=[e],r.forEach(e,(function(e){r.isDate(e)?e=e.toISOString():r.isObject(e)&&(e=JSON.stringify(e)),a.push(i(t)+"="+i(e))})))})),o=a.join("&")}if(o){var u=e.indexOf("#");-1!==u&&(e=e.slice(0,u)),e+=(-1===e.indexOf("?")?"?":"&")+o}return e}},7303:e=>{"use strict";e.exports=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}},4372:(e,t,n)=>{"use strict";var r=n(4867);e.exports=r.isStandardBrowserEnv()?{write:function(e,t,n,i,o,a){var u=[];u.push(e+"="+encodeURIComponent(t)),r.isNumber(n)&&u.push("expires="+new Date(n).toGMTString()),r.isString(i)&&u.push("path="+i),r.isString(o)&&u.push("domain="+o),!0===a&&u.push("secure"),document.cookie=u.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},1793:e=>{"use strict";e.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}},6268:e=>{"use strict";e.exports=function(e){return"object"==typeof e&&!0===e.isAxiosError}},7985:(e,t,n)=>{"use strict";var r=n(4867);e.exports=r.isStandardBrowserEnv()?function(){var e,t=/(msie|trident)/i.test(navigator.userAgent),n=document.createElement("a");function i(e){var r=e;return t&&(n.setAttribute("href",r),r=n.href),n.setAttribute("href",r),{href:n.href,protocol:n.protocol?n.protocol.replace(/:$/,""):"",host:n.host,search:n.search?n.search.replace(/^\?/,""):"",hash:n.hash?n.hash.replace(/^#/,""):"",hostname:n.hostname,port:n.port,pathname:"/"===n.pathname.charAt(0)?n.pathname:"/"+n.pathname}}return e=i(window.location.href),function(t){var n=r.isString(t)?i(t):t;return n.protocol===e.protocol&&n.host===e.host}}():function(){return!0}},6016:(e,t,n)=>{"use strict";var r=n(4867);e.exports=function(e,t){r.forEach(e,(function(n,r){r!==t&&r.toUpperCase()===t.toUpperCase()&&(e[t]=n,delete e[r])}))}},4109:(e,t,n)=>{"use strict";var r=n(4867),i=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var t,n,o,a={};return e?(r.forEach(e.split("\n"),(function(e){if(o=e.indexOf(":"),t=r.trim(e.substr(0,o)).toLowerCase(),n=r.trim(e.substr(o+1)),t){if(a[t]&&i.indexOf(t)>=0)return;a[t]="set-cookie"===t?(a[t]?a[t]:[]).concat([n]):a[t]?a[t]+", "+n:n}})),a):a}},8713:e=>{"use strict";e.exports=function(e){return function(t){return e.apply(null,t)}}},4867:(e,t,n)=>{"use strict";var r=n(1849),i=Object.prototype.toString;function o(e){return"[object Array]"===i.call(e)}function a(e){return void 0===e}function u(e){return null!==e&&"object"==typeof e}function l(e){if("[object Object]"!==i.call(e))return!1;var t=Object.getPrototypeOf(e);return null===t||t===Object.prototype}function c(e){return"[object Function]"===i.call(e)}function s(e,t){if(null!=e)if("object"!=typeof e&&(e=[e]),o(e))for(var n=0,r=e.length;n<r;n++)t.call(null,e[n],n,e);else for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&t.call(null,e[i],i,e)}e.exports={isArray:o,isArrayBuffer:function(e){return"[object ArrayBuffer]"===i.call(e)},isBuffer:function(e){return null!==e&&!a(e)&&null!==e.constructor&&!a(e.constructor)&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){return"undefined"!=typeof FormData&&e instanceof FormData},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:u,isPlainObject:l,isUndefined:a,isDate:function(e){return"[object Date]"===i.call(e)},isFile:function(e){return"[object File]"===i.call(e)},isBlob:function(e){return"[object Blob]"===i.call(e)},isFunction:c,isStream:function(e){return u(e)&&c(e.pipe)},isURLSearchParams:function(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&"undefined"!=typeof window&&"undefined"!=typeof document},forEach:s,merge:function e(){var t={};function n(n,r){l(t[r])&&l(n)?t[r]=e(t[r],n):l(n)?t[r]=e({},n):o(n)?t[r]=n.slice():t[r]=n}for(var r=0,i=arguments.length;r<i;r++)s(arguments[r],n);return t},extend:function(e,t,n){return s(t,(function(t,i){e[i]=n&&"function"==typeof t?r(t,n):t})),e},trim:function(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")},stripBOM:function(e){return 65279===e.charCodeAt(0)&&(e=e.slice(1)),e}}},6266:(e,t,n)=>{n(5767),n(8132),n(8388),n(7470),n(4882),n(1520),n(7476),n(9622),n(9375),n(3533),n(4672),n(4157),n(5095),n(9892),n(5115),n(9176),n(8838),n(6253),n(9730),n(6059),n(8377),n(1084),n(4299),n(1246),n(726),n(1901),n(5972),n(3403),n(2516),n(9371),n(6479),n(1736),n(1889),n(5177),n(6943),n(6503),n(6786),n(932),n(7526),n(1591),n(9073),n(347),n(579),n(4669),n(7710),n(5789),n(3514),n(9978),n(8472),n(6946),n(5068),n(413),n(191),n(8306),n(4564),n(9115),n(9539),n(6620),n(2850),n(823),n(7732),n(856),n(703),n(1539),n(5292),n(6629),n(3694),n(7648),n(7795),n(4531),n(3605),n(6780),n(9937),n(511),n(1822),n(9977),n(1031),n(6331),n(1560),n(774),n(522),n(8295),n(7842),n(110),n(75),n(4336),n(1802),n(8837),n(6773),n(5745),n(3057),n(3750),n(3369),n(9564),n(2e3),n(8977),n(2310),n(4899),n(1842),n(6997),n(3946),n(8269),n(6108),n(6774),n(1466),n(9357),n(6142),n(1876),n(851),n(8416),n(8184),n(147),n(9192),n(142),n(1786),n(5368),n(6964),n(2152),n(4821),n(9103),n(1303),n(3318),n(162),n(3834),n(1572),n(2139),n(685),n(5535),n(7347),n(3049),n(6633),n(8989),n(8270),n(4510),n(3984),n(5769),n(55),n(6014),e.exports=n(5645)},911:(e,t,n)=>{n(1268),e.exports=n(5645).Array.flatMap},990:(e,t,n)=>{n(2773),e.exports=n(5645).Array.includes},5434:(e,t,n)=>{n(3276),e.exports=n(5645).Object.entries},8051:(e,t,n)=>{n(8351),e.exports=n(5645).Object.getOwnPropertyDescriptors},8250:(e,t,n)=>{n(6409),e.exports=n(5645).Object.values},4952:(e,t,n)=>{"use strict";n(851),n(9865),e.exports=n(5645).Promise.finally},6197:(e,t,n)=>{n(2770),e.exports=n(5645).String.padEnd},4160:(e,t,n)=>{n(1784),e.exports=n(5645).String.padStart},4039:(e,t,n)=>{n(4325),e.exports=n(5645).String.trimRight},6728:(e,t,n)=>{n(5869),e.exports=n(5645).String.trimLeft},3568:(e,t,n)=>{n(9665),e.exports=n(8787).f("asyncIterator")},115:(e,t,n)=>{n(4579),e.exports=n(1327).global},5663:e=>{e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},2159:(e,t,n)=>{var r=n(6727);e.exports=function(e){if(!r(e))throw TypeError(e+" is not an object!");return e}},1327:e=>{var t=e.exports={version:"2.6.12"};"number"==typeof __e&&(__e=t)},9216:(e,t,n)=>{var r=n(5663);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,i){return e.call(t,n,r,i)}}return function(){return e.apply(t,arguments)}}},9666:(e,t,n)=>{e.exports=!n(7929)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},7467:(e,t,n)=>{var r=n(6727),i=n(3938).document,o=r(i)&&r(i.createElement);e.exports=function(e){return o?i.createElement(e):{}}},3856:(e,t,n)=>{var r=n(3938),i=n(1327),o=n(9216),a=n(1818),u=n(7069),l=function(e,t,n){var c,s,f,d=e&l.F,p=e&l.G,h=e&l.S,m=e&l.P,v=e&l.B,g=e&l.W,y=p?i:i[t]||(i[t]={}),b=y.prototype,x=p?r:h?r[t]:(r[t]||{}).prototype;for(c in p&&(n=t),n)(s=!d&&x&&void 0!==x[c])&&u(y,c)||(f=s?x[c]:n[c],y[c]=p&&"function"!=typeof x[c]?n[c]:v&&s?o(f,r):g&&x[c]==f?function(e){var t=function(t,n,r){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,n)}return new e(t,n,r)}return e.apply(this,arguments)};return t.prototype=e.prototype,t}(f):m&&"function"==typeof f?o(Function.call,f):f,m&&((y.virtual||(y.virtual={}))[c]=f,e&l.R&&b&&!b[c]&&a(b,c,f)))};l.F=1,l.G=2,l.S=4,l.P=8,l.B=16,l.W=32,l.U=64,l.R=128,e.exports=l},7929:e=>{e.exports=function(e){try{return!!e()}catch(e){return!0}}},3938:e=>{var t=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=t)},7069:e=>{var t={}.hasOwnProperty;e.exports=function(e,n){return t.call(e,n)}},1818:(e,t,n)=>{var r=n(4743),i=n(3101);e.exports=n(9666)?function(e,t,n){return r.f(e,t,i(1,n))}:function(e,t,n){return e[t]=n,e}},3758:(e,t,n)=>{e.exports=!n(9666)&&!n(7929)((function(){return 7!=Object.defineProperty(n(7467)("div"),"a",{get:function(){return 7}}).a}))},6727:e=>{e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},4743:(e,t,n)=>{var r=n(2159),i=n(3758),o=n(3206),a=Object.defineProperty;t.f=n(9666)?Object.defineProperty:function(e,t,n){if(r(e),t=o(t,!0),r(n),i)try{return a(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(e[t]=n.value),e}},3101:e=>{e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},3206:(e,t,n)=>{var r=n(6727);e.exports=function(e,t){if(!r(e))return e;var n,i;if(t&&"function"==typeof(n=e.toString)&&!r(i=n.call(e)))return i;if("function"==typeof(n=e.valueOf)&&!r(i=n.call(e)))return i;if(!t&&"function"==typeof(n=e.toString)&&!r(i=n.call(e)))return i;throw TypeError("Can't convert object to primitive value")}},4579:(e,t,n)=>{var r=n(3856);r(r.G,{global:n(3938)})},4963:e=>{e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},3365:(e,t,n)=>{var r=n(2032);e.exports=function(e,t){if("number"!=typeof e&&"Number"!=r(e))throw TypeError(t);return+e}},7722:(e,t,n)=>{var r=n(6314)("unscopables"),i=Array.prototype;null==i[r]&&n(7728)(i,r,{}),e.exports=function(e){i[r][e]=!0}},6793:(e,t,n)=>{"use strict";var r=n(4496)(!0);e.exports=function(e,t,n){return t+(n?r(e,t).length:1)}},3328:e=>{e.exports=function(e,t,n,r){if(!(e instanceof t)||void 0!==r&&r in e)throw TypeError(n+": incorrect invocation!");return e}},7007:(e,t,n)=>{var r=n(5286);e.exports=function(e){if(!r(e))throw TypeError(e+" is not an object!");return e}},5216:(e,t,n)=>{"use strict";var r=n(508),i=n(2337),o=n(875);e.exports=[].copyWithin||function(e,t){var n=r(this),a=o(n.length),u=i(e,a),l=i(t,a),c=arguments.length>2?arguments[2]:void 0,s=Math.min((void 0===c?a:i(c,a))-l,a-u),f=1;for(l<u&&u<l+s&&(f=-1,l+=s-1,u+=s-1);s-- >0;)l in n?n[u]=n[l]:delete n[u],u+=f,l+=f;return n}},6852:(e,t,n)=>{"use strict";var r=n(508),i=n(2337),o=n(875);e.exports=function(e){for(var t=r(this),n=o(t.length),a=arguments.length,u=i(a>1?arguments[1]:void 0,n),l=a>2?arguments[2]:void 0,c=void 0===l?n:i(l,n);c>u;)t[u++]=e;return t}},9315:(e,t,n)=>{var r=n(2110),i=n(875),o=n(2337);e.exports=function(e){return function(t,n,a){var u,l=r(t),c=i(l.length),s=o(a,c);if(e&&n!=n){for(;c>s;)if((u=l[s++])!=u)return!0}else for(;c>s;s++)if((e||s in l)&&l[s]===n)return e||s||0;return!e&&-1}}},50:(e,t,n)=>{var r=n(741),i=n(9797),o=n(508),a=n(875),u=n(6886);e.exports=function(e,t){var n=1==e,l=2==e,c=3==e,s=4==e,f=6==e,d=5==e||f,p=t||u;return function(t,u,h){for(var m,v,g=o(t),y=i(g),b=r(u,h,3),x=a(y.length),A=0,w=n?p(t,x):l?p(t,0):void 0;x>A;A++)if((d||A in y)&&(v=b(m=y[A],A,g),e))if(n)w[A]=v;else if(v)switch(e){case 3:return!0;case 5:return m;case 6:return A;case 2:w.push(m)}else if(s)return!1;return f?-1:c||s?s:w}}},7628:(e,t,n)=>{var r=n(4963),i=n(508),o=n(9797),a=n(875);e.exports=function(e,t,n,u,l){r(t);var c=i(e),s=o(c),f=a(c.length),d=l?f-1:0,p=l?-1:1;if(n<2)for(;;){if(d in s){u=s[d],d+=p;break}if(d+=p,l?d<0:f<=d)throw TypeError("Reduce of empty array with no initial value")}for(;l?d>=0:f>d;d+=p)d in s&&(u=t(u,s[d],d,c));return u}},2736:(e,t,n)=>{var r=n(5286),i=n(4302),o=n(6314)("species");e.exports=function(e){var t;return i(e)&&("function"!=typeof(t=e.constructor)||t!==Array&&!i(t.prototype)||(t=void 0),r(t)&&null===(t=t[o])&&(t=void 0)),void 0===t?Array:t}},6886:(e,t,n)=>{var r=n(2736);e.exports=function(e,t){return new(r(e))(t)}},4398:(e,t,n)=>{"use strict";var r=n(4963),i=n(5286),o=n(7242),a=[].slice,u={},l=function(e,t,n){if(!(t in u)){for(var r=[],i=0;i<t;i++)r[i]="a["+i+"]";u[t]=Function("F,a","return new F("+r.join(",")+")")}return u[t](e,n)};e.exports=Function.bind||function(e){var t=r(this),n=a.call(arguments,1),u=function(){var r=n.concat(a.call(arguments));return this instanceof u?l(t,r.length,r):o(t,r,e)};return i(t.prototype)&&(u.prototype=t.prototype),u}},1488:(e,t,n)=>{var r=n(2032),i=n(6314)("toStringTag"),o="Arguments"==r(function(){return arguments}());e.exports=function(e){var t,n,a;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),i))?n:o?r(t):"Object"==(a=r(t))&&"function"==typeof t.callee?"Arguments":a}},2032:e=>{var t={}.toString;e.exports=function(e){return t.call(e).slice(8,-1)}},9824:(e,t,n)=>{"use strict";var r=n(9275).f,i=n(2503),o=n(4408),a=n(741),u=n(3328),l=n(3531),c=n(2923),s=n(5436),f=n(2974),d=n(7057),p=n(4728).fastKey,h=n(1616),m=d?"_s":"size",v=function(e,t){var n,r=p(t);if("F"!==r)return e._i[r];for(n=e._f;n;n=n.n)if(n.k==t)return n};e.exports={getConstructor:function(e,t,n,c){var s=e((function(e,r){u(e,s,t,"_i"),e._t=t,e._i=i(null),e._f=void 0,e._l=void 0,e[m]=0,null!=r&&l(r,n,e[c],e)}));return o(s.prototype,{clear:function(){for(var e=h(this,t),n=e._i,r=e._f;r;r=r.n)r.r=!0,r.p&&(r.p=r.p.n=void 0),delete n[r.i];e._f=e._l=void 0,e[m]=0},delete:function(e){var n=h(this,t),r=v(n,e);if(r){var i=r.n,o=r.p;delete n._i[r.i],r.r=!0,o&&(o.n=i),i&&(i.p=o),n._f==r&&(n._f=i),n._l==r&&(n._l=o),n[m]--}return!!r},forEach:function(e){h(this,t);for(var n,r=a(e,arguments.length>1?arguments[1]:void 0,3);n=n?n.n:this._f;)for(r(n.v,n.k,this);n&&n.r;)n=n.p},has:function(e){return!!v(h(this,t),e)}}),d&&r(s.prototype,"size",{get:function(){return h(this,t)[m]}}),s},def:function(e,t,n){var r,i,o=v(e,t);return o?o.v=n:(e._l=o={i:i=p(t,!0),k:t,v:n,p:r=e._l,n:void 0,r:!1},e._f||(e._f=o),r&&(r.n=o),e[m]++,"F"!==i&&(e._i[i]=o)),e},getEntry:v,setStrong:function(e,t,n){c(e,t,(function(e,n){this._t=h(e,t),this._k=n,this._l=void 0}),(function(){for(var e=this,t=e._k,n=e._l;n&&n.r;)n=n.p;return e._t&&(e._l=n=n?n.n:e._t._f)?s(0,"keys"==t?n.k:"values"==t?n.v:[n.k,n.v]):(e._t=void 0,s(1))}),n?"entries":"values",!n,!0),f(t)}}},3657:(e,t,n)=>{"use strict";var r=n(4408),i=n(4728).getWeak,o=n(7007),a=n(5286),u=n(3328),l=n(3531),c=n(50),s=n(9181),f=n(1616),d=c(5),p=c(6),h=0,m=function(e){return e._l||(e._l=new v)},v=function(){this.a=[]},g=function(e,t){return d(e.a,(function(e){return e[0]===t}))};v.prototype={get:function(e){var t=g(this,e);if(t)return t[1]},has:function(e){return!!g(this,e)},set:function(e,t){var n=g(this,e);n?n[1]=t:this.a.push([e,t])},delete:function(e){var t=p(this.a,(function(t){return t[0]===e}));return~t&&this.a.splice(t,1),!!~t}},e.exports={getConstructor:function(e,t,n,o){var c=e((function(e,r){u(e,c,t,"_i"),e._t=t,e._i=h++,e._l=void 0,null!=r&&l(r,n,e[o],e)}));return r(c.prototype,{delete:function(e){if(!a(e))return!1;var n=i(e);return!0===n?m(f(this,t)).delete(e):n&&s(n,this._i)&&delete n[this._i]},has:function(e){if(!a(e))return!1;var n=i(e);return!0===n?m(f(this,t)).has(e):n&&s(n,this._i)}}),c},def:function(e,t,n){var r=i(o(t),!0);return!0===r?m(e).set(t,n):r[e._i]=n,e},ufstore:m}},5795:(e,t,n)=>{"use strict";var r=n(3816),i=n(2985),o=n(7234),a=n(4408),u=n(4728),l=n(3531),c=n(3328),s=n(5286),f=n(4253),d=n(7462),p=n(2943),h=n(266);e.exports=function(e,t,n,m,v,g){var y=r[e],b=y,x=v?"set":"add",A=b&&b.prototype,w={},E=function(e){var t=A[e];o(A,e,"delete"==e||"has"==e?function(e){return!(g&&!s(e))&&t.call(this,0===e?0:e)}:"get"==e?function(e){return g&&!s(e)?void 0:t.call(this,0===e?0:e)}:"add"==e?function(e){return t.call(this,0===e?0:e),this}:function(e,n){return t.call(this,0===e?0:e,n),this})};if("function"==typeof b&&(g||A.forEach&&!f((function(){(new b).entries().next()})))){var C=new b,k=C[x](g?{}:-0,1)!=C,S=f((function(){C.has(1)})),T=d((function(e){new b(e)})),_=!g&&f((function(){for(var e=new b,t=5;t--;)e[x](t,t);return!e.has(-0)}));T||((b=t((function(t,n){c(t,b,e);var r=h(new y,t,b);return null!=n&&l(n,v,r[x],r),r}))).prototype=A,A.constructor=b),(S||_)&&(E("delete"),E("has"),v&&E("get")),(_||k)&&E(x),g&&A.clear&&delete A.clear}else b=m.getConstructor(t,e,v,x),a(b.prototype,n),u.NEED=!0;return p(b,e),w[e]=b,i(i.G+i.W+i.F*(b!=y),w),g||m.setStrong(b,e,v),b}},5645:e=>{var t=e.exports={version:"2.6.12"};"number"==typeof __e&&(__e=t)},2811:(e,t,n)=>{"use strict";var r=n(9275),i=n(681);e.exports=function(e,t,n){t in e?r.f(e,t,i(0,n)):e[t]=n}},741:(e,t,n)=>{var r=n(4963);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,i){return e.call(t,n,r,i)}}return function(){return e.apply(t,arguments)}}},3537:(e,t,n)=>{"use strict";var r=n(4253),i=Date.prototype.getTime,o=Date.prototype.toISOString,a=function(e){return e>9?e:"0"+e};e.exports=r((function(){return"0385-07-25T07:06:39.999Z"!=o.call(new Date(-50000000000001))}))||!r((function(){o.call(new Date(NaN))}))?function(){if(!isFinite(i.call(this)))throw RangeError("Invalid time value");var e=this,t=e.getUTCFullYear(),n=e.getUTCMilliseconds(),r=t<0?"-":t>9999?"+":"";return r+("00000"+Math.abs(t)).slice(r?-6:-4)+"-"+a(e.getUTCMonth()+1)+"-"+a(e.getUTCDate())+"T"+a(e.getUTCHours())+":"+a(e.getUTCMinutes())+":"+a(e.getUTCSeconds())+"."+(n>99?n:"0"+a(n))+"Z"}:o},870:(e,t,n)=>{"use strict";var r=n(7007),i=n(1689),o="number";e.exports=function(e){if("string"!==e&&e!==o&&"default"!==e)throw TypeError("Incorrect hint");return i(r(this),e!=o)}},1355:e=>{e.exports=function(e){if(null==e)throw TypeError("Can't call method on  "+e);return e}},7057:(e,t,n)=>{e.exports=!n(4253)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},2457:(e,t,n)=>{var r=n(5286),i=n(3816).document,o=r(i)&&r(i.createElement);e.exports=function(e){return o?i.createElement(e):{}}},4430:e=>{e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},5541:(e,t,n)=>{var r=n(7184),i=n(4548),o=n(4682);e.exports=function(e){var t=r(e),n=i.f;if(n)for(var a,u=n(e),l=o.f,c=0;u.length>c;)l.call(e,a=u[c++])&&t.push(a);return t}},2985:(e,t,n)=>{var r=n(3816),i=n(5645),o=n(7728),a=n(7234),u=n(741),l=function(e,t,n){var c,s,f,d,p=e&l.F,h=e&l.G,m=e&l.S,v=e&l.P,g=e&l.B,y=h?r:m?r[t]||(r[t]={}):(r[t]||{}).prototype,b=h?i:i[t]||(i[t]={}),x=b.prototype||(b.prototype={});for(c in h&&(n=t),n)f=((s=!p&&y&&void 0!==y[c])?y:n)[c],d=g&&s?u(f,r):v&&"function"==typeof f?u(Function.call,f):f,y&&a(y,c,f,e&l.U),b[c]!=f&&o(b,c,d),v&&x[c]!=f&&(x[c]=f)};r.core=i,l.F=1,l.G=2,l.S=4,l.P=8,l.B=16,l.W=32,l.U=64,l.R=128,e.exports=l},8852:(e,t,n)=>{var r=n(6314)("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(n){try{return t[r]=!1,!"/./"[e](t)}catch(e){}}return!0}},4253:e=>{e.exports=function(e){try{return!!e()}catch(e){return!0}}},8082:(e,t,n)=>{"use strict";n(8269);var r=n(7234),i=n(7728),o=n(4253),a=n(1355),u=n(6314),l=n(1165),c=u("species"),s=!o((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")})),f=function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var n="ab".split(e);return 2===n.length&&"a"===n[0]&&"b"===n[1]}();e.exports=function(e,t,n){var d=u(e),p=!o((function(){var t={};return t[d]=function(){return 7},7!=""[e](t)})),h=p?!o((function(){var t=!1,n=/a/;return n.exec=function(){return t=!0,null},"split"===e&&(n.constructor={},n.constructor[c]=function(){return n}),n[d](""),!t})):void 0;if(!p||!h||"replace"===e&&!s||"split"===e&&!f){var m=/./[d],v=n(a,d,""[e],(function(e,t,n,r,i){return t.exec===l?p&&!i?{done:!0,value:m.call(t,n,r)}:{done:!0,value:e.call(n,t,r)}:{done:!1}})),g=v[0],y=v[1];r(String.prototype,e,g),i(RegExp.prototype,d,2==t?function(e,t){return y.call(e,this,t)}:function(e){return y.call(e,this)})}}},3218:(e,t,n)=>{"use strict";var r=n(7007);e.exports=function(){var e=r(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t}},3325:(e,t,n)=>{"use strict";var r=n(4302),i=n(5286),o=n(875),a=n(741),u=n(6314)("isConcatSpreadable");e.exports=function e(t,n,l,c,s,f,d,p){for(var h,m,v=s,g=0,y=!!d&&a(d,p,3);g<c;){if(g in l){if(h=y?y(l[g],g,n):l[g],m=!1,i(h)&&(m=void 0!==(m=h[u])?!!m:r(h)),m&&f>0)v=e(t,n,h,o(h.length),v,f-1)-1;else{if(v>=9007199254740991)throw TypeError();t[v]=h}v++}g++}return v}},3531:(e,t,n)=>{var r=n(741),i=n(8851),o=n(6555),a=n(7007),u=n(875),l=n(9002),c={},s={},f=e.exports=function(e,t,n,f,d){var p,h,m,v,g=d?function(){return e}:l(e),y=r(n,f,t?2:1),b=0;if("function"!=typeof g)throw TypeError(e+" is not iterable!");if(o(g)){for(p=u(e.length);p>b;b++)if((v=t?y(a(h=e[b])[0],h[1]):y(e[b]))===c||v===s)return v}else for(m=g.call(e);!(h=m.next()).done;)if((v=i(m,y,h.value,t))===c||v===s)return v};f.BREAK=c,f.RETURN=s},18:(e,t,n)=>{e.exports=n(3825)("native-function-to-string",Function.toString)},3816:e=>{var t=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=t)},9181:e=>{var t={}.hasOwnProperty;e.exports=function(e,n){return t.call(e,n)}},7728:(e,t,n)=>{var r=n(9275),i=n(681);e.exports=n(7057)?function(e,t,n){return r.f(e,t,i(1,n))}:function(e,t,n){return e[t]=n,e}},639:(e,t,n)=>{var r=n(3816).document;e.exports=r&&r.documentElement},1734:(e,t,n)=>{e.exports=!n(7057)&&!n(4253)((function(){return 7!=Object.defineProperty(n(2457)("div"),"a",{get:function(){return 7}}).a}))},266:(e,t,n)=>{var r=n(5286),i=n(7375).set;e.exports=function(e,t,n){var o,a=t.constructor;return a!==n&&"function"==typeof a&&(o=a.prototype)!==n.prototype&&r(o)&&i&&i(e,o),e}},7242:e=>{e.exports=function(e,t,n){var r=void 0===n;switch(t.length){case 0:return r?e():e.call(n);case 1:return r?e(t[0]):e.call(n,t[0]);case 2:return r?e(t[0],t[1]):e.call(n,t[0],t[1]);case 3:return r?e(t[0],t[1],t[2]):e.call(n,t[0],t[1],t[2]);case 4:return r?e(t[0],t[1],t[2],t[3]):e.call(n,t[0],t[1],t[2],t[3])}return e.apply(n,t)}},9797:(e,t,n)=>{var r=n(2032);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==r(e)?e.split(""):Object(e)}},6555:(e,t,n)=>{var r=n(2803),i=n(6314)("iterator"),o=Array.prototype;e.exports=function(e){return void 0!==e&&(r.Array===e||o[i]===e)}},4302:(e,t,n)=>{var r=n(2032);e.exports=Array.isArray||function(e){return"Array"==r(e)}},8367:(e,t,n)=>{var r=n(5286),i=Math.floor;e.exports=function(e){return!r(e)&&isFinite(e)&&i(e)===e}},5286:e=>{e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},5364:(e,t,n)=>{var r=n(5286),i=n(2032),o=n(6314)("match");e.exports=function(e){var t;return r(e)&&(void 0!==(t=e[o])?!!t:"RegExp"==i(e))}},8851:(e,t,n)=>{var r=n(7007);e.exports=function(e,t,n,i){try{return i?t(r(n)[0],n[1]):t(n)}catch(t){var o=e.return;throw void 0!==o&&r(o.call(e)),t}}},9988:(e,t,n)=>{"use strict";var r=n(2503),i=n(681),o=n(2943),a={};n(7728)(a,n(6314)("iterator"),(function(){return this})),e.exports=function(e,t,n){e.prototype=r(a,{next:i(1,n)}),o(e,t+" Iterator")}},2923:(e,t,n)=>{"use strict";var r=n(4461),i=n(2985),o=n(7234),a=n(7728),u=n(2803),l=n(9988),c=n(2943),s=n(468),f=n(6314)("iterator"),d=!([].keys&&"next"in[].keys()),p="keys",h="values",m=function(){return this};e.exports=function(e,t,n,v,g,y,b){l(n,t,v);var x,A,w,E=function(e){if(!d&&e in T)return T[e];switch(e){case p:case h:return function(){return new n(this,e)}}return function(){return new n(this,e)}},C=t+" Iterator",k=g==h,S=!1,T=e.prototype,_=T[f]||T["@@iterator"]||g&&T[g],P=_||E(g),O=g?k?E("entries"):P:void 0,M="Array"==t&&T.entries||_;if(M&&(w=s(M.call(new e)))!==Object.prototype&&w.next&&(c(w,C,!0),r||"function"==typeof w[f]||a(w,f,m)),k&&_&&_.name!==h&&(S=!0,P=function(){return _.call(this)}),r&&!b||!d&&!S&&T[f]||a(T,f,P),u[t]=P,u[C]=m,g)if(x={values:k?P:E(h),keys:y?P:E(p),entries:O},b)for(A in x)A in T||o(T,A,x[A]);else i(i.P+i.F*(d||S),t,x);return x}},7462:(e,t,n)=>{var r=n(6314)("iterator"),i=!1;try{var o=[7][r]();o.return=function(){i=!0},Array.from(o,(function(){throw 2}))}catch(e){}e.exports=function(e,t){if(!t&&!i)return!1;var n=!1;try{var o=[7],a=o[r]();a.next=function(){return{done:n=!0}},o[r]=function(){return a},e(o)}catch(e){}return n}},5436:e=>{e.exports=function(e,t){return{value:t,done:!!e}}},2803:e=>{e.exports={}},4461:e=>{e.exports=!1},3086:e=>{var t=Math.expm1;e.exports=!t||t(10)>22025.465794806718||t(10)<22025.465794806718||-2e-17!=t(-2e-17)?function(e){return 0==(e=+e)?e:e>-1e-6&&e<1e-6?e+e*e/2:Math.exp(e)-1}:t},4934:(e,t,n)=>{var r=n(1801),i=Math.pow,o=i(2,-52),a=i(2,-23),u=i(2,127)*(2-a),l=i(2,-126);e.exports=Math.fround||function(e){var t,n,i=Math.abs(e),c=r(e);return i<l?c*(i/l/a+1/o-1/o)*l*a:(n=(t=(1+a/o)*i)-(t-i))>u||n!=n?c*(1/0):c*n}},6206:e=>{e.exports=Math.log1p||function(e){return(e=+e)>-1e-8&&e<1e-8?e-e*e/2:Math.log(1+e)}},1801:e=>{e.exports=Math.sign||function(e){return 0==(e=+e)||e!=e?e:e<0?-1:1}},4728:(e,t,n)=>{var r=n(3953)("meta"),i=n(5286),o=n(9181),a=n(9275).f,u=0,l=Object.isExtensible||function(){return!0},c=!n(4253)((function(){return l(Object.preventExtensions({}))})),s=function(e){a(e,r,{value:{i:"O"+ ++u,w:{}}})},f=e.exports={KEY:r,NEED:!1,fastKey:function(e,t){if(!i(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!o(e,r)){if(!l(e))return"F";if(!t)return"E";s(e)}return e[r].i},getWeak:function(e,t){if(!o(e,r)){if(!l(e))return!0;if(!t)return!1;s(e)}return e[r].w},onFreeze:function(e){return c&&f.NEED&&l(e)&&!o(e,r)&&s(e),e}}},4351:(e,t,n)=>{var r=n(3816),i=n(4193).set,o=r.MutationObserver||r.WebKitMutationObserver,a=r.process,u=r.Promise,l="process"==n(2032)(a);e.exports=function(){var e,t,n,c=function(){var r,i;for(l&&(r=a.domain)&&r.exit();e;){i=e.fn,e=e.next;try{i()}catch(r){throw e?n():t=void 0,r}}t=void 0,r&&r.enter()};if(l)n=function(){a.nextTick(c)};else if(!o||r.navigator&&r.navigator.standalone)if(u&&u.resolve){var s=u.resolve(void 0);n=function(){s.then(c)}}else n=function(){i.call(r,c)};else{var f=!0,d=document.createTextNode("");new o(c).observe(d,{characterData:!0}),n=function(){d.data=f=!f}}return function(r){var i={fn:r,next:void 0};t&&(t.next=i),e||(e=i,n()),t=i}}},3499:(e,t,n)=>{"use strict";var r=n(4963);function i(e){var t,n;this.promise=new e((function(e,r){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=r})),this.resolve=r(t),this.reject=r(n)}e.exports.f=function(e){return new i(e)}},5345:(e,t,n)=>{"use strict";var r=n(7057),i=n(7184),o=n(4548),a=n(4682),u=n(508),l=n(9797),c=Object.assign;e.exports=!c||n(4253)((function(){var e={},t={},n=Symbol(),r="abcdefghijklmnopqrst";return e[n]=7,r.split("").forEach((function(e){t[e]=e})),7!=c({},e)[n]||Object.keys(c({},t)).join("")!=r}))?function(e,t){for(var n=u(e),c=arguments.length,s=1,f=o.f,d=a.f;c>s;)for(var p,h=l(arguments[s++]),m=f?i(h).concat(f(h)):i(h),v=m.length,g=0;v>g;)p=m[g++],r&&!d.call(h,p)||(n[p]=h[p]);return n}:c},2503:(e,t,n)=>{var r=n(7007),i=n(5588),o=n(4430),a=n(9335)("IE_PROTO"),u=function(){},l=function(){var e,t=n(2457)("iframe"),r=o.length;for(t.style.display="none",n(639).appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),l=e.F;r--;)delete l.prototype[o[r]];return l()};e.exports=Object.create||function(e,t){var n;return null!==e?(u.prototype=r(e),n=new u,u.prototype=null,n[a]=e):n=l(),void 0===t?n:i(n,t)}},9275:(e,t,n)=>{var r=n(7007),i=n(1734),o=n(1689),a=Object.defineProperty;t.f=n(7057)?Object.defineProperty:function(e,t,n){if(r(e),t=o(t,!0),r(n),i)try{return a(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(e[t]=n.value),e}},5588:(e,t,n)=>{var r=n(9275),i=n(7007),o=n(7184);e.exports=n(7057)?Object.defineProperties:function(e,t){i(e);for(var n,a=o(t),u=a.length,l=0;u>l;)r.f(e,n=a[l++],t[n]);return e}},8693:(e,t,n)=>{var r=n(4682),i=n(681),o=n(2110),a=n(1689),u=n(9181),l=n(1734),c=Object.getOwnPropertyDescriptor;t.f=n(7057)?c:function(e,t){if(e=o(e),t=a(t,!0),l)try{return c(e,t)}catch(e){}if(u(e,t))return i(!r.f.call(e,t),e[t])}},9327:(e,t,n)=>{var r=n(2110),i=n(616).f,o={}.toString,a="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return a&&"[object Window]"==o.call(e)?function(e){try{return i(e)}catch(e){return a.slice()}}(e):i(r(e))}},616:(e,t,n)=>{var r=n(189),i=n(4430).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,i)}},4548:(e,t)=>{t.f=Object.getOwnPropertySymbols},468:(e,t,n)=>{var r=n(9181),i=n(508),o=n(9335)("IE_PROTO"),a=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=i(e),r(e,o)?e[o]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?a:null}},189:(e,t,n)=>{var r=n(9181),i=n(2110),o=n(9315)(!1),a=n(9335)("IE_PROTO");e.exports=function(e,t){var n,u=i(e),l=0,c=[];for(n in u)n!=a&&r(u,n)&&c.push(n);for(;t.length>l;)r(u,n=t[l++])&&(~o(c,n)||c.push(n));return c}},7184:(e,t,n)=>{var r=n(189),i=n(4430);e.exports=Object.keys||function(e){return r(e,i)}},4682:(e,t)=>{t.f={}.propertyIsEnumerable},3160:(e,t,n)=>{var r=n(2985),i=n(5645),o=n(4253);e.exports=function(e,t){var n=(i.Object||{})[e]||Object[e],a={};a[e]=t(n),r(r.S+r.F*o((function(){n(1)})),"Object",a)}},1131:(e,t,n)=>{var r=n(7057),i=n(7184),o=n(2110),a=n(4682).f;e.exports=function(e){return function(t){for(var n,u=o(t),l=i(u),c=l.length,s=0,f=[];c>s;)n=l[s++],r&&!a.call(u,n)||f.push(e?[n,u[n]]:u[n]);return f}}},7643:(e,t,n)=>{var r=n(616),i=n(4548),o=n(7007),a=n(3816).Reflect;e.exports=a&&a.ownKeys||function(e){var t=r.f(o(e)),n=i.f;return n?t.concat(n(e)):t}},7743:(e,t,n)=>{var r=n(3816).parseFloat,i=n(9599).trim;e.exports=1/r(n(4644)+"-0")!=-1/0?function(e){var t=i(String(e),3),n=r(t);return 0===n&&"-"==t.charAt(0)?-0:n}:r},5960:(e,t,n)=>{var r=n(3816).parseInt,i=n(9599).trim,o=n(4644),a=/^[-+]?0[xX]/;e.exports=8!==r(o+"08")||22!==r(o+"0x16")?function(e,t){var n=i(String(e),3);return r(n,t>>>0||(a.test(n)?16:10))}:r},188:e=>{e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},94:(e,t,n)=>{var r=n(7007),i=n(5286),o=n(3499);e.exports=function(e,t){if(r(e),i(t)&&t.constructor===e)return t;var n=o.f(e);return(0,n.resolve)(t),n.promise}},681:e=>{e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},4408:(e,t,n)=>{var r=n(7234);e.exports=function(e,t,n){for(var i in t)r(e,i,t[i],n);return e}},7234:(e,t,n)=>{var r=n(3816),i=n(7728),o=n(9181),a=n(3953)("src"),u=n(18),l="toString",c=(""+u).split(l);n(5645).inspectSource=function(e){return u.call(e)},(e.exports=function(e,t,n,u){var l="function"==typeof n;l&&(o(n,"name")||i(n,"name",t)),e[t]!==n&&(l&&(o(n,a)||i(n,a,e[t]?""+e[t]:c.join(String(t)))),e===r?e[t]=n:u?e[t]?e[t]=n:i(e,t,n):(delete e[t],i(e,t,n)))})(Function.prototype,l,(function(){return"function"==typeof this&&this[a]||u.call(this)}))},7787:(e,t,n)=>{"use strict";var r=n(1488),i=RegExp.prototype.exec;e.exports=function(e,t){var n=e.exec;if("function"==typeof n){var o=n.call(e,t);if("object"!=typeof o)throw new TypeError("RegExp exec method returned something other than an Object or null");return o}if("RegExp"!==r(e))throw new TypeError("RegExp#exec called on incompatible receiver");return i.call(e,t)}},1165:(e,t,n)=>{"use strict";var r,i,o=n(3218),a=RegExp.prototype.exec,u=String.prototype.replace,l=a,c=(r=/a/,i=/b*/g,a.call(r,"a"),a.call(i,"a"),0!==r.lastIndex||0!==i.lastIndex),s=void 0!==/()??/.exec("")[1];(c||s)&&(l=function(e){var t,n,r,i,l=this;return s&&(n=new RegExp("^"+l.source+"$(?!\\s)",o.call(l))),c&&(t=l.lastIndex),r=a.call(l,e),c&&r&&(l.lastIndex=l.global?r.index+r[0].length:t),s&&r&&r.length>1&&u.call(r[0],n,(function(){for(i=1;i<arguments.length-2;i++)void 0===arguments[i]&&(r[i]=void 0)})),r}),e.exports=l},7195:e=>{e.exports=Object.is||function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}},7375:(e,t,n)=>{var r=n(5286),i=n(7007),o=function(e,t){if(i(e),!r(t)&&null!==t)throw TypeError(t+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,t,r){try{(r=n(741)(Function.call,n(8693).f(Object.prototype,"__proto__").set,2))(e,[]),t=!(e instanceof Array)}catch(e){t=!0}return function(e,n){return o(e,n),t?e.__proto__=n:r(e,n),e}}({},!1):void 0),check:o}},2974:(e,t,n)=>{"use strict";var r=n(3816),i=n(9275),o=n(7057),a=n(6314)("species");e.exports=function(e){var t=r[e];o&&t&&!t[a]&&i.f(t,a,{configurable:!0,get:function(){return this}})}},2943:(e,t,n)=>{var r=n(9275).f,i=n(9181),o=n(6314)("toStringTag");e.exports=function(e,t,n){e&&!i(e=n?e:e.prototype,o)&&r(e,o,{configurable:!0,value:t})}},9335:(e,t,n)=>{var r=n(3825)("keys"),i=n(3953);e.exports=function(e){return r[e]||(r[e]=i(e))}},3825:(e,t,n)=>{var r=n(5645),i=n(3816),o="__core-js_shared__",a=i[o]||(i[o]={});(e.exports=function(e,t){return a[e]||(a[e]=void 0!==t?t:{})})("versions",[]).push({version:r.version,mode:n(4461)?"pure":"global",copyright:"© 2020 Denis Pushkarev (zloirock.ru)"})},8364:(e,t,n)=>{var r=n(7007),i=n(4963),o=n(6314)("species");e.exports=function(e,t){var n,a=r(e).constructor;return void 0===a||null==(n=r(a)[o])?t:i(n)}},7717:(e,t,n)=>{"use strict";var r=n(4253);e.exports=function(e,t){return!!e&&r((function(){t?e.call(null,(function(){}),1):e.call(null)}))}},4496:(e,t,n)=>{var r=n(1467),i=n(1355);e.exports=function(e){return function(t,n){var o,a,u=String(i(t)),l=r(n),c=u.length;return l<0||l>=c?e?"":void 0:(o=u.charCodeAt(l))<55296||o>56319||l+1===c||(a=u.charCodeAt(l+1))<56320||a>57343?e?u.charAt(l):o:e?u.slice(l,l+2):a-56320+(o-55296<<10)+65536}}},2094:(e,t,n)=>{var r=n(5364),i=n(1355);e.exports=function(e,t,n){if(r(t))throw TypeError("String#"+n+" doesn't accept regex!");return String(i(e))}},9395:(e,t,n)=>{var r=n(2985),i=n(4253),o=n(1355),a=/"/g,u=function(e,t,n,r){var i=String(o(e)),u="<"+t;return""!==n&&(u+=" "+n+'="'+String(r).replace(a,"&quot;")+'"'),u+">"+i+"</"+t+">"};e.exports=function(e,t){var n={};n[e]=t(u),r(r.P+r.F*i((function(){var t=""[e]('"');return t!==t.toLowerCase()||t.split('"').length>3})),"String",n)}},5442:(e,t,n)=>{var r=n(875),i=n(8595),o=n(1355);e.exports=function(e,t,n,a){var u=String(o(e)),l=u.length,c=void 0===n?" ":String(n),s=r(t);if(s<=l||""==c)return u;var f=s-l,d=i.call(c,Math.ceil(f/c.length));return d.length>f&&(d=d.slice(0,f)),a?d+u:u+d}},8595:(e,t,n)=>{"use strict";var r=n(1467),i=n(1355);e.exports=function(e){var t=String(i(this)),n="",o=r(e);if(o<0||o==1/0)throw RangeError("Count can't be negative");for(;o>0;(o>>>=1)&&(t+=t))1&o&&(n+=t);return n}},9599:(e,t,n)=>{var r=n(2985),i=n(1355),o=n(4253),a=n(4644),u="["+a+"]",l=RegExp("^"+u+u+"*"),c=RegExp(u+u+"*$"),s=function(e,t,n){var i={},u=o((function(){return!!a[e]()||"​"!="​"[e]()})),l=i[e]=u?t(f):a[e];n&&(i[n]=l),r(r.P+r.F*u,"String",i)},f=s.trim=function(e,t){return e=String(i(e)),1&t&&(e=e.replace(l,"")),2&t&&(e=e.replace(c,"")),e};e.exports=s},4644:e=>{e.exports="\t\n\v\f\r   ᠎             　\u2028\u2029\ufeff"},4193:(e,t,n)=>{var r,i,o,a=n(741),u=n(7242),l=n(639),c=n(2457),s=n(3816),f=s.process,d=s.setImmediate,p=s.clearImmediate,h=s.MessageChannel,m=s.Dispatch,v=0,g={},y=function(){var e=+this;if(g.hasOwnProperty(e)){var t=g[e];delete g[e],t()}},b=function(e){y.call(e.data)};d&&p||(d=function(e){for(var t=[],n=1;arguments.length>n;)t.push(arguments[n++]);return g[++v]=function(){u("function"==typeof e?e:Function(e),t)},r(v),v},p=function(e){delete g[e]},"process"==n(2032)(f)?r=function(e){f.nextTick(a(y,e,1))}:m&&m.now?r=function(e){m.now(a(y,e,1))}:h?(o=(i=new h).port2,i.port1.onmessage=b,r=a(o.postMessage,o,1)):s.addEventListener&&"function"==typeof postMessage&&!s.importScripts?(r=function(e){s.postMessage(e+"","*")},s.addEventListener("message",b,!1)):r="onreadystatechange"in c("script")?function(e){l.appendChild(c("script")).onreadystatechange=function(){l.removeChild(this),y.call(e)}}:function(e){setTimeout(a(y,e,1),0)}),e.exports={set:d,clear:p}},2337:(e,t,n)=>{var r=n(1467),i=Math.max,o=Math.min;e.exports=function(e,t){return(e=r(e))<0?i(e+t,0):o(e,t)}},4843:(e,t,n)=>{var r=n(1467),i=n(875);e.exports=function(e){if(void 0===e)return 0;var t=r(e),n=i(t);if(t!==n)throw RangeError("Wrong length!");return n}},1467:e=>{var t=Math.ceil,n=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?n:t)(e)}},2110:(e,t,n)=>{var r=n(9797),i=n(1355);e.exports=function(e){return r(i(e))}},875:(e,t,n)=>{var r=n(1467),i=Math.min;e.exports=function(e){return e>0?i(r(e),9007199254740991):0}},508:(e,t,n)=>{var r=n(1355);e.exports=function(e){return Object(r(e))}},1689:(e,t,n)=>{var r=n(5286);e.exports=function(e,t){if(!r(e))return e;var n,i;if(t&&"function"==typeof(n=e.toString)&&!r(i=n.call(e)))return i;if("function"==typeof(n=e.valueOf)&&!r(i=n.call(e)))return i;if(!t&&"function"==typeof(n=e.toString)&&!r(i=n.call(e)))return i;throw TypeError("Can't convert object to primitive value")}},8440:(e,t,n)=>{"use strict";if(n(7057)){var r=n(4461),i=n(3816),o=n(4253),a=n(2985),u=n(9383),l=n(1125),c=n(741),s=n(3328),f=n(681),d=n(7728),p=n(4408),h=n(1467),m=n(875),v=n(4843),g=n(2337),y=n(1689),b=n(9181),x=n(1488),A=n(5286),w=n(508),E=n(6555),C=n(2503),k=n(468),S=n(616).f,T=n(9002),_=n(3953),P=n(6314),O=n(50),M=n(9315),N=n(8364),B=n(6997),I=n(2803),F=n(7462),R=n(2974),L=n(6852),j=n(5216),z=n(9275),D=n(8693),U=z.f,W=D.f,V=i.RangeError,H=i.TypeError,q=i.Uint8Array,Q="ArrayBuffer",$="SharedArrayBuffer",Y="BYTES_PER_ELEMENT",G=Array.prototype,Z=l.ArrayBuffer,K=l.DataView,X=O(0),J=O(2),ee=O(3),te=O(4),ne=O(5),re=O(6),ie=M(!0),oe=M(!1),ae=B.values,ue=B.keys,le=B.entries,ce=G.lastIndexOf,se=G.reduce,fe=G.reduceRight,de=G.join,pe=G.sort,he=G.slice,me=G.toString,ve=G.toLocaleString,ge=P("iterator"),ye=P("toStringTag"),be=_("typed_constructor"),xe=_("def_constructor"),Ae=u.CONSTR,we=u.TYPED,Ee=u.VIEW,Ce="Wrong length!",ke=O(1,(function(e,t){return Oe(N(e,e[xe]),t)})),Se=o((function(){return 1===new q(new Uint16Array([1]).buffer)[0]})),Te=!!q&&!!q.prototype.set&&o((function(){new q(1).set({})})),_e=function(e,t){var n=h(e);if(n<0||n%t)throw V("Wrong offset!");return n},Pe=function(e){if(A(e)&&we in e)return e;throw H(e+" is not a typed array!")},Oe=function(e,t){if(!A(e)||!(be in e))throw H("It is not a typed array constructor!");return new e(t)},Me=function(e,t){return Ne(N(e,e[xe]),t)},Ne=function(e,t){for(var n=0,r=t.length,i=Oe(e,r);r>n;)i[n]=t[n++];return i},Be=function(e,t,n){U(e,t,{get:function(){return this._d[n]}})},Ie=function(e){var t,n,r,i,o,a,u=w(e),l=arguments.length,s=l>1?arguments[1]:void 0,f=void 0!==s,d=T(u);if(null!=d&&!E(d)){for(a=d.call(u),r=[],t=0;!(o=a.next()).done;t++)r.push(o.value);u=r}for(f&&l>2&&(s=c(s,arguments[2],2)),t=0,n=m(u.length),i=Oe(this,n);n>t;t++)i[t]=f?s(u[t],t):u[t];return i},Fe=function(){for(var e=0,t=arguments.length,n=Oe(this,t);t>e;)n[e]=arguments[e++];return n},Re=!!q&&o((function(){ve.call(new q(1))})),Le=function(){return ve.apply(Re?he.call(Pe(this)):Pe(this),arguments)},je={copyWithin:function(e,t){return j.call(Pe(this),e,t,arguments.length>2?arguments[2]:void 0)},every:function(e){return te(Pe(this),e,arguments.length>1?arguments[1]:void 0)},fill:function(e){return L.apply(Pe(this),arguments)},filter:function(e){return Me(this,J(Pe(this),e,arguments.length>1?arguments[1]:void 0))},find:function(e){return ne(Pe(this),e,arguments.length>1?arguments[1]:void 0)},findIndex:function(e){return re(Pe(this),e,arguments.length>1?arguments[1]:void 0)},forEach:function(e){X(Pe(this),e,arguments.length>1?arguments[1]:void 0)},indexOf:function(e){return oe(Pe(this),e,arguments.length>1?arguments[1]:void 0)},includes:function(e){return ie(Pe(this),e,arguments.length>1?arguments[1]:void 0)},join:function(e){return de.apply(Pe(this),arguments)},lastIndexOf:function(e){return ce.apply(Pe(this),arguments)},map:function(e){return ke(Pe(this),e,arguments.length>1?arguments[1]:void 0)},reduce:function(e){return se.apply(Pe(this),arguments)},reduceRight:function(e){return fe.apply(Pe(this),arguments)},reverse:function(){for(var e,t=this,n=Pe(t).length,r=Math.floor(n/2),i=0;i<r;)e=t[i],t[i++]=t[--n],t[n]=e;return t},some:function(e){return ee(Pe(this),e,arguments.length>1?arguments[1]:void 0)},sort:function(e){return pe.call(Pe(this),e)},subarray:function(e,t){var n=Pe(this),r=n.length,i=g(e,r);return new(N(n,n[xe]))(n.buffer,n.byteOffset+i*n.BYTES_PER_ELEMENT,m((void 0===t?r:g(t,r))-i))}},ze=function(e,t){return Me(this,he.call(Pe(this),e,t))},De=function(e){Pe(this);var t=_e(arguments[1],1),n=this.length,r=w(e),i=m(r.length),o=0;if(i+t>n)throw V(Ce);for(;o<i;)this[t+o]=r[o++]},Ue={entries:function(){return le.call(Pe(this))},keys:function(){return ue.call(Pe(this))},values:function(){return ae.call(Pe(this))}},We=function(e,t){return A(e)&&e[we]&&"symbol"!=typeof t&&t in e&&String(+t)==String(t)},Ve=function(e,t){return We(e,t=y(t,!0))?f(2,e[t]):W(e,t)},He=function(e,t,n){return!(We(e,t=y(t,!0))&&A(n)&&b(n,"value"))||b(n,"get")||b(n,"set")||n.configurable||b(n,"writable")&&!n.writable||b(n,"enumerable")&&!n.enumerable?U(e,t,n):(e[t]=n.value,e)};Ae||(D.f=Ve,z.f=He),a(a.S+a.F*!Ae,"Object",{getOwnPropertyDescriptor:Ve,defineProperty:He}),o((function(){me.call({})}))&&(me=ve=function(){return de.call(this)});var qe=p({},je);p(qe,Ue),d(qe,ge,Ue.values),p(qe,{slice:ze,set:De,constructor:function(){},toString:me,toLocaleString:Le}),Be(qe,"buffer","b"),Be(qe,"byteOffset","o"),Be(qe,"byteLength","l"),Be(qe,"length","e"),U(qe,ye,{get:function(){return this[we]}}),e.exports=function(e,t,n,l){var c=e+((l=!!l)?"Clamped":"")+"Array",f="get"+e,p="set"+e,h=i[c],g=h||{},y=h&&k(h),b=!h||!u.ABV,w={},E=h&&h.prototype,T=function(e,n){U(e,n,{get:function(){return function(e,n){var r=e._d;return r.v[f](n*t+r.o,Se)}(this,n)},set:function(e){return function(e,n,r){var i=e._d;l&&(r=(r=Math.round(r))<0?0:r>255?255:255&r),i.v[p](n*t+i.o,r,Se)}(this,n,e)},enumerable:!0})};b?(h=n((function(e,n,r,i){s(e,h,c,"_d");var o,a,u,l,f=0,p=0;if(A(n)){if(!(n instanceof Z||(l=x(n))==Q||l==$))return we in n?Ne(h,n):Ie.call(h,n);o=n,p=_e(r,t);var g=n.byteLength;if(void 0===i){if(g%t)throw V(Ce);if((a=g-p)<0)throw V(Ce)}else if((a=m(i)*t)+p>g)throw V(Ce);u=a/t}else u=v(n),o=new Z(a=u*t);for(d(e,"_d",{b:o,o:p,l:a,e:u,v:new K(o)});f<u;)T(e,f++)})),E=h.prototype=C(qe),d(E,"constructor",h)):o((function(){h(1)}))&&o((function(){new h(-1)}))&&F((function(e){new h,new h(null),new h(1.5),new h(e)}),!0)||(h=n((function(e,n,r,i){var o;return s(e,h,c),A(n)?n instanceof Z||(o=x(n))==Q||o==$?void 0!==i?new g(n,_e(r,t),i):void 0!==r?new g(n,_e(r,t)):new g(n):we in n?Ne(h,n):Ie.call(h,n):new g(v(n))})),X(y!==Function.prototype?S(g).concat(S(y)):S(g),(function(e){e in h||d(h,e,g[e])})),h.prototype=E,r||(E.constructor=h));var _=E[ge],P=!!_&&("values"==_.name||null==_.name),O=Ue.values;d(h,be,!0),d(E,we,c),d(E,Ee,!0),d(E,xe,h),(l?new h(1)[ye]==c:ye in E)||U(E,ye,{get:function(){return c}}),w[c]=h,a(a.G+a.W+a.F*(h!=g),w),a(a.S,c,{BYTES_PER_ELEMENT:t}),a(a.S+a.F*o((function(){g.of.call(h,1)})),c,{from:Ie,of:Fe}),Y in E||d(E,Y,t),a(a.P,c,je),R(c),a(a.P+a.F*Te,c,{set:De}),a(a.P+a.F*!P,c,Ue),r||E.toString==me||(E.toString=me),a(a.P+a.F*o((function(){new h(1).slice()})),c,{slice:ze}),a(a.P+a.F*(o((function(){return[1,2].toLocaleString()!=new h([1,2]).toLocaleString()}))||!o((function(){E.toLocaleString.call([1,2])}))),c,{toLocaleString:Le}),I[c]=P?_:O,r||P||d(E,ge,O)}}else e.exports=function(){}},1125:(e,t,n)=>{"use strict";var r=n(3816),i=n(7057),o=n(4461),a=n(9383),u=n(7728),l=n(4408),c=n(4253),s=n(3328),f=n(1467),d=n(875),p=n(4843),h=n(616).f,m=n(9275).f,v=n(6852),g=n(2943),y="ArrayBuffer",b="DataView",x="Wrong index!",A=r.ArrayBuffer,w=r.DataView,E=r.Math,C=r.RangeError,k=r.Infinity,S=A,T=E.abs,_=E.pow,P=E.floor,O=E.log,M=E.LN2,N="buffer",B="byteLength",I="byteOffset",F=i?"_b":N,R=i?"_l":B,L=i?"_o":I;function j(e,t,n){var r,i,o,a=new Array(n),u=8*n-t-1,l=(1<<u)-1,c=l>>1,s=23===t?_(2,-24)-_(2,-77):0,f=0,d=e<0||0===e&&1/e<0?1:0;for((e=T(e))!=e||e===k?(i=e!=e?1:0,r=l):(r=P(O(e)/M),e*(o=_(2,-r))<1&&(r--,o*=2),(e+=r+c>=1?s/o:s*_(2,1-c))*o>=2&&(r++,o/=2),r+c>=l?(i=0,r=l):r+c>=1?(i=(e*o-1)*_(2,t),r+=c):(i=e*_(2,c-1)*_(2,t),r=0));t>=8;a[f++]=255&i,i/=256,t-=8);for(r=r<<t|i,u+=t;u>0;a[f++]=255&r,r/=256,u-=8);return a[--f]|=128*d,a}function z(e,t,n){var r,i=8*n-t-1,o=(1<<i)-1,a=o>>1,u=i-7,l=n-1,c=e[l--],s=127&c;for(c>>=7;u>0;s=256*s+e[l],l--,u-=8);for(r=s&(1<<-u)-1,s>>=-u,u+=t;u>0;r=256*r+e[l],l--,u-=8);if(0===s)s=1-a;else{if(s===o)return r?NaN:c?-k:k;r+=_(2,t),s-=a}return(c?-1:1)*r*_(2,s-t)}function D(e){return e[3]<<24|e[2]<<16|e[1]<<8|e[0]}function U(e){return[255&e]}function W(e){return[255&e,e>>8&255]}function V(e){return[255&e,e>>8&255,e>>16&255,e>>24&255]}function H(e){return j(e,52,8)}function q(e){return j(e,23,4)}function Q(e,t,n){m(e.prototype,t,{get:function(){return this[n]}})}function $(e,t,n,r){var i=p(+n);if(i+t>e[R])throw C(x);var o=e[F]._b,a=i+e[L],u=o.slice(a,a+t);return r?u:u.reverse()}function Y(e,t,n,r,i,o){var a=p(+n);if(a+t>e[R])throw C(x);for(var u=e[F]._b,l=a+e[L],c=r(+i),s=0;s<t;s++)u[l+s]=c[o?s:t-s-1]}if(a.ABV){if(!c((function(){A(1)}))||!c((function(){new A(-1)}))||c((function(){return new A,new A(1.5),new A(NaN),A.name!=y}))){for(var G,Z=(A=function(e){return s(this,A),new S(p(e))}).prototype=S.prototype,K=h(S),X=0;K.length>X;)(G=K[X++])in A||u(A,G,S[G]);o||(Z.constructor=A)}var J=new w(new A(2)),ee=w.prototype.setInt8;J.setInt8(0,2147483648),J.setInt8(1,2147483649),!J.getInt8(0)&&J.getInt8(1)||l(w.prototype,{setInt8:function(e,t){ee.call(this,e,t<<24>>24)},setUint8:function(e,t){ee.call(this,e,t<<24>>24)}},!0)}else A=function(e){s(this,A,y);var t=p(e);this._b=v.call(new Array(t),0),this[R]=t},w=function(e,t,n){s(this,w,b),s(e,A,b);var r=e[R],i=f(t);if(i<0||i>r)throw C("Wrong offset!");if(i+(n=void 0===n?r-i:d(n))>r)throw C("Wrong length!");this[F]=e,this[L]=i,this[R]=n},i&&(Q(A,B,"_l"),Q(w,N,"_b"),Q(w,B,"_l"),Q(w,I,"_o")),l(w.prototype,{getInt8:function(e){return $(this,1,e)[0]<<24>>24},getUint8:function(e){return $(this,1,e)[0]},getInt16:function(e){var t=$(this,2,e,arguments[1]);return(t[1]<<8|t[0])<<16>>16},getUint16:function(e){var t=$(this,2,e,arguments[1]);return t[1]<<8|t[0]},getInt32:function(e){return D($(this,4,e,arguments[1]))},getUint32:function(e){return D($(this,4,e,arguments[1]))>>>0},getFloat32:function(e){return z($(this,4,e,arguments[1]),23,4)},getFloat64:function(e){return z($(this,8,e,arguments[1]),52,8)},setInt8:function(e,t){Y(this,1,e,U,t)},setUint8:function(e,t){Y(this,1,e,U,t)},setInt16:function(e,t){Y(this,2,e,W,t,arguments[2])},setUint16:function(e,t){Y(this,2,e,W,t,arguments[2])},setInt32:function(e,t){Y(this,4,e,V,t,arguments[2])},setUint32:function(e,t){Y(this,4,e,V,t,arguments[2])},setFloat32:function(e,t){Y(this,4,e,q,t,arguments[2])},setFloat64:function(e,t){Y(this,8,e,H,t,arguments[2])}});g(A,y),g(w,b),u(w.prototype,a.VIEW,!0),t.ArrayBuffer=A,t.DataView=w},9383:(e,t,n)=>{for(var r,i=n(3816),o=n(7728),a=n(3953),u=a("typed_array"),l=a("view"),c=!(!i.ArrayBuffer||!i.DataView),s=c,f=0,d="Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array".split(",");f<9;)(r=i[d[f++]])?(o(r.prototype,u,!0),o(r.prototype,l,!0)):s=!1;e.exports={ABV:c,CONSTR:s,TYPED:u,VIEW:l}},3953:e=>{var t=0,n=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++t+n).toString(36))}},575:(e,t,n)=>{var r=n(3816).navigator;e.exports=r&&r.userAgent||""},1616:(e,t,n)=>{var r=n(5286);e.exports=function(e,t){if(!r(e)||e._t!==t)throw TypeError("Incompatible receiver, "+t+" required!");return e}},6074:(e,t,n)=>{var r=n(3816),i=n(5645),o=n(4461),a=n(8787),u=n(9275).f;e.exports=function(e){var t=i.Symbol||(i.Symbol=o?{}:r.Symbol||{});"_"==e.charAt(0)||e in t||u(t,e,{value:a.f(e)})}},8787:(e,t,n)=>{t.f=n(6314)},6314:(e,t,n)=>{var r=n(3825)("wks"),i=n(3953),o=n(3816).Symbol,a="function"==typeof o;(e.exports=function(e){return r[e]||(r[e]=a&&o[e]||(a?o:i)("Symbol."+e))}).store=r},9002:(e,t,n)=>{var r=n(1488),i=n(6314)("iterator"),o=n(2803);e.exports=n(5645).getIteratorMethod=function(e){if(null!=e)return e[i]||e["@@iterator"]||o[r(e)]}},2e3:(e,t,n)=>{var r=n(2985);r(r.P,"Array",{copyWithin:n(5216)}),n(7722)("copyWithin")},5745:(e,t,n)=>{"use strict";var r=n(2985),i=n(50)(4);r(r.P+r.F*!n(7717)([].every,!0),"Array",{every:function(e){return i(this,e,arguments[1])}})},8977:(e,t,n)=>{var r=n(2985);r(r.P,"Array",{fill:n(6852)}),n(7722)("fill")},8837:(e,t,n)=>{"use strict";var r=n(2985),i=n(50)(2);r(r.P+r.F*!n(7717)([].filter,!0),"Array",{filter:function(e){return i(this,e,arguments[1])}})},4899:(e,t,n)=>{"use strict";var r=n(2985),i=n(50)(6),o="findIndex",a=!0;o in[]&&Array(1)[o]((function(){a=!1})),r(r.P+r.F*a,"Array",{findIndex:function(e){return i(this,e,arguments.length>1?arguments[1]:void 0)}}),n(7722)(o)},2310:(e,t,n)=>{"use strict";var r=n(2985),i=n(50)(5),o="find",a=!0;o in[]&&Array(1).find((function(){a=!1})),r(r.P+r.F*a,"Array",{find:function(e){return i(this,e,arguments.length>1?arguments[1]:void 0)}}),n(7722)(o)},4336:(e,t,n)=>{"use strict";var r=n(2985),i=n(50)(0),o=n(7717)([].forEach,!0);r(r.P+r.F*!o,"Array",{forEach:function(e){return i(this,e,arguments[1])}})},522:(e,t,n)=>{"use strict";var r=n(741),i=n(2985),o=n(508),a=n(8851),u=n(6555),l=n(875),c=n(2811),s=n(9002);i(i.S+i.F*!n(7462)((function(e){Array.from(e)})),"Array",{from:function(e){var t,n,i,f,d=o(e),p="function"==typeof this?this:Array,h=arguments.length,m=h>1?arguments[1]:void 0,v=void 0!==m,g=0,y=s(d);if(v&&(m=r(m,h>2?arguments[2]:void 0,2)),null==y||p==Array&&u(y))for(n=new p(t=l(d.length));t>g;g++)c(n,g,v?m(d[g],g):d[g]);else for(f=y.call(d),n=new p;!(i=f.next()).done;g++)c(n,g,v?a(f,m,[i.value,g],!0):i.value);return n.length=g,n}})},3369:(e,t,n)=>{"use strict";var r=n(2985),i=n(9315)(!1),o=[].indexOf,a=!!o&&1/[1].indexOf(1,-0)<0;r(r.P+r.F*(a||!n(7717)(o)),"Array",{indexOf:function(e){return a?o.apply(this,arguments)||0:i(this,e,arguments[1])}})},774:(e,t,n)=>{var r=n(2985);r(r.S,"Array",{isArray:n(4302)})},6997:(e,t,n)=>{"use strict";var r=n(7722),i=n(5436),o=n(2803),a=n(2110);e.exports=n(2923)(Array,"Array",(function(e,t){this._t=a(e),this._i=0,this._k=t}),(function(){var e=this._t,t=this._k,n=this._i++;return!e||n>=e.length?(this._t=void 0,i(1)):i(0,"keys"==t?n:"values"==t?e[n]:[n,e[n]])}),"values"),o.Arguments=o.Array,r("keys"),r("values"),r("entries")},7842:(e,t,n)=>{"use strict";var r=n(2985),i=n(2110),o=[].join;r(r.P+r.F*(n(9797)!=Object||!n(7717)(o)),"Array",{join:function(e){return o.call(i(this),void 0===e?",":e)}})},9564:(e,t,n)=>{"use strict";var r=n(2985),i=n(2110),o=n(1467),a=n(875),u=[].lastIndexOf,l=!!u&&1/[1].lastIndexOf(1,-0)<0;r(r.P+r.F*(l||!n(7717)(u)),"Array",{lastIndexOf:function(e){if(l)return u.apply(this,arguments)||0;var t=i(this),n=a(t.length),r=n-1;for(arguments.length>1&&(r=Math.min(r,o(arguments[1]))),r<0&&(r=n+r);r>=0;r--)if(r in t&&t[r]===e)return r||0;return-1}})},1802:(e,t,n)=>{"use strict";var r=n(2985),i=n(50)(1);r(r.P+r.F*!n(7717)([].map,!0),"Array",{map:function(e){return i(this,e,arguments[1])}})},8295:(e,t,n)=>{"use strict";var r=n(2985),i=n(2811);r(r.S+r.F*n(4253)((function(){function e(){}return!(Array.of.call(e)instanceof e)})),"Array",{of:function(){for(var e=0,t=arguments.length,n=new("function"==typeof this?this:Array)(t);t>e;)i(n,e,arguments[e++]);return n.length=t,n}})},3750:(e,t,n)=>{"use strict";var r=n(2985),i=n(7628);r(r.P+r.F*!n(7717)([].reduceRight,!0),"Array",{reduceRight:function(e){return i(this,e,arguments.length,arguments[1],!0)}})},3057:(e,t,n)=>{"use strict";var r=n(2985),i=n(7628);r(r.P+r.F*!n(7717)([].reduce,!0),"Array",{reduce:function(e){return i(this,e,arguments.length,arguments[1],!1)}})},110:(e,t,n)=>{"use strict";var r=n(2985),i=n(639),o=n(2032),a=n(2337),u=n(875),l=[].slice;r(r.P+r.F*n(4253)((function(){i&&l.call(i)})),"Array",{slice:function(e,t){var n=u(this.length),r=o(this);if(t=void 0===t?n:t,"Array"==r)return l.call(this,e,t);for(var i=a(e,n),c=a(t,n),s=u(c-i),f=new Array(s),d=0;d<s;d++)f[d]="String"==r?this.charAt(i+d):this[i+d];return f}})},6773:(e,t,n)=>{"use strict";var r=n(2985),i=n(50)(3);r(r.P+r.F*!n(7717)([].some,!0),"Array",{some:function(e){return i(this,e,arguments[1])}})},75:(e,t,n)=>{"use strict";var r=n(2985),i=n(4963),o=n(508),a=n(4253),u=[].sort,l=[1,2,3];r(r.P+r.F*(a((function(){l.sort(void 0)}))||!a((function(){l.sort(null)}))||!n(7717)(u)),"Array",{sort:function(e){return void 0===e?u.call(o(this)):u.call(o(this),i(e))}})},1842:(e,t,n)=>{n(2974)("Array")},1822:(e,t,n)=>{var r=n(2985);r(r.S,"Date",{now:function(){return(new Date).getTime()}})},1031:(e,t,n)=>{var r=n(2985),i=n(3537);r(r.P+r.F*(Date.prototype.toISOString!==i),"Date",{toISOString:i})},9977:(e,t,n)=>{"use strict";var r=n(2985),i=n(508),o=n(1689);r(r.P+r.F*n(4253)((function(){return null!==new Date(NaN).toJSON()||1!==Date.prototype.toJSON.call({toISOString:function(){return 1}})})),"Date",{toJSON:function(e){var t=i(this),n=o(t);return"number"!=typeof n||isFinite(n)?t.toISOString():null}})},1560:(e,t,n)=>{var r=n(6314)("toPrimitive"),i=Date.prototype;r in i||n(7728)(i,r,n(870))},6331:(e,t,n)=>{var r=Date.prototype,i="Invalid Date",o=r.toString,a=r.getTime;new Date(NaN)+""!=i&&n(7234)(r,"toString",(function(){var e=a.call(this);return e==e?o.call(this):i}))},9730:(e,t,n)=>{var r=n(2985);r(r.P,"Function",{bind:n(4398)})},8377:(e,t,n)=>{"use strict";var r=n(5286),i=n(468),o=n(6314)("hasInstance"),a=Function.prototype;o in a||n(9275).f(a,o,{value:function(e){if("function"!=typeof this||!r(e))return!1;if(!r(this.prototype))return e instanceof this;for(;e=i(e);)if(this.prototype===e)return!0;return!1}})},6059:(e,t,n)=>{var r=n(9275).f,i=Function.prototype,o=/^\s*function ([^ (]*)/,a="name";a in i||n(7057)&&r(i,a,{configurable:!0,get:function(){try{return(""+this).match(o)[1]}catch(e){return""}}})},8416:(e,t,n)=>{"use strict";var r=n(9824),i=n(1616),o="Map";e.exports=n(5795)(o,(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{get:function(e){var t=r.getEntry(i(this,o),e);return t&&t.v},set:function(e,t){return r.def(i(this,o),0===e?0:e,t)}},r,!0)},6503:(e,t,n)=>{var r=n(2985),i=n(6206),o=Math.sqrt,a=Math.acosh;r(r.S+r.F*!(a&&710==Math.floor(a(Number.MAX_VALUE))&&a(1/0)==1/0),"Math",{acosh:function(e){return(e=+e)<1?NaN:e>94906265.62425156?Math.log(e)+Math.LN2:i(e-1+o(e-1)*o(e+1))}})},6786:(e,t,n)=>{var r=n(2985),i=Math.asinh;r(r.S+r.F*!(i&&1/i(0)>0),"Math",{asinh:function e(t){return isFinite(t=+t)&&0!=t?t<0?-e(-t):Math.log(t+Math.sqrt(t*t+1)):t}})},932:(e,t,n)=>{var r=n(2985),i=Math.atanh;r(r.S+r.F*!(i&&1/i(-0)<0),"Math",{atanh:function(e){return 0==(e=+e)?e:Math.log((1+e)/(1-e))/2}})},7526:(e,t,n)=>{var r=n(2985),i=n(1801);r(r.S,"Math",{cbrt:function(e){return i(e=+e)*Math.pow(Math.abs(e),1/3)}})},1591:(e,t,n)=>{var r=n(2985);r(r.S,"Math",{clz32:function(e){return(e>>>=0)?31-Math.floor(Math.log(e+.5)*Math.LOG2E):32}})},9073:(e,t,n)=>{var r=n(2985),i=Math.exp;r(r.S,"Math",{cosh:function(e){return(i(e=+e)+i(-e))/2}})},347:(e,t,n)=>{var r=n(2985),i=n(3086);r(r.S+r.F*(i!=Math.expm1),"Math",{expm1:i})},579:(e,t,n)=>{var r=n(2985);r(r.S,"Math",{fround:n(4934)})},4669:(e,t,n)=>{var r=n(2985),i=Math.abs;r(r.S,"Math",{hypot:function(e,t){for(var n,r,o=0,a=0,u=arguments.length,l=0;a<u;)l<(n=i(arguments[a++]))?(o=o*(r=l/n)*r+1,l=n):o+=n>0?(r=n/l)*r:n;return l===1/0?1/0:l*Math.sqrt(o)}})},7710:(e,t,n)=>{var r=n(2985),i=Math.imul;r(r.S+r.F*n(4253)((function(){return-5!=i(4294967295,5)||2!=i.length})),"Math",{imul:function(e,t){var n=65535,r=+e,i=+t,o=n&r,a=n&i;return 0|o*a+((n&r>>>16)*a+o*(n&i>>>16)<<16>>>0)}})},5789:(e,t,n)=>{var r=n(2985);r(r.S,"Math",{log10:function(e){return Math.log(e)*Math.LOG10E}})},3514:(e,t,n)=>{var r=n(2985);r(r.S,"Math",{log1p:n(6206)})},9978:(e,t,n)=>{var r=n(2985);r(r.S,"Math",{log2:function(e){return Math.log(e)/Math.LN2}})},8472:(e,t,n)=>{var r=n(2985);r(r.S,"Math",{sign:n(1801)})},6946:(e,t,n)=>{var r=n(2985),i=n(3086),o=Math.exp;r(r.S+r.F*n(4253)((function(){return-2e-17!=!Math.sinh(-2e-17)})),"Math",{sinh:function(e){return Math.abs(e=+e)<1?(i(e)-i(-e))/2:(o(e-1)-o(-e-1))*(Math.E/2)}})},5068:(e,t,n)=>{var r=n(2985),i=n(3086),o=Math.exp;r(r.S,"Math",{tanh:function(e){var t=i(e=+e),n=i(-e);return t==1/0?1:n==1/0?-1:(t-n)/(o(e)+o(-e))}})},413:(e,t,n)=>{var r=n(2985);r(r.S,"Math",{trunc:function(e){return(e>0?Math.floor:Math.ceil)(e)}})},1246:(e,t,n)=>{"use strict";var r=n(3816),i=n(9181),o=n(2032),a=n(266),u=n(1689),l=n(4253),c=n(616).f,s=n(8693).f,f=n(9275).f,d=n(9599).trim,p="Number",h=r.Number,m=h,v=h.prototype,g=o(n(2503)(v))==p,y="trim"in String.prototype,b=function(e){var t=u(e,!1);if("string"==typeof t&&t.length>2){var n,r,i,o=(t=y?t.trim():d(t,3)).charCodeAt(0);if(43===o||45===o){if(88===(n=t.charCodeAt(2))||120===n)return NaN}else if(48===o){switch(t.charCodeAt(1)){case 66:case 98:r=2,i=49;break;case 79:case 111:r=8,i=55;break;default:return+t}for(var a,l=t.slice(2),c=0,s=l.length;c<s;c++)if((a=l.charCodeAt(c))<48||a>i)return NaN;return parseInt(l,r)}}return+t};if(!h(" 0o1")||!h("0b1")||h("+0x1")){h=function(e){var t=arguments.length<1?0:e,n=this;return n instanceof h&&(g?l((function(){v.valueOf.call(n)})):o(n)!=p)?a(new m(b(t)),n,h):b(t)};for(var x,A=n(7057)?c(m):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),w=0;A.length>w;w++)i(m,x=A[w])&&!i(h,x)&&f(h,x,s(m,x));h.prototype=v,v.constructor=h,n(7234)(r,p,h)}},5972:(e,t,n)=>{var r=n(2985);r(r.S,"Number",{EPSILON:Math.pow(2,-52)})},3403:(e,t,n)=>{var r=n(2985),i=n(3816).isFinite;r(r.S,"Number",{isFinite:function(e){return"number"==typeof e&&i(e)}})},2516:(e,t,n)=>{var r=n(2985);r(r.S,"Number",{isInteger:n(8367)})},9371:(e,t,n)=>{var r=n(2985);r(r.S,"Number",{isNaN:function(e){return e!=e}})},6479:(e,t,n)=>{var r=n(2985),i=n(8367),o=Math.abs;r(r.S,"Number",{isSafeInteger:function(e){return i(e)&&o(e)<=9007199254740991}})},1736:(e,t,n)=>{var r=n(2985);r(r.S,"Number",{MAX_SAFE_INTEGER:9007199254740991})},1889:(e,t,n)=>{var r=n(2985);r(r.S,"Number",{MIN_SAFE_INTEGER:-9007199254740991})},5177:(e,t,n)=>{var r=n(2985),i=n(7743);r(r.S+r.F*(Number.parseFloat!=i),"Number",{parseFloat:i})},6943:(e,t,n)=>{var r=n(2985),i=n(5960);r(r.S+r.F*(Number.parseInt!=i),"Number",{parseInt:i})},726:(e,t,n)=>{"use strict";var r=n(2985),i=n(1467),o=n(3365),a=n(8595),u=1..toFixed,l=Math.floor,c=[0,0,0,0,0,0],s="Number.toFixed: incorrect invocation!",f="0",d=function(e,t){for(var n=-1,r=t;++n<6;)r+=e*c[n],c[n]=r%1e7,r=l(r/1e7)},p=function(e){for(var t=6,n=0;--t>=0;)n+=c[t],c[t]=l(n/e),n=n%e*1e7},h=function(){for(var e=6,t="";--e>=0;)if(""!==t||0===e||0!==c[e]){var n=String(c[e]);t=""===t?n:t+a.call(f,7-n.length)+n}return t},m=function(e,t,n){return 0===t?n:t%2==1?m(e,t-1,n*e):m(e*e,t/2,n)};r(r.P+r.F*(!!u&&("0.000"!==8e-5.toFixed(3)||"1"!==.9.toFixed(0)||"1.25"!==1.255.toFixed(2)||"1000000000000000128"!==(0xde0b6b3a7640080).toFixed(0))||!n(4253)((function(){u.call({})}))),"Number",{toFixed:function(e){var t,n,r,u,l=o(this,s),c=i(e),v="",g=f;if(c<0||c>20)throw RangeError(s);if(l!=l)return"NaN";if(l<=-1e21||l>=1e21)return String(l);if(l<0&&(v="-",l=-l),l>1e-21)if(n=(t=function(e){for(var t=0,n=e;n>=4096;)t+=12,n/=4096;for(;n>=2;)t+=1,n/=2;return t}(l*m(2,69,1))-69)<0?l*m(2,-t,1):l/m(2,t,1),n*=4503599627370496,(t=52-t)>0){for(d(0,n),r=c;r>=7;)d(1e7,0),r-=7;for(d(m(10,r,1),0),r=t-1;r>=23;)p(1<<23),r-=23;p(1<<r),d(1,1),p(2),g=h()}else d(0,n),d(1<<-t,0),g=h()+a.call(f,c);return c>0?v+((u=g.length)<=c?"0."+a.call(f,c-u)+g:g.slice(0,u-c)+"."+g.slice(u-c)):v+g}})},1901:(e,t,n)=>{"use strict";var r=n(2985),i=n(4253),o=n(3365),a=1..toPrecision;r(r.P+r.F*(i((function(){return"1"!==a.call(1,void 0)}))||!i((function(){a.call({})}))),"Number",{toPrecision:function(e){var t=o(this,"Number#toPrecision: incorrect invocation!");return void 0===e?a.call(t):a.call(t,e)}})},5115:(e,t,n)=>{var r=n(2985);r(r.S+r.F,"Object",{assign:n(5345)})},8132:(e,t,n)=>{var r=n(2985);r(r.S,"Object",{create:n(2503)})},7470:(e,t,n)=>{var r=n(2985);r(r.S+r.F*!n(7057),"Object",{defineProperties:n(5588)})},8388:(e,t,n)=>{var r=n(2985);r(r.S+r.F*!n(7057),"Object",{defineProperty:n(9275).f})},9375:(e,t,n)=>{var r=n(5286),i=n(4728).onFreeze;n(3160)("freeze",(function(e){return function(t){return e&&r(t)?e(i(t)):t}}))},4882:(e,t,n)=>{var r=n(2110),i=n(8693).f;n(3160)("getOwnPropertyDescriptor",(function(){return function(e,t){return i(r(e),t)}}))},9622:(e,t,n)=>{n(3160)("getOwnPropertyNames",(function(){return n(9327).f}))},1520:(e,t,n)=>{var r=n(508),i=n(468);n(3160)("getPrototypeOf",(function(){return function(e){return i(r(e))}}))},9892:(e,t,n)=>{var r=n(5286);n(3160)("isExtensible",(function(e){return function(t){return!!r(t)&&(!e||e(t))}}))},4157:(e,t,n)=>{var r=n(5286);n(3160)("isFrozen",(function(e){return function(t){return!r(t)||!!e&&e(t)}}))},5095:(e,t,n)=>{var r=n(5286);n(3160)("isSealed",(function(e){return function(t){return!r(t)||!!e&&e(t)}}))},9176:(e,t,n)=>{var r=n(2985);r(r.S,"Object",{is:n(7195)})},7476:(e,t,n)=>{var r=n(508),i=n(7184);n(3160)("keys",(function(){return function(e){return i(r(e))}}))},4672:(e,t,n)=>{var r=n(5286),i=n(4728).onFreeze;n(3160)("preventExtensions",(function(e){return function(t){return e&&r(t)?e(i(t)):t}}))},3533:(e,t,n)=>{var r=n(5286),i=n(4728).onFreeze;n(3160)("seal",(function(e){return function(t){return e&&r(t)?e(i(t)):t}}))},8838:(e,t,n)=>{var r=n(2985);r(r.S,"Object",{setPrototypeOf:n(7375).set})},6253:(e,t,n)=>{"use strict";var r=n(1488),i={};i[n(6314)("toStringTag")]="z",i+""!="[object z]"&&n(7234)(Object.prototype,"toString",(function(){return"[object "+r(this)+"]"}),!0)},4299:(e,t,n)=>{var r=n(2985),i=n(7743);r(r.G+r.F*(parseFloat!=i),{parseFloat:i})},1084:(e,t,n)=>{var r=n(2985),i=n(5960);r(r.G+r.F*(parseInt!=i),{parseInt:i})},851:(e,t,n)=>{"use strict";var r,i,o,a,u=n(4461),l=n(3816),c=n(741),s=n(1488),f=n(2985),d=n(5286),p=n(4963),h=n(3328),m=n(3531),v=n(8364),g=n(4193).set,y=n(4351)(),b=n(3499),x=n(188),A=n(575),w=n(94),E="Promise",C=l.TypeError,k=l.process,S=k&&k.versions,T=S&&S.v8||"",_=l.Promise,P="process"==s(k),O=function(){},M=i=b.f,N=!!function(){try{var e=_.resolve(1),t=(e.constructor={})[n(6314)("species")]=function(e){e(O,O)};return(P||"function"==typeof PromiseRejectionEvent)&&e.then(O)instanceof t&&0!==T.indexOf("6.6")&&-1===A.indexOf("Chrome/66")}catch(e){}}(),B=function(e){var t;return!(!d(e)||"function"!=typeof(t=e.then))&&t},I=function(e,t){if(!e._n){e._n=!0;var n=e._c;y((function(){for(var r=e._v,i=1==e._s,o=0,a=function(t){var n,o,a,u=i?t.ok:t.fail,l=t.resolve,c=t.reject,s=t.domain;try{u?(i||(2==e._h&&L(e),e._h=1),!0===u?n=r:(s&&s.enter(),n=u(r),s&&(s.exit(),a=!0)),n===t.promise?c(C("Promise-chain cycle")):(o=B(n))?o.call(n,l,c):l(n)):c(r)}catch(e){s&&!a&&s.exit(),c(e)}};n.length>o;)a(n[o++]);e._c=[],e._n=!1,t&&!e._h&&F(e)}))}},F=function(e){g.call(l,(function(){var t,n,r,i=e._v,o=R(e);if(o&&(t=x((function(){P?k.emit("unhandledRejection",i,e):(n=l.onunhandledrejection)?n({promise:e,reason:i}):(r=l.console)&&r.error&&r.error("Unhandled promise rejection",i)})),e._h=P||R(e)?2:1),e._a=void 0,o&&t.e)throw t.v}))},R=function(e){return 1!==e._h&&0===(e._a||e._c).length},L=function(e){g.call(l,(function(){var t;P?k.emit("rejectionHandled",e):(t=l.onrejectionhandled)&&t({promise:e,reason:e._v})}))},j=function(e){var t=this;t._d||(t._d=!0,(t=t._w||t)._v=e,t._s=2,t._a||(t._a=t._c.slice()),I(t,!0))},z=function(e){var t,n=this;if(!n._d){n._d=!0,n=n._w||n;try{if(n===e)throw C("Promise can't be resolved itself");(t=B(e))?y((function(){var r={_w:n,_d:!1};try{t.call(e,c(z,r,1),c(j,r,1))}catch(e){j.call(r,e)}})):(n._v=e,n._s=1,I(n,!1))}catch(e){j.call({_w:n,_d:!1},e)}}};N||(_=function(e){h(this,_,E,"_h"),p(e),r.call(this);try{e(c(z,this,1),c(j,this,1))}catch(e){j.call(this,e)}},(r=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=n(4408)(_.prototype,{then:function(e,t){var n=M(v(this,_));return n.ok="function"!=typeof e||e,n.fail="function"==typeof t&&t,n.domain=P?k.domain:void 0,this._c.push(n),this._a&&this._a.push(n),this._s&&I(this,!1),n.promise},catch:function(e){return this.then(void 0,e)}}),o=function(){var e=new r;this.promise=e,this.resolve=c(z,e,1),this.reject=c(j,e,1)},b.f=M=function(e){return e===_||e===a?new o(e):i(e)}),f(f.G+f.W+f.F*!N,{Promise:_}),n(2943)(_,E),n(2974)(E),a=n(5645).Promise,f(f.S+f.F*!N,E,{reject:function(e){var t=M(this);return(0,t.reject)(e),t.promise}}),f(f.S+f.F*(u||!N),E,{resolve:function(e){return w(u&&this===a?_:this,e)}}),f(f.S+f.F*!(N&&n(7462)((function(e){_.all(e).catch(O)}))),E,{all:function(e){var t=this,n=M(t),r=n.resolve,i=n.reject,o=x((function(){var n=[],o=0,a=1;m(e,!1,(function(e){var u=o++,l=!1;n.push(void 0),a++,t.resolve(e).then((function(e){l||(l=!0,n[u]=e,--a||r(n))}),i)})),--a||r(n)}));return o.e&&i(o.v),n.promise},race:function(e){var t=this,n=M(t),r=n.reject,i=x((function(){m(e,!1,(function(e){t.resolve(e).then(n.resolve,r)}))}));return i.e&&r(i.v),n.promise}})},1572:(e,t,n)=>{var r=n(2985),i=n(4963),o=n(7007),a=(n(3816).Reflect||{}).apply,u=Function.apply;r(r.S+r.F*!n(4253)((function(){a((function(){}))})),"Reflect",{apply:function(e,t,n){var r=i(e),l=o(n);return a?a(r,t,l):u.call(r,t,l)}})},2139:(e,t,n)=>{var r=n(2985),i=n(2503),o=n(4963),a=n(7007),u=n(5286),l=n(4253),c=n(4398),s=(n(3816).Reflect||{}).construct,f=l((function(){function e(){}return!(s((function(){}),[],e)instanceof e)})),d=!l((function(){s((function(){}))}));r(r.S+r.F*(f||d),"Reflect",{construct:function(e,t){o(e),a(t);var n=arguments.length<3?e:o(arguments[2]);if(d&&!f)return s(e,t,n);if(e==n){switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3])}var r=[null];return r.push.apply(r,t),new(c.apply(e,r))}var l=n.prototype,p=i(u(l)?l:Object.prototype),h=Function.apply.call(e,p,t);return u(h)?h:p}})},685:(e,t,n)=>{var r=n(9275),i=n(2985),o=n(7007),a=n(1689);i(i.S+i.F*n(4253)((function(){Reflect.defineProperty(r.f({},1,{value:1}),1,{value:2})})),"Reflect",{defineProperty:function(e,t,n){o(e),t=a(t,!0),o(n);try{return r.f(e,t,n),!0}catch(e){return!1}}})},5535:(e,t,n)=>{var r=n(2985),i=n(8693).f,o=n(7007);r(r.S,"Reflect",{deleteProperty:function(e,t){var n=i(o(e),t);return!(n&&!n.configurable)&&delete e[t]}})},7347:(e,t,n)=>{"use strict";var r=n(2985),i=n(7007),o=function(e){this._t=i(e),this._i=0;var t,n=this._k=[];for(t in e)n.push(t)};n(9988)(o,"Object",(function(){var e,t=this,n=t._k;do{if(t._i>=n.length)return{value:void 0,done:!0}}while(!((e=n[t._i++])in t._t));return{value:e,done:!1}})),r(r.S,"Reflect",{enumerate:function(e){return new o(e)}})},6633:(e,t,n)=>{var r=n(8693),i=n(2985),o=n(7007);i(i.S,"Reflect",{getOwnPropertyDescriptor:function(e,t){return r.f(o(e),t)}})},8989:(e,t,n)=>{var r=n(2985),i=n(468),o=n(7007);r(r.S,"Reflect",{getPrototypeOf:function(e){return i(o(e))}})},3049:(e,t,n)=>{var r=n(8693),i=n(468),o=n(9181),a=n(2985),u=n(5286),l=n(7007);a(a.S,"Reflect",{get:function e(t,n){var a,c,s=arguments.length<3?t:arguments[2];return l(t)===s?t[n]:(a=r.f(t,n))?o(a,"value")?a.value:void 0!==a.get?a.get.call(s):void 0:u(c=i(t))?e(c,n,s):void 0}})},8270:(e,t,n)=>{var r=n(2985);r(r.S,"Reflect",{has:function(e,t){return t in e}})},4510:(e,t,n)=>{var r=n(2985),i=n(7007),o=Object.isExtensible;r(r.S,"Reflect",{isExtensible:function(e){return i(e),!o||o(e)}})},3984:(e,t,n)=>{var r=n(2985);r(r.S,"Reflect",{ownKeys:n(7643)})},5769:(e,t,n)=>{var r=n(2985),i=n(7007),o=Object.preventExtensions;r(r.S,"Reflect",{preventExtensions:function(e){i(e);try{return o&&o(e),!0}catch(e){return!1}}})},6014:(e,t,n)=>{var r=n(2985),i=n(7375);i&&r(r.S,"Reflect",{setPrototypeOf:function(e,t){i.check(e,t);try{return i.set(e,t),!0}catch(e){return!1}}})},55:(e,t,n)=>{var r=n(9275),i=n(8693),o=n(468),a=n(9181),u=n(2985),l=n(681),c=n(7007),s=n(5286);u(u.S,"Reflect",{set:function e(t,n,u){var f,d,p=arguments.length<4?t:arguments[3],h=i.f(c(t),n);if(!h){if(s(d=o(t)))return e(d,n,u,p);h=l(0)}if(a(h,"value")){if(!1===h.writable||!s(p))return!1;if(f=i.f(p,n)){if(f.get||f.set||!1===f.writable)return!1;f.value=u,r.f(p,n,f)}else r.f(p,n,l(0,u));return!0}return void 0!==h.set&&(h.set.call(p,u),!0)}})},3946:(e,t,n)=>{var r=n(3816),i=n(266),o=n(9275).f,a=n(616).f,u=n(5364),l=n(3218),c=r.RegExp,s=c,f=c.prototype,d=/a/g,p=/a/g,h=new c(d)!==d;if(n(7057)&&(!h||n(4253)((function(){return p[n(6314)("match")]=!1,c(d)!=d||c(p)==p||"/a/i"!=c(d,"i")})))){c=function(e,t){var n=this instanceof c,r=u(e),o=void 0===t;return!n&&r&&e.constructor===c&&o?e:i(h?new s(r&&!o?e.source:e,t):s((r=e instanceof c)?e.source:e,r&&o?l.call(e):t),n?this:f,c)};for(var m=function(e){e in c||o(c,e,{configurable:!0,get:function(){return s[e]},set:function(t){s[e]=t}})},v=a(s),g=0;v.length>g;)m(v[g++]);f.constructor=c,c.prototype=f,n(7234)(r,"RegExp",c)}n(2974)("RegExp")},8269:(e,t,n)=>{"use strict";var r=n(1165);n(2985)({target:"RegExp",proto:!0,forced:r!==/./.exec},{exec:r})},6774:(e,t,n)=>{n(7057)&&"g"!=/./g.flags&&n(9275).f(RegExp.prototype,"flags",{configurable:!0,get:n(3218)})},1466:(e,t,n)=>{"use strict";var r=n(7007),i=n(875),o=n(6793),a=n(7787);n(8082)("match",1,(function(e,t,n,u){return[function(n){var r=e(this),i=null==n?void 0:n[t];return void 0!==i?i.call(n,r):new RegExp(n)[t](String(r))},function(e){var t=u(n,e,this);if(t.done)return t.value;var l=r(e),c=String(this);if(!l.global)return a(l,c);var s=l.unicode;l.lastIndex=0;for(var f,d=[],p=0;null!==(f=a(l,c));){var h=String(f[0]);d[p]=h,""===h&&(l.lastIndex=o(c,i(l.lastIndex),s)),p++}return 0===p?null:d}]}))},9357:(e,t,n)=>{"use strict";var r=n(7007),i=n(508),o=n(875),a=n(1467),u=n(6793),l=n(7787),c=Math.max,s=Math.min,f=Math.floor,d=/\$([$&`']|\d\d?|<[^>]*>)/g,p=/\$([$&`']|\d\d?)/g;n(8082)("replace",2,(function(e,t,n,h){return[function(r,i){var o=e(this),a=null==r?void 0:r[t];return void 0!==a?a.call(r,o,i):n.call(String(o),r,i)},function(e,t){var i=h(n,e,this,t);if(i.done)return i.value;var f=r(e),d=String(this),p="function"==typeof t;p||(t=String(t));var v=f.global;if(v){var g=f.unicode;f.lastIndex=0}for(var y=[];;){var b=l(f,d);if(null===b)break;if(y.push(b),!v)break;""===String(b[0])&&(f.lastIndex=u(d,o(f.lastIndex),g))}for(var x,A="",w=0,E=0;E<y.length;E++){b=y[E];for(var C=String(b[0]),k=c(s(a(b.index),d.length),0),S=[],T=1;T<b.length;T++)S.push(void 0===(x=b[T])?x:String(x));var _=b.groups;if(p){var P=[C].concat(S,k,d);void 0!==_&&P.push(_);var O=String(t.apply(void 0,P))}else O=m(C,d,k,S,_,t);k>=w&&(A+=d.slice(w,k)+O,w=k+C.length)}return A+d.slice(w)}];function m(e,t,r,o,a,u){var l=r+e.length,c=o.length,s=p;return void 0!==a&&(a=i(a),s=d),n.call(u,s,(function(n,i){var u;switch(i.charAt(0)){case"$":return"$";case"&":return e;case"`":return t.slice(0,r);case"'":return t.slice(l);case"<":u=a[i.slice(1,-1)];break;default:var s=+i;if(0===s)return n;if(s>c){var d=f(s/10);return 0===d?n:d<=c?void 0===o[d-1]?i.charAt(1):o[d-1]+i.charAt(1):n}u=o[s-1]}return void 0===u?"":u}))}}))},6142:(e,t,n)=>{"use strict";var r=n(7007),i=n(7195),o=n(7787);n(8082)("search",1,(function(e,t,n,a){return[function(n){var r=e(this),i=null==n?void 0:n[t];return void 0!==i?i.call(n,r):new RegExp(n)[t](String(r))},function(e){var t=a(n,e,this);if(t.done)return t.value;var u=r(e),l=String(this),c=u.lastIndex;i(c,0)||(u.lastIndex=0);var s=o(u,l);return i(u.lastIndex,c)||(u.lastIndex=c),null===s?-1:s.index}]}))},1876:(e,t,n)=>{"use strict";var r=n(5364),i=n(7007),o=n(8364),a=n(6793),u=n(875),l=n(7787),c=n(1165),s=n(4253),f=Math.min,d=[].push,p=4294967295,h=!s((function(){RegExp(p,"y")}));n(8082)("split",2,(function(e,t,n,s){var m;return m="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(e,t){var i=String(this);if(void 0===e&&0===t)return[];if(!r(e))return n.call(i,e,t);for(var o,a,u,l=[],s=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),f=0,h=void 0===t?p:t>>>0,m=new RegExp(e.source,s+"g");(o=c.call(m,i))&&!((a=m.lastIndex)>f&&(l.push(i.slice(f,o.index)),o.length>1&&o.index<i.length&&d.apply(l,o.slice(1)),u=o[0].length,f=a,l.length>=h));)m.lastIndex===o.index&&m.lastIndex++;return f===i.length?!u&&m.test("")||l.push(""):l.push(i.slice(f)),l.length>h?l.slice(0,h):l}:"0".split(void 0,0).length?function(e,t){return void 0===e&&0===t?[]:n.call(this,e,t)}:n,[function(n,r){var i=e(this),o=null==n?void 0:n[t];return void 0!==o?o.call(n,i,r):m.call(String(i),n,r)},function(e,t){var r=s(m,e,this,t,m!==n);if(r.done)return r.value;var c=i(e),d=String(this),v=o(c,RegExp),g=c.unicode,y=(c.ignoreCase?"i":"")+(c.multiline?"m":"")+(c.unicode?"u":"")+(h?"y":"g"),b=new v(h?c:"^(?:"+c.source+")",y),x=void 0===t?p:t>>>0;if(0===x)return[];if(0===d.length)return null===l(b,d)?[d]:[];for(var A=0,w=0,E=[];w<d.length;){b.lastIndex=h?w:0;var C,k=l(b,h?d:d.slice(w));if(null===k||(C=f(u(b.lastIndex+(h?0:w)),d.length))===A)w=a(d,w,g);else{if(E.push(d.slice(A,w)),E.length===x)return E;for(var S=1;S<=k.length-1;S++)if(E.push(k[S]),E.length===x)return E;w=A=C}}return E.push(d.slice(A)),E}]}))},6108:(e,t,n)=>{"use strict";n(6774);var r=n(7007),i=n(3218),o=n(7057),a="toString",u=/./.toString,l=function(e){n(7234)(RegExp.prototype,a,e,!0)};n(4253)((function(){return"/a/b"!=u.call({source:"a",flags:"b"})}))?l((function(){var e=r(this);return"/".concat(e.source,"/","flags"in e?e.flags:!o&&e instanceof RegExp?i.call(e):void 0)})):u.name!=a&&l((function(){return u.call(this)}))},8184:(e,t,n)=>{"use strict";var r=n(9824),i=n(1616);e.exports=n(5795)("Set",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(e){return r.def(i(this,"Set"),e=0===e?0:e,e)}},r)},856:(e,t,n)=>{"use strict";n(9395)("anchor",(function(e){return function(t){return e(this,"a","name",t)}}))},703:(e,t,n)=>{"use strict";n(9395)("big",(function(e){return function(){return e(this,"big","","")}}))},1539:(e,t,n)=>{"use strict";n(9395)("blink",(function(e){return function(){return e(this,"blink","","")}}))},5292:(e,t,n)=>{"use strict";n(9395)("bold",(function(e){return function(){return e(this,"b","","")}}))},9539:(e,t,n)=>{"use strict";var r=n(2985),i=n(4496)(!1);r(r.P,"String",{codePointAt:function(e){return i(this,e)}})},6620:(e,t,n)=>{"use strict";var r=n(2985),i=n(875),o=n(2094),a="endsWith",u="".endsWith;r(r.P+r.F*n(8852)(a),"String",{endsWith:function(e){var t=o(this,e,a),n=arguments.length>1?arguments[1]:void 0,r=i(t.length),l=void 0===n?r:Math.min(i(n),r),c=String(e);return u?u.call(t,c,l):t.slice(l-c.length,l)===c}})},6629:(e,t,n)=>{"use strict";n(9395)("fixed",(function(e){return function(){return e(this,"tt","","")}}))},3694:(e,t,n)=>{"use strict";n(9395)("fontcolor",(function(e){return function(t){return e(this,"font","color",t)}}))},7648:(e,t,n)=>{"use strict";n(9395)("fontsize",(function(e){return function(t){return e(this,"font","size",t)}}))},191:(e,t,n)=>{var r=n(2985),i=n(2337),o=String.fromCharCode,a=String.fromCodePoint;r(r.S+r.F*(!!a&&1!=a.length),"String",{fromCodePoint:function(e){for(var t,n=[],r=arguments.length,a=0;r>a;){if(t=+arguments[a++],i(t,1114111)!==t)throw RangeError(t+" is not a valid code point");n.push(t<65536?o(t):o(55296+((t-=65536)>>10),t%1024+56320))}return n.join("")}})},2850:(e,t,n)=>{"use strict";var r=n(2985),i=n(2094),o="includes";r(r.P+r.F*n(8852)(o),"String",{includes:function(e){return!!~i(this,e,o).indexOf(e,arguments.length>1?arguments[1]:void 0)}})},7795:(e,t,n)=>{"use strict";n(9395)("italics",(function(e){return function(){return e(this,"i","","")}}))},9115:(e,t,n)=>{"use strict";var r=n(4496)(!0);n(2923)(String,"String",(function(e){this._t=String(e),this._i=0}),(function(){var e,t=this._t,n=this._i;return n>=t.length?{value:void 0,done:!0}:(e=r(t,n),this._i+=e.length,{value:e,done:!1})}))},4531:(e,t,n)=>{"use strict";n(9395)("link",(function(e){return function(t){return e(this,"a","href",t)}}))},8306:(e,t,n)=>{var r=n(2985),i=n(2110),o=n(875);r(r.S,"String",{raw:function(e){for(var t=i(e.raw),n=o(t.length),r=arguments.length,a=[],u=0;n>u;)a.push(String(t[u++])),u<r&&a.push(String(arguments[u]));return a.join("")}})},823:(e,t,n)=>{var r=n(2985);r(r.P,"String",{repeat:n(8595)})},3605:(e,t,n)=>{"use strict";n(9395)("small",(function(e){return function(){return e(this,"small","","")}}))},7732:(e,t,n)=>{"use strict";var r=n(2985),i=n(875),o=n(2094),a="startsWith",u="".startsWith;r(r.P+r.F*n(8852)(a),"String",{startsWith:function(e){var t=o(this,e,a),n=i(Math.min(arguments.length>1?arguments[1]:void 0,t.length)),r=String(e);return u?u.call(t,r,n):t.slice(n,n+r.length)===r}})},6780:(e,t,n)=>{"use strict";n(9395)("strike",(function(e){return function(){return e(this,"strike","","")}}))},9937:(e,t,n)=>{"use strict";n(9395)("sub",(function(e){return function(){return e(this,"sub","","")}}))},511:(e,t,n)=>{"use strict";n(9395)("sup",(function(e){return function(){return e(this,"sup","","")}}))},4564:(e,t,n)=>{"use strict";n(9599)("trim",(function(e){return function(){return e(this,3)}}))},5767:(e,t,n)=>{"use strict";var r=n(3816),i=n(9181),o=n(7057),a=n(2985),u=n(7234),l=n(4728).KEY,c=n(4253),s=n(3825),f=n(2943),d=n(3953),p=n(6314),h=n(8787),m=n(6074),v=n(5541),g=n(4302),y=n(7007),b=n(5286),x=n(508),A=n(2110),w=n(1689),E=n(681),C=n(2503),k=n(9327),S=n(8693),T=n(4548),_=n(9275),P=n(7184),O=S.f,M=_.f,N=k.f,B=r.Symbol,I=r.JSON,F=I&&I.stringify,R=p("_hidden"),L=p("toPrimitive"),j={}.propertyIsEnumerable,z=s("symbol-registry"),D=s("symbols"),U=s("op-symbols"),W=Object.prototype,V="function"==typeof B&&!!T.f,H=r.QObject,q=!H||!H.prototype||!H.prototype.findChild,Q=o&&c((function(){return 7!=C(M({},"a",{get:function(){return M(this,"a",{value:7}).a}})).a}))?function(e,t,n){var r=O(W,t);r&&delete W[t],M(e,t,n),r&&e!==W&&M(W,t,r)}:M,$=function(e){var t=D[e]=C(B.prototype);return t._k=e,t},Y=V&&"symbol"==typeof B.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof B},G=function(e,t,n){return e===W&&G(U,t,n),y(e),t=w(t,!0),y(n),i(D,t)?(n.enumerable?(i(e,R)&&e[R][t]&&(e[R][t]=!1),n=C(n,{enumerable:E(0,!1)})):(i(e,R)||M(e,R,E(1,{})),e[R][t]=!0),Q(e,t,n)):M(e,t,n)},Z=function(e,t){y(e);for(var n,r=v(t=A(t)),i=0,o=r.length;o>i;)G(e,n=r[i++],t[n]);return e},K=function(e){var t=j.call(this,e=w(e,!0));return!(this===W&&i(D,e)&&!i(U,e))&&(!(t||!i(this,e)||!i(D,e)||i(this,R)&&this[R][e])||t)},X=function(e,t){if(e=A(e),t=w(t,!0),e!==W||!i(D,t)||i(U,t)){var n=O(e,t);return!n||!i(D,t)||i(e,R)&&e[R][t]||(n.enumerable=!0),n}},J=function(e){for(var t,n=N(A(e)),r=[],o=0;n.length>o;)i(D,t=n[o++])||t==R||t==l||r.push(t);return r},ee=function(e){for(var t,n=e===W,r=N(n?U:A(e)),o=[],a=0;r.length>a;)!i(D,t=r[a++])||n&&!i(W,t)||o.push(D[t]);return o};V||(u((B=function(){if(this instanceof B)throw TypeError("Symbol is not a constructor!");var e=d(arguments.length>0?arguments[0]:void 0),t=function(n){this===W&&t.call(U,n),i(this,R)&&i(this[R],e)&&(this[R][e]=!1),Q(this,e,E(1,n))};return o&&q&&Q(W,e,{configurable:!0,set:t}),$(e)}).prototype,"toString",(function(){return this._k})),S.f=X,_.f=G,n(616).f=k.f=J,n(4682).f=K,T.f=ee,o&&!n(4461)&&u(W,"propertyIsEnumerable",K,!0),h.f=function(e){return $(p(e))}),a(a.G+a.W+a.F*!V,{Symbol:B});for(var te="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),ne=0;te.length>ne;)p(te[ne++]);for(var re=P(p.store),ie=0;re.length>ie;)m(re[ie++]);a(a.S+a.F*!V,"Symbol",{for:function(e){return i(z,e+="")?z[e]:z[e]=B(e)},keyFor:function(e){if(!Y(e))throw TypeError(e+" is not a symbol!");for(var t in z)if(z[t]===e)return t},useSetter:function(){q=!0},useSimple:function(){q=!1}}),a(a.S+a.F*!V,"Object",{create:function(e,t){return void 0===t?C(e):Z(C(e),t)},defineProperty:G,defineProperties:Z,getOwnPropertyDescriptor:X,getOwnPropertyNames:J,getOwnPropertySymbols:ee});var oe=c((function(){T.f(1)}));a(a.S+a.F*oe,"Object",{getOwnPropertySymbols:function(e){return T.f(x(e))}}),I&&a(a.S+a.F*(!V||c((function(){var e=B();return"[null]"!=F([e])||"{}"!=F({a:e})||"{}"!=F(Object(e))}))),"JSON",{stringify:function(e){for(var t,n,r=[e],i=1;arguments.length>i;)r.push(arguments[i++]);if(n=t=r[1],(b(t)||void 0!==e)&&!Y(e))return g(t)||(t=function(e,t){if("function"==typeof n&&(t=n.call(this,e,t)),!Y(t))return t}),r[1]=t,F.apply(I,r)}}),B.prototype[L]||n(7728)(B.prototype,L,B.prototype.valueOf),f(B,"Symbol"),f(Math,"Math",!0),f(r.JSON,"JSON",!0)},142:(e,t,n)=>{"use strict";var r=n(2985),i=n(9383),o=n(1125),a=n(7007),u=n(2337),l=n(875),c=n(5286),s=n(3816).ArrayBuffer,f=n(8364),d=o.ArrayBuffer,p=o.DataView,h=i.ABV&&s.isView,m=d.prototype.slice,v=i.VIEW,g="ArrayBuffer";r(r.G+r.W+r.F*(s!==d),{ArrayBuffer:d}),r(r.S+r.F*!i.CONSTR,g,{isView:function(e){return h&&h(e)||c(e)&&v in e}}),r(r.P+r.U+r.F*n(4253)((function(){return!new d(2).slice(1,void 0).byteLength})),g,{slice:function(e,t){if(void 0!==m&&void 0===t)return m.call(a(this),e);for(var n=a(this).byteLength,r=u(e,n),i=u(void 0===t?n:t,n),o=new(f(this,d))(l(i-r)),c=new p(this),s=new p(o),h=0;r<i;)s.setUint8(h++,c.getUint8(r++));return o}}),n(2974)(g)},1786:(e,t,n)=>{var r=n(2985);r(r.G+r.W+r.F*!n(9383).ABV,{DataView:n(1125).DataView})},162:(e,t,n)=>{n(8440)("Float32",4,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},3834:(e,t,n)=>{n(8440)("Float64",8,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},4821:(e,t,n)=>{n(8440)("Int16",2,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},1303:(e,t,n)=>{n(8440)("Int32",4,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},5368:(e,t,n)=>{n(8440)("Int8",1,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},9103:(e,t,n)=>{n(8440)("Uint16",2,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},3318:(e,t,n)=>{n(8440)("Uint32",4,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},6964:(e,t,n)=>{n(8440)("Uint8",1,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},2152:(e,t,n)=>{n(8440)("Uint8",1,(function(e){return function(t,n,r){return e(this,t,n,r)}}),!0)},147:(e,t,n)=>{"use strict";var r,i=n(3816),o=n(50)(0),a=n(7234),u=n(4728),l=n(5345),c=n(3657),s=n(5286),f=n(1616),d=n(1616),p=!i.ActiveXObject&&"ActiveXObject"in i,h="WeakMap",m=u.getWeak,v=Object.isExtensible,g=c.ufstore,y=function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},b={get:function(e){if(s(e)){var t=m(e);return!0===t?g(f(this,h)).get(e):t?t[this._i]:void 0}},set:function(e,t){return c.def(f(this,h),e,t)}},x=e.exports=n(5795)(h,y,b,c,!0,!0);d&&p&&(l((r=c.getConstructor(y,h)).prototype,b),u.NEED=!0,o(["delete","has","get","set"],(function(e){var t=x.prototype,n=t[e];a(t,e,(function(t,i){if(s(t)&&!v(t)){this._f||(this._f=new r);var o=this._f[e](t,i);return"set"==e?this:o}return n.call(this,t,i)}))})))},9192:(e,t,n)=>{"use strict";var r=n(3657),i=n(1616),o="WeakSet";n(5795)(o,(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(e){return r.def(i(this,o),e,!0)}},r,!1,!0)},1268:(e,t,n)=>{"use strict";var r=n(2985),i=n(3325),o=n(508),a=n(875),u=n(4963),l=n(6886);r(r.P,"Array",{flatMap:function(e){var t,n,r=o(this);return u(e),t=a(r.length),n=l(r,0),i(n,r,r,t,0,1,e,arguments[1]),n}}),n(7722)("flatMap")},2773:(e,t,n)=>{"use strict";var r=n(2985),i=n(9315)(!0);r(r.P,"Array",{includes:function(e){return i(this,e,arguments.length>1?arguments[1]:void 0)}}),n(7722)("includes")},3276:(e,t,n)=>{var r=n(2985),i=n(1131)(!0);r(r.S,"Object",{entries:function(e){return i(e)}})},8351:(e,t,n)=>{var r=n(2985),i=n(7643),o=n(2110),a=n(8693),u=n(2811);r(r.S,"Object",{getOwnPropertyDescriptors:function(e){for(var t,n,r=o(e),l=a.f,c=i(r),s={},f=0;c.length>f;)void 0!==(n=l(r,t=c[f++]))&&u(s,t,n);return s}})},6409:(e,t,n)=>{var r=n(2985),i=n(1131)(!1);r(r.S,"Object",{values:function(e){return i(e)}})},9865:(e,t,n)=>{"use strict";var r=n(2985),i=n(5645),o=n(3816),a=n(8364),u=n(94);r(r.P+r.R,"Promise",{finally:function(e){var t=a(this,i.Promise||o.Promise),n="function"==typeof e;return this.then(n?function(n){return u(t,e()).then((function(){return n}))}:e,n?function(n){return u(t,e()).then((function(){throw n}))}:e)}})},2770:(e,t,n)=>{"use strict";var r=n(2985),i=n(5442),o=n(575),a=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(o);r(r.P+r.F*a,"String",{padEnd:function(e){return i(this,e,arguments.length>1?arguments[1]:void 0,!1)}})},1784:(e,t,n)=>{"use strict";var r=n(2985),i=n(5442),o=n(575),a=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(o);r(r.P+r.F*a,"String",{padStart:function(e){return i(this,e,arguments.length>1?arguments[1]:void 0,!0)}})},5869:(e,t,n)=>{"use strict";n(9599)("trimLeft",(function(e){return function(){return e(this,1)}}),"trimStart")},4325:(e,t,n)=>{"use strict";n(9599)("trimRight",(function(e){return function(){return e(this,2)}}),"trimEnd")},9665:(e,t,n)=>{n(6074)("asyncIterator")},1181:(e,t,n)=>{for(var r=n(6997),i=n(7184),o=n(7234),a=n(3816),u=n(7728),l=n(2803),c=n(6314),s=c("iterator"),f=c("toStringTag"),d=l.Array,p={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},h=i(p),m=0;m<h.length;m++){var v,g=h[m],y=p[g],b=a[g],x=b&&b.prototype;if(x&&(x[s]||u(x,s,d),x[f]||u(x,f,g),l[g]=d,y))for(v in r)x[v]||o(x,v,r[v],!0)}},4633:(e,t,n)=>{var r=n(2985),i=n(4193);r(r.G+r.B,{setImmediate:i.set,clearImmediate:i.clear})},2564:(e,t,n)=>{var r=n(3816),i=n(2985),o=n(575),a=[].slice,u=/MSIE .\./.test(o),l=function(e){return function(t,n){var r=arguments.length>2,i=!!r&&a.call(arguments,2);return e(r?function(){("function"==typeof t?t:Function(t)).apply(this,i)}:t,n)}};i(i.G+i.B+i.F*u,{setTimeout:l(r.setTimeout),setInterval:l(r.setInterval)})},6337:(e,t,n)=>{n(2564),n(4633),n(1181),e.exports=n(5645)},5660:(e,t,n)=>{"use strict";n.d(t,{Z:()=>v});var r=n(4015),i=n.n(r),o=n(3645),a=n.n(o),u=n(1667),l=n.n(u),c=n(4298),s=n(4679),f=n(2899),d=a()(i()),p=l()(c.Z),h=l()(s.Z),m=l()(f.Z);d.push([e.id,"/* Image style */\n.image-thumb, .image-thumbMain {\n  width: 60px;\n  height: 60px;\n  border-radius: 7px;\n}\n.image-thumb {\n  opacity: 0.8;\n  border: 2px solid white;\n  cursor: pointer;\n}\n.image-thumbMain {\n  border: 2px solid black;\n}\n.image-main {\n  width: 100%;\n  height: 100%;\n  border-radius: 7px;\n\tcursor: url("+p+"), default;\n  z-index: 4;\n}\n.image-modalMain {\n  width: 100%;\n  height: 100%;\n  border-radius: 7px;\n\tcursor: url("+h+"), default;\n}\n.image-modalThumb {\n  width: 100px;\n  height: 100px;\n  margin-left: 10px;\n  margin-bottom: 10px;\n  border-radius: 7px;\n  cursor: pointer;\n}\n.image-modalThumbMain {\n  width: 210px;\n  height: 210px;\n  margin-left: 10px;\n  margin-bottom: 10px;\n  border-radius: 7px;\n  cursor: pointer;\n}\n\n/* Button style */\n.image-left, .image-right, .image-fav, .image-notFav, .image-modalLeft, .image-modalRight, .image-modalClose {\n  position: absolute;\n  background-color: white;\n  box-shadow: 0 4px 20px rgba(34, 34, 34, 0.15);\n  border: none;\n  cursor: pointer;\n  outline: none;\n  border-radius: 24px;\n  line-height: 1;\n  padding: 12px;\n}\n.image-left {\n  top: 45%; left: 3.5%;\n  width: 48px;\n  height: 48px;\n  z-index: 2;\n}\n.image-right {\n  top: 45%; right: 3.5%;\n  width: 48px;\n  height: 48px;\n  z-index: 3;\n}\n.image-fav, .image-notFav {\n  top: 5%; right: 2.5%;\n  width: 46px;\n  height: 46px;\n  z-index: 1;\n}\n.image-fav {\n  fill: #A61A2E;\n}\n.image-modalClose {\n  top: 10px; right: 10px;\n  width: 50px;\n  height: 50px;\n  margin: 1px;\n}\n.image-modalLeft {\n  top: 45%; left: 4%;\n  width: 50px;\n  height: 50px;\n  margin: 1px;\n}\n.image-modalRight {\n  top: 45%; right: 4%;\n  width: 50px;\n  height: 50px;\n  margin: 1px;\n}\n\n/* Remove focus border */\nspan:focus, div:focus {\n  outline: none;\n}\n\n/* Hover style */\n.image-thumb:hover, .image-modalThumb:hover, .image-modalThumbMain:hover, .image-left:hover, .image-right:hover, .image-fav:hover, .image-notFav:hover {\n  filter: brightness(97%);\n}\n.image-modalLeft:hover, .image-modalRight:hover, .image-modalClose:hover {\n  width: 52px;\n  height: 52px;\n  margin: 0px;\n  border-radius: 26px;\n}\n\n/* Layout */\n.image-grid {\n  display: flex;\n  max-height: 1000px;\n  max-width: 1000px;\n  padding: 25px;\n}\n.image-col1 {\n  grid-column: 1 / 2;\n}\n.image-col2 {\n  position: relative;\n  grid-column: 2 / 2;\n  padding: 0% 10%;\n  min-width: 300px;\n  min-height: 300px;\n  max-width: 800px;\n  max-height: 800px;\n}\n\n/* Fade-in */\n.image-fadeIn {\n  animation: fadeIn ease 1s;\n  -webkit-animation: fadeIn ease 1s;\n  -moz-animation: fadeIn ease 1s;\n  -o-animation: fadeIn ease 1s;\n  -ms-animation: fadeIn ease 1s;\n}\n@keyframes fadeIn {\n0% {opacity:0;}\n100% {opacity:1;}\n}\n@-webkit-keyframes fadeIn {\n0% {opacity:0;}\n100% {opacity:1;}\n}\n@-moz-keyframes fadeIn {\n0% {opacity:0;}\n100% {opacity:1;}\n}\n@-o-keyframes fadeIn {\n0% {opacity:0;}\n100% {opacity:1;}\n}\n@-ms-keyframes fadeIn {\n0% {opacity:0;}\n100% {opacity:1;}\n}\n\n/* Modal Layout*/\n.image-backGround {\n  position: fixed;\n  top: 0; bottom: 0; left: 0; right: 0;\n  background-color: rgba(0,0,0,0.7);\n  z-index: 1001;\n}\n.image-modalHeader {\n  width: 100%;\n  height: 10%;\n}\n.image-modalGrid {\n  position: relative;\n  margin-top: auto;\n  margin-bottom: auto;\n  margin-left: 5%;\n  margin-right: 5%;\n  height: 85%;\n  display: flex;\n  padding: 25px;\n}\n.image-modelCarousel {\n  grid-column: 1 / 2;\n  position: relative;\n  padding: 0% 10%;\n  max-height: 800px;\n  max-width: 50%;\n  min-width: 400px;\n  min-height: 400px;\n  margin-top: auto;\n  margin-bottom: auto;\n  border-radius: 7px;\n}\n.image-modalCol2 {\n  grid-column: 2 / 2;\n  display: flex;\n  margin-top: auto;\n  margin-bottom: auto;\n  height: 85%;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* Hide scroll bar in zoom IE and Edge */\n  scrollbar-width: none;  /* Hide scroll bar in zoom Firefox */\n}\n.image-modalCol2::-webkit-scrollbar {\n  display: none; /* Hide scroll bar in zoom */\n}\n/* .image-modalThumbBox {\n  margin-top: auto;\n  margin-bottom: auto;\n} */\n.image-thumbCouple {\n  display: flex;\n  max-height: 100%;\n  width: 250px;\n}\n\n/* Modal Thumbs Layout Conditional */\n@media screen and (max-width: 950px) {\n  .image-modalThumbMain {\n    width: 100px;\n    height: 100px;\n  }\n  .image-thumbCouple {\n    display: block;\n  }\n}\n\n/* Zoom Layout */\n.image-modalZoomBox {\n  position: relative;\n  padding: 0% 10%;\n  height: 95%;\n  overflow: hidden;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* Hide scroll bar in zoom IE and Edge */\n  scrollbar-width: none;  /* Hide scroll bar in zoom Firefox */\n  border-radius: 7px;\n}\n.image-modalZoomBox::-webkit-scrollbar {\n  display: none; /* Hide scroll bar in zoom */\n}\n.image-modalZoomMain {\n  max-width: 100%;\n  max-height: 100%;\n  border-radius: 4px;\n\tcursor: url("+m+"), default;\n}\n","",{version:3,sources:["webpack://./client/style.css"],names:[],mappings:"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",sourcesContent:["/* Image style */\n.image-thumb, .image-thumbMain {\n  width: 60px;\n  height: 60px;\n  border-radius: 7px;\n}\n.image-thumb {\n  opacity: 0.8;\n  border: 2px solid white;\n  cursor: pointer;\n}\n.image-thumbMain {\n  border: 2px solid black;\n}\n.image-main {\n  width: 100%;\n  height: 100%;\n  border-radius: 7px;\n\tcursor: url('../public/expand.png'), default;\n  z-index: 4;\n}\n.image-modalMain {\n  width: 100%;\n  height: 100%;\n  border-radius: 7px;\n\tcursor: url('../public/zoomIn.png'), default;\n}\n.image-modalThumb {\n  width: 100px;\n  height: 100px;\n  margin-left: 10px;\n  margin-bottom: 10px;\n  border-radius: 7px;\n  cursor: pointer;\n}\n.image-modalThumbMain {\n  width: 210px;\n  height: 210px;\n  margin-left: 10px;\n  margin-bottom: 10px;\n  border-radius: 7px;\n  cursor: pointer;\n}\n\n/* Button style */\n.image-left, .image-right, .image-fav, .image-notFav, .image-modalLeft, .image-modalRight, .image-modalClose {\n  position: absolute;\n  background-color: white;\n  box-shadow: 0 4px 20px rgba(34, 34, 34, 0.15);\n  border: none;\n  cursor: pointer;\n  outline: none;\n  border-radius: 24px;\n  line-height: 1;\n  padding: 12px;\n}\n.image-left {\n  top: 45%; left: 3.5%;\n  width: 48px;\n  height: 48px;\n  z-index: 2;\n}\n.image-right {\n  top: 45%; right: 3.5%;\n  width: 48px;\n  height: 48px;\n  z-index: 3;\n}\n.image-fav, .image-notFav {\n  top: 5%; right: 2.5%;\n  width: 46px;\n  height: 46px;\n  z-index: 1;\n}\n.image-fav {\n  fill: #A61A2E;\n}\n.image-modalClose {\n  top: 10px; right: 10px;\n  width: 50px;\n  height: 50px;\n  margin: 1px;\n}\n.image-modalLeft {\n  top: 45%; left: 4%;\n  width: 50px;\n  height: 50px;\n  margin: 1px;\n}\n.image-modalRight {\n  top: 45%; right: 4%;\n  width: 50px;\n  height: 50px;\n  margin: 1px;\n}\n\n/* Remove focus border */\nspan:focus, div:focus {\n  outline: none;\n}\n\n/* Hover style */\n.image-thumb:hover, .image-modalThumb:hover, .image-modalThumbMain:hover, .image-left:hover, .image-right:hover, .image-fav:hover, .image-notFav:hover {\n  filter: brightness(97%);\n}\n.image-modalLeft:hover, .image-modalRight:hover, .image-modalClose:hover {\n  width: 52px;\n  height: 52px;\n  margin: 0px;\n  border-radius: 26px;\n}\n\n/* Layout */\n.image-grid {\n  display: flex;\n  max-height: 1000px;\n  max-width: 1000px;\n  padding: 25px;\n}\n.image-col1 {\n  grid-column: 1 / 2;\n}\n.image-col2 {\n  position: relative;\n  grid-column: 2 / 2;\n  padding: 0% 10%;\n  min-width: 300px;\n  min-height: 300px;\n  max-width: 800px;\n  max-height: 800px;\n}\n\n/* Fade-in */\n.image-fadeIn {\n  animation: fadeIn ease 1s;\n  -webkit-animation: fadeIn ease 1s;\n  -moz-animation: fadeIn ease 1s;\n  -o-animation: fadeIn ease 1s;\n  -ms-animation: fadeIn ease 1s;\n}\n@keyframes fadeIn {\n0% {opacity:0;}\n100% {opacity:1;}\n}\n@-webkit-keyframes fadeIn {\n0% {opacity:0;}\n100% {opacity:1;}\n}\n@-moz-keyframes fadeIn {\n0% {opacity:0;}\n100% {opacity:1;}\n}\n@-o-keyframes fadeIn {\n0% {opacity:0;}\n100% {opacity:1;}\n}\n@-ms-keyframes fadeIn {\n0% {opacity:0;}\n100% {opacity:1;}\n}\n\n/* Modal Layout*/\n.image-backGround {\n  position: fixed;\n  top: 0; bottom: 0; left: 0; right: 0;\n  background-color: rgba(0,0,0,0.7);\n  z-index: 1001;\n}\n.image-modalHeader {\n  width: 100%;\n  height: 10%;\n}\n.image-modalGrid {\n  position: relative;\n  margin-top: auto;\n  margin-bottom: auto;\n  margin-left: 5%;\n  margin-right: 5%;\n  height: 85%;\n  display: flex;\n  padding: 25px;\n}\n.image-modelCarousel {\n  grid-column: 1 / 2;\n  position: relative;\n  padding: 0% 10%;\n  max-height: 800px;\n  max-width: 50%;\n  min-width: 400px;\n  min-height: 400px;\n  margin-top: auto;\n  margin-bottom: auto;\n  border-radius: 7px;\n}\n.image-modalCol2 {\n  grid-column: 2 / 2;\n  display: flex;\n  margin-top: auto;\n  margin-bottom: auto;\n  height: 85%;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* Hide scroll bar in zoom IE and Edge */\n  scrollbar-width: none;  /* Hide scroll bar in zoom Firefox */\n}\n.image-modalCol2::-webkit-scrollbar {\n  display: none; /* Hide scroll bar in zoom */\n}\n/* .image-modalThumbBox {\n  margin-top: auto;\n  margin-bottom: auto;\n} */\n.image-thumbCouple {\n  display: flex;\n  max-height: 100%;\n  width: 250px;\n}\n\n/* Modal Thumbs Layout Conditional */\n@media screen and (max-width: 950px) {\n  .image-modalThumbMain {\n    width: 100px;\n    height: 100px;\n  }\n  .image-thumbCouple {\n    display: block;\n  }\n}\n\n/* Zoom Layout */\n.image-modalZoomBox {\n  position: relative;\n  padding: 0% 10%;\n  height: 95%;\n  overflow: hidden;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* Hide scroll bar in zoom IE and Edge */\n  scrollbar-width: none;  /* Hide scroll bar in zoom Firefox */\n  border-radius: 7px;\n}\n.image-modalZoomBox::-webkit-scrollbar {\n  display: none; /* Hide scroll bar in zoom */\n}\n.image-modalZoomMain {\n  max-width: 100%;\n  max-height: 100%;\n  border-radius: 4px;\n\tcursor: url('../public/zoomOut.png'), default;\n}\n"],sourceRoot:""}]);const v=d},3645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=e(t);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var i={};if(r)for(var o=0;o<this.length;o++){var a=this[o][0];null!=a&&(i[a]=!0)}for(var u=0;u<e.length;u++){var l=[].concat(e[u]);r&&i[l[0]]||(n&&(l[2]?l[2]="".concat(n," and ").concat(l[2]):l[2]=n),t.push(l))}},t}},4015:e=>{"use strict";function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}e.exports=function(e){var n,r,i=(r=4,function(e){if(Array.isArray(e))return e}(n=e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,i=!1,o=void 0;try{for(var a,u=e[Symbol.iterator]();!(r=(a=u.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){i=!0,o=e}finally{try{r||null==u.return||u.return()}finally{if(i)throw o}}return n}}(n,r)||function(e,n){if(e){if("string"==typeof e)return t(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?t(e,n):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=i[1],a=i[3];if("function"==typeof btoa){var u=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),l="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(u),c="/*# ".concat(l," */"),s=a.sources.map((function(e){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(e," */")}));return[o].concat(s).concat([c]).join("\n")}return[o].join("\n")}},1667:e=>{"use strict";e.exports=function(e,t){return t||(t={}),"string"!=typeof(e=e&&e.__esModule?e.default:e)?e:(/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e)}},4298:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n.p+"public/expand-05f411ee.png"},4679:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n.p+"public/zoomIn-850d9e4a.png"},2899:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n.p+"public/zoomOut-e74481c1.png"},7418:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function i(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,o){for(var a,u,l=i(e),c=1;c<arguments.length;c++){for(var s in a=Object(arguments[c]))n.call(a,s)&&(l[s]=a[s]);if(t){u=t(a);for(var f=0;f<u.length;f++)r.call(a,u[f])&&(l[u[f]]=a[u[f]])}}return l}},2703:(e,t,n)=>{"use strict";var r=n(414);function i(){}function o(){}o.resetWarningCache=i,e.exports=function(){function e(e,t,n,i,o,a){if(a!==r){var u=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw u.name="Invariant Violation",u}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:o,resetWarningCache:i};return n.PropTypes=n,n}},5697:(e,t,n)=>{e.exports=n(2703)()},414:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},4448:(e,t,n)=>{"use strict";var r=n(7294),i=n(7418),o=n(3840);function a(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(a(227));function u(e,t,n,r,i,o,a,u,l){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var l=!1,c=null,s=!1,f=null,d={onError:function(e){l=!0,c=e}};function p(e,t,n,r,i,o,a,s,f){l=!1,c=null,u.apply(d,arguments)}var h=null,m=null,v=null;function g(e,t,n){var r=e.type||"unknown-event";e.currentTarget=v(n),function(e,t,n,r,i,o,u,d,h){if(p.apply(this,arguments),l){if(!l)throw Error(a(198));var m=c;l=!1,c=null,s||(s=!0,f=m)}}(r,t,void 0,e),e.currentTarget=null}var y=null,b={};function x(){if(y)for(var e in b){var t=b[e],n=y.indexOf(e);if(!(-1<n))throw Error(a(96,e));if(!w[n]){if(!t.extractEvents)throw Error(a(97,e));for(var r in w[n]=t,n=t.eventTypes){var i=void 0,o=n[r],u=t,l=r;if(E.hasOwnProperty(l))throw Error(a(99,l));E[l]=o;var c=o.phasedRegistrationNames;if(c){for(i in c)c.hasOwnProperty(i)&&A(c[i],u,l);i=!0}else o.registrationName?(A(o.registrationName,u,l),i=!0):i=!1;if(!i)throw Error(a(98,r,e))}}}}function A(e,t,n){if(C[e])throw Error(a(100,e));C[e]=t,k[e]=t.eventTypes[n].dependencies}var w=[],E={},C={},k={};function S(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!b.hasOwnProperty(t)||b[t]!==r){if(b[t])throw Error(a(102,t));b[t]=r,n=!0}}n&&x()}var T=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),_=null,P=null,O=null;function M(e){if(e=m(e)){if("function"!=typeof _)throw Error(a(280));var t=e.stateNode;t&&(t=h(t),_(e.stateNode,e.type,t))}}function N(e){P?O?O.push(e):O=[e]:P=e}function B(){if(P){var e=P,t=O;if(O=P=null,M(e),t)for(e=0;e<t.length;e++)M(t[e])}}function I(e,t){return e(t)}function F(e,t,n,r,i){return e(t,n,r,i)}function R(){}var L=I,j=!1,z=!1;function D(){null===P&&null===O||(R(),B())}function U(e,t,n){if(z)return e(t,n);z=!0;try{return L(e,t,n)}finally{z=!1,D()}}var W=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,V=Object.prototype.hasOwnProperty,H={},q={};function Q(e,t,n,r,i,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=i,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o}var $={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){$[e]=new Q(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];$[t]=new Q(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){$[e]=new Q(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){$[e]=new Q(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){$[e]=new Q(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){$[e]=new Q(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){$[e]=new Q(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){$[e]=new Q(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){$[e]=new Q(e,5,!1,e.toLowerCase(),null,!1)}));var Y=/[\-:]([a-z])/g;function G(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(Y,G);$[t]=new Q(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(Y,G);$[t]=new Q(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(Y,G);$[t]=new Q(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){$[e]=new Q(e,1,!1,e.toLowerCase(),null,!1)})),$.xlinkHref=new Q("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){$[e]=new Q(e,1,!1,e.toLowerCase(),null,!0)}));var Z=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function K(e,t,n,r){var i=$.hasOwnProperty(t)?$[t]:null;(null!==i?0===i.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,i,r)&&(n=null),r||null===i?function(e){return!!V.call(q,e)||!V.call(H,e)&&(W.test(e)?q[e]=!0:(H[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):i.mustUseProperty?e[i.propertyName]=null===n?3!==i.type&&"":n:(t=i.attributeName,r=i.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(i=i.type)||4===i&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}Z.hasOwnProperty("ReactCurrentDispatcher")||(Z.ReactCurrentDispatcher={current:null}),Z.hasOwnProperty("ReactCurrentBatchConfig")||(Z.ReactCurrentBatchConfig={suspense:null});var X=/^(.*)[\\\/]/,J="function"==typeof Symbol&&Symbol.for,ee=J?Symbol.for("react.element"):60103,te=J?Symbol.for("react.portal"):60106,ne=J?Symbol.for("react.fragment"):60107,re=J?Symbol.for("react.strict_mode"):60108,ie=J?Symbol.for("react.profiler"):60114,oe=J?Symbol.for("react.provider"):60109,ae=J?Symbol.for("react.context"):60110,ue=J?Symbol.for("react.concurrent_mode"):60111,le=J?Symbol.for("react.forward_ref"):60112,ce=J?Symbol.for("react.suspense"):60113,se=J?Symbol.for("react.suspense_list"):60120,fe=J?Symbol.for("react.memo"):60115,de=J?Symbol.for("react.lazy"):60116,pe=J?Symbol.for("react.block"):60121,he="function"==typeof Symbol&&Symbol.iterator;function me(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=he&&e[he]||e["@@iterator"])?e:null}function ve(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case ne:return"Fragment";case te:return"Portal";case ie:return"Profiler";case re:return"StrictMode";case ce:return"Suspense";case se:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case ae:return"Context.Consumer";case oe:return"Context.Provider";case le:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case fe:return ve(e.type);case pe:return ve(e.render);case de:if(e=1===e._status?e._result:null)return ve(e)}return null}function ge(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,i=e._debugSource,o=ve(e.type);n=null,r&&(n=ve(r.type)),r=o,o="",i?o=" (at "+i.fileName.replace(X,"")+":"+i.lineNumber+")":n&&(o=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+o}t+=n,e=e.return}while(e);return t}function ye(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function be(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function xe(e){e._valueTracker||(e._valueTracker=function(e){var t=be(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var i=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return i.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Ae(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=be(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function we(e,t){var n=t.checked;return i({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=ye(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Ce(e,t){null!=(t=t.checked)&&K(e,"checked",t,!1)}function ke(e,t){Ce(e,t);var n=ye(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Te(e,t.type,n):t.hasOwnProperty("defaultValue")&&Te(e,t.type,ye(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Se(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Te(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function _e(e,t){return e=i({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function Pe(e,t,n,r){if(e=e.options,t){t={};for(var i=0;i<n.length;i++)t["$"+n[i]]=!0;for(n=0;n<e.length;n++)i=t.hasOwnProperty("$"+e[n].value),e[n].selected!==i&&(e[n].selected=i),i&&r&&(e[n].defaultSelected=!0)}else{for(n=""+ye(n),t=null,i=0;i<e.length;i++){if(e[i].value===n)return e[i].selected=!0,void(r&&(e[i].defaultSelected=!0));null!==t||e[i].disabled||(t=e[i])}null!==t&&(t.selected=!0)}}function Oe(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(a(91));return i({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Me(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(a(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(a(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:ye(n)}}function Ne(e,t){var n=ye(t.value),r=ye(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Be(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function Ie(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Fe(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Ie(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Re,Le,je=(Le=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((Re=Re||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Re.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return Le(e,t)}))}:Le);function ze(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function De(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Ue={animationend:De("Animation","AnimationEnd"),animationiteration:De("Animation","AnimationIteration"),animationstart:De("Animation","AnimationStart"),transitionend:De("Transition","TransitionEnd")},We={},Ve={};function He(e){if(We[e])return We[e];if(!Ue[e])return e;var t,n=Ue[e];for(t in n)if(n.hasOwnProperty(t)&&t in Ve)return We[e]=n[t];return e}T&&(Ve=document.createElement("div").style,"AnimationEvent"in window||(delete Ue.animationend.animation,delete Ue.animationiteration.animation,delete Ue.animationstart.animation),"TransitionEvent"in window||delete Ue.transitionend.transition);var qe=He("animationend"),Qe=He("animationiteration"),$e=He("animationstart"),Ye=He("transitionend"),Ge="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ze=new("function"==typeof WeakMap?WeakMap:Map);function Ke(e){var t=Ze.get(e);return void 0===t&&(t=new Map,Ze.set(e,t)),t}function Xe(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Je(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function et(e){if(Xe(e)!==e)throw Error(a(188))}function tt(e,t){if(null==t)throw Error(a(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function nt(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var rt=null;function it(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)g(e,t[r],n[r]);else t&&g(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function ot(e){if(null!==e&&(rt=tt(rt,e)),e=rt,rt=null,e){if(nt(e,it),rt)throw Error(a(95));if(s)throw e=f,s=!1,f=null,e}}function at(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ut(e){if(!T)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var lt=[];function ct(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>lt.length&&lt.push(e)}function st(e,t,n,r){if(lt.length){var i=lt.pop();return i.topLevelType=e,i.eventSystemFlags=r,i.nativeEvent=t,i.targetInst=n,i}return{topLevelType:e,eventSystemFlags:r,nativeEvent:t,targetInst:n,ancestors:[]}}function ft(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=_n(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var i=at(e.nativeEvent);r=e.topLevelType;var o=e.nativeEvent,a=e.eventSystemFlags;0===n&&(a|=64);for(var u=null,l=0;l<w.length;l++){var c=w[l];c&&(c=c.extractEvents(r,t,o,i,a))&&(u=tt(u,c))}ot(u)}}function dt(e,t,n){if(!n.has(e)){switch(e){case"scroll":Qt(t,"scroll",!0);break;case"focus":case"blur":Qt(t,"focus",!0),Qt(t,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":ut(e)&&Qt(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Ge.indexOf(e)&&qt(e,t)}n.set(e,null)}}var pt,ht,mt,vt=!1,gt=[],yt=null,bt=null,xt=null,At=new Map,wt=new Map,Et=[],Ct="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),kt="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function St(e,t,n,r,i){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:i,container:r}}function Tt(e,t){switch(e){case"focus":case"blur":yt=null;break;case"dragenter":case"dragleave":bt=null;break;case"mouseover":case"mouseout":xt=null;break;case"pointerover":case"pointerout":At.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":wt.delete(t.pointerId)}}function _t(e,t,n,r,i,o){return null===e||e.nativeEvent!==o?(e=St(t,n,r,i,o),null!==t&&null!==(t=Pn(t))&&ht(t),e):(e.eventSystemFlags|=r,e)}function Pt(e){var t=_n(e.target);if(null!==t){var n=Xe(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Je(n)))return e.blockedOn=t,void o.unstable_runWithPriority(e.priority,(function(){mt(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Ot(e){if(null!==e.blockedOn)return!1;var t=Zt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==t){var n=Pn(t);return null!==n&&ht(n),e.blockedOn=t,!1}return!0}function Mt(e,t,n){Ot(e)&&n.delete(t)}function Nt(){for(vt=!1;0<gt.length;){var e=gt[0];if(null!==e.blockedOn){null!==(e=Pn(e.blockedOn))&&pt(e);break}var t=Zt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==t?e.blockedOn=t:gt.shift()}null!==yt&&Ot(yt)&&(yt=null),null!==bt&&Ot(bt)&&(bt=null),null!==xt&&Ot(xt)&&(xt=null),At.forEach(Mt),wt.forEach(Mt)}function Bt(e,t){e.blockedOn===t&&(e.blockedOn=null,vt||(vt=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,Nt)))}function It(e){function t(t){return Bt(t,e)}if(0<gt.length){Bt(gt[0],e);for(var n=1;n<gt.length;n++){var r=gt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==yt&&Bt(yt,e),null!==bt&&Bt(bt,e),null!==xt&&Bt(xt,e),At.forEach(t),wt.forEach(t),n=0;n<Et.length;n++)(r=Et[n]).blockedOn===e&&(r.blockedOn=null);for(;0<Et.length&&null===(n=Et[0]).blockedOn;)Pt(n),null===n.blockedOn&&Et.shift()}var Ft={},Rt=new Map,Lt=new Map,jt=["abort","abort",qe,"animationEnd",Qe,"animationIteration",$e,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Ye,"transitionEnd","waiting","waiting"];function zt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],i=e[n+1],o="on"+(i[0].toUpperCase()+i.slice(1));o={phasedRegistrationNames:{bubbled:o,captured:o+"Capture"},dependencies:[r],eventPriority:t},Lt.set(r,t),Rt.set(r,o),Ft[i]=o}}zt("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),zt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),zt(jt,2);for(var Dt="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Ut=0;Ut<Dt.length;Ut++)Lt.set(Dt[Ut],0);var Wt=o.unstable_UserBlockingPriority,Vt=o.unstable_runWithPriority,Ht=!0;function qt(e,t){Qt(t,e,!1)}function Qt(e,t,n){var r=Lt.get(t);switch(void 0===r?2:r){case 0:r=$t.bind(null,t,1,e);break;case 1:r=Yt.bind(null,t,1,e);break;default:r=Gt.bind(null,t,1,e)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function $t(e,t,n,r){j||R();var i=Gt,o=j;j=!0;try{F(i,e,t,n,r)}finally{(j=o)||D()}}function Yt(e,t,n,r){Vt(Wt,Gt.bind(null,e,t,n,r))}function Gt(e,t,n,r){if(Ht)if(0<gt.length&&-1<Ct.indexOf(e))e=St(null,e,t,n,r),gt.push(e);else{var i=Zt(e,t,n,r);if(null===i)Tt(e,r);else if(-1<Ct.indexOf(e))e=St(i,e,t,n,r),gt.push(e);else if(!function(e,t,n,r,i){switch(t){case"focus":return yt=_t(yt,e,t,n,r,i),!0;case"dragenter":return bt=_t(bt,e,t,n,r,i),!0;case"mouseover":return xt=_t(xt,e,t,n,r,i),!0;case"pointerover":var o=i.pointerId;return At.set(o,_t(At.get(o)||null,e,t,n,r,i)),!0;case"gotpointercapture":return o=i.pointerId,wt.set(o,_t(wt.get(o)||null,e,t,n,r,i)),!0}return!1}(i,e,t,n,r)){Tt(e,r),e=st(e,r,null,t);try{U(ft,e)}finally{ct(e)}}}}function Zt(e,t,n,r){if(null!==(n=_n(n=at(r)))){var i=Xe(n);if(null===i)n=null;else{var o=i.tag;if(13===o){if(null!==(n=Je(i)))return n;n=null}else if(3===o){if(i.stateNode.hydrate)return 3===i.tag?i.stateNode.containerInfo:null;n=null}else i!==n&&(n=null)}}e=st(e,r,n,t);try{U(ft,e)}finally{ct(e)}return null}var Kt={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Xt=["Webkit","ms","Moz","O"];function Jt(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||Kt.hasOwnProperty(e)&&Kt[e]?(""+t).trim():t+"px"}function en(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),i=Jt(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,i):e[n]=i}}Object.keys(Kt).forEach((function(e){Xt.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Kt[t]=Kt[e]}))}));var tn=i({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function nn(e,t){if(t){if(tn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(a(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(a(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(a(62,""))}}function rn(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var on="http://www.w3.org/1999/xhtml";function an(e,t){var n=Ke(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=k[t];for(var r=0;r<t.length;r++)dt(t[r],e,n)}function un(){}function ln(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function cn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function sn(e,t){var n,r=cn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=cn(r)}}function fn(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?fn(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function dn(){for(var e=window,t=ln();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=ln((e=t.contentWindow).document)}return t}function pn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var hn="$?",mn="$!",vn=null,gn=null;function yn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function bn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var xn="function"==typeof setTimeout?setTimeout:void 0,An="function"==typeof clearTimeout?clearTimeout:void 0;function wn(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function En(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||n===mn||n===hn){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var Cn=Math.random().toString(36).slice(2),kn="__reactInternalInstance$"+Cn,Sn="__reactEventHandlers$"+Cn,Tn="__reactContainere$"+Cn;function _n(e){var t=e[kn];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Tn]||n[kn]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=En(e);null!==e;){if(n=e[kn])return n;e=En(e)}return t}n=(e=n).parentNode}return null}function Pn(e){return!(e=e[kn]||e[Tn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function On(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(a(33))}function Mn(e){return e[Sn]||null}function Nn(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function Bn(e,t){var n=e.stateNode;if(!n)return null;var r=h(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(a(231,t,typeof n));return n}function In(e,t,n){(t=Bn(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=tt(n._dispatchListeners,t),n._dispatchInstances=tt(n._dispatchInstances,e))}function Fn(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=Nn(t);for(t=n.length;0<t--;)In(n[t],"captured",e);for(t=0;t<n.length;t++)In(n[t],"bubbled",e)}}function Rn(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=Bn(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=tt(n._dispatchListeners,t),n._dispatchInstances=tt(n._dispatchInstances,e))}function Ln(e){nt(e,Fn)}var jn=null,zn=null,Dn=null;function Un(){if(Dn)return Dn;var e,t,n=zn,r=n.length,i="value"in jn?jn.value:jn.textContent,o=i.length;for(e=0;e<r&&n[e]===i[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===i[o-t];t++);return Dn=i.slice(e,1<t?1-t:void 0)}function Wn(){return!0}function Vn(){return!1}function Hn(e,t,n,r){for(var i in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(i)&&((t=e[i])?this[i]=t(n):"target"===i?this.target=r:this[i]=n[i]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Wn:Vn,this.isPropagationStopped=Vn,this}function qn(e,t,n,r){if(this.eventPool.length){var i=this.eventPool.pop();return this.call(i,e,t,n,r),i}return new this(e,t,n,r)}function Qn(e){if(!(e instanceof this))throw Error(a(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function $n(e){e.eventPool=[],e.getPooled=qn,e.release=Qn}i(Hn.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Wn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Wn)},persist:function(){this.isPersistent=Wn},isPersistent:Vn,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Vn,this._dispatchInstances=this._dispatchListeners=null}}),Hn.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Hn.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var o=new t;return i(o,n.prototype),n.prototype=o,n.prototype.constructor=n,n.Interface=i({},r.Interface,e),n.extend=r.extend,$n(n),n},$n(Hn);var Yn=Hn.extend({data:null}),Gn=Hn.extend({data:null}),Zn=[9,13,27,32],Kn=T&&"CompositionEvent"in window,Xn=null;T&&"documentMode"in document&&(Xn=document.documentMode);var Jn=T&&"TextEvent"in window&&!Xn,er=T&&(!Kn||Xn&&8<Xn&&11>=Xn),tr=String.fromCharCode(32),nr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},rr=!1;function ir(e,t){switch(e){case"keyup":return-1!==Zn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function or(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var ar=!1,ur={eventTypes:nr,extractEvents:function(e,t,n,r){var i;if(Kn)e:{switch(e){case"compositionstart":var o=nr.compositionStart;break e;case"compositionend":o=nr.compositionEnd;break e;case"compositionupdate":o=nr.compositionUpdate;break e}o=void 0}else ar?ir(e,n)&&(o=nr.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=nr.compositionStart);return o?(er&&"ko"!==n.locale&&(ar||o!==nr.compositionStart?o===nr.compositionEnd&&ar&&(i=Un()):(zn="value"in(jn=r)?jn.value:jn.textContent,ar=!0)),o=Yn.getPooled(o,t,n,r),(i||null!==(i=or(n)))&&(o.data=i),Ln(o),i=o):i=null,(e=Jn?function(e,t){switch(e){case"compositionend":return or(t);case"keypress":return 32!==t.which?null:(rr=!0,tr);case"textInput":return(e=t.data)===tr&&rr?null:e;default:return null}}(e,n):function(e,t){if(ar)return"compositionend"===e||!Kn&&ir(e,t)?(e=Un(),Dn=zn=jn=null,ar=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return er&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=Gn.getPooled(nr.beforeInput,t,n,r)).data=e,Ln(t)):t=null,null===i?t:null===t?i:[i,t]}},lr={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function cr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!lr[e.type]:"textarea"===t}var sr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function fr(e,t,n){return(e=Hn.getPooled(sr.change,e,t,n)).type="change",N(n),Ln(e),e}var dr=null,pr=null;function hr(e){ot(e)}function mr(e){if(Ae(On(e)))return e}function vr(e,t){if("change"===e)return t}var gr=!1;function yr(){dr&&(dr.detachEvent("onpropertychange",br),pr=dr=null)}function br(e){if("value"===e.propertyName&&mr(pr))if(e=fr(pr,e,at(e)),j)ot(e);else{j=!0;try{I(hr,e)}finally{j=!1,D()}}}function xr(e,t,n){"focus"===e?(yr(),pr=n,(dr=t).attachEvent("onpropertychange",br)):"blur"===e&&yr()}function Ar(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return mr(pr)}function wr(e,t){if("click"===e)return mr(t)}function Er(e,t){if("input"===e||"change"===e)return mr(t)}T&&(gr=ut("input")&&(!document.documentMode||9<document.documentMode));var Cr={eventTypes:sr,_isInputEventSupported:gr,extractEvents:function(e,t,n,r){var i=t?On(t):window,o=i.nodeName&&i.nodeName.toLowerCase();if("select"===o||"input"===o&&"file"===i.type)var a=vr;else if(cr(i))if(gr)a=Er;else{a=Ar;var u=xr}else(o=i.nodeName)&&"input"===o.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(a=wr);if(a&&(a=a(e,t)))return fr(a,n,r);u&&u(e,i,t),"blur"===e&&(e=i._wrapperState)&&e.controlled&&"number"===i.type&&Te(i,"number",i.value)}},kr=Hn.extend({view:null,detail:null}),Sr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Tr(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sr[e])&&!!t[e]}function _r(){return Tr}var Pr=0,Or=0,Mr=!1,Nr=!1,Br=kr.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:_r,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Pr;return Pr=e.screenX,Mr?"mousemove"===e.type?e.screenX-t:0:(Mr=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Or;return Or=e.screenY,Nr?"mousemove"===e.type?e.screenY-t:0:(Nr=!0,0)}}),Ir=Br.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Fr={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Rr={eventTypes:Fr,extractEvents:function(e,t,n,r,i){var o="mouseover"===e||"pointerover"===e,a="mouseout"===e||"pointerout"===e;if(o&&0==(32&i)&&(n.relatedTarget||n.fromElement)||!a&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,a?(a=t,null!==(t=(t=n.relatedTarget||n.toElement)?_n(t):null)&&(t!==Xe(t)||5!==t.tag&&6!==t.tag)&&(t=null)):a=null,a===t)return null;if("mouseout"===e||"mouseover"===e)var u=Br,l=Fr.mouseLeave,c=Fr.mouseEnter,s="mouse";else"pointerout"!==e&&"pointerover"!==e||(u=Ir,l=Fr.pointerLeave,c=Fr.pointerEnter,s="pointer");if(e=null==a?o:On(a),o=null==t?o:On(t),(l=u.getPooled(l,a,n,r)).type=s+"leave",l.target=e,l.relatedTarget=o,(n=u.getPooled(c,t,n,r)).type=s+"enter",n.target=o,n.relatedTarget=e,s=t,(r=a)&&s)e:{for(c=s,a=0,e=u=r;e;e=Nn(e))a++;for(e=0,t=c;t;t=Nn(t))e++;for(;0<a-e;)u=Nn(u),a--;for(;0<e-a;)c=Nn(c),e--;for(;a--;){if(u===c||u===c.alternate)break e;u=Nn(u),c=Nn(c)}u=null}else u=null;for(c=u,u=[];r&&r!==c&&(null===(a=r.alternate)||a!==c);)u.push(r),r=Nn(r);for(r=[];s&&s!==c&&(null===(a=s.alternate)||a!==c);)r.push(s),s=Nn(s);for(s=0;s<u.length;s++)Rn(u[s],"bubbled",l);for(s=r.length;0<s--;)Rn(r[s],"captured",n);return 0==(64&i)?[l]:[l,n]}},Lr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},jr=Object.prototype.hasOwnProperty;function zr(e,t){if(Lr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!jr.call(t,n[r])||!Lr(e[n[r]],t[n[r]]))return!1;return!0}var Dr=T&&"documentMode"in document&&11>=document.documentMode,Ur={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Wr=null,Vr=null,Hr=null,qr=!1;function Qr(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return qr||null==Wr||Wr!==ln(n)?null:(n="selectionStart"in(n=Wr)&&pn(n)?{start:n.selectionStart,end:n.selectionEnd}:{anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Hr&&zr(Hr,n)?null:(Hr=n,(e=Hn.getPooled(Ur.select,Vr,e,t)).type="select",e.target=Wr,Ln(e),e))}var $r={eventTypes:Ur,extractEvents:function(e,t,n,r,i,o){if(!(o=!(i=o||(r.window===r?r.document:9===r.nodeType?r:r.ownerDocument)))){e:{i=Ke(i),o=k.onSelect;for(var a=0;a<o.length;a++)if(!i.has(o[a])){i=!1;break e}i=!0}o=!i}if(o)return null;switch(i=t?On(t):window,e){case"focus":(cr(i)||"true"===i.contentEditable)&&(Wr=i,Vr=t,Hr=null);break;case"blur":Hr=Vr=Wr=null;break;case"mousedown":qr=!0;break;case"contextmenu":case"mouseup":case"dragend":return qr=!1,Qr(n,r);case"selectionchange":if(Dr)break;case"keydown":case"keyup":return Qr(n,r)}return null}},Yr=Hn.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Gr=Hn.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Zr=kr.extend({relatedTarget:null});function Kr(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var Xr={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Jr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},ei=kr.extend({key:function(e){if(e.key){var t=Xr[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Kr(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Jr[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:_r,charCode:function(e){return"keypress"===e.type?Kr(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Kr(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),ti=Br.extend({dataTransfer:null}),ni=kr.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:_r}),ri=Hn.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),ii=Br.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),oi={eventTypes:Ft,extractEvents:function(e,t,n,r){var i=Rt.get(e);if(!i)return null;switch(e){case"keypress":if(0===Kr(n))return null;case"keydown":case"keyup":e=ei;break;case"blur":case"focus":e=Zr;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Br;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=ti;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=ni;break;case qe:case Qe:case $e:e=Yr;break;case Ye:e=ri;break;case"scroll":e=kr;break;case"wheel":e=ii;break;case"copy":case"cut":case"paste":e=Gr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Ir;break;default:e=Hn}return Ln(t=e.getPooled(i,t,n,r)),t}};if(y)throw Error(a(101));y=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),x(),h=Mn,m=Pn,v=On,S({SimpleEventPlugin:oi,EnterLeaveEventPlugin:Rr,ChangeEventPlugin:Cr,SelectEventPlugin:$r,BeforeInputEventPlugin:ur});var ai=[],ui=-1;function li(e){0>ui||(e.current=ai[ui],ai[ui]=null,ui--)}function ci(e,t){ui++,ai[ui]=e.current,e.current=t}var si={},fi={current:si},di={current:!1},pi=si;function hi(e,t){var n=e.type.contextTypes;if(!n)return si;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var i,o={};for(i in n)o[i]=t[i];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function mi(e){return null!=e.childContextTypes}function vi(){li(di),li(fi)}function gi(e,t,n){if(fi.current!==si)throw Error(a(168));ci(fi,t),ci(di,n)}function yi(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var o in r=r.getChildContext())if(!(o in e))throw Error(a(108,ve(t)||"Unknown",o));return i({},n,{},r)}function bi(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||si,pi=fi.current,ci(fi,e),ci(di,di.current),!0}function xi(e,t,n){var r=e.stateNode;if(!r)throw Error(a(169));n?(e=yi(e,t,pi),r.__reactInternalMemoizedMergedChildContext=e,li(di),li(fi),ci(fi,e)):li(di),ci(di,n)}var Ai=o.unstable_runWithPriority,wi=o.unstable_scheduleCallback,Ei=o.unstable_cancelCallback,Ci=o.unstable_requestPaint,ki=o.unstable_now,Si=o.unstable_getCurrentPriorityLevel,Ti=o.unstable_ImmediatePriority,_i=o.unstable_UserBlockingPriority,Pi=o.unstable_NormalPriority,Oi=o.unstable_LowPriority,Mi=o.unstable_IdlePriority,Ni={},Bi=o.unstable_shouldYield,Ii=void 0!==Ci?Ci:function(){},Fi=null,Ri=null,Li=!1,ji=ki(),zi=1e4>ji?ki:function(){return ki()-ji};function Di(){switch(Si()){case Ti:return 99;case _i:return 98;case Pi:return 97;case Oi:return 96;case Mi:return 95;default:throw Error(a(332))}}function Ui(e){switch(e){case 99:return Ti;case 98:return _i;case 97:return Pi;case 96:return Oi;case 95:return Mi;default:throw Error(a(332))}}function Wi(e,t){return e=Ui(e),Ai(e,t)}function Vi(e,t,n){return e=Ui(e),wi(e,t,n)}function Hi(e){return null===Fi?(Fi=[e],Ri=wi(Ti,Qi)):Fi.push(e),Ni}function qi(){if(null!==Ri){var e=Ri;Ri=null,Ei(e)}Qi()}function Qi(){if(!Li&&null!==Fi){Li=!0;var e=0;try{var t=Fi;Wi(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Fi=null}catch(t){throw null!==Fi&&(Fi=Fi.slice(e+1)),wi(Ti,qi),t}finally{Li=!1}}}function $i(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function Yi(e,t){if(e&&e.defaultProps)for(var n in t=i({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var Gi={current:null},Zi=null,Ki=null,Xi=null;function Ji(){Xi=Ki=Zi=null}function eo(e){var t=Gi.current;li(Gi),e.type._context._currentValue=t}function to(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function no(e,t){Zi=e,Xi=Ki=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(Oa=!0),e.firstContext=null)}function ro(e,t){if(Xi!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Xi=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Ki){if(null===Zi)throw Error(a(308));Ki=t,Zi.dependencies={expirationTime:0,firstContext:t,responders:null}}else Ki=Ki.next=t;return e._currentValue}var io=!1;function oo(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function ao(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function uo(e,t){return(e={expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null}).next=e}function lo(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function co(e,t){var n=e.alternate;null!==n&&ao(n,e),null===(n=(e=e.updateQueue).baseQueue)?(e.baseQueue=t.next=t,t.next=t):(t.next=n.next,n.next=t)}function so(e,t,n,r){var o=e.updateQueue;io=!1;var a=o.baseQueue,u=o.shared.pending;if(null!==u){if(null!==a){var l=a.next;a.next=u.next,u.next=l}a=u,o.shared.pending=null,null!==(l=e.alternate)&&null!==(l=l.updateQueue)&&(l.baseQueue=u)}if(null!==a){l=a.next;var c=o.baseState,s=0,f=null,d=null,p=null;if(null!==l)for(var h=l;;){if((u=h.expirationTime)<r){var m={expirationTime:h.expirationTime,suspenseConfig:h.suspenseConfig,tag:h.tag,payload:h.payload,callback:h.callback,next:null};null===p?(d=p=m,f=c):p=p.next=m,u>s&&(s=u)}else{null!==p&&(p=p.next={expirationTime:1073741823,suspenseConfig:h.suspenseConfig,tag:h.tag,payload:h.payload,callback:h.callback,next:null}),ol(u,h.suspenseConfig);e:{var v=e,g=h;switch(u=t,m=n,g.tag){case 1:if("function"==typeof(v=g.payload)){c=v.call(m,c,u);break e}c=v;break e;case 3:v.effectTag=-4097&v.effectTag|64;case 0:if(null==(u="function"==typeof(v=g.payload)?v.call(m,c,u):v))break e;c=i({},c,u);break e;case 2:io=!0}}null!==h.callback&&(e.effectTag|=32,null===(u=o.effects)?o.effects=[h]:u.push(h))}if(null===(h=h.next)||h===l){if(null===(u=o.shared.pending))break;h=a.next=u.next,u.next=l,o.baseQueue=a=u,o.shared.pending=null}}null===p?f=c:p.next=d,o.baseState=f,o.baseQueue=p,al(s),e.expirationTime=s,e.memoizedState=c}}function fo(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],i=r.callback;if(null!==i){if(r.callback=null,r=i,i=n,"function"!=typeof r)throw Error(a(191,r));r.call(i)}}}var po=Z.ReactCurrentBatchConfig,ho=(new r.Component).refs;function mo(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:i({},t,n),e.memoizedState=n,0===e.expirationTime&&(e.updateQueue.baseState=n)}var vo={isMounted:function(e){return!!(e=e._reactInternalFiber)&&Xe(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=Yu(),i=po.suspense;(i=uo(r=Gu(r,e,i),i)).payload=t,null!=n&&(i.callback=n),lo(e,i),Zu(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=Yu(),i=po.suspense;(i=uo(r=Gu(r,e,i),i)).tag=1,i.payload=t,null!=n&&(i.callback=n),lo(e,i),Zu(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=Yu(),r=po.suspense;(r=uo(n=Gu(n,e,r),r)).tag=2,null!=t&&(r.callback=t),lo(e,r),Zu(e,n)}};function go(e,t,n,r,i,o,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,a):!(t.prototype&&t.prototype.isPureReactComponent&&zr(n,r)&&zr(i,o))}function yo(e,t,n){var r=!1,i=si,o=t.contextType;return"object"==typeof o&&null!==o?o=ro(o):(i=mi(t)?pi:fi.current,o=(r=null!=(r=t.contextTypes))?hi(e,i):si),t=new t(n,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=vo,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=i,e.__reactInternalMemoizedMaskedChildContext=o),t}function bo(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&vo.enqueueReplaceState(t,t.state,null)}function xo(e,t,n,r){var i=e.stateNode;i.props=n,i.state=e.memoizedState,i.refs=ho,oo(e);var o=t.contextType;"object"==typeof o&&null!==o?i.context=ro(o):(o=mi(t)?pi:fi.current,i.context=hi(e,o)),so(e,n,i,r),i.state=e.memoizedState,"function"==typeof(o=t.getDerivedStateFromProps)&&(mo(e,t,o,n),i.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof i.getSnapshotBeforeUpdate||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||(t=i.state,"function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount(),t!==i.state&&vo.enqueueReplaceState(i,i.state,null),so(e,n,i,r),i.state=e.memoizedState),"function"==typeof i.componentDidMount&&(e.effectTag|=4)}var Ao=Array.isArray;function wo(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(a(309));var r=n.stateNode}if(!r)throw Error(a(147,e));var i=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===i?t.ref:((t=function(e){var t=r.refs;t===ho&&(t=r.refs={}),null===e?delete t[i]:t[i]=e})._stringRef=i,t)}if("string"!=typeof e)throw Error(a(284));if(!n._owner)throw Error(a(290,e))}return e}function Eo(e,t){if("textarea"!==e.type)throw Error(a(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function Co(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function i(e,t){return(e=Sl(e,t)).index=0,e.sibling=null,e}function o(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function u(t){return e&&null===t.alternate&&(t.effectTag=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=Pl(n,e.mode,r)).return=e,t):((t=i(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=i(t,n.props)).ref=wo(e,t,n),r.return=e,r):((r=Tl(n.type,n.key,n.props,null,e.mode,r)).ref=wo(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Ol(n,e.mode,r)).return=e,t):((t=i(t,n.children||[])).return=e,t)}function f(e,t,n,r,o){return null===t||7!==t.tag?((t=_l(n,e.mode,r,o)).return=e,t):((t=i(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Pl(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case ee:return(n=Tl(t.type,t.key,t.props,null,e.mode,n)).ref=wo(e,null,t),n.return=e,n;case te:return(t=Ol(t,e.mode,n)).return=e,t}if(Ao(t)||me(t))return(t=_l(t,e.mode,n,null)).return=e,t;Eo(e,t)}return null}function p(e,t,n,r){var i=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==i?null:l(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case ee:return n.key===i?n.type===ne?f(e,t,n.props.children,r,i):c(e,t,n,r):null;case te:return n.key===i?s(e,t,n,r):null}if(Ao(n)||me(n))return null!==i?null:f(e,t,n,r,null);Eo(e,n)}return null}function h(e,t,n,r,i){if("string"==typeof r||"number"==typeof r)return l(t,e=e.get(n)||null,""+r,i);if("object"==typeof r&&null!==r){switch(r.$$typeof){case ee:return e=e.get(null===r.key?n:r.key)||null,r.type===ne?f(t,e,r.props.children,i,r.key):c(t,e,r,i);case te:return s(t,e=e.get(null===r.key?n:r.key)||null,r,i)}if(Ao(r)||me(r))return f(t,e=e.get(n)||null,r,i,null);Eo(t,r)}return null}function m(i,a,u,l){for(var c=null,s=null,f=a,m=a=0,v=null;null!==f&&m<u.length;m++){f.index>m?(v=f,f=null):v=f.sibling;var g=p(i,f,u[m],l);if(null===g){null===f&&(f=v);break}e&&f&&null===g.alternate&&t(i,f),a=o(g,a,m),null===s?c=g:s.sibling=g,s=g,f=v}if(m===u.length)return n(i,f),c;if(null===f){for(;m<u.length;m++)null!==(f=d(i,u[m],l))&&(a=o(f,a,m),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(i,f);m<u.length;m++)null!==(v=h(f,i,m,u[m],l))&&(e&&null!==v.alternate&&f.delete(null===v.key?m:v.key),a=o(v,a,m),null===s?c=v:s.sibling=v,s=v);return e&&f.forEach((function(e){return t(i,e)})),c}function v(i,u,l,c){var s=me(l);if("function"!=typeof s)throw Error(a(150));if(null==(l=s.call(l)))throw Error(a(151));for(var f=s=null,m=u,v=u=0,g=null,y=l.next();null!==m&&!y.done;v++,y=l.next()){m.index>v?(g=m,m=null):g=m.sibling;var b=p(i,m,y.value,c);if(null===b){null===m&&(m=g);break}e&&m&&null===b.alternate&&t(i,m),u=o(b,u,v),null===f?s=b:f.sibling=b,f=b,m=g}if(y.done)return n(i,m),s;if(null===m){for(;!y.done;v++,y=l.next())null!==(y=d(i,y.value,c))&&(u=o(y,u,v),null===f?s=y:f.sibling=y,f=y);return s}for(m=r(i,m);!y.done;v++,y=l.next())null!==(y=h(m,i,v,y.value,c))&&(e&&null!==y.alternate&&m.delete(null===y.key?v:y.key),u=o(y,u,v),null===f?s=y:f.sibling=y,f=y);return e&&m.forEach((function(e){return t(i,e)})),s}return function(e,r,o,l){var c="object"==typeof o&&null!==o&&o.type===ne&&null===o.key;c&&(o=o.props.children);var s="object"==typeof o&&null!==o;if(s)switch(o.$$typeof){case ee:e:{for(s=o.key,c=r;null!==c;){if(c.key===s){switch(c.tag){case 7:if(o.type===ne){n(e,c.sibling),(r=i(c,o.props.children)).return=e,e=r;break e}break;default:if(c.elementType===o.type){n(e,c.sibling),(r=i(c,o.props)).ref=wo(e,c,o),r.return=e,e=r;break e}}n(e,c);break}t(e,c),c=c.sibling}o.type===ne?((r=_l(o.props.children,e.mode,l,o.key)).return=e,e=r):((l=Tl(o.type,o.key,o.props,null,e.mode,l)).ref=wo(e,r,o),l.return=e,e=l)}return u(e);case te:e:{for(c=o.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===o.containerInfo&&r.stateNode.implementation===o.implementation){n(e,r.sibling),(r=i(r,o.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Ol(o,e.mode,l)).return=e,e=r}return u(e)}if("string"==typeof o||"number"==typeof o)return o=""+o,null!==r&&6===r.tag?(n(e,r.sibling),(r=i(r,o)).return=e,e=r):(n(e,r),(r=Pl(o,e.mode,l)).return=e,e=r),u(e);if(Ao(o))return m(e,r,o,l);if(me(o))return v(e,r,o,l);if(s&&Eo(e,o),void 0===o&&!c)switch(e.tag){case 1:case 0:throw e=e.type,Error(a(152,e.displayName||e.name||"Component"))}return n(e,r)}}var ko=Co(!0),So=Co(!1),To={},_o={current:To},Po={current:To},Oo={current:To};function Mo(e){if(e===To)throw Error(a(174));return e}function No(e,t){switch(ci(Oo,t),ci(Po,e),ci(_o,To),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Fe(null,"");break;default:t=Fe(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}li(_o),ci(_o,t)}function Bo(){li(_o),li(Po),li(Oo)}function Io(e){Mo(Oo.current);var t=Mo(_o.current),n=Fe(t,e.type);t!==n&&(ci(Po,e),ci(_o,n))}function Fo(e){Po.current===e&&(li(_o),li(Po))}var Ro={current:0};function Lo(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||n.data===hn||n.data===mn))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function jo(e,t){return{responder:e,props:t}}var zo=Z.ReactCurrentDispatcher,Do=Z.ReactCurrentBatchConfig,Uo=0,Wo=null,Vo=null,Ho=null,qo=!1;function Qo(){throw Error(a(321))}function $o(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Lr(e[n],t[n]))return!1;return!0}function Yo(e,t,n,r,i,o){if(Uo=o,Wo=t,t.memoizedState=null,t.updateQueue=null,t.expirationTime=0,zo.current=null===e||null===e.memoizedState?ga:ya,e=n(r,i),t.expirationTime===Uo){o=0;do{if(t.expirationTime=0,!(25>o))throw Error(a(301));o+=1,Ho=Vo=null,t.updateQueue=null,zo.current=ba,e=n(r,i)}while(t.expirationTime===Uo)}if(zo.current=va,t=null!==Vo&&null!==Vo.next,Uo=0,Ho=Vo=Wo=null,qo=!1,t)throw Error(a(300));return e}function Go(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Ho?Wo.memoizedState=Ho=e:Ho=Ho.next=e,Ho}function Zo(){if(null===Vo){var e=Wo.alternate;e=null!==e?e.memoizedState:null}else e=Vo.next;var t=null===Ho?Wo.memoizedState:Ho.next;if(null!==t)Ho=t,Vo=e;else{if(null===e)throw Error(a(310));e={memoizedState:(Vo=e).memoizedState,baseState:Vo.baseState,baseQueue:Vo.baseQueue,queue:Vo.queue,next:null},null===Ho?Wo.memoizedState=Ho=e:Ho=Ho.next=e}return Ho}function Ko(e,t){return"function"==typeof t?t(e):t}function Xo(e){var t=Zo(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=Vo,i=r.baseQueue,o=n.pending;if(null!==o){if(null!==i){var u=i.next;i.next=o.next,o.next=u}r.baseQueue=i=o,n.pending=null}if(null!==i){i=i.next,r=r.baseState;var l=u=o=null,c=i;do{var s=c.expirationTime;if(s<Uo){var f={expirationTime:c.expirationTime,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===l?(u=l=f,o=r):l=l.next=f,s>Wo.expirationTime&&(Wo.expirationTime=s,al(s))}else null!==l&&(l=l.next={expirationTime:1073741823,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),ol(s,c.suspenseConfig),r=c.eagerReducer===e?c.eagerState:e(r,c.action);c=c.next}while(null!==c&&c!==i);null===l?o=r:l.next=u,Lr(r,t.memoizedState)||(Oa=!0),t.memoizedState=r,t.baseState=o,t.baseQueue=l,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function Jo(e){var t=Zo(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=n.dispatch,i=n.pending,o=t.memoizedState;if(null!==i){n.pending=null;var u=i=i.next;do{o=e(o,u.action),u=u.next}while(u!==i);Lr(o,t.memoizedState)||(Oa=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,r]}function ea(e){var t=Go();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:Ko,lastRenderedState:e}).dispatch=ma.bind(null,Wo,e),[t.memoizedState,e]}function ta(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Wo.updateQueue)?(t={lastEffect:null},Wo.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function na(){return Zo().memoizedState}function ra(e,t,n,r){var i=Go();Wo.effectTag|=e,i.memoizedState=ta(1|t,n,void 0,void 0===r?null:r)}function ia(e,t,n,r){var i=Zo();r=void 0===r?null:r;var o=void 0;if(null!==Vo){var a=Vo.memoizedState;if(o=a.destroy,null!==r&&$o(r,a.deps))return void ta(t,n,o,r)}Wo.effectTag|=e,i.memoizedState=ta(1|t,n,o,r)}function oa(e,t){return ra(516,4,e,t)}function aa(e,t){return ia(516,4,e,t)}function ua(e,t){return ia(4,2,e,t)}function la(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function ca(e,t,n){return n=null!=n?n.concat([e]):null,ia(4,2,la.bind(null,t,e),n)}function sa(){}function fa(e,t){return Go().memoizedState=[e,void 0===t?null:t],e}function da(e,t){var n=Zo();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&$o(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function pa(e,t){var n=Zo();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&$o(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function ha(e,t,n){var r=Di();Wi(98>r?98:r,(function(){e(!0)})),Wi(97<r?97:r,(function(){var r=Do.suspense;Do.suspense=void 0===t?null:t;try{e(!1),n()}finally{Do.suspense=r}}))}function ma(e,t,n){var r=Yu(),i=po.suspense;i={expirationTime:r=Gu(r,e,i),suspenseConfig:i,action:n,eagerReducer:null,eagerState:null,next:null};var o=t.pending;if(null===o?i.next=i:(i.next=o.next,o.next=i),t.pending=i,o=e.alternate,e===Wo||null!==o&&o===Wo)qo=!0,i.expirationTime=Uo,Wo.expirationTime=Uo;else{if(0===e.expirationTime&&(null===o||0===o.expirationTime)&&null!==(o=t.lastRenderedReducer))try{var a=t.lastRenderedState,u=o(a,n);if(i.eagerReducer=o,i.eagerState=u,Lr(u,a))return}catch(e){}Zu(e,r)}}var va={readContext:ro,useCallback:Qo,useContext:Qo,useEffect:Qo,useImperativeHandle:Qo,useLayoutEffect:Qo,useMemo:Qo,useReducer:Qo,useRef:Qo,useState:Qo,useDebugValue:Qo,useResponder:Qo,useDeferredValue:Qo,useTransition:Qo},ga={readContext:ro,useCallback:fa,useContext:ro,useEffect:oa,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,ra(4,2,la.bind(null,t,e),n)},useLayoutEffect:function(e,t){return ra(4,2,e,t)},useMemo:function(e,t){var n=Go();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Go();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=ma.bind(null,Wo,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Go().memoizedState=e},useState:ea,useDebugValue:sa,useResponder:jo,useDeferredValue:function(e,t){var n=ea(e),r=n[0],i=n[1];return oa((function(){var n=Do.suspense;Do.suspense=void 0===t?null:t;try{i(e)}finally{Do.suspense=n}}),[e,t]),r},useTransition:function(e){var t=ea(!1),n=t[0];return t=t[1],[fa(ha.bind(null,t,e),[t,e]),n]}},ya={readContext:ro,useCallback:da,useContext:ro,useEffect:aa,useImperativeHandle:ca,useLayoutEffect:ua,useMemo:pa,useReducer:Xo,useRef:na,useState:function(){return Xo(Ko)},useDebugValue:sa,useResponder:jo,useDeferredValue:function(e,t){var n=Xo(Ko),r=n[0],i=n[1];return aa((function(){var n=Do.suspense;Do.suspense=void 0===t?null:t;try{i(e)}finally{Do.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Xo(Ko),n=t[0];return t=t[1],[da(ha.bind(null,t,e),[t,e]),n]}},ba={readContext:ro,useCallback:da,useContext:ro,useEffect:aa,useImperativeHandle:ca,useLayoutEffect:ua,useMemo:pa,useReducer:Jo,useRef:na,useState:function(){return Jo(Ko)},useDebugValue:sa,useResponder:jo,useDeferredValue:function(e,t){var n=Jo(Ko),r=n[0],i=n[1];return aa((function(){var n=Do.suspense;Do.suspense=void 0===t?null:t;try{i(e)}finally{Do.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Jo(Ko),n=t[0];return t=t[1],[da(ha.bind(null,t,e),[t,e]),n]}},xa=null,Aa=null,wa=!1;function Ea(e,t){var n=Cl(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Ca(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function ka(e){if(wa){var t=Aa;if(t){var n=t;if(!Ca(e,t)){if(!(t=wn(n.nextSibling))||!Ca(e,t))return e.effectTag=-1025&e.effectTag|2,wa=!1,void(xa=e);Ea(xa,n)}xa=e,Aa=wn(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,wa=!1,xa=e}}function Sa(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;xa=e}function Ta(e){if(e!==xa)return!1;if(!wa)return Sa(e),wa=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!bn(t,e.memoizedProps))for(t=Aa;t;)Ea(e,t),t=wn(t.nextSibling);if(Sa(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(a(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Aa=wn(e.nextSibling);break e}t--}else"$"!==n&&n!==mn&&n!==hn||t++}e=e.nextSibling}Aa=null}}else Aa=xa?wn(e.stateNode.nextSibling):null;return!0}function _a(){Aa=xa=null,wa=!1}var Pa=Z.ReactCurrentOwner,Oa=!1;function Ma(e,t,n,r){t.child=null===e?So(t,null,n,r):ko(t,e.child,n,r)}function Na(e,t,n,r,i){n=n.render;var o=t.ref;return no(t,i),r=Yo(e,t,n,r,o,i),null===e||Oa?(t.effectTag|=1,Ma(e,t,r,i),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=i&&(e.expirationTime=0),Ya(e,t,i))}function Ba(e,t,n,r,i,o){if(null===e){var a=n.type;return"function"!=typeof a||kl(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Tl(n.type,null,r,null,t.mode,o)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,Ia(e,t,a,r,i,o))}return a=e.child,i<o&&(i=a.memoizedProps,(n=null!==(n=n.compare)?n:zr)(i,r)&&e.ref===t.ref)?Ya(e,t,o):(t.effectTag|=1,(e=Sl(a,r)).ref=t.ref,e.return=t,t.child=e)}function Ia(e,t,n,r,i,o){return null!==e&&zr(e.memoizedProps,r)&&e.ref===t.ref&&(Oa=!1,i<o)?(t.expirationTime=e.expirationTime,Ya(e,t,o)):Ra(e,t,n,r,o)}function Fa(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Ra(e,t,n,r,i){var o=mi(n)?pi:fi.current;return o=hi(t,o),no(t,i),n=Yo(e,t,n,r,o,i),null===e||Oa?(t.effectTag|=1,Ma(e,t,n,i),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=i&&(e.expirationTime=0),Ya(e,t,i))}function La(e,t,n,r,i){if(mi(n)){var o=!0;bi(t)}else o=!1;if(no(t,i),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),yo(t,n,r),xo(t,n,r,i),r=!0;else if(null===e){var a=t.stateNode,u=t.memoizedProps;a.props=u;var l=a.context,c=n.contextType;c="object"==typeof c&&null!==c?ro(c):hi(t,c=mi(n)?pi:fi.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof a.getSnapshotBeforeUpdate;f||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(u!==r||l!==c)&&bo(t,a,r,c),io=!1;var d=t.memoizedState;a.state=d,so(t,r,a,i),l=t.memoizedState,u!==r||d!==l||di.current||io?("function"==typeof s&&(mo(t,n,s,r),l=t.memoizedState),(u=io||go(t,n,u,r,d,l,c))?(f||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(t.effectTag|=4)):("function"==typeof a.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=l),a.props=r,a.state=l,a.context=c,r=u):("function"==typeof a.componentDidMount&&(t.effectTag|=4),r=!1)}else a=t.stateNode,ao(e,t),u=t.memoizedProps,a.props=t.type===t.elementType?u:Yi(t.type,u),l=a.context,c="object"==typeof(c=n.contextType)&&null!==c?ro(c):hi(t,c=mi(n)?pi:fi.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(u!==r||l!==c)&&bo(t,a,r,c),io=!1,l=t.memoizedState,a.state=l,so(t,r,a,i),d=t.memoizedState,u!==r||l!==d||di.current||io?("function"==typeof s&&(mo(t,n,s,r),d=t.memoizedState),(s=io||go(t,n,u,r,l,d,c))?(f||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,d,c),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,d,c)),"function"==typeof a.componentDidUpdate&&(t.effectTag|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof a.componentDidUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),a.props=r,a.state=d,a.context=c,r=s):("function"!=typeof a.componentDidUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),r=!1);return ja(e,t,n,r,o,i)}function ja(e,t,n,r,i,o){Fa(e,t);var a=0!=(64&t.effectTag);if(!r&&!a)return i&&xi(t,n,!1),Ya(e,t,o);r=t.stateNode,Pa.current=t;var u=a&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&a?(t.child=ko(t,e.child,null,o),t.child=ko(t,null,u,o)):Ma(e,t,u,o),t.memoizedState=r.state,i&&xi(t,n,!0),t.child}function za(e){var t=e.stateNode;t.pendingContext?gi(0,t.pendingContext,t.pendingContext!==t.context):t.context&&gi(0,t.context,!1),No(e,t.containerInfo)}var Da,Ua,Wa,Va={dehydrated:null,retryTime:0};function Ha(e,t,n){var r,i=t.mode,o=t.pendingProps,a=Ro.current,u=!1;if((r=0!=(64&t.effectTag))||(r=0!=(2&a)&&(null===e||null!==e.memoizedState)),r?(u=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===o.fallback||!0===o.unstable_avoidThisFallback||(a|=1),ci(Ro,1&a),null===e){if(void 0!==o.fallback&&ka(t),u){if(u=o.fallback,(o=_l(null,i,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,o.child=e;null!==e;)e.return=o,e=e.sibling;return(n=_l(u,i,n,null)).return=t,o.sibling=n,t.memoizedState=Va,t.child=o,n}return i=o.children,t.memoizedState=null,t.child=So(t,null,i,n)}if(null!==e.memoizedState){if(i=(e=e.child).sibling,u){if(o=o.fallback,(n=Sl(e,e.pendingProps)).return=t,0==(2&t.mode)&&(u=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=u;null!==u;)u.return=n,u=u.sibling;return(i=Sl(i,o)).return=t,n.sibling=i,n.childExpirationTime=0,t.memoizedState=Va,t.child=n,i}return n=ko(t,e.child,o.children,n),t.memoizedState=null,t.child=n}if(e=e.child,u){if(u=o.fallback,(o=_l(null,i,0,null)).return=t,o.child=e,null!==e&&(e.return=o),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,o.child=e;null!==e;)e.return=o,e=e.sibling;return(n=_l(u,i,n,null)).return=t,o.sibling=n,n.effectTag|=2,o.childExpirationTime=0,t.memoizedState=Va,t.child=o,n}return t.memoizedState=null,t.child=ko(t,e,o.children,n)}function qa(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),to(e.return,t)}function Qa(e,t,n,r,i,o){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailExpiration:0,tailMode:i,lastEffect:o}:(a.isBackwards=t,a.rendering=null,a.renderingStartTime=0,a.last=r,a.tail=n,a.tailExpiration=0,a.tailMode=i,a.lastEffect=o)}function $a(e,t,n){var r=t.pendingProps,i=r.revealOrder,o=r.tail;if(Ma(e,t,r.children,n),0!=(2&(r=Ro.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&qa(e,n);else if(19===e.tag)qa(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ci(Ro,r),0==(2&t.mode))t.memoizedState=null;else switch(i){case"forwards":for(n=t.child,i=null;null!==n;)null!==(e=n.alternate)&&null===Lo(e)&&(i=n),n=n.sibling;null===(n=i)?(i=t.child,t.child=null):(i=n.sibling,n.sibling=null),Qa(t,!1,i,n,o,t.lastEffect);break;case"backwards":for(n=null,i=t.child,t.child=null;null!==i;){if(null!==(e=i.alternate)&&null===Lo(e)){t.child=i;break}e=i.sibling,i.sibling=n,n=i,i=e}Qa(t,!0,n,null,o,t.lastEffect);break;case"together":Qa(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Ya(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&al(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(a(153));if(null!==t.child){for(n=Sl(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Sl(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Ga(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Za(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return mi(t.type)&&vi(),null;case 3:return Bo(),li(di),li(fi),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||!Ta(t)||(t.effectTag|=4),null;case 5:Fo(t),n=Mo(Oo.current);var o=t.type;if(null!==e&&null!=t.stateNode)Ua(e,t,o,r,n),e.ref!==t.ref&&(t.effectTag|=128);else{if(!r){if(null===t.stateNode)throw Error(a(166));return null}if(e=Mo(_o.current),Ta(t)){r=t.stateNode,o=t.type;var u=t.memoizedProps;switch(r[kn]=t,r[Sn]=u,o){case"iframe":case"object":case"embed":qt("load",r);break;case"video":case"audio":for(e=0;e<Ge.length;e++)qt(Ge[e],r);break;case"source":qt("error",r);break;case"img":case"image":case"link":qt("error",r),qt("load",r);break;case"form":qt("reset",r),qt("submit",r);break;case"details":qt("toggle",r);break;case"input":Ee(r,u),qt("invalid",r),an(n,"onChange");break;case"select":r._wrapperState={wasMultiple:!!u.multiple},qt("invalid",r),an(n,"onChange");break;case"textarea":Me(r,u),qt("invalid",r),an(n,"onChange")}for(var l in nn(o,u),e=null,u)if(u.hasOwnProperty(l)){var c=u[l];"children"===l?"string"==typeof c?r.textContent!==c&&(e=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(e=["children",""+c]):C.hasOwnProperty(l)&&null!=c&&an(n,l)}switch(o){case"input":xe(r),Se(r,u,!0);break;case"textarea":xe(r),Be(r);break;case"select":case"option":break;default:"function"==typeof u.onClick&&(r.onclick=un)}n=e,t.updateQueue=n,null!==n&&(t.effectTag|=4)}else{switch(l=9===n.nodeType?n:n.ownerDocument,e===on&&(e=Ie(o)),e===on?"script"===o?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=l.createElement(o,{is:r.is}):(e=l.createElement(o),"select"===o&&(l=e,r.multiple?l.multiple=!0:r.size&&(l.size=r.size))):e=l.createElementNS(e,o),e[kn]=t,e[Sn]=r,Da(e,t),t.stateNode=e,l=rn(o,r),o){case"iframe":case"object":case"embed":qt("load",e),c=r;break;case"video":case"audio":for(c=0;c<Ge.length;c++)qt(Ge[c],e);c=r;break;case"source":qt("error",e),c=r;break;case"img":case"image":case"link":qt("error",e),qt("load",e),c=r;break;case"form":qt("reset",e),qt("submit",e),c=r;break;case"details":qt("toggle",e),c=r;break;case"input":Ee(e,r),c=we(e,r),qt("invalid",e),an(n,"onChange");break;case"option":c=_e(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},c=i({},r,{value:void 0}),qt("invalid",e),an(n,"onChange");break;case"textarea":Me(e,r),c=Oe(e,r),qt("invalid",e),an(n,"onChange");break;default:c=r}nn(o,c);var s=c;for(u in s)if(s.hasOwnProperty(u)){var f=s[u];"style"===u?en(e,f):"dangerouslySetInnerHTML"===u?null!=(f=f?f.__html:void 0)&&je(e,f):"children"===u?"string"==typeof f?("textarea"!==o||""!==f)&&ze(e,f):"number"==typeof f&&ze(e,""+f):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(C.hasOwnProperty(u)?null!=f&&an(n,u):null!=f&&K(e,u,f,l))}switch(o){case"input":xe(e),Se(e,r,!1);break;case"textarea":xe(e),Be(e);break;case"option":null!=r.value&&e.setAttribute("value",""+ye(r.value));break;case"select":e.multiple=!!r.multiple,null!=(n=r.value)?Pe(e,!!r.multiple,n,!1):null!=r.defaultValue&&Pe(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof c.onClick&&(e.onclick=un)}yn(o,r)&&(t.effectTag|=4)}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)Wa(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(a(166));n=Mo(Oo.current),Mo(_o.current),Ta(t)?(n=t.stateNode,r=t.memoizedProps,n[kn]=t,n.nodeValue!==r&&(t.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[kn]=t,t.stateNode=n)}return null;case 13:return li(Ro),r=t.memoizedState,0!=(64&t.effectTag)?(t.expirationTime=n,t):(n=null!==r,r=!1,null===e?void 0!==t.memoizedProps.fallback&&Ta(t):(r=null!==(o=e.memoizedState),n||null===o||null!==(o=e.child.sibling)&&(null!==(u=t.firstEffect)?(t.firstEffect=o,o.nextEffect=u):(t.firstEffect=t.lastEffect=o,o.nextEffect=null),o.effectTag=8)),n&&!r&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Ro.current)?Pu===wu&&(Pu=Eu):(Pu!==wu&&Pu!==Eu||(Pu=Cu),0!==Iu&&null!==Su&&(Bl(Su,_u),Il(Su,Iu)))),(n||r)&&(t.effectTag|=4),null);case 4:return Bo(),null;case 10:return eo(t),null;case 17:return mi(t.type)&&vi(),null;case 19:if(li(Ro),null===(r=t.memoizedState))return null;if(o=0!=(64&t.effectTag),null===(u=r.rendering)){if(o)Ga(r,!1);else if(Pu!==wu||null!==e&&0!=(64&e.effectTag))for(u=t.child;null!==u;){if(null!==(e=Lo(u))){for(t.effectTag|=64,Ga(r,!1),null!==(o=e.updateQueue)&&(t.updateQueue=o,t.effectTag|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=t.child;null!==r;)u=n,(o=r).effectTag&=2,o.nextEffect=null,o.firstEffect=null,o.lastEffect=null,null===(e=o.alternate)?(o.childExpirationTime=0,o.expirationTime=u,o.child=null,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null):(o.childExpirationTime=e.childExpirationTime,o.expirationTime=e.expirationTime,o.child=e.child,o.memoizedProps=e.memoizedProps,o.memoizedState=e.memoizedState,o.updateQueue=e.updateQueue,u=e.dependencies,o.dependencies=null===u?null:{expirationTime:u.expirationTime,firstContext:u.firstContext,responders:u.responders}),r=r.sibling;return ci(Ro,1&Ro.current|2),t.child}u=u.sibling}}else{if(!o)if(null!==(e=Lo(u))){if(t.effectTag|=64,o=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.effectTag|=4),Ga(r,!0),null===r.tail&&"hidden"===r.tailMode&&!u.alternate)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*zi()-r.renderingStartTime>r.tailExpiration&&1<n&&(t.effectTag|=64,o=!0,Ga(r,!1),t.expirationTime=t.childExpirationTime=n-1);r.isBackwards?(u.sibling=t.child,t.child=u):(null!==(n=r.last)?n.sibling=u:t.child=u,r.last=u)}return null!==r.tail?(0===r.tailExpiration&&(r.tailExpiration=zi()+500),n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=zi(),n.sibling=null,t=Ro.current,ci(Ro,o?1&t|2:1&t),n):null}throw Error(a(156,t.tag))}function Ka(e){switch(e.tag){case 1:mi(e.type)&&vi();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(Bo(),li(di),li(fi),0!=(64&(t=e.effectTag)))throw Error(a(285));return e.effectTag=-4097&t|64,e;case 5:return Fo(e),null;case 13:return li(Ro),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return li(Ro),null;case 4:return Bo(),null;case 10:return eo(e),null;default:return null}}function Xa(e,t){return{value:e,source:t,stack:ge(t)}}Da=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Ua=function(e,t,n,r,o){var a=e.memoizedProps;if(a!==r){var u,l,c=t.stateNode;switch(Mo(_o.current),e=null,n){case"input":a=we(c,a),r=we(c,r),e=[];break;case"option":a=_e(c,a),r=_e(c,r),e=[];break;case"select":a=i({},a,{value:void 0}),r=i({},r,{value:void 0}),e=[];break;case"textarea":a=Oe(c,a),r=Oe(c,r),e=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(c.onclick=un)}for(u in nn(n,r),n=null,a)if(!r.hasOwnProperty(u)&&a.hasOwnProperty(u)&&null!=a[u])if("style"===u)for(l in c=a[u])c.hasOwnProperty(l)&&(n||(n={}),n[l]="");else"dangerouslySetInnerHTML"!==u&&"children"!==u&&"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(C.hasOwnProperty(u)?e||(e=[]):(e=e||[]).push(u,null));for(u in r){var s=r[u];if(c=null!=a?a[u]:void 0,r.hasOwnProperty(u)&&s!==c&&(null!=s||null!=c))if("style"===u)if(c){for(l in c)!c.hasOwnProperty(l)||s&&s.hasOwnProperty(l)||(n||(n={}),n[l]="");for(l in s)s.hasOwnProperty(l)&&c[l]!==s[l]&&(n||(n={}),n[l]=s[l])}else n||(e||(e=[]),e.push(u,n)),n=s;else"dangerouslySetInnerHTML"===u?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(u,s)):"children"===u?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(u,""+s):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&(C.hasOwnProperty(u)?(null!=s&&an(o,u),e||c===s||(e=[])):(e=e||[]).push(u,s))}n&&(e=e||[]).push("style",n),o=e,(t.updateQueue=o)&&(t.effectTag|=4)}},Wa=function(e,t,n,r){n!==r&&(t.effectTag|=4)};var Ja="function"==typeof WeakSet?WeakSet:Set;function eu(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ge(n)),null!==n&&ve(n.type),t=t.value,null!==e&&1===e.tag&&ve(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function tu(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){yl(e,t)}else t.current=null}function nu(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Yi(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(a(163))}function ru(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.destroy;n.destroy=void 0,void 0!==r&&r()}n=n.next}while(n!==t)}}function iu(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function ou(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:return void iu(3,n);case 1:if(e=n.stateNode,4&n.effectTag)if(null===t)e.componentDidMount();else{var r=n.elementType===n.type?t.memoizedProps:Yi(n.type,t.memoizedProps);e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(t=n.updateQueue)&&fo(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}fo(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.effectTag&&yn(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&It(n)))));case 19:case 17:case 20:case 21:return}throw Error(a(163))}function au(e,t,n){switch("function"==typeof wl&&wl(t),t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;Wi(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var i=t;try{n()}catch(e){yl(i,e)}}e=e.next}while(e!==r)}))}break;case 1:tu(t),"function"==typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){yl(e,t)}}(t,n);break;case 5:tu(t);break;case 4:du(e,t,n)}}function uu(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==t&&uu(t)}function lu(e){return 5===e.tag||3===e.tag||4===e.tag}function cu(e){e:{for(var t=e.return;null!==t;){if(lu(t)){var n=t;break e}t=t.return}throw Error(a(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(a(161))}16&n.effectTag&&(ze(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||lu(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}r?su(e,n,t):fu(e,n,t)}function su(e,t,n){var r=e.tag,i=5===r||6===r;if(i)e=i?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=un));else if(4!==r&&null!==(e=e.child))for(su(e,t,n),e=e.sibling;null!==e;)su(e,t,n),e=e.sibling}function fu(e,t,n){var r=e.tag,i=5===r||6===r;if(i)e=i?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(fu(e,t,n),e=e.sibling;null!==e;)fu(e,t,n),e=e.sibling}function du(e,t,n){for(var r,i,o=t,u=!1;;){if(!u){u=o.return;e:for(;;){if(null===u)throw Error(a(160));switch(r=u.stateNode,u.tag){case 5:i=!1;break e;case 3:case 4:r=r.containerInfo,i=!0;break e}u=u.return}u=!0}if(5===o.tag||6===o.tag){e:for(var l=e,c=o,s=n,f=c;;)if(au(l,f,s),null!==f.child&&4!==f.tag)f.child.return=f,f=f.child;else{if(f===c)break e;for(;null===f.sibling;){if(null===f.return||f.return===c)break e;f=f.return}f.sibling.return=f.return,f=f.sibling}i?(l=r,c=o.stateNode,8===l.nodeType?l.parentNode.removeChild(c):l.removeChild(c)):r.removeChild(o.stateNode)}else if(4===o.tag){if(null!==o.child){r=o.stateNode.containerInfo,i=!0,o.child.return=o,o=o.child;continue}}else if(au(e,o,n),null!==o.child){o.child.return=o,o=o.child;continue}if(o===t)break;for(;null===o.sibling;){if(null===o.return||o.return===t)return;4===(o=o.return).tag&&(u=!1)}o.sibling.return=o.return,o=o.sibling}}function pu(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:return void ru(3,t);case 1:return;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,i=null!==e?e.memoizedProps:r;e=t.type;var o=t.updateQueue;if(t.updateQueue=null,null!==o){for(n[Sn]=r,"input"===e&&"radio"===r.type&&null!=r.name&&Ce(n,r),rn(e,i),t=rn(e,r),i=0;i<o.length;i+=2){var u=o[i],l=o[i+1];"style"===u?en(n,l):"dangerouslySetInnerHTML"===u?je(n,l):"children"===u?ze(n,l):K(n,u,l,t)}switch(e){case"input":ke(n,r);break;case"textarea":Ne(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?Pe(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?Pe(n,!!r.multiple,r.defaultValue,!0):Pe(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(a(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((t=t.stateNode).hydrate&&(t.hydrate=!1,It(t.containerInfo)));case 12:return;case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,Ru=zi()),null!==n)e:for(e=n;;){if(5===e.tag)o=e.stateNode,r?"function"==typeof(o=o.style).setProperty?o.setProperty("display","none","important"):o.display="none":(o=e.stateNode,i=null!=(i=e.memoizedProps.style)&&i.hasOwnProperty("display")?i.display:null,o.style.display=Jt("display",i));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(o=e.child.sibling).return=e,e=o;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void hu(t);case 19:return void hu(t);case 17:return}throw Error(a(163))}function hu(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Ja),t.forEach((function(t){var r=xl.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var mu="function"==typeof WeakMap?WeakMap:Map;function vu(e,t,n){(n=uo(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){ju||(ju=!0,zu=r),eu(e,t)},n}function gu(e,t,n){(n=uo(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var i=t.value;n.payload=function(){return eu(e,t),r(i)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Du?Du=new Set([this]):Du.add(this),eu(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var yu,bu=Math.ceil,xu=Z.ReactCurrentDispatcher,Au=Z.ReactCurrentOwner,wu=0,Eu=3,Cu=4,ku=0,Su=null,Tu=null,_u=0,Pu=wu,Ou=null,Mu=1073741823,Nu=1073741823,Bu=null,Iu=0,Fu=!1,Ru=0,Lu=null,ju=!1,zu=null,Du=null,Uu=!1,Wu=null,Vu=90,Hu=null,qu=0,Qu=null,$u=0;function Yu(){return 0!=(48&ku)?1073741821-(zi()/10|0):0!==$u?$u:$u=1073741821-(zi()/10|0)}function Gu(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var r=Di();if(0==(4&t))return 99===r?1073741823:1073741822;if(0!=(16&ku))return _u;if(null!==n)e=$i(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=$i(e,150,100);break;case 97:case 96:e=$i(e,5e3,250);break;case 95:e=2;break;default:throw Error(a(326))}return null!==Su&&e===_u&&--e,e}function Zu(e,t){if(50<qu)throw qu=0,Qu=null,Error(a(185));if(null!==(e=Ku(e,t))){var n=Di();1073741823===t?0!=(8&ku)&&0==(48&ku)?tl(e):(Ju(e),0===ku&&qi()):Ju(e),0==(4&ku)||98!==n&&99!==n||(null===Hu?Hu=new Map([[e,t]]):(void 0===(n=Hu.get(e))||n>t)&&Hu.set(e,t))}}function Ku(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,i=null;if(null===r&&3===e.tag)i=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){i=r.stateNode;break}r=r.return}return null!==i&&(Su===i&&(al(t),Pu===Cu&&Bl(i,_u)),Il(i,t)),i}function Xu(e){var t=e.lastExpiredTime;if(0!==t)return t;if(!Nl(e,t=e.firstPendingTime))return t;var n=e.lastPingedTime;return 2>=(e=n>(e=e.nextKnownPendingLevel)?n:e)&&t!==e?0:e}function Ju(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Hi(tl.bind(null,e));else{var t=Xu(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=Yu();if(r=1073741823===t?99:1===t||2===t?95:0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var i=e.callbackPriority;if(e.callbackExpirationTime===t&&i>=r)return;n!==Ni&&Ei(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?Hi(tl.bind(null,e)):Vi(r,el.bind(null,e),{timeout:10*(1073741821-t)-zi()}),e.callbackNode=t}}}function el(e,t){if($u=0,t)return Fl(e,t=Yu()),Ju(e),null;var n=Xu(e);if(0!==n){if(t=e.callbackNode,0!=(48&ku))throw Error(a(327));if(ml(),e===Su&&n===_u||nl(e,n),null!==Tu){var r=ku;ku|=16;for(var i=il();;)try{ll();break}catch(t){rl(e,t)}if(Ji(),ku=r,xu.current=i,1===Pu)throw t=Ou,nl(e,n),Bl(e,n),Ju(e),t;if(null===Tu)switch(i=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,r=Pu,Su=null,r){case wu:case 1:throw Error(a(345));case 2:Fl(e,2<n?2:n);break;case Eu:if(Bl(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=fl(i)),1073741823===Mu&&10<(i=Ru+500-zi())){if(Fu){var o=e.lastPingedTime;if(0===o||o>=n){e.lastPingedTime=n,nl(e,n);break}}if(0!==(o=Xu(e))&&o!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}e.timeoutHandle=xn(dl.bind(null,e),i);break}dl(e);break;case Cu:if(Bl(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=fl(i)),Fu&&(0===(i=e.lastPingedTime)||i>=n)){e.lastPingedTime=n,nl(e,n);break}if(0!==(i=Xu(e))&&i!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}if(1073741823!==Nu?r=10*(1073741821-Nu)-zi():1073741823===Mu?r=0:(r=10*(1073741821-Mu)-5e3,0>(r=(i=zi())-r)&&(r=0),(n=10*(1073741821-n)-i)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*bu(r/1960))-r)&&(r=n)),10<r){e.timeoutHandle=xn(dl.bind(null,e),r);break}dl(e);break;case 5:if(1073741823!==Mu&&null!==Bu){o=Mu;var u=Bu;if(0>=(r=0|u.busyMinDurationMs)?r=0:(i=0|u.busyDelayMs,r=(o=zi()-(10*(1073741821-o)-(0|u.timeoutMs||5e3)))<=i?0:i+r-o),10<r){Bl(e,n),e.timeoutHandle=xn(dl.bind(null,e),r);break}}dl(e);break;default:throw Error(a(329))}if(Ju(e),e.callbackNode===t)return el.bind(null,e)}}return null}function tl(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,0!=(48&ku))throw Error(a(327));if(ml(),e===Su&&t===_u||nl(e,t),null!==Tu){var n=ku;ku|=16;for(var r=il();;)try{ul();break}catch(t){rl(e,t)}if(Ji(),ku=n,xu.current=r,1===Pu)throw n=Ou,nl(e,t),Bl(e,t),Ju(e),n;if(null!==Tu)throw Error(a(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,Su=null,dl(e),Ju(e)}return null}function nl(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,An(n)),null!==Tu)for(n=Tu.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&vi();break;case 3:Bo(),li(di),li(fi);break;case 5:Fo(r);break;case 4:Bo();break;case 13:case 19:li(Ro);break;case 10:eo(r)}n=n.return}Su=e,Tu=Sl(e.current,null),_u=t,Pu=wu,Ou=null,Nu=Mu=1073741823,Bu=null,Iu=0,Fu=!1}function rl(e,t){for(;;){try{if(Ji(),zo.current=va,qo)for(var n=Wo.memoizedState;null!==n;){var r=n.queue;null!==r&&(r.pending=null),n=n.next}if(Uo=0,Ho=Vo=Wo=null,qo=!1,null===Tu||null===Tu.return)return Pu=1,Ou=t,Tu=null;e:{var i=e,o=Tu.return,a=Tu,u=t;if(t=_u,a.effectTag|=2048,a.firstEffect=a.lastEffect=null,null!==u&&"object"==typeof u&&"function"==typeof u.then){var l=u;if(0==(2&a.mode)){var c=a.alternate;c?(a.updateQueue=c.updateQueue,a.memoizedState=c.memoizedState,a.expirationTime=c.expirationTime):(a.updateQueue=null,a.memoizedState=null)}var s=0!=(1&Ro.current),f=o;do{var d;if(d=13===f.tag){var p=f.memoizedState;if(null!==p)d=null!==p.dehydrated;else{var h=f.memoizedProps;d=void 0!==h.fallback&&(!0!==h.unstable_avoidThisFallback||!s)}}if(d){var m=f.updateQueue;if(null===m){var v=new Set;v.add(l),f.updateQueue=v}else m.add(l);if(0==(2&f.mode)){if(f.effectTag|=64,a.effectTag&=-2981,1===a.tag)if(null===a.alternate)a.tag=17;else{var g=uo(1073741823,null);g.tag=2,lo(a,g)}a.expirationTime=1073741823;break e}u=void 0,a=t;var y=i.pingCache;if(null===y?(y=i.pingCache=new mu,u=new Set,y.set(l,u)):void 0===(u=y.get(l))&&(u=new Set,y.set(l,u)),!u.has(a)){u.add(a);var b=bl.bind(null,i,l,a);l.then(b,b)}f.effectTag|=4096,f.expirationTime=t;break e}f=f.return}while(null!==f);u=Error((ve(a.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ge(a))}5!==Pu&&(Pu=2),u=Xa(u,a),f=o;do{switch(f.tag){case 3:l=u,f.effectTag|=4096,f.expirationTime=t,co(f,vu(f,l,t));break e;case 1:l=u;var x=f.type,A=f.stateNode;if(0==(64&f.effectTag)&&("function"==typeof x.getDerivedStateFromError||null!==A&&"function"==typeof A.componentDidCatch&&(null===Du||!Du.has(A)))){f.effectTag|=4096,f.expirationTime=t,co(f,gu(f,l,t));break e}}f=f.return}while(null!==f)}Tu=sl(Tu)}catch(e){t=e;continue}break}}function il(){var e=xu.current;return xu.current=va,null===e?va:e}function ol(e,t){e<Mu&&2<e&&(Mu=e),null!==t&&e<Nu&&2<e&&(Nu=e,Bu=t)}function al(e){e>Iu&&(Iu=e)}function ul(){for(;null!==Tu;)Tu=cl(Tu)}function ll(){for(;null!==Tu&&!Bi();)Tu=cl(Tu)}function cl(e){var t=yu(e.alternate,e,_u);return e.memoizedProps=e.pendingProps,null===t&&(t=sl(e)),Au.current=null,t}function sl(e){Tu=e;do{var t=Tu.alternate;if(e=Tu.return,0==(2048&Tu.effectTag)){if(t=Za(t,Tu,_u),1===_u||1!==Tu.childExpirationTime){for(var n=0,r=Tu.child;null!==r;){var i=r.expirationTime,o=r.childExpirationTime;i>n&&(n=i),o>n&&(n=o),r=r.sibling}Tu.childExpirationTime=n}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=Tu.firstEffect),null!==Tu.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=Tu.firstEffect),e.lastEffect=Tu.lastEffect),1<Tu.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=Tu:e.firstEffect=Tu,e.lastEffect=Tu))}else{if(null!==(t=Ka(Tu)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=Tu.sibling))return t;Tu=e}while(null!==Tu);return Pu===wu&&(Pu=5),null}function fl(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function dl(e){var t=Di();return Wi(99,pl.bind(null,e,t)),null}function pl(e,t){do{ml()}while(null!==Wu);if(0!=(48&ku))throw Error(a(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(a(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var i=fl(n);if(e.firstPendingTime=i,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===Su&&(Tu=Su=null,_u=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,i=n.firstEffect):i=n:i=n.firstEffect,null!==i){var o=ku;ku|=32,Au.current=null,vn=Ht;var u=dn();if(pn(u)){if("selectionStart"in u)var l={start:u.selectionStart,end:u.selectionEnd};else e:{var c=(l=(l=u.ownerDocument)&&l.defaultView||window).getSelection&&l.getSelection();if(c&&0!==c.rangeCount){l=c.anchorNode;var s=c.anchorOffset,f=c.focusNode;c=c.focusOffset;try{l.nodeType,f.nodeType}catch(e){l=null;break e}var d=0,p=-1,h=-1,m=0,v=0,g=u,y=null;t:for(;;){for(var b;g!==l||0!==s&&3!==g.nodeType||(p=d+s),g!==f||0!==c&&3!==g.nodeType||(h=d+c),3===g.nodeType&&(d+=g.nodeValue.length),null!==(b=g.firstChild);)y=g,g=b;for(;;){if(g===u)break t;if(y===l&&++m===s&&(p=d),y===f&&++v===c&&(h=d),null!==(b=g.nextSibling))break;y=(g=y).parentNode}g=b}l=-1===p||-1===h?null:{start:p,end:h}}else l=null}l=l||{start:0,end:0}}else l=null;gn={activeElementDetached:null,focusedElem:u,selectionRange:l},Ht=!1,Lu=i;do{try{hl()}catch(e){if(null===Lu)throw Error(a(330));yl(Lu,e),Lu=Lu.nextEffect}}while(null!==Lu);Lu=i;do{try{for(u=e,l=t;null!==Lu;){var x=Lu.effectTag;if(16&x&&ze(Lu.stateNode,""),128&x){var A=Lu.alternate;if(null!==A){var w=A.ref;null!==w&&("function"==typeof w?w(null):w.current=null)}}switch(1038&x){case 2:cu(Lu),Lu.effectTag&=-3;break;case 6:cu(Lu),Lu.effectTag&=-3,pu(Lu.alternate,Lu);break;case 1024:Lu.effectTag&=-1025;break;case 1028:Lu.effectTag&=-1025,pu(Lu.alternate,Lu);break;case 4:pu(Lu.alternate,Lu);break;case 8:du(u,s=Lu,l),uu(s)}Lu=Lu.nextEffect}}catch(e){if(null===Lu)throw Error(a(330));yl(Lu,e),Lu=Lu.nextEffect}}while(null!==Lu);if(w=gn,A=dn(),x=w.focusedElem,l=w.selectionRange,A!==x&&x&&x.ownerDocument&&fn(x.ownerDocument.documentElement,x)){null!==l&&pn(x)&&(A=l.start,void 0===(w=l.end)&&(w=A),"selectionStart"in x?(x.selectionStart=A,x.selectionEnd=Math.min(w,x.value.length)):(w=(A=x.ownerDocument||document)&&A.defaultView||window).getSelection&&(w=w.getSelection(),s=x.textContent.length,u=Math.min(l.start,s),l=void 0===l.end?u:Math.min(l.end,s),!w.extend&&u>l&&(s=l,l=u,u=s),s=sn(x,u),f=sn(x,l),s&&f&&(1!==w.rangeCount||w.anchorNode!==s.node||w.anchorOffset!==s.offset||w.focusNode!==f.node||w.focusOffset!==f.offset)&&((A=A.createRange()).setStart(s.node,s.offset),w.removeAllRanges(),u>l?(w.addRange(A),w.extend(f.node,f.offset)):(A.setEnd(f.node,f.offset),w.addRange(A))))),A=[];for(w=x;w=w.parentNode;)1===w.nodeType&&A.push({element:w,left:w.scrollLeft,top:w.scrollTop});for("function"==typeof x.focus&&x.focus(),x=0;x<A.length;x++)(w=A[x]).element.scrollLeft=w.left,w.element.scrollTop=w.top}Ht=!!vn,gn=vn=null,e.current=n,Lu=i;do{try{for(x=e;null!==Lu;){var E=Lu.effectTag;if(36&E&&ou(x,Lu.alternate,Lu),128&E){A=void 0;var C=Lu.ref;if(null!==C){var k=Lu.stateNode;switch(Lu.tag){case 5:A=k;break;default:A=k}"function"==typeof C?C(A):C.current=A}}Lu=Lu.nextEffect}}catch(e){if(null===Lu)throw Error(a(330));yl(Lu,e),Lu=Lu.nextEffect}}while(null!==Lu);Lu=null,Ii(),ku=o}else e.current=n;if(Uu)Uu=!1,Wu=e,Vu=t;else for(Lu=i;null!==Lu;)t=Lu.nextEffect,Lu.nextEffect=null,Lu=t;if(0===(t=e.firstPendingTime)&&(Du=null),1073741823===t?e===Qu?qu++:(qu=0,Qu=e):qu=0,"function"==typeof Al&&Al(n.stateNode,r),Ju(e),ju)throw ju=!1,e=zu,zu=null,e;return 0!=(8&ku)||qi(),null}function hl(){for(;null!==Lu;){var e=Lu.effectTag;0!=(256&e)&&nu(Lu.alternate,Lu),0==(512&e)||Uu||(Uu=!0,Vi(97,(function(){return ml(),null}))),Lu=Lu.nextEffect}}function ml(){if(90!==Vu){var e=97<Vu?97:Vu;return Vu=90,Wi(e,vl)}}function vl(){if(null===Wu)return!1;var e=Wu;if(Wu=null,0!=(48&ku))throw Error(a(331));var t=ku;for(ku|=32,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:ru(5,n),iu(5,n)}}catch(t){if(null===e)throw Error(a(330));yl(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return ku=t,qi(),!0}function gl(e,t,n){lo(e,t=vu(e,t=Xa(n,t),1073741823)),null!==(e=Ku(e,1073741823))&&Ju(e)}function yl(e,t){if(3===e.tag)gl(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){gl(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Du||!Du.has(r))){lo(n,e=gu(n,e=Xa(t,e),1073741823)),null!==(n=Ku(n,1073741823))&&Ju(n);break}}n=n.return}}function bl(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),Su===e&&_u===n?Pu===Cu||Pu===Eu&&1073741823===Mu&&zi()-Ru<500?nl(e,_u):Fu=!0:Nl(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,Ju(e)))}function xl(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(t=Gu(t=Yu(),e,null)),null!==(e=Ku(e,t))&&Ju(e)}yu=function(e,t,n){var r=t.expirationTime;if(null!==e){var i=t.pendingProps;if(e.memoizedProps!==i||di.current)Oa=!0;else{if(r<n){switch(Oa=!1,t.tag){case 3:za(t),_a();break;case 5:if(Io(t),4&t.mode&&1!==n&&i.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:mi(t.type)&&bi(t);break;case 4:No(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value,i=t.type._context,ci(Gi,i._currentValue),i._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Ha(e,t,n):(ci(Ro,1&Ro.current),null!==(t=Ya(e,t,n))?t.sibling:null);ci(Ro,1&Ro.current);break;case 19:if(r=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(r)return $a(e,t,n);t.effectTag|=64}if(null!==(i=t.memoizedState)&&(i.rendering=null,i.tail=null),ci(Ro,Ro.current),!r)return null}return Ya(e,t,n)}Oa=!1}}else Oa=!1;switch(t.expirationTime=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,i=hi(t,fi.current),no(t,n),i=Yo(null,t,r,e,i,n),t.effectTag|=1,"object"==typeof i&&null!==i&&"function"==typeof i.render&&void 0===i.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,mi(r)){var o=!0;bi(t)}else o=!1;t.memoizedState=null!==i.state&&void 0!==i.state?i.state:null,oo(t);var u=r.getDerivedStateFromProps;"function"==typeof u&&mo(t,r,u,e),i.updater=vo,t.stateNode=i,i._reactInternalFiber=t,xo(t,r,e,n),t=ja(null,t,r,!0,o,n)}else t.tag=0,Ma(null,t,i,n),t=t.child;return t;case 16:e:{if(i=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(i),1!==i._status)throw i._result;switch(i=i._result,t.type=i,o=t.tag=function(e){if("function"==typeof e)return kl(e)?1:0;if(null!=e){if((e=e.$$typeof)===le)return 11;if(e===fe)return 14}return 2}(i),e=Yi(i,e),o){case 0:t=Ra(null,t,i,e,n);break e;case 1:t=La(null,t,i,e,n);break e;case 11:t=Na(null,t,i,e,n);break e;case 14:t=Ba(null,t,i,Yi(i.type,e),r,n);break e}throw Error(a(306,i,""))}return t;case 0:return r=t.type,i=t.pendingProps,Ra(e,t,r,i=t.elementType===r?i:Yi(r,i),n);case 1:return r=t.type,i=t.pendingProps,La(e,t,r,i=t.elementType===r?i:Yi(r,i),n);case 3:if(za(t),r=t.updateQueue,null===e||null===r)throw Error(a(282));if(r=t.pendingProps,i=null!==(i=t.memoizedState)?i.element:null,ao(e,t),so(t,r,null,n),(r=t.memoizedState.element)===i)_a(),t=Ya(e,t,n);else{if((i=t.stateNode.hydrate)&&(Aa=wn(t.stateNode.containerInfo.firstChild),xa=t,i=wa=!0),i)for(n=So(t,null,r,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else Ma(e,t,r,n),_a();t=t.child}return t;case 5:return Io(t),null===e&&ka(t),r=t.type,i=t.pendingProps,o=null!==e?e.memoizedProps:null,u=i.children,bn(r,i)?u=null:null!==o&&bn(r,o)&&(t.effectTag|=16),Fa(e,t),4&t.mode&&1!==n&&i.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Ma(e,t,u,n),t=t.child),t;case 6:return null===e&&ka(t),null;case 13:return Ha(e,t,n);case 4:return No(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=ko(t,null,r,n):Ma(e,t,r,n),t.child;case 11:return r=t.type,i=t.pendingProps,Na(e,t,r,i=t.elementType===r?i:Yi(r,i),n);case 7:return Ma(e,t,t.pendingProps,n),t.child;case 8:case 12:return Ma(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,i=t.pendingProps,u=t.memoizedProps,o=i.value;var l=t.type._context;if(ci(Gi,l._currentValue),l._currentValue=o,null!==u)if(l=u.value,0==(o=Lr(l,o)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(l,o):1073741823))){if(u.children===i.children&&!di.current){t=Ya(e,t,n);break e}}else for(null!==(l=t.child)&&(l.return=t);null!==l;){var c=l.dependencies;if(null!==c){u=l.child;for(var s=c.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&o)){1===l.tag&&((s=uo(n,null)).tag=2,lo(l,s)),l.expirationTime<n&&(l.expirationTime=n),null!==(s=l.alternate)&&s.expirationTime<n&&(s.expirationTime=n),to(l.return,n),c.expirationTime<n&&(c.expirationTime=n);break}s=s.next}}else u=10===l.tag&&l.type===t.type?null:l.child;if(null!==u)u.return=l;else for(u=l;null!==u;){if(u===t){u=null;break}if(null!==(l=u.sibling)){l.return=u.return,u=l;break}u=u.return}l=u}Ma(e,t,i.children,n),t=t.child}return t;case 9:return i=t.type,r=(o=t.pendingProps).children,no(t,n),r=r(i=ro(i,o.unstable_observedBits)),t.effectTag|=1,Ma(e,t,r,n),t.child;case 14:return o=Yi(i=t.type,t.pendingProps),Ba(e,t,i,o=Yi(i.type,o),r,n);case 15:return Ia(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,i=t.pendingProps,i=t.elementType===r?i:Yi(r,i),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,mi(r)?(e=!0,bi(t)):e=!1,no(t,n),yo(t,r,i),xo(t,r,i,n),ja(null,t,r,!0,e,n);case 19:return $a(e,t,n)}throw Error(a(156,t.tag))};var Al=null,wl=null;function El(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Cl(e,t,n,r){return new El(e,t,n,r)}function kl(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Sl(e,t){var n=e.alternate;return null===n?((n=Cl(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Tl(e,t,n,r,i,o){var u=2;if(r=e,"function"==typeof e)kl(e)&&(u=1);else if("string"==typeof e)u=5;else e:switch(e){case ne:return _l(n.children,i,o,t);case ue:u=8,i|=7;break;case re:u=8,i|=1;break;case ie:return(e=Cl(12,n,t,8|i)).elementType=ie,e.type=ie,e.expirationTime=o,e;case ce:return(e=Cl(13,n,t,i)).type=ce,e.elementType=ce,e.expirationTime=o,e;case se:return(e=Cl(19,n,t,i)).elementType=se,e.expirationTime=o,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case oe:u=10;break e;case ae:u=9;break e;case le:u=11;break e;case fe:u=14;break e;case de:u=16,r=null;break e;case pe:u=22;break e}throw Error(a(130,null==e?e:typeof e,""))}return(t=Cl(u,n,t,i)).elementType=e,t.type=r,t.expirationTime=o,t}function _l(e,t,n,r){return(e=Cl(7,e,r,t)).expirationTime=n,e}function Pl(e,t,n){return(e=Cl(6,e,null,t)).expirationTime=n,e}function Ol(e,t,n){return(t=Cl(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Ml(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Nl(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function Bl(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function Il(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function Fl(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function Rl(e,t,n,r){var i=t.current,o=Yu(),u=po.suspense;o=Gu(o,i,u);e:if(n){t:{if(Xe(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(a(170));var l=n;do{switch(l.tag){case 3:l=l.stateNode.context;break t;case 1:if(mi(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break t}}l=l.return}while(null!==l);throw Error(a(171))}if(1===n.tag){var c=n.type;if(mi(c)){n=yi(n,c,l);break e}}n=l}else n=si;return null===t.context?t.context=n:t.pendingContext=n,(t=uo(o,u)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),lo(i,t),Zu(i,o),o}function Ll(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function jl(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function zl(e,t){jl(e,t),(e=e.alternate)&&jl(e,t)}function Dl(e,t,n){var r=new Ml(e,t,n=null!=n&&!0===n.hydrate),i=Cl(3,null,null,2===t?7:1===t?3:0);r.current=i,i.stateNode=r,oo(i),e[Tn]=r.current,n&&0!==t&&function(e,t){var n=Ke(t);Ct.forEach((function(e){dt(e,t,n)})),kt.forEach((function(e){dt(e,t,n)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function Ul(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Wl(e,t,n,r,i){var o=n._reactRootContainer;if(o){var a=o._internalRoot;if("function"==typeof i){var u=i;i=function(){var e=Ll(a);u.call(e)}}Rl(t,a,e,i)}else{if(o=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Dl(e,0,t?{hydrate:!0}:void 0)}(n,r),a=o._internalRoot,"function"==typeof i){var l=i;i=function(){var e=Ll(a);l.call(e)}}!function(e,t){var n=ku;ku&=-2,ku|=8;try{e(t)}finally{0===(ku=n)&&qi()}}((function(){Rl(t,a,e,i)}))}return Ll(a)}Dl.prototype.render=function(e){Rl(e,this._internalRoot,null,null)},Dl.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Rl(null,e,null,(function(){t[Tn]=null}))},pt=function(e){if(13===e.tag){var t=$i(Yu(),150,100);Zu(e,t),zl(e,t)}},ht=function(e){13===e.tag&&(Zu(e,3),zl(e,3))},mt=function(e){if(13===e.tag){var t=Yu();Zu(e,t=Gu(t,e,null)),zl(e,t)}},_=function(e,t,n){switch(t){case"input":if(ke(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var i=Mn(r);if(!i)throw Error(a(90));Ae(r),ke(r,i)}}}break;case"textarea":Ne(e,n);break;case"select":null!=(t=n.value)&&Pe(e,!!n.multiple,t,!1)}},I=function(e,t){var n=ku;ku|=1;try{return e(t)}finally{0===(ku=n)&&qi()}},F=function(e,t,n,r,i){var o=ku;ku|=4;try{return Wi(98,e.bind(null,t,n,r,i))}finally{0===(ku=o)&&qi()}},R=function(){0==(49&ku)&&(function(){if(null!==Hu){var e=Hu;Hu=null,e.forEach((function(e,t){Fl(t,e),Ju(t)})),qi()}}(),ml())},L=function(e,t){var n=ku;ku|=2;try{return e(t)}finally{0===(ku=n)&&qi()}};!function(e){var t=e.findFiberByHostInstance;!function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Al=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},wl=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}}(i({},e,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Z.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=function(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Xe(e)))throw Error(a(188));return t!==e?null:e}for(var n=e,r=t;;){var i=n.return;if(null===i)break;var o=i.alternate;if(null===o){if(null!==(r=i.return)){n=r;continue}break}if(i.child===o.child){for(o=i.child;o;){if(o===n)return et(i),e;if(o===r)return et(i),t;o=o.sibling}throw Error(a(188))}if(n.return!==r.return)n=i,r=o;else{for(var u=!1,l=i.child;l;){if(l===n){u=!0,n=i,r=o;break}if(l===r){u=!0,r=i,n=o;break}l=l.sibling}if(!u){for(l=o.child;l;){if(l===n){u=!0,n=o,r=i;break}if(l===r){u=!0,r=o,n=i;break}l=l.sibling}if(!u)throw Error(a(189))}}if(n.alternate!==r)throw Error(a(190))}if(3!==n.tag)throw Error(a(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))}({findFiberByHostInstance:_n,bundleType:0,version:"16.14.0",rendererPackageName:"react-dom"}),t.render=function(e,t,n){if(!Ul(t))throw Error(a(200));return Wl(null,e,t,!1,n)}},3935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(4448)},2408:(e,t,n)=>{"use strict";var r=n(7418),i="function"==typeof Symbol&&Symbol.for,o=i?Symbol.for("react.element"):60103,a=i?Symbol.for("react.portal"):60106,u=i?Symbol.for("react.fragment"):60107,l=i?Symbol.for("react.strict_mode"):60108,c=i?Symbol.for("react.profiler"):60114,s=i?Symbol.for("react.provider"):60109,f=i?Symbol.for("react.context"):60110,d=i?Symbol.for("react.forward_ref"):60112,p=i?Symbol.for("react.suspense"):60113,h=i?Symbol.for("react.memo"):60115,m=i?Symbol.for("react.lazy"):60116,v="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b={};function x(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||y}function A(){}function w(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||y}x.prototype.isReactComponent={},x.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(g(85));this.updater.enqueueSetState(this,e,t,"setState")},x.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},A.prototype=x.prototype;var E=w.prototype=new A;E.constructor=w,r(E,x.prototype),E.isPureReactComponent=!0;var C={current:null},k=Object.prototype.hasOwnProperty,S={key:!0,ref:!0,__self:!0,__source:!0};function T(e,t,n){var r,i={},a=null,u=null;if(null!=t)for(r in void 0!==t.ref&&(u=t.ref),void 0!==t.key&&(a=""+t.key),t)k.call(t,r)&&!S.hasOwnProperty(r)&&(i[r]=t[r]);var l=arguments.length-2;if(1===l)i.children=n;else if(1<l){for(var c=Array(l),s=0;s<l;s++)c[s]=arguments[s+2];i.children=c}if(e&&e.defaultProps)for(r in l=e.defaultProps)void 0===i[r]&&(i[r]=l[r]);return{$$typeof:o,type:e,key:a,ref:u,props:i,_owner:C.current}}function _(e){return"object"==typeof e&&null!==e&&e.$$typeof===o}var P=/\/+/g,O=[];function M(e,t,n,r){if(O.length){var i=O.pop();return i.result=e,i.keyPrefix=t,i.func=n,i.context=r,i.count=0,i}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function N(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>O.length&&O.push(e)}function B(e,t,n,r){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var u=!1;if(null===e)u=!0;else switch(i){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case o:case a:u=!0}}if(u)return n(r,e,""===t?"."+F(e,0):t),1;if(u=0,t=""===t?".":t+":",Array.isArray(e))for(var l=0;l<e.length;l++){var c=t+F(i=e[l],l);u+=B(i,c,n,r)}else if("function"==typeof(c=null===e||"object"!=typeof e?null:"function"==typeof(c=v&&e[v]||e["@@iterator"])?c:null))for(e=c.call(e),l=0;!(i=e.next()).done;)u+=B(i=i.value,c=t+F(i,l++),n,r);else if("object"===i)throw n=""+e,Error(g(31,"[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n,""));return u}function I(e,t,n){return null==e?0:B(e,"",t,n)}function F(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function R(e,t){e.func.call(e.context,t,e.count++)}function L(e,t,n){var r=e.result,i=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?j(e,r,n,(function(e){return e})):null!=e&&(_(e)&&(e=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,i+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(P,"$&/")+"/")+n)),r.push(e))}function j(e,t,n,r,i){var o="";null!=n&&(o=(""+n).replace(P,"$&/")+"/"),I(e,L,t=M(t,o,r,i)),N(t)}var z={current:null};function D(){var e=z.current;if(null===e)throw Error(g(321));return e}var U={ReactCurrentDispatcher:z,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:C,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:function(e,t,n){if(null==e)return e;var r=[];return j(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;I(e,R,t=M(null,null,t,n)),N(t)},count:function(e){return I(e,(function(){return null}),null)},toArray:function(e){var t=[];return j(e,t,null,(function(e){return e})),t},only:function(e){if(!_(e))throw Error(g(143));return e}},t.Component=x,t.Fragment=u,t.Profiler=c,t.PureComponent=w,t.StrictMode=l,t.Suspense=p,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=U,t.cloneElement=function(e,t,n){if(null==e)throw Error(g(267,e));var i=r({},e.props),a=e.key,u=e.ref,l=e._owner;if(null!=t){if(void 0!==t.ref&&(u=t.ref,l=C.current),void 0!==t.key&&(a=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)k.call(t,s)&&!S.hasOwnProperty(s)&&(i[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)i.children=n;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];i.children=c}return{$$typeof:o,type:e.type,key:a,ref:u,props:i,_owner:l}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},t.createElement=T,t.createFactory=function(e){var t=T.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:d,render:e}},t.isValidElement=_,t.lazy=function(e){return{$$typeof:m,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return D().useCallback(e,t)},t.useContext=function(e,t){return D().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return D().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return D().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return D().useLayoutEffect(e,t)},t.useMemo=function(e,t){return D().useMemo(e,t)},t.useReducer=function(e,t,n){return D().useReducer(e,t,n)},t.useRef=function(e){return D().useRef(e)},t.useState=function(e){return D().useState(e)},t.version="16.14.0"},7294:(e,t,n)=>{"use strict";e.exports=n(2408)},5666:e=>{var t=function(e){"use strict";var t,n=Object.prototype,r=n.hasOwnProperty,i="function"==typeof Symbol?Symbol:{},o=i.iterator||"@@iterator",a=i.asyncIterator||"@@asyncIterator",u=i.toStringTag||"@@toStringTag";function l(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{l({},"")}catch(e){l=function(e,t,n){return e[t]=n}}function c(e,t,n,r){var i=t&&t.prototype instanceof v?t:v,o=Object.create(i.prototype),a=new _(r||[]);return o._invoke=function(e,t,n){var r=f;return function(i,o){if(r===p)throw new Error("Generator is already running");if(r===h){if("throw"===i)throw o;return O()}for(n.method=i,n.arg=o;;){var a=n.delegate;if(a){var u=k(a,n);if(u){if(u===m)continue;return u}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(r===f)throw r=h,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r=p;var l=s(e,t,n);if("normal"===l.type){if(r=n.done?h:d,l.arg===m)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(r=h,n.method="throw",n.arg=l.arg)}}}(e,n,a),o}function s(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=c;var f="suspendedStart",d="suspendedYield",p="executing",h="completed",m={};function v(){}function g(){}function y(){}var b={};b[o]=function(){return this};var x=Object.getPrototypeOf,A=x&&x(x(P([])));A&&A!==n&&r.call(A,o)&&(b=A);var w=y.prototype=v.prototype=Object.create(b);function E(e){["next","throw","return"].forEach((function(t){l(e,t,(function(e){return this._invoke(t,e)}))}))}function C(e,t){function n(i,o,a,u){var l=s(e[i],e,o);if("throw"!==l.type){var c=l.arg,f=c.value;return f&&"object"==typeof f&&r.call(f,"__await")?t.resolve(f.__await).then((function(e){n("next",e,a,u)}),(function(e){n("throw",e,a,u)})):t.resolve(f).then((function(e){c.value=e,a(c)}),(function(e){return n("throw",e,a,u)}))}u(l.arg)}var i;this._invoke=function(e,r){function o(){return new t((function(t,i){n(e,r,t,i)}))}return i=i?i.then(o,o):o()}}function k(e,n){var r=e.iterator[n.method];if(r===t){if(n.delegate=null,"throw"===n.method){if(e.iterator.return&&(n.method="return",n.arg=t,k(e,n),"throw"===n.method))return m;n.method="throw",n.arg=new TypeError("The iterator does not provide a 'throw' method")}return m}var i=s(r,e.iterator,n.arg);if("throw"===i.type)return n.method="throw",n.arg=i.arg,n.delegate=null,m;var o=i.arg;return o?o.done?(n[e.resultName]=o.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=t),n.delegate=null,m):o:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,m)}function S(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function T(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function _(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(S,this),this.reset(!0)}function P(e){if(e){var n=e[o];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var i=-1,a=function n(){for(;++i<e.length;)if(r.call(e,i))return n.value=e[i],n.done=!1,n;return n.value=t,n.done=!0,n};return a.next=a}}return{next:O}}function O(){return{value:t,done:!0}}return g.prototype=w.constructor=y,y.constructor=g,g.displayName=l(y,u,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===g||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,y):(e.__proto__=y,l(e,u,"GeneratorFunction")),e.prototype=Object.create(w),e},e.awrap=function(e){return{__await:e}},E(C.prototype),C.prototype[a]=function(){return this},e.AsyncIterator=C,e.async=function(t,n,r,i,o){void 0===o&&(o=Promise);var a=new C(c(t,n,r,i),o);return e.isGeneratorFunction(n)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},E(w),l(w,u,"Generator"),w[o]=function(){return this},w.toString=function(){return"[object Generator]"},e.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},e.values=P,_.prototype={constructor:_,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(T),!e)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function i(r,i){return u.type="throw",u.arg=e,n.next=r,i&&(n.method="next",n.arg=t),!!i}for(var o=this.tryEntries.length-1;o>=0;--o){var a=this.tryEntries[o],u=a.completion;if("root"===a.tryLoc)return i("end");if(a.tryLoc<=this.prev){var l=r.call(a,"catchLoc"),c=r.call(a,"finallyLoc");if(l&&c){if(this.prev<a.catchLoc)return i(a.catchLoc,!0);if(this.prev<a.finallyLoc)return i(a.finallyLoc)}else if(l){if(this.prev<a.catchLoc)return i(a.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return i(a.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var i=this.tryEntries[n];if(i.tryLoc<=this.prev&&r.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var o=i;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=t&&t<=o.finallyLoc&&(o=null);var a=o?o.completion:{};return a.type=e,a.arg=t,o?(this.method="next",this.next=o.finallyLoc,m):this.complete(a)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),m},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),T(n),m}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var i=r.arg;T(n)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,r){return this.delegate={iterator:P(e),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=t),m}},e}(e.exports);try{regeneratorRuntime=t}catch(e){Function("r","regeneratorRuntime = r")(t)}},53:(e,t)=>{"use strict";var n,r,i,o,a;if("undefined"==typeof window||"function"!=typeof MessageChannel){var u=null,l=null,c=function(){if(null!==u)try{var e=t.unstable_now();u(!0,e),u=null}catch(e){throw setTimeout(c,0),e}},s=Date.now();t.unstable_now=function(){return Date.now()-s},n=function(e){null!==u?setTimeout(n,0,e):(u=e,setTimeout(c,0))},r=function(e,t){l=setTimeout(e,t)},i=function(){clearTimeout(l)},o=function(){return!1},a=t.unstable_forceFrameRate=function(){}}else{var f=window.performance,d=window.Date,p=window.setTimeout,h=window.clearTimeout;if("undefined"!=typeof console){var m=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof m&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof f&&"function"==typeof f.now)t.unstable_now=function(){return f.now()};else{var v=d.now();t.unstable_now=function(){return d.now()-v}}var g=!1,y=null,b=-1,x=5,A=0;o=function(){return t.unstable_now()>=A},a=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):x=0<e?Math.floor(1e3/e):5};var w=new MessageChannel,E=w.port2;w.port1.onmessage=function(){if(null!==y){var e=t.unstable_now();A=e+x;try{y(!0,e)?E.postMessage(null):(g=!1,y=null)}catch(e){throw E.postMessage(null),e}}else g=!1},n=function(e){y=e,g||(g=!0,E.postMessage(null))},r=function(e,n){b=p((function(){e(t.unstable_now())}),n)},i=function(){h(b),b=-1}}function C(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,i=e[r];if(!(void 0!==i&&0<T(i,t)))break e;e[r]=t,e[n]=i,n=r}}function k(e){return void 0===(e=e[0])?null:e}function S(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,i=e.length;r<i;){var o=2*(r+1)-1,a=e[o],u=o+1,l=e[u];if(void 0!==a&&0>T(a,n))void 0!==l&&0>T(l,a)?(e[r]=l,e[u]=n,r=u):(e[r]=a,e[o]=n,r=o);else{if(!(void 0!==l&&0>T(l,n)))break e;e[r]=l,e[u]=n,r=u}}}return t}return null}function T(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var _=[],P=[],O=1,M=null,N=3,B=!1,I=!1,F=!1;function R(e){for(var t=k(P);null!==t;){if(null===t.callback)S(P);else{if(!(t.startTime<=e))break;S(P),t.sortIndex=t.expirationTime,C(_,t)}t=k(P)}}function L(e){if(F=!1,R(e),!I)if(null!==k(_))I=!0,n(j);else{var t=k(P);null!==t&&r(L,t.startTime-e)}}function j(e,n){I=!1,F&&(F=!1,i()),B=!0;var a=N;try{for(R(n),M=k(_);null!==M&&(!(M.expirationTime>n)||e&&!o());){var u=M.callback;if(null!==u){M.callback=null,N=M.priorityLevel;var l=u(M.expirationTime<=n);n=t.unstable_now(),"function"==typeof l?M.callback=l:M===k(_)&&S(_),R(n)}else S(_);M=k(_)}if(null!==M)var c=!0;else{var s=k(P);null!==s&&r(L,s.startTime-n),c=!1}return c}finally{M=null,N=a,B=!1}}function z(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var D=a;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){I||B||(I=!0,n(j))},t.unstable_getCurrentPriorityLevel=function(){return N},t.unstable_getFirstCallbackNode=function(){return k(_)},t.unstable_next=function(e){switch(N){case 1:case 2:case 3:var t=3;break;default:t=N}var n=N;N=t;try{return e()}finally{N=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=D,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=N;N=e;try{return t()}finally{N=n}},t.unstable_scheduleCallback=function(e,o,a){var u=t.unstable_now();if("object"==typeof a&&null!==a){var l=a.delay;l="number"==typeof l&&0<l?u+l:u,a="number"==typeof a.timeout?a.timeout:z(e)}else a=z(e),l=u;return e={id:O++,callback:o,priorityLevel:e,startTime:l,expirationTime:a=l+a,sortIndex:-1},l>u?(e.sortIndex=l,C(P,e),null===k(_)&&e===k(P)&&(F?i():F=!0,r(L,l-u))):(e.sortIndex=a,C(_,e),I||B||(I=!0,n(j))),e},t.unstable_shouldYield=function(){var e=t.unstable_now();R(e);var n=k(_);return n!==M&&null!==M&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<M.expirationTime||o()},t.unstable_wrapCallback=function(e){var t=N;return function(){var n=N;N=t;try{return e.apply(this,arguments)}finally{N=n}}}},3840:(e,t,n)=>{"use strict";e.exports=n(53)},3379:(e,t,n)=>{"use strict";var r,i=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),o=[];function a(e){for(var t=-1,n=0;n<o.length;n++)if(o[n].identifier===e){t=n;break}return t}function u(e,t){for(var n={},r=[],i=0;i<e.length;i++){var u=e[i],l=t.base?u[0]+t.base:u[0],c=n[l]||0,s="".concat(l," ").concat(c);n[l]=c+1;var f=a(s),d={css:u[1],media:u[2],sourceMap:u[3]};-1!==f?(o[f].references++,o[f].updater(d)):o.push({identifier:s,updater:m(d,t),references:1}),r.push(s)}return r}function l(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var o=n.nc;o&&(r.nonce=o)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var a=i(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}return t}var c,s=(c=[],function(e,t){return c[e]=t,c.filter(Boolean).join("\n")});function f(e,t,n,r){var i=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=s(t,i);else{var o=document.createTextNode(i),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(o,a[t]):e.appendChild(o)}}function d(e,t,n){var r=n.css,i=n.media,o=n.sourceMap;if(i?e.setAttribute("media",i):e.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var p=null,h=0;function m(e,t){var n,r,i;if(t.singleton){var o=h++;n=p||(p=l(t)),r=f.bind(null,n,o,!1),i=f.bind(null,n,o,!0)}else n=l(t),r=d.bind(null,n,t),i=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else i()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var n=u(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var i=a(n[r]);o[i].references--}for(var l=u(e,t),c=0;c<n.length;c++){var s=a(n[c]);0===o[s].references&&(o[s].updater(),o.splice(s,1))}n=l}}}}},t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={id:r,exports:{}};return e[r](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),(()=>{"use strict";n(1983);var e,t=(e=n(115))&&e.__esModule?e:{default:e};t.default._babelPolyfill&&"undefined"!=typeof console&&console.warn&&console.warn("@babel/polyfill is loaded more than once on this page. This is probably not desirable/intended and may have consequences if different versions of the polyfills are applied sequentially. If you do need to load the polyfill more than once, use @babel/polyfill/noConflict instead to bypass the warning."),t.default._babelPolyfill=!0})(),(()=>{"use strict";var e=n(7294),t=n(3935),r=n(4575),i=n.n(r),o=n(3913),a=n.n(o),u=n(1506),l=n.n(u),c=n(2205),s=n.n(c),f=n(8585),d=n.n(f),p=n(9754),h=n.n(p),m=n(9669),v=n.n(m),g=n(5697),y=n.n(g);var b=function(t){s()(u,t);var n,r,o=(n=u,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=h()(n);if(r){var i=h()(this).constructor;e=Reflect.construct(t,arguments,i)}else e=t.apply(this,arguments);return d()(this,e)});function u(e){var t;return i()(this,u),(t=o.call(this,e)).thumbClick=t.thumbClick.bind(l()(t)),t}return a()(u,[{key:"thumbClick",value:function(e){e.preventDefault(),(0,this.props.thumbs)(e.target.name)}},{key:"render",value:function(){var t=this,n=this.props,r=n.images,i=n.thumbClass;if("image-modalThumb"===i[0]){for(var o=[],a=[],u=0;u<r.length;u+=1)(u+1)%3==0?(a.push(r[u]),o.push(a),a=[]):a.push(r[u]);return r.length%3==0?e.createElement("div",{className:"image-modalCol2"},e.createElement("div",{className:"image-modalThumbBox"},o.map((function(n,r){return e.createElement("div",{key:n[0]+Math.random()*Math.floor(100)},e.createElement("div",{id:"thumbCouple",className:"image-thumbCouple"},e.createElement("div",{name:3*r,role:"button",tabIndex:0,onClick:t.thumbClick,onKeyUp:t.thumbClick},e.createElement("img",{name:3*r,className:i[0],alt:"noimage",src:n[0]})),e.createElement("div",{name:3*r+1,role:"button",tabIndex:0,onClick:t.thumbClick,onKeyUp:t.thumbClick},e.createElement("img",{name:3*r+1,className:i[1],alt:"noimage",src:n[1]}))),e.createElement("div",{name:3*r+2,role:"button",tabIndex:0,onClick:t.thumbClick,onKeyUp:t.thumbClick},e.createElement("img",{name:3*r+2,id:"thumbMain",className:i[2],alt:"noimage",src:n[2]})))})))):e.createElement("div",{className:"image-modalCol2"},e.createElement("div",{className:"image-modalThumbBox"},o.map((function(n,r){return e.createElement("div",{key:n[0]+Math.random()*Math.floor(100)},e.createElement("div",{className:"image-thumbCouple"},e.createElement("div",{name:3*r,role:"button",tabIndex:0,onClick:t.thumbClick,onKeyUp:t.thumbClick},e.createElement("img",{name:3*r,className:i[0],alt:"noimage",src:n[0]})),e.createElement("div",{name:3*r+1,role:"button",tabIndex:0,onClick:t.thumbClick,onKeyUp:t.thumbClick},e.createElement("img",{name:3*r+1,className:i[1],alt:"noimage",src:n[1]}))),e.createElement("div",{name:3*r+2,role:"button",tabIndex:0,onClick:t.thumbClick,onKeyUp:t.thumbClick},e.createElement("img",{name:3*r+2,className:i[2],alt:"noimage",src:n[2]})))})),e.createElement("div",{className:"image-thumbCouple"},a.map((function(n,r){return e.createElement("div",{name:r+o.length,role:"button",tabIndex:0,onClick:t.thumbClick,onKeyUp:t.thumbClick,key:n+Math.random()*Math.floor(100)},e.createElement("img",{name:r+o.length,className:i[0],alt:"noimage",src:n}))})))))}return e.createElement("div",{className:"image-col1"},r.map((function(n,r){return e.createElement("div",{name:r,role:"button",tabIndex:0,onClick:t.thumbClick,onKeyUp:t.thumbClick,key:n+Math.random()*Math.floor(100)},e.createElement("img",{name:r,className:i[r],alt:"noimage",src:n}))})))}}]),u}(e.Component);b.propTypes={images:y().arrayOf(y().string).isRequired,thumbClass:y().arrayOf(y().string).isRequired,thumbs:y().func.isRequired};const x=b;var A=function(t){s()(u,t);var n,r,o=(n=u,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=h()(n);if(r){var i=h()(this).constructor;e=Reflect.construct(t,arguments,i)}else e=t.apply(this,arguments);return d()(this,e)});function u(e){var t;return i()(this,u),(t=o.call(this,e)).state={showZoomModal:!1},t.thumbClick=t.thumbClick.bind(l()(t)),t.leftClick=t.leftClick.bind(l()(t)),t.rightClick=t.rightClick.bind(l()(t)),t.zoom=t.zoom.bind(l()(t)),t}return a()(u,[{key:"componentDidMount",value:function(){var e,t=this;e=-1!==(navigator.userAgent.indexOf("Opera")||navigator.userAgent.indexOf("OPR"))?"-o-transform:":-1!==navigator.userAgent.indexOf("Chrome")?"transform:":-1!==navigator.userAgent.indexOf("Safari")?"-webkit-transform:":-1!==navigator.userAgent.indexOf("Firefox")?"-moz-transform:":-1!==navigator.userAgent.indexOf("MSIE")||1==!!document.documentMode?"-ms-transform:":"transform:",document.body.addEventListener("mousemove",(function(n){void 0!==document.body.getElementsByClassName("image-modalZoomMain")[0]&&(document.body.getElementsByClassName("image-modalZoomMain")[0].setAttribute("style","".concat(e," translate(").concat(500-n.pageX,"px, ").concat(500-n.pageY,"px) scale(2);")),null===document.getElementsByClassName("image-modalZoomBox")[0].querySelector(":hover")&&t.setState({showZoomModal:!1}))}))}},{key:"onClose",value:function(e){this.setState({showZoomModal:!1});var t=this.props.onClose;t&&t(e)}},{key:"thumbClick",value:function(e){(0,this.props.modalThumbs)(e)}},{key:"leftClick",value:function(){(0,this.props.left)()}},{key:"rightClick",value:function(){(0,this.props.right)()}},{key:"zoom",value:function(){var e=this.state.showZoomModal;this.setState({showZoomModal:!e})}},{key:"render",value:function(){var t=this,n=this.state.showZoomModal,r=this.props,i=r.showModal,o=r.images,a=r.main,u=r.thumbClass;return i?n?e.createElement("div",{className:"image-backGround"},e.createElement("div",{className:"image-modalHeader"},e.createElement("button",{onClick:function(e){return t.onClose(e)},className:"image-modalClose",type:"button"},e.createElement("svg",{viewBox:"0 0 24 24"},e.createElement("path",{d:"M13.414,12l6.293-6.293a1,1,0,0,0-1.414-1.414L12,10.586,5.707,4.293A1,1,0,0,0,4.293,5.707L10.586,12,4.293,18.293a1,1,0,1,0,1.414,1.414L12,13.414l6.293,6.293a1,1,0,0,0,1.414-1.414Z"})))),e.createElement("div",{className:"image-modalGrid"},e.createElement("span",{onClick:this.zoom,className:"image-modalZoomBox",name:"main",role:"button",tabIndex:0,onKeyUp:this.zoom},e.createElement("img",{className:"image-modalZoomMain",alt:"noimage",src:o[a]})),e.createElement(x,{thumbClass:u,images:o,thumbs:this.thumbClick}))):e.createElement("div",{className:"image-backGround"},e.createElement("div",{className:"image-modalHeader"},e.createElement("button",{onClick:function(e){return t.onClose(e)},className:"image-modalClose",type:"button"},e.createElement("svg",{viewBox:"0 0 24 24"},e.createElement("path",{d:"M13.414,12l6.293-6.293a1,1,0,0,0-1.414-1.414L12,10.586,5.707,4.293A1,1,0,0,0,4.293,5.707L10.586,12,4.293,18.293a1,1,0,1,0,1.414,1.414L12,13.414l6.293,6.293a1,1,0,0,0,1.414-1.414Z"})))),e.createElement("div",{className:"image-modalGrid"},e.createElement("div",{className:"image-modelCarousel"},e.createElement("button",{onClick:this.leftClick,className:"image-modalLeft",type:"button"},e.createElement("svg",{viewBox:"0 0 24 24"},e.createElement("path",{d:"M16,21a0.994,0.994,0,0,1-.664-0.253L5.5,12l9.841-8.747a1,1,0,0,1,1.328,1.494L8.5,12l8.159,7.253A1,1,0,0,1,16,21Z"}))),e.createElement("span",{onClick:this.zoom,name:"main",role:"button",tabIndex:0,onKeyUp:this.zoom},e.createElement("img",{className:"image-modalMain",alt:"noimage",src:o[a]})),e.createElement("div",{className:"image-modalCol3"},e.createElement("button",{onClick:this.rightClick,className:"image-modalRight",type:"button"},e.createElement("svg",{viewBox:"0 0 24 24"},e.createElement("path",{d:"M8,21a1,1,0,0,1-.664-1.747L15.5,12,7.336,4.747A1,1,0,0,1,8.664,3.253L18.5,12,8.664,20.747A0.994,0.994,0,0,1,8,21Z"}))))),e.createElement(x,{thumbClass:u,images:o,thumbs:this.thumbClick}))):null}}]),u}(e.Component);A.propTypes={images:y().arrayOf(y().string).isRequired,thumbClass:y().arrayOf(y().string).isRequired,showModal:y().bool.isRequired,onClose:y().func.isRequired,left:y().func.isRequired,modalThumbs:y().func.isRequired,right:y().func.isRequired,main:y().number.isRequired};const w=A;const E=function(t){s()(u,t);var n,r,o=(n=u,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=h()(n);if(r){var i=h()(this).constructor;e=Reflect.construct(t,arguments,i)}else e=t.apply(this,arguments);return d()(this,e)});function u(e){var t;return i()(this,u),(t=o.call(this,e)).state={id:0,images:[],thumbClass:[],modalThumbClass:[],main:0,modalMain:0,favorite:!1,showModal:!1},t.getItems=t.getItems.bind(l()(t)),t.thumbClick=t.thumbClick.bind(l()(t)),t.leftClick=t.leftClick.bind(l()(t)),t.rightClick=t.rightClick.bind(l()(t)),t.leftModalClick=t.leftModalClick.bind(l()(t)),t.rightModalClick=t.rightModalClick.bind(l()(t)),t.modalThumbs=t.modalThumbs.bind(l()(t)),t.mainClick=t.mainClick.bind(l()(t)),t.changeFav=t.changeFav.bind(l()(t)),t}return a()(u,[{key:"componentDidMount",value:function(){this.getItems()}},{key:"getItems",value:function(e){var t=this,n=this.state,r=(n.id,n.main),i=Math.floor(Math.random()*Math.floor(1e7));v().get("/api/items/".concat(i)).then((function(e){for(var n=e.data,i=[],o=[],a=0;a<n.images.length;a+=1)a===r?i.push("image-thumbMain"):i.push("image-thumb"),(a+1)%3==0?o.push("image-modalThumbMain"):o.push("image-modalThumb");t.setState({id:n._id,images:n.images,favorite:n.favorite,thumbClass:i,modalThumbClass:o})}))}},{key:"thumbClick",value:function(e){document.getElementById("main")&&(setTimeout((function(){return document.getElementById("main").setAttribute("class","image-main")}),500),document.getElementById("main").setAttribute("class","image-main image-fadeIn"));var t=this.state.thumbClass;t[t.indexOf("image-thumbMain")]="image-thumb",t[e]="image-thumbMain",this.setState({main:Number(e),thumbClass:t})}},{key:"leftClick",value:function(){document.getElementById("main")&&(setTimeout((function(){return document.getElementById("main").setAttribute("class","image-main")}),500),document.getElementById("main").setAttribute("class","image-main image-fadeIn"));var e=this.state,t=e.images,n=e.main,r=e.thumbClass;r.push(r.shift());var i=t.length;0===n?this.setState({main:i-1}):this.setState({main:n-1})}},{key:"rightClick",value:function(){document.getElementById("main")&&(setTimeout((function(){return document.getElementById("main").setAttribute("class","image-main")}),500),document.getElementById("main").setAttribute("class","image-main image-fadeIn"));var e=this.state,t=e.images,n=e.main,r=e.thumbClass;r.unshift(r.pop()),n===t.length-1?this.setState({main:0}):this.setState({main:n+1})}},{key:"leftModalClick",value:function(){var e=this.state,t=e.modalMain,n=e.images.length;0===t?this.setState({modalMain:n-1}):this.setState({modalMain:t-1})}},{key:"rightModalClick",value:function(){var e=this.state,t=e.modalMain;t===e.images.length-1?this.setState({modalMain:0}):this.setState({modalMain:t+1})}},{key:"modalThumbs",value:function(e){this.setState({modalMain:Number(e)})}},{key:"mainClick",value:function(e){e.preventDefault();var t=this.state,n=t.showModal,r=t.main;this.setState({showModal:!n,modalMain:r})}},{key:"changeFav",value:function(e){var t=this;e.preventDefault();var n=this.state,r=n.id,i=n.favorite;v().patch("/api/items/".concat(r),{favorite:i}).then((function(){t.getItems()}))}},{key:"render",value:function(){var t,n,r=this.state,i=r.images,o=r.main,a=r.thumbClass,u=r.modalThumbClass,l=r.showModal,c=r.modalMain;return r.favorite?(t=e.createElement("path",{d:"M16.5,3A6.953,6.953,0,0,0,12,5.051,6.912,6.912,0,0,0,7.5,3C4.364,3,2,5.579,2,9c0,5.688,8.349,12,10,12S22,14.688,22,9C22,5.579,19.636,3,16.5,3Z"}),n="image-fav"):(t=e.createElement("path",{d:"M12,21C10.349,21,2,14.688,2,9,2,5.579,4.364,3,7.5,3A6.912,6.912,0,0,1,12,5.051,6.953,6.953,0,0,1,16.5,3C19.636,3,22,5.579,22,9,22,14.688,13.651,21,12,21ZM7.5,5C5.472,5,4,6.683,4,9c0,4.108,6.432,9.325,8,10,1.564-.657,8-5.832,8-10,0-2.317-1.472-4-3.5-4-1.979,0-3.7,2.105-3.721,2.127L11.991,8.1,11.216,7.12C11.186,7.083,9.5,5,7.5,5Z"}),n="image-notFav"),e.createElement("div",{className:"image-grid"},e.createElement(x,{thumbClass:a,images:i,thumbs:this.thumbClick}),e.createElement("div",{className:"image-col2"},e.createElement("button",{onClick:this.leftClick,className:"image-left",type:"button"},e.createElement("svg",{viewBox:"0 0 24 24"},e.createElement("path",{d:"M16,21a0.994,0.994,0,0,1-.664-0.253L5.5,12l9.841-8.747a1,1,0,0,1,1.328,1.494L8.5,12l8.159,7.253A1,1,0,0,1,16,21Z"}))),e.createElement("span",{onClick:this.mainClick,name:"main",role:"button",tabIndex:0,onKeyUp:this.mainClick},e.createElement("img",{id:"main",name:"main",className:"image-main",alt:"noimage",src:i[o]})),e.createElement("button",{onClick:this.rightClick,className:"image-right",type:"button"},e.createElement("svg",{viewBox:"0 0 24 24"},e.createElement("path",{d:"M8,21a1,1,0,0,1-.664-1.747L15.5,12,7.336,4.747A1,1,0,0,1,8.664,3.253L18.5,12,8.664,20.747A0.994,0.994,0,0,1,8,21Z"}))),e.createElement("button",{onClick:this.changeFav,className:n,type:"button"},e.createElement("svg",{viewBox:"0 0 24 24"},t))),e.createElement(w,{thumbClass:u,images:i,main:c,showModal:l,onClose:this.mainClick,left:this.leftModalClick,right:this.rightModalClick,modalThumbs:this.modalThumbs}))}}]),u}(e.PureComponent);var C=n(3379),k=n.n(C),S=n(5660);k()(S.Z,{insert:"head",singleton:!1}),S.Z.locals,n(4298),n(4679),n(2899),t.render(e.createElement(E,null),document.getElementById("image"))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9wb2x5ZmlsbC9saWIvbm9Db25mbGljdC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXNzZXJ0VGhpc0luaXRpYWxpemVkLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjay5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2dldFByb3RvdHlwZU9mLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbmhlcml0cy5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVybi5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvc2V0UHJvdG90eXBlT2YuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3R5cGVvZi5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2luZGV4LmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2FkYXB0ZXJzL3hoci5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9heGlvcy5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jYW5jZWwvQ2FuY2VsLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWxUb2tlbi5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jYW5jZWwvaXNDYW5jZWwuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9BeGlvcy5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL0ludGVyY2VwdG9yTWFuYWdlci5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2J1aWxkRnVsbFBhdGguanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9jcmVhdGVFcnJvci5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2Rpc3BhdGNoUmVxdWVzdC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2VuaGFuY2VFcnJvci5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL21lcmdlQ29uZmlnLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvc2V0dGxlLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvdHJhbnNmb3JtRGF0YS5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9kZWZhdWx0cy5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2JpbmQuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9idWlsZFVSTC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2NvbWJpbmVVUkxzLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29va2llcy5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2lzQWJzb2x1dGVVUkwuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9pc0F4aW9zRXJyb3IuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9pc1VSTFNhbWVPcmlnaW4uanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9ub3JtYWxpemVIZWFkZXJOYW1lLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvcGFyc2VIZWFkZXJzLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvc3ByZWFkLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL3V0aWxzLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9lczYvaW5kZXguanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ZuL2FycmF5L2ZsYXQtbWFwLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9mbi9hcnJheS9pbmNsdWRlcy5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvZm4vb2JqZWN0L2VudHJpZXMuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ZuL29iamVjdC9nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9mbi9vYmplY3QvdmFsdWVzLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9mbi9wcm9taXNlL2ZpbmFsbHkuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ZuL3N0cmluZy9wYWQtZW5kLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9mbi9zdHJpbmcvcGFkLXN0YXJ0LmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9mbi9zdHJpbmcvdHJpbS1lbmQuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ZuL3N0cmluZy90cmltLXN0YXJ0LmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9mbi9zeW1ib2wvYXN5bmMtaXRlcmF0b3IuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvZm4vZ2xvYmFsLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2EtZnVuY3Rpb24uanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fYW4tb2JqZWN0LmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2NvcmUuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fY3R4LmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2Rlc2NyaXB0b3JzLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2RvbS1jcmVhdGUuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fZXhwb3J0LmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2ZhaWxzLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2dsb2JhbC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19oYXMuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faGlkZS5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pZTgtZG9tLWRlZmluZS5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pcy1vYmplY3QuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWRwLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3Byb3BlcnR5LWRlc2MuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fdG8tcHJpbWl0aXZlLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM3Lmdsb2JhbC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYS1mdW5jdGlvbi5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYS1udW1iZXItdmFsdWUuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2FkZC10by11bnNjb3BhYmxlcy5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYWR2YW5jZS1zdHJpbmctaW5kZXguanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2FuLWluc3RhbmNlLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hbi1vYmplY3QuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2FycmF5LWNvcHktd2l0aGluLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hcnJheS1maWxsLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hcnJheS1pbmNsdWRlcy5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYXJyYXktbWV0aG9kcy5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYXJyYXktcmVkdWNlLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hcnJheS1zcGVjaWVzLWNvbnN0cnVjdG9yLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hcnJheS1zcGVjaWVzLWNyZWF0ZS5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYmluZC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fY2xhc3NvZi5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fY29mLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jb2xsZWN0aW9uLXN0cm9uZy5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fY29sbGVjdGlvbi13ZWFrLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jb2xsZWN0aW9uLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jb3JlLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jcmVhdGUtcHJvcGVydHkuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2N0eC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZGF0ZS10by1pc28tc3RyaW5nLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19kYXRlLXRvLXByaW1pdGl2ZS5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZGVmaW5lZC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZGVzY3JpcHRvcnMuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2RvbS1jcmVhdGUuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2VudW0tYnVnLWtleXMuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2VudW0ta2V5cy5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZXhwb3J0LmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19mYWlscy1pcy1yZWdleHAuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2ZhaWxzLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19maXgtcmUtd2tzLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19mbGFncy5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZmxhdHRlbi1pbnRvLWFycmF5LmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19mb3Itb2YuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2Z1bmN0aW9uLXRvLXN0cmluZy5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZ2xvYmFsLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19oYXMuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2hpZGUuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2h0bWwuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2llOC1kb20tZGVmaW5lLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pbmhlcml0LWlmLXJlcXVpcmVkLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pbnZva2UuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2lvYmplY3QuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2lzLWFycmF5LWl0ZXIuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2lzLWFycmF5LmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pcy1pbnRlZ2VyLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pcy1vYmplY3QuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2lzLXJlZ2V4cC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXRlci1jYWxsLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pdGVyLWNyZWF0ZS5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXRlci1kZWZpbmUuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2l0ZXItZGV0ZWN0LmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pdGVyLXN0ZXAuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2l0ZXJhdG9ycy5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fbGlicmFyeS5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fbWF0aC1leHBtMS5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fbWF0aC1mcm91bmQuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX21hdGgtbG9nMXAuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX21hdGgtc2lnbi5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fbWV0YS5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fbWljcm90YXNrLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19uZXctcHJvbWlzZS1jYXBhYmlsaXR5LmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtYXNzaWduLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtY3JlYXRlLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtZHAuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1kcHMuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1nb3BkLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtZ29wbi1leHQuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1nb3BuLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtZ29wcy5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWdwby5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWtleXMtaW50ZXJuYWwuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1rZXlzLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtcGllLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3Qtc2FwLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtdG8tYXJyYXkuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX293bi1rZXlzLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19wYXJzZS1mbG9hdC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fcGFyc2UtaW50LmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19wZXJmb3JtLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19wcm9taXNlLXJlc29sdmUuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3Byb3BlcnR5LWRlc2MuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3JlZGVmaW5lLWFsbC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fcmVkZWZpbmUuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3JlZ2V4cC1leGVjLWFic3RyYWN0LmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19yZWdleHAtZXhlYy5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc2FtZS12YWx1ZS5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc2V0LXByb3RvLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zZXQtc3BlY2llcy5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc2V0LXRvLXN0cmluZy10YWcuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3NoYXJlZC1rZXkuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3NoYXJlZC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc3BlY2llcy1jb25zdHJ1Y3Rvci5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc3RyaWN0LW1ldGhvZC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc3RyaW5nLWF0LmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zdHJpbmctY29udGV4dC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc3RyaW5nLWh0bWwuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3N0cmluZy1wYWQuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3N0cmluZy1yZXBlYXQuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3N0cmluZy10cmltLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zdHJpbmctd3MuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3Rhc2suanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3RvLWFic29sdXRlLWluZGV4LmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190by1pbmRleC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdG8taW50ZWdlci5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdG8taW9iamVjdC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdG8tbGVuZ3RoLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190by1vYmplY3QuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3RvLXByaW1pdGl2ZS5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdHlwZWQtYXJyYXkuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3R5cGVkLWJ1ZmZlci5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdHlwZWQuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3VpZC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdXNlci1hZ2VudC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdmFsaWRhdGUtY29sbGVjdGlvbi5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fd2tzLWRlZmluZS5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fd2tzLWV4dC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fd2tzLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuY29weS13aXRoaW4uanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmV2ZXJ5LmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5maWxsLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5maWx0ZXIuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmZpbmQtaW5kZXguanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmZpbmQuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmZvci1lYWNoLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5mcm9tLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5pbmRleC1vZi5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuaXMtYXJyYXkuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5Lml0ZXJhdG9yLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5qb2luLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5sYXN0LWluZGV4LW9mLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5tYXAuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5Lm9mLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5yZWR1Y2UtcmlnaHQuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LnJlZHVjZS5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuc2xpY2UuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LnNvbWUuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LnNvcnQuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LnNwZWNpZXMuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmRhdGUubm93LmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5kYXRlLnRvLWlzby1zdHJpbmcuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmRhdGUudG8tanNvbi5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuZGF0ZS50by1wcmltaXRpdmUuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmRhdGUudG8tc3RyaW5nLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5mdW5jdGlvbi5iaW5kLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5mdW5jdGlvbi5oYXMtaW5zdGFuY2UuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmZ1bmN0aW9uLm5hbWUuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hcC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5hY29zaC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5hc2luaC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5hdGFuaC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5jYnJ0LmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLmNsejMyLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLmNvc2guanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGguZXhwbTEuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGguZnJvdW5kLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLmh5cG90LmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLmltdWwuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGgubG9nMTAuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGgubG9nMXAuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGgubG9nMi5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5zaWduLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLnNpbmguanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGgudGFuaC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC50cnVuYy5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLmNvbnN0cnVjdG9yLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5udW1iZXIuZXBzaWxvbi5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLmlzLWZpbml0ZS5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLmlzLWludGVnZXIuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm51bWJlci5pcy1uYW4uanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm51bWJlci5pcy1zYWZlLWludGVnZXIuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm51bWJlci5tYXgtc2FmZS1pbnRlZ2VyLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5udW1iZXIubWluLXNhZmUtaW50ZWdlci5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLnBhcnNlLWZsb2F0LmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5udW1iZXIucGFyc2UtaW50LmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5udW1iZXIudG8tZml4ZWQuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm51bWJlci50by1wcmVjaXNpb24uanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5hc3NpZ24uanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5jcmVhdGUuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5kZWZpbmUtcHJvcGVydGllcy5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0eS5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmZyZWV6ZS5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvci5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmdldC1vd24tcHJvcGVydHktbmFtZXMuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtcHJvdG90eXBlLW9mLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3QuaXMtZXh0ZW5zaWJsZS5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmlzLWZyb3plbi5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmlzLXNlYWxlZC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmlzLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3Qua2V5cy5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LnByZXZlbnQtZXh0ZW5zaW9ucy5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LnNlYWwuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5zZXQtcHJvdG90eXBlLW9mLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3QudG8tc3RyaW5nLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5wYXJzZS1mbG9hdC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucGFyc2UtaW50LmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5wcm9taXNlLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWZsZWN0LmFwcGx5LmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWZsZWN0LmNvbnN0cnVjdC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5kZWZpbmUtcHJvcGVydHkuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3QuZGVsZXRlLXByb3BlcnR5LmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWZsZWN0LmVudW1lcmF0ZS5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3QuZ2V0LXByb3RvdHlwZS1vZi5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5nZXQuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3QuaGFzLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWZsZWN0LmlzLWV4dGVuc2libGUuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3Qub3duLWtleXMuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3QucHJldmVudC1leHRlbnNpb25zLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWZsZWN0LnNldC1wcm90b3R5cGUtb2YuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3Quc2V0LmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWdleHAuY29uc3RydWN0b3IuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC5leGVjLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWdleHAuZmxhZ3MuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC5tYXRjaC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVnZXhwLnJlcGxhY2UuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC5zZWFyY2guanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC5zcGxpdC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVnZXhwLnRvLXN0cmluZy5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc2V0LmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuYW5jaG9yLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuYmlnLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuYmxpbmsuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5ib2xkLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuY29kZS1wb2ludC1hdC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmVuZHMtd2l0aC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmZpeGVkLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuZm9udGNvbG9yLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuZm9udHNpemUuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5mcm9tLWNvZGUtcG9pbnQuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5pbmNsdWRlcy5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLml0YWxpY3MuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvci5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmxpbmsuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5yYXcuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5yZXBlYXQuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5zbWFsbC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLnN0YXJ0cy13aXRoLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuc3RyaWtlLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuc3ViLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuc3VwLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcudHJpbS5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3ltYm9sLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi50eXBlZC5hcnJheS1idWZmZXIuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnR5cGVkLmRhdGEtdmlldy5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQuZmxvYXQzMi1hcnJheS5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQuZmxvYXQ2NC1hcnJheS5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQuaW50MTYtYXJyYXkuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnR5cGVkLmludDMyLWFycmF5LmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi50eXBlZC5pbnQ4LWFycmF5LmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi50eXBlZC51aW50MTYtYXJyYXkuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnR5cGVkLnVpbnQzMi1hcnJheS5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQudWludDgtYXJyYXkuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnR5cGVkLnVpbnQ4LWNsYW1wZWQtYXJyYXkuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LndlYWstbWFwLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi53ZWFrLXNldC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcuYXJyYXkuZmxhdC1tYXAuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LmFycmF5LmluY2x1ZGVzLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5vYmplY3QuZW50cmllcy5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcnMuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3Lm9iamVjdC52YWx1ZXMuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnByb21pc2UuZmluYWxseS5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcuc3RyaW5nLnBhZC1lbmQuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnN0cmluZy5wYWQtc3RhcnQuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnN0cmluZy50cmltLWxlZnQuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnN0cmluZy50cmltLXJpZ2h0LmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5zeW1ib2wuYXN5bmMtaXRlcmF0b3IuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZS5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy93ZWIuaW1tZWRpYXRlLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL3dlYi50aW1lcnMuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL3dlYi9pbmRleC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vY2xpZW50L3N0eWxlLmNzcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2Nzc1dpdGhNYXBwaW5nVG9TdHJpbmcuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL3B1YmxpYy9leHBhbmQucG5nIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9wdWJsaWMvem9vbUluLnBuZyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vcHVibGljL3pvb21PdXQucG5nIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvb2JqZWN0LWFzc2lnbi9pbmRleC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL25vZGVfbW9kdWxlcy9yZWFjdC9pbmRleC5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL3JlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2luZGV4LmpzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL2ltYWdlLXNlcnZpY2Uvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL2ltYWdlLXNlcnZpY2Uvd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9wb2x5ZmlsbC9saWIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL2NsaWVudC9jb21wb25lbnRzL1RodW1icy5qc3giLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL2NsaWVudC9jb21wb25lbnRzL01vZGFsLmpzeCIsIndlYnBhY2s6Ly9pbWFnZS1zZXJ2aWNlLy4vY2xpZW50L2NvbXBvbmVudHMvSW1hZ2UuanN4Iiwid2VicGFjazovL2ltYWdlLXNlcnZpY2UvLi9jbGllbnQvc3R5bGUuY3NzP2RjYWEiLCJ3ZWJwYWNrOi8vaW1hZ2Utc2VydmljZS8uL2NsaWVudC9pbmRleC5qc3giXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlbGYiLCJSZWZlcmVuY2VFcnJvciIsImluc3RhbmNlIiwiQ29uc3RydWN0b3IiLCJUeXBlRXJyb3IiLCJfZGVmaW5lUHJvcGVydGllcyIsInRhcmdldCIsInByb3BzIiwiaSIsImxlbmd0aCIsImRlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImtleSIsInByb3RvUHJvcHMiLCJzdGF0aWNQcm9wcyIsInByb3RvdHlwZSIsIl9nZXRQcm90b3R5cGVPZiIsIm8iLCJzZXRQcm90b3R5cGVPZiIsImdldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwiY3JlYXRlIiwiY29uc3RydWN0b3IiLCJ2YWx1ZSIsIl90eXBlb2YiLCJhc3NlcnRUaGlzSW5pdGlhbGl6ZWQiLCJjYWxsIiwiX3NldFByb3RvdHlwZU9mIiwicCIsIm9iaiIsIlN5bWJvbCIsIml0ZXJhdG9yIiwidXRpbHMiLCJzZXR0bGUiLCJjb29raWVzIiwiYnVpbGRVUkwiLCJidWlsZEZ1bGxQYXRoIiwicGFyc2VIZWFkZXJzIiwiaXNVUkxTYW1lT3JpZ2luIiwiY3JlYXRlRXJyb3IiLCJjb25maWciLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInJlcXVlc3REYXRhIiwiZGF0YSIsInJlcXVlc3RIZWFkZXJzIiwiaGVhZGVycyIsImlzRm9ybURhdGEiLCJyZXF1ZXN0IiwiWE1MSHR0cFJlcXVlc3QiLCJhdXRoIiwidXNlcm5hbWUiLCJwYXNzd29yZCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiQXV0aG9yaXphdGlvbiIsImJ0b2EiLCJmdWxsUGF0aCIsImJhc2VVUkwiLCJ1cmwiLCJvcGVuIiwibWV0aG9kIiwidG9VcHBlckNhc2UiLCJwYXJhbXMiLCJwYXJhbXNTZXJpYWxpemVyIiwidGltZW91dCIsIm9ucmVhZHlzdGF0ZWNoYW5nZSIsInJlYWR5U3RhdGUiLCJzdGF0dXMiLCJyZXNwb25zZVVSTCIsImluZGV4T2YiLCJyZXNwb25zZUhlYWRlcnMiLCJnZXRBbGxSZXNwb25zZUhlYWRlcnMiLCJyZXNwb25zZSIsInJlc3BvbnNlVHlwZSIsInJlc3BvbnNlVGV4dCIsInN0YXR1c1RleHQiLCJvbmFib3J0Iiwib25lcnJvciIsIm9udGltZW91dCIsInRpbWVvdXRFcnJvck1lc3NhZ2UiLCJpc1N0YW5kYXJkQnJvd3NlckVudiIsInhzcmZWYWx1ZSIsIndpdGhDcmVkZW50aWFscyIsInhzcmZDb29raWVOYW1lIiwicmVhZCIsInVuZGVmaW5lZCIsInhzcmZIZWFkZXJOYW1lIiwiZm9yRWFjaCIsInZhbCIsInRvTG93ZXJDYXNlIiwic2V0UmVxdWVzdEhlYWRlciIsImlzVW5kZWZpbmVkIiwiZSIsIm9uRG93bmxvYWRQcm9ncmVzcyIsImFkZEV2ZW50TGlzdGVuZXIiLCJvblVwbG9hZFByb2dyZXNzIiwidXBsb2FkIiwiY2FuY2VsVG9rZW4iLCJwcm9taXNlIiwidGhlbiIsImNhbmNlbCIsImFib3J0Iiwic2VuZCIsImJpbmQiLCJBeGlvcyIsIm1lcmdlQ29uZmlnIiwiY3JlYXRlSW5zdGFuY2UiLCJkZWZhdWx0Q29uZmlnIiwiY29udGV4dCIsImV4dGVuZCIsImF4aW9zIiwiaW5zdGFuY2VDb25maWciLCJkZWZhdWx0cyIsIkNhbmNlbCIsIkNhbmNlbFRva2VuIiwiaXNDYW5jZWwiLCJhbGwiLCJwcm9taXNlcyIsInNwcmVhZCIsImlzQXhpb3NFcnJvciIsImRlZmF1bHQiLCJtZXNzYWdlIiwidGhpcyIsInRvU3RyaW5nIiwiX19DQU5DRUxfXyIsImV4ZWN1dG9yIiwicmVzb2x2ZVByb21pc2UiLCJ0b2tlbiIsInJlYXNvbiIsInRocm93SWZSZXF1ZXN0ZWQiLCJzb3VyY2UiLCJjIiwiSW50ZXJjZXB0b3JNYW5hZ2VyIiwiZGlzcGF0Y2hSZXF1ZXN0IiwiaW50ZXJjZXB0b3JzIiwiYXJndW1lbnRzIiwiY2hhaW4iLCJpbnRlcmNlcHRvciIsInVuc2hpZnQiLCJmdWxmaWxsZWQiLCJyZWplY3RlZCIsInB1c2giLCJzaGlmdCIsImdldFVyaSIsInJlcGxhY2UiLCJoYW5kbGVycyIsInVzZSIsImVqZWN0IiwiaWQiLCJmbiIsImgiLCJpc0Fic29sdXRlVVJMIiwiY29tYmluZVVSTHMiLCJyZXF1ZXN0ZWRVUkwiLCJlbmhhbmNlRXJyb3IiLCJjb2RlIiwiZXJyb3IiLCJFcnJvciIsInRyYW5zZm9ybURhdGEiLCJ0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkIiwidHJhbnNmb3JtUmVxdWVzdCIsIm1lcmdlIiwiY29tbW9uIiwiYWRhcHRlciIsInRyYW5zZm9ybVJlc3BvbnNlIiwidG9KU09OIiwibmFtZSIsImRlc2NyaXB0aW9uIiwibnVtYmVyIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwiY29sdW1uTnVtYmVyIiwic3RhY2siLCJjb25maWcxIiwiY29uZmlnMiIsInZhbHVlRnJvbUNvbmZpZzJLZXlzIiwibWVyZ2VEZWVwUHJvcGVydGllc0tleXMiLCJkZWZhdWx0VG9Db25maWcyS2V5cyIsImRpcmVjdE1lcmdlS2V5cyIsImdldE1lcmdlZFZhbHVlIiwiaXNQbGFpbk9iamVjdCIsImlzQXJyYXkiLCJzbGljZSIsIm1lcmdlRGVlcFByb3BlcnRpZXMiLCJwcm9wIiwiYXhpb3NLZXlzIiwiY29uY2F0Iiwib3RoZXJLZXlzIiwia2V5cyIsImZpbHRlciIsInZhbGlkYXRlU3RhdHVzIiwiZm5zIiwibm9ybWFsaXplSGVhZGVyTmFtZSIsIkRFRkFVTFRfQ09OVEVOVF9UWVBFIiwic2V0Q29udGVudFR5cGVJZlVuc2V0IiwicHJvY2VzcyIsImlzQXJyYXlCdWZmZXIiLCJpc0J1ZmZlciIsImlzU3RyZWFtIiwiaXNGaWxlIiwiaXNCbG9iIiwiaXNBcnJheUJ1ZmZlclZpZXciLCJidWZmZXIiLCJpc1VSTFNlYXJjaFBhcmFtcyIsImlzT2JqZWN0IiwiSlNPTiIsInN0cmluZ2lmeSIsInBhcnNlIiwibWF4Q29udGVudExlbmd0aCIsIm1heEJvZHlMZW5ndGgiLCJ0aGlzQXJnIiwiYXJncyIsIkFycmF5IiwiYXBwbHkiLCJlbmNvZGUiLCJzZXJpYWxpemVkUGFyYW1zIiwicGFydHMiLCJ2IiwiaXNEYXRlIiwidG9JU09TdHJpbmciLCJqb2luIiwiaGFzaG1hcmtJbmRleCIsInJlbGF0aXZlVVJMIiwid3JpdGUiLCJleHBpcmVzIiwicGF0aCIsImRvbWFpbiIsInNlY3VyZSIsImNvb2tpZSIsImlzTnVtYmVyIiwiRGF0ZSIsInRvR01UU3RyaW5nIiwiaXNTdHJpbmciLCJkb2N1bWVudCIsIm1hdGNoIiwiUmVnRXhwIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwicmVtb3ZlIiwibm93IiwidGVzdCIsInBheWxvYWQiLCJvcmlnaW5VUkwiLCJtc2llIiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwidXJsUGFyc2luZ05vZGUiLCJjcmVhdGVFbGVtZW50IiwicmVzb2x2ZVVSTCIsImhyZWYiLCJzZXRBdHRyaWJ1dGUiLCJwcm90b2NvbCIsImhvc3QiLCJzZWFyY2giLCJoYXNoIiwiaG9zdG5hbWUiLCJwb3J0IiwicGF0aG5hbWUiLCJjaGFyQXQiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsInJlcXVlc3RVUkwiLCJwYXJzZWQiLCJub3JtYWxpemVkTmFtZSIsImlnbm9yZUR1cGxpY2F0ZU9mIiwic3BsaXQiLCJsaW5lIiwidHJpbSIsInN1YnN0ciIsImNhbGxiYWNrIiwiYXJyIiwiaXNGdW5jdGlvbiIsImwiLCJoYXNPd25Qcm9wZXJ0eSIsIkZvcm1EYXRhIiwiQXJyYXlCdWZmZXIiLCJpc1ZpZXciLCJwaXBlIiwiVVJMU2VhcmNoUGFyYW1zIiwicHJvZHVjdCIsInJlc3VsdCIsImFzc2lnblZhbHVlIiwiYSIsImIiLCJzdHIiLCJzdHJpcEJPTSIsImNvbnRlbnQiLCJjaGFyQ29kZUF0IiwiaXQiLCJjb3JlIiwidmVyc2lvbiIsIl9fZSIsImFGdW5jdGlvbiIsInRoYXQiLCJnZXQiLCJpcyIsImdsb2JhbCIsImN0eCIsImhpZGUiLCJoYXMiLCIkZXhwb3J0IiwidHlwZSIsIm93biIsIm91dCIsIklTX0ZPUkNFRCIsIkYiLCJJU19HTE9CQUwiLCJHIiwiSVNfU1RBVElDIiwiUyIsIklTX1BST1RPIiwiUCIsIklTX0JJTkQiLCJCIiwiSVNfV1JBUCIsIlciLCJleHBQcm90byIsIkMiLCJGdW5jdGlvbiIsInZpcnR1YWwiLCJSIiwiVSIsImV4ZWMiLCJNYXRoIiwiX19nIiwiZFAiLCJjcmVhdGVEZXNjIiwib2JqZWN0IiwiZiIsImFuT2JqZWN0IiwiSUU4X0RPTV9ERUZJTkUiLCJ0b1ByaW1pdGl2ZSIsIk8iLCJBdHRyaWJ1dGVzIiwiYml0bWFwIiwidmFsdWVPZiIsImNvZiIsIm1zZyIsIlVOU0NPUEFCTEVTIiwiQXJyYXlQcm90byIsImF0IiwiaW5kZXgiLCJ1bmljb2RlIiwiZm9yYmlkZGVuRmllbGQiLCJ0b09iamVjdCIsInRvQWJzb2x1dGVJbmRleCIsInRvTGVuZ3RoIiwiY29weVdpdGhpbiIsInN0YXJ0IiwibGVuIiwidG8iLCJmcm9tIiwiZW5kIiwiY291bnQiLCJtaW4iLCJpbmMiLCJhTGVuIiwiZW5kUG9zIiwidG9JT2JqZWN0IiwiSVNfSU5DTFVERVMiLCIkdGhpcyIsImVsIiwiZnJvbUluZGV4IiwiSU9iamVjdCIsImFzYyIsIlRZUEUiLCIkY3JlYXRlIiwiSVNfTUFQIiwiSVNfRklMVEVSIiwiSVNfU09NRSIsIklTX0VWRVJZIiwiSVNfRklORF9JTkRFWCIsIk5PX0hPTEVTIiwiY2FsbGJhY2tmbiIsInJlcyIsIm1lbW8iLCJpc1JpZ2h0IiwiU1BFQ0lFUyIsIm9yaWdpbmFsIiwic3BlY2llc0NvbnN0cnVjdG9yIiwiaW52b2tlIiwiYXJyYXlTbGljZSIsImZhY3RvcmllcyIsImNvbnN0cnVjdCIsIm4iLCJwYXJ0QXJncyIsImJvdW5kIiwiVEFHIiwiQVJHIiwiVCIsInRyeUdldCIsImNhbGxlZSIsInJlZGVmaW5lQWxsIiwiYW5JbnN0YW5jZSIsImZvck9mIiwiJGl0ZXJEZWZpbmUiLCJzdGVwIiwic2V0U3BlY2llcyIsIkRFU0NSSVBUT1JTIiwiZmFzdEtleSIsInZhbGlkYXRlIiwiU0laRSIsImdldEVudHJ5IiwiZW50cnkiLCJfaSIsIl9mIiwiayIsImdldENvbnN0cnVjdG9yIiwid3JhcHBlciIsIk5BTUUiLCJBRERFUiIsIml0ZXJhYmxlIiwiX3QiLCJfbCIsImNsZWFyIiwiciIsIm5leHQiLCJwcmV2IiwiZGVmIiwic2V0U3Ryb25nIiwiaXRlcmF0ZWQiLCJraW5kIiwiX2siLCJnZXRXZWFrIiwiY3JlYXRlQXJyYXlNZXRob2QiLCIkaGFzIiwiYXJyYXlGaW5kIiwiYXJyYXlGaW5kSW5kZXgiLCJ1bmNhdWdodEZyb3plblN0b3JlIiwiVW5jYXVnaHRGcm96ZW5TdG9yZSIsImZpbmRVbmNhdWdodEZyb3plbiIsInN0b3JlIiwic2V0Iiwic3BsaWNlIiwidWZzdG9yZSIsInJlZGVmaW5lIiwibWV0YSIsImZhaWxzIiwiJGl0ZXJEZXRlY3QiLCJzZXRUb1N0cmluZ1RhZyIsImluaGVyaXRJZlJlcXVpcmVkIiwibWV0aG9kcyIsIklTX1dFQUsiLCJCYXNlIiwicHJvdG8iLCJmaXhNZXRob2QiLCJLRVkiLCJlbnRyaWVzIiwiSEFTTlRfQ0hBSU5JTkciLCJUSFJPV1NfT05fUFJJTUlUSVZFUyIsIkFDQ0VQVF9JVEVSQUJMRVMiLCJpdGVyIiwiQlVHR1lfWkVSTyIsIiRpbnN0YW5jZSIsIk5FRUQiLCIkZGVmaW5lUHJvcGVydHkiLCJnZXRUaW1lIiwiJHRvSVNPU3RyaW5nIiwibHoiLCJudW0iLCJOYU4iLCJpc0Zpbml0ZSIsIlJhbmdlRXJyb3IiLCJkIiwieSIsImdldFVUQ0Z1bGxZZWFyIiwibSIsImdldFVUQ01pbGxpc2Vjb25kcyIsInMiLCJhYnMiLCJnZXRVVENNb250aCIsImdldFVUQ0RhdGUiLCJnZXRVVENIb3VycyIsImdldFVUQ01pbnV0ZXMiLCJnZXRVVENTZWNvbmRzIiwiTlVNQkVSIiwiaGludCIsImdldEtleXMiLCJnT1BTIiwicElFIiwiZ2V0U3ltYm9scyIsInN5bWJvbHMiLCJpc0VudW0iLCJleHAiLCJNQVRDSCIsInJlIiwiZGVmaW5lZCIsIndrcyIsInJlZ2V4cEV4ZWMiLCJSRVBMQUNFX1NVUFBPUlRTX05BTUVEX0dST1VQUyIsImdyb3VwcyIsIlNQTElUX1dPUktTX1dJVEhfT1ZFUldSSVRURU5fRVhFQyIsIm9yaWdpbmFsRXhlYyIsIlNZTUJPTCIsIkRFTEVHQVRFU19UT19TWU1CT0wiLCJERUxFR0FURVNfVE9fRVhFQyIsImV4ZWNDYWxsZWQiLCJuYXRpdmVSZWdFeHBNZXRob2QiLCJuYXRpdmVNZXRob2QiLCJyZWdleHAiLCJhcmcyIiwiZm9yY2VTdHJpbmdNZXRob2QiLCJkb25lIiwic3RyZm4iLCJyeGZuIiwiU3RyaW5nIiwic3RyaW5nIiwiYXJnIiwiaWdub3JlQ2FzZSIsIm11bHRpbGluZSIsInN0aWNreSIsIklTX0NPTkNBVF9TUFJFQURBQkxFIiwiZmxhdHRlbkludG9BcnJheSIsInNvdXJjZUxlbiIsImRlcHRoIiwibWFwcGVyIiwiZWxlbWVudCIsInNwcmVhZGFibGUiLCJ0YXJnZXRJbmRleCIsInNvdXJjZUluZGV4IiwibWFwRm4iLCJpc0FycmF5SXRlciIsImdldEl0ZXJGbiIsIkJSRUFLIiwiUkVUVVJOIiwiSVRFUkFUT1IiLCJpdGVyRm4iLCJkb2N1bWVudEVsZW1lbnQiLCJ1biIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwiSXRlcmF0b3JzIiwiZmxvb3IiLCJpc1JlZ0V4cCIsInJldCIsIkl0ZXJhdG9yUHJvdG90eXBlIiwiTElCUkFSWSIsIiRpdGVyQ3JlYXRlIiwiQlVHR1kiLCJLRVlTIiwiVkFMVUVTIiwicmV0dXJuVGhpcyIsIkRFRkFVTFQiLCJJU19TRVQiLCJGT1JDRUQiLCJnZXRNZXRob2QiLCJERUZfVkFMVUVTIiwiVkFMVUVTX0JVRyIsIiRuYXRpdmUiLCIkZGVmYXVsdCIsIiRlbnRyaWVzIiwiJGFueU5hdGl2ZSIsInZhbHVlcyIsIlNBRkVfQ0xPU0lORyIsInJpdGVyIiwic2tpcENsb3NpbmciLCJzYWZlIiwiJGV4cG0xIiwiZXhwbTEiLCJ4Iiwic2lnbiIsInBvdyIsIkVQU0lMT04iLCJFUFNJTE9OMzIiLCJNQVgzMiIsIk1JTjMyIiwiZnJvdW5kIiwiJGFicyIsIiRzaWduIiwiSW5maW5pdHkiLCJsb2cxcCIsImxvZyIsIk1FVEEiLCJzZXREZXNjIiwiaXNFeHRlbnNpYmxlIiwiRlJFRVpFIiwicHJldmVudEV4dGVuc2lvbnMiLCJzZXRNZXRhIiwidyIsIm9uRnJlZXplIiwibWFjcm90YXNrIiwiT2JzZXJ2ZXIiLCJNdXRhdGlvbk9ic2VydmVyIiwiV2ViS2l0TXV0YXRpb25PYnNlcnZlciIsImlzTm9kZSIsImhlYWQiLCJsYXN0Iiwibm90aWZ5IiwiZmx1c2giLCJwYXJlbnQiLCJleGl0IiwiZW50ZXIiLCJuZXh0VGljayIsInN0YW5kYWxvbmUiLCJ0b2dnbGUiLCJub2RlIiwiY3JlYXRlVGV4dE5vZGUiLCJvYnNlcnZlIiwiY2hhcmFjdGVyRGF0YSIsInRhc2siLCJQcm9taXNlQ2FwYWJpbGl0eSIsIiQkcmVzb2x2ZSIsIiQkcmVqZWN0IiwiJGFzc2lnbiIsImFzc2lnbiIsIkEiLCJLIiwiaiIsImRQcyIsImVudW1CdWdLZXlzIiwiSUVfUFJPVE8iLCJFbXB0eSIsImNyZWF0ZURpY3QiLCJpZnJhbWVEb2N1bWVudCIsImlmcmFtZSIsInN0eWxlIiwiZGlzcGxheSIsInNyYyIsImNvbnRlbnRXaW5kb3ciLCJsdCIsImNsb3NlIiwiUHJvcGVydGllcyIsImRlZmluZVByb3BlcnRpZXMiLCJnT1BEIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZ09QTiIsIndpbmRvd05hbWVzIiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsImdldFdpbmRvd05hbWVzIiwiJGtleXMiLCJoaWRkZW5LZXlzIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiT2JqZWN0UHJvdG8iLCJhcnJheUluZGV4T2YiLCJuYW1lcyIsImlzRW50cmllcyIsIlJlZmxlY3QiLCJvd25LZXlzIiwiJHBhcnNlRmxvYXQiLCIkdHJpbSIsIiRwYXJzZUludCIsIndzIiwiaGV4IiwicmFkaXgiLCJuZXdQcm9taXNlQ2FwYWJpbGl0eSIsInByb21pc2VDYXBhYmlsaXR5IiwiU1JDIiwiJHRvU3RyaW5nIiwiVE9fU1RSSU5HIiwiVFBMIiwiY2xhc3NvZiIsImJ1aWx0aW5FeGVjIiwicmUxIiwicmUyIiwicmVnZXhwRmxhZ3MiLCJuYXRpdmVFeGVjIiwibmF0aXZlUmVwbGFjZSIsInBhdGNoZWRFeGVjIiwiVVBEQVRFU19MQVNUX0lOREVYX1dST05HIiwiTlBDR19JTkNMVURFRCIsImxhc3RJbmRleCIsInJlQ29weSIsImNoZWNrIiwiYnVnZ3kiLCJ0YWciLCJzdGF0Iiwic2hhcmVkIiwidWlkIiwiU0hBUkVEIiwibW9kZSIsImNvcHlyaWdodCIsIkQiLCJ0b0ludGVnZXIiLCJwb3MiLCJzZWFyY2hTdHJpbmciLCJxdW90IiwiY3JlYXRlSFRNTCIsImF0dHJpYnV0ZSIsInAxIiwicmVwZWF0IiwibWF4TGVuZ3RoIiwiZmlsbFN0cmluZyIsImxlZnQiLCJzdHJpbmdMZW5ndGgiLCJmaWxsU3RyIiwiaW50TWF4TGVuZ3RoIiwiZmlsbExlbiIsInN0cmluZ0ZpbGxlciIsImNlaWwiLCJzcGFjZXMiLCJzcGFjZSIsImx0cmltIiwicnRyaW0iLCJleHBvcnRlciIsIkFMSUFTIiwiRk9SQ0UiLCJkZWZlciIsImNoYW5uZWwiLCJodG1sIiwiY2VsIiwic2V0VGFzayIsInNldEltbWVkaWF0ZSIsImNsZWFyVGFzayIsImNsZWFySW1tZWRpYXRlIiwiTWVzc2FnZUNoYW5uZWwiLCJEaXNwYXRjaCIsImNvdW50ZXIiLCJxdWV1ZSIsInJ1biIsImxpc3RlbmVyIiwiZXZlbnQiLCJwb3J0MiIsInBvcnQxIiwib25tZXNzYWdlIiwicG9zdE1lc3NhZ2UiLCJpbXBvcnRTY3JpcHRzIiwiYXBwZW5kQ2hpbGQiLCJyZW1vdmVDaGlsZCIsInNldFRpbWVvdXQiLCJtYXgiLCJpc05hTiIsIiR0eXBlZCIsIiRidWZmZXIiLCJwcm9wZXJ0eURlc2MiLCJ0b0luZGV4IiwiY3JlYXRlQXJyYXlJbmNsdWRlcyIsIkFycmF5SXRlcmF0b3JzIiwiYXJyYXlGaWxsIiwiYXJyYXlDb3B5V2l0aGluIiwiJERQIiwiJEdPUEQiLCJVaW50OEFycmF5IiwiQVJSQVlfQlVGRkVSIiwiU0hBUkVEX0JVRkZFUiIsIkJZVEVTX1BFUl9FTEVNRU5UIiwiJEFycmF5QnVmZmVyIiwiJERhdGFWaWV3IiwiRGF0YVZpZXciLCJhcnJheUZvckVhY2giLCJhcnJheUZpbHRlciIsImFycmF5U29tZSIsImFycmF5RXZlcnkiLCJhcnJheUluY2x1ZGVzIiwiYXJyYXlWYWx1ZXMiLCJhcnJheUtleXMiLCJhcnJheUVudHJpZXMiLCJhcnJheUxhc3RJbmRleE9mIiwibGFzdEluZGV4T2YiLCJhcnJheVJlZHVjZSIsInJlZHVjZSIsImFycmF5UmVkdWNlUmlnaHQiLCJyZWR1Y2VSaWdodCIsImFycmF5Sm9pbiIsImFycmF5U29ydCIsInNvcnQiLCJhcnJheVRvU3RyaW5nIiwiYXJyYXlUb0xvY2FsZVN0cmluZyIsInRvTG9jYWxlU3RyaW5nIiwiVFlQRURfQ09OU1RSVUNUT1IiLCJERUZfQ09OU1RSVUNUT1IiLCJBTExfQ09OU1RSVUNUT1JTIiwiQ09OU1RSIiwiVFlQRURfQVJSQVkiLCJUWVBFRCIsIlZJRVciLCJXUk9OR19MRU5HVEgiLCIkbWFwIiwiYWxsb2NhdGUiLCJMSVRUTEVfRU5ESUFOIiwiVWludDE2QXJyYXkiLCJGT1JDRURfU0VUIiwidG9PZmZzZXQiLCJCWVRFUyIsIm9mZnNldCIsInNwZWNpZXNGcm9tTGlzdCIsImxpc3QiLCJmcm9tTGlzdCIsImFkZEdldHRlciIsImludGVybmFsIiwiX2QiLCIkZnJvbSIsIm1hcGZuIiwibWFwcGluZyIsIiRvZiIsIlRPX0xPQ0FMRV9CVUciLCIkdG9Mb2NhbGVTdHJpbmciLCJldmVyeSIsImZpbGwiLCJmaW5kIiwicHJlZGljYXRlIiwiZmluZEluZGV4Iiwic2VhcmNoRWxlbWVudCIsImluY2x1ZGVzIiwic2VwYXJhdG9yIiwibWFwIiwicmV2ZXJzZSIsIm1pZGRsZSIsInNvbWUiLCJjb21wYXJlZm4iLCJzdWJhcnJheSIsImJlZ2luIiwiJGJlZ2luIiwiYnl0ZU9mZnNldCIsIiRzbGljZSIsIiRzZXQiLCJhcnJheUxpa2UiLCIkaXRlcmF0b3JzIiwiaXNUQUluZGV4IiwiJGdldERlc2MiLCIkc2V0RGVzYyIsImRlc2MiLCIkVHlwZWRBcnJheVByb3RvdHlwZSQiLCJDTEFNUEVEIiwiR0VUVEVSIiwiU0VUVEVSIiwiVHlwZWRBcnJheSIsIlRBQyIsIkFCViIsIlR5cGVkQXJyYXlQcm90b3R5cGUiLCJhZGRFbGVtZW50IiwiZ2V0dGVyIiwicm91bmQiLCJzZXR0ZXIiLCIkb2Zmc2V0IiwiJGxlbmd0aCIsImJ5dGVMZW5ndGgiLCJrbGFzcyIsIiRsZW4iLCIkbmF0aXZlSXRlcmF0b3IiLCJDT1JSRUNUX0lURVJfTkFNRSIsIiRpdGVyYXRvciIsIm9mIiwiREFUQV9WSUVXIiwiV1JPTkdfSU5ERVgiLCJCYXNlQnVmZmVyIiwiTE4yIiwiQlVGRkVSIiwiQllURV9MRU5HVEgiLCJCWVRFX09GRlNFVCIsIiRCVUZGRVIiLCIkTEVOR1RIIiwiJE9GRlNFVCIsInBhY2tJRUVFNzU0IiwibUxlbiIsIm5CeXRlcyIsImVMZW4iLCJlTWF4IiwiZUJpYXMiLCJydCIsInVucGFja0lFRUU3NTQiLCJuQml0cyIsInVucGFja0kzMiIsImJ5dGVzIiwicGFja0k4IiwicGFja0kxNiIsInBhY2tJMzIiLCJwYWNrRjY0IiwicGFja0YzMiIsInZpZXciLCJpc0xpdHRsZUVuZGlhbiIsImludEluZGV4IiwiX2IiLCJwYWNrIiwiY29udmVyc2lvbiIsIkFycmF5QnVmZmVyUHJvdG8iLCIkc2V0SW50OCIsInNldEludDgiLCJnZXRJbnQ4Iiwic2V0VWludDgiLCJidWZmZXJMZW5ndGgiLCJnZXRVaW50OCIsImdldEludDE2IiwiZ2V0VWludDE2IiwiZ2V0SW50MzIiLCJnZXRVaW50MzIiLCJnZXRGbG9hdDMyIiwiZ2V0RmxvYXQ2NCIsInNldEludDE2Iiwic2V0VWludDE2Iiwic2V0SW50MzIiLCJzZXRVaW50MzIiLCJzZXRGbG9hdDMyIiwic2V0RmxvYXQ2NCIsIlR5cGVkIiwiVHlwZWRBcnJheUNvbnN0cnVjdG9ycyIsInB4IiwicmFuZG9tIiwid2tzRXh0IiwiJFN5bWJvbCIsIlVTRV9TWU1CT0wiLCIkZXZlcnkiLCIkZmlsdGVyIiwiJGZpbmQiLCJmb3JjZWQiLCIkZm9yRWFjaCIsIlNUUklDVCIsImNyZWF0ZVByb3BlcnR5IiwiJGluZGV4T2YiLCJORUdBVElWRV9aRVJPIiwiYWRkVG9VbnNjb3BhYmxlcyIsIkFyZ3VtZW50cyIsIiRyZWR1Y2UiLCJ1cFRvIiwic2l6ZSIsImNsb25lZCIsIiRzb21lIiwiJHNvcnQiLCJwdiIsIlRPX1BSSU1JVElWRSIsIkRhdGVQcm90byIsIklOVkFMSURfREFURSIsIkhBU19JTlNUQU5DRSIsIkZ1bmN0aW9uUHJvdG8iLCJGUHJvdG8iLCJuYW1lUkUiLCJzdHJvbmciLCJNQVAiLCJzcXJ0IiwiJGFjb3NoIiwiYWNvc2giLCJOdW1iZXIiLCJNQVhfVkFMVUUiLCIkYXNpbmgiLCJhc2luaCIsIiRhdGFuaCIsImF0YW5oIiwiY2JydCIsImNsejMyIiwiTE9HMkUiLCJjb3NoIiwiaHlwb3QiLCJ2YWx1ZTEiLCJ2YWx1ZTIiLCJkaXYiLCJzdW0iLCJsYXJnIiwiJGltdWwiLCJpbXVsIiwiVUlOVDE2IiwieG4iLCJ5biIsInhsIiwieWwiLCJsb2cxMCIsIkxPRzEwRSIsImxvZzIiLCJzaW5oIiwiRSIsInRhbmgiLCJ0cnVuYyIsIiROdW1iZXIiLCJCUk9LRU5fQ09GIiwiVFJJTSIsInRvTnVtYmVyIiwiYXJndW1lbnQiLCJ0aGlyZCIsIm1heENvZGUiLCJmaXJzdCIsImRpZ2l0cyIsInBhcnNlSW50IiwiX2lzRmluaXRlIiwiaXNJbnRlZ2VyIiwiaXNTYWZlSW50ZWdlciIsIk1BWF9TQUZFX0lOVEVHRVIiLCJNSU5fU0FGRV9JTlRFR0VSIiwicGFyc2VGbG9hdCIsImFOdW1iZXJWYWx1ZSIsIiR0b0ZpeGVkIiwidG9GaXhlZCIsIkVSUk9SIiwiWkVSTyIsIm11bHRpcGx5IiwiYzIiLCJkaXZpZGUiLCJudW1Ub1N0cmluZyIsInQiLCJhY2MiLCJmcmFjdGlvbkRpZ2l0cyIsInoiLCJ4MiIsIiRmYWlscyIsIiR0b1ByZWNpc2lvbiIsInRvUHJlY2lzaW9uIiwicHJlY2lzaW9uIiwiJGZyZWV6ZSIsIiRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCIkZ2V0UHJvdG90eXBlT2YiLCIkaXNFeHRlbnNpYmxlIiwiJGlzRnJvemVuIiwiJGlzU2VhbGVkIiwiJHByZXZlbnRFeHRlbnNpb25zIiwiJHNlYWwiLCJJbnRlcm5hbCIsIm5ld0dlbmVyaWNQcm9taXNlQ2FwYWJpbGl0eSIsIk93blByb21pc2VDYXBhYmlsaXR5IiwiV3JhcHBlciIsIm1pY3JvdGFzayIsIm5ld1Byb21pc2VDYXBhYmlsaXR5TW9kdWxlIiwicGVyZm9ybSIsInByb21pc2VSZXNvbHZlIiwiUFJPTUlTRSIsInZlcnNpb25zIiwidjgiLCIkUHJvbWlzZSIsImVtcHR5IiwiVVNFX05BVElWRSIsIkZha2VQcm9taXNlIiwiUHJvbWlzZVJlamVjdGlvbkV2ZW50IiwiaXNUaGVuYWJsZSIsImlzUmVqZWN0IiwiX24iLCJfYyIsIl92Iiwib2siLCJfcyIsInJlYWN0aW9uIiwiZXhpdGVkIiwiaGFuZGxlciIsImZhaWwiLCJfaCIsIm9uSGFuZGxlVW5oYW5kbGVkIiwib25VbmhhbmRsZWQiLCJjb25zb2xlIiwidW5oYW5kbGVkIiwiaXNVbmhhbmRsZWQiLCJlbWl0Iiwib251bmhhbmRsZWRyZWplY3Rpb24iLCJfYSIsIm9ucmVqZWN0aW9uaGFuZGxlZCIsIiRyZWplY3QiLCJfdyIsIiRyZXNvbHZlIiwiZXJyIiwib25GdWxmaWxsZWQiLCJvblJlamVjdGVkIiwiY2FwYWJpbGl0eSIsInJlbWFpbmluZyIsIiRpbmRleCIsImFscmVhZHlDYWxsZWQiLCJyYWNlIiwickFwcGx5IiwiZkFwcGx5IiwidGhpc0FyZ3VtZW50IiwiYXJndW1lbnRzTGlzdCIsIkwiLCJyQ29uc3RydWN0IiwiTkVXX1RBUkdFVF9CVUciLCJBUkdTX0JVRyIsIlRhcmdldCIsIm5ld1RhcmdldCIsIiRhcmdzIiwicHJvcGVydHlLZXkiLCJhdHRyaWJ1dGVzIiwiZGVsZXRlUHJvcGVydHkiLCJFbnVtZXJhdGUiLCJlbnVtZXJhdGUiLCJnZXRQcm90byIsInJlY2VpdmVyIiwic2V0UHJvdG8iLCJWIiwiZXhpc3RpbmdEZXNjcmlwdG9yIiwib3duRGVzYyIsIiRmbGFncyIsIiRSZWdFeHAiLCJDT1JSRUNUX05FVyIsInRpUkUiLCJwaVJFIiwiZmlVIiwicHJveHkiLCJmbGFncyIsImFkdmFuY2VTdHJpbmdJbmRleCIsInJlZ0V4cEV4ZWMiLCIkbWF0Y2giLCJtYXliZUNhbGxOYXRpdmUiLCJyeCIsImZ1bGxVbmljb2RlIiwibWF0Y2hTdHIiLCJTVUJTVElUVVRJT05fU1lNQk9MUyIsIlNVQlNUSVRVVElPTl9TWU1CT0xTX05PX05BTUVEIiwiUkVQTEFDRSIsIiRyZXBsYWNlIiwic2VhcmNoVmFsdWUiLCJyZXBsYWNlVmFsdWUiLCJmdW5jdGlvbmFsUmVwbGFjZSIsInJlc3VsdHMiLCJhY2N1bXVsYXRlZFJlc3VsdCIsIm5leHRTb3VyY2VQb3NpdGlvbiIsIm1hdGNoZWQiLCJwb3NpdGlvbiIsImNhcHR1cmVzIiwibmFtZWRDYXB0dXJlcyIsInJlcGxhY2VyQXJncyIsInJlcGxhY2VtZW50IiwiZ2V0U3Vic3RpdHV0aW9uIiwidGFpbFBvcyIsImNoIiwiY2FwdHVyZSIsInNhbWVWYWx1ZSIsIlNFQVJDSCIsIiRzZWFyY2giLCJwcmV2aW91c0xhc3RJbmRleCIsImNhbGxSZWdFeHBFeGVjIiwiJG1pbiIsIiRwdXNoIiwiTUFYX1VJTlQzMiIsIlNVUFBPUlRTX1kiLCJTUExJVCIsIiRzcGxpdCIsImludGVybmFsU3BsaXQiLCJsaW1pdCIsImxhc3RMZW5ndGgiLCJvdXRwdXQiLCJsYXN0TGFzdEluZGV4Iiwic3BsaXRMaW1pdCIsInNlcGFyYXRvckNvcHkiLCJzcGxpdHRlciIsInVuaWNvZGVNYXRjaGluZyIsImxpbSIsInEiLCJkZWZpbmUiLCJhZGQiLCIkYXQiLCJjb2RlUG9pbnRBdCIsIkVORFNfV0lUSCIsIiRlbmRzV2l0aCIsImVuZHNXaXRoIiwiZW5kUG9zaXRpb24iLCJjb2xvciIsImZyb21DaGFyQ29kZSIsIiRmcm9tQ29kZVBvaW50IiwiZnJvbUNvZGVQb2ludCIsIklOQ0xVREVTIiwicG9pbnQiLCJyYXciLCJjYWxsU2l0ZSIsInRwbCIsIlNUQVJUU19XSVRIIiwiJHN0YXJ0c1dpdGgiLCJzdGFydHNXaXRoIiwid2tzRGVmaW5lIiwiZW51bUtleXMiLCJfY3JlYXRlIiwiZ09QTkV4dCIsIiRHT1BTIiwiJEpTT04iLCJfc3RyaW5naWZ5IiwiSElEREVOIiwiU3ltYm9sUmVnaXN0cnkiLCJBbGxTeW1ib2xzIiwiT1BTeW1ib2xzIiwiUU9iamVjdCIsImZpbmRDaGlsZCIsInNldFN5bWJvbERlc2MiLCJwcm90b0Rlc2MiLCJ3cmFwIiwic3ltIiwiaXNTeW1ib2wiLCIkZGVmaW5lUHJvcGVydGllcyIsIiRwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIiRnZXRPd25Qcm9wZXJ0eU5hbWVzIiwiJGdldE93blByb3BlcnR5U3ltYm9scyIsIklTX09QIiwiZXM2U3ltYm9scyIsIndlbGxLbm93blN5bWJvbHMiLCJrZXlGb3IiLCJ1c2VTZXR0ZXIiLCJ1c2VTaW1wbGUiLCJGQUlMU19PTl9QUklNSVRJVkVTIiwicmVwbGFjZXIiLCIkcmVwbGFjZXIiLCIkaXNWaWV3IiwiZmluIiwidmlld1MiLCJ2aWV3VCIsImluaXQiLCJJbnRlcm5hbE1hcCIsImVhY2giLCJ3ZWFrIiwiTkFUSVZFX1dFQUtfTUFQIiwiSVNfSUUxMSIsIkFjdGl2ZVhPYmplY3QiLCJXRUFLX01BUCIsIiRXZWFrTWFwIiwiV0VBS19TRVQiLCJhcnJheVNwZWNpZXNDcmVhdGUiLCJmbGF0TWFwIiwiJGluY2x1ZGVzIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImdldERlc2MiLCIkdmFsdWVzIiwib25GaW5hbGx5IiwiJHBhZCIsIldFQktJVF9CVUciLCJwYWRFbmQiLCJwYWRTdGFydCIsIlRPX1NUUklOR19UQUciLCJBcnJheVZhbHVlcyIsIkRPTUl0ZXJhYmxlcyIsIkNTU1J1bGVMaXN0IiwiQ1NTU3R5bGVEZWNsYXJhdGlvbiIsIkNTU1ZhbHVlTGlzdCIsIkNsaWVudFJlY3RMaXN0IiwiRE9NUmVjdExpc3QiLCJET01TdHJpbmdMaXN0IiwiRE9NVG9rZW5MaXN0IiwiRGF0YVRyYW5zZmVySXRlbUxpc3QiLCJGaWxlTGlzdCIsIkhUTUxBbGxDb2xsZWN0aW9uIiwiSFRNTENvbGxlY3Rpb24iLCJIVE1MRm9ybUVsZW1lbnQiLCJIVE1MU2VsZWN0RWxlbWVudCIsIk1lZGlhTGlzdCIsIk1pbWVUeXBlQXJyYXkiLCJOYW1lZE5vZGVNYXAiLCJOb2RlTGlzdCIsIlBhaW50UmVxdWVzdExpc3QiLCJQbHVnaW4iLCJQbHVnaW5BcnJheSIsIlNWR0xlbmd0aExpc3QiLCJTVkdOdW1iZXJMaXN0IiwiU1ZHUGF0aFNlZ0xpc3QiLCJTVkdQb2ludExpc3QiLCJTVkdTdHJpbmdMaXN0IiwiU1ZHVHJhbnNmb3JtTGlzdCIsIlNvdXJjZUJ1ZmZlckxpc3QiLCJTdHlsZVNoZWV0TGlzdCIsIlRleHRUcmFja0N1ZUxpc3QiLCJUZXh0VHJhY2tMaXN0IiwiVG91Y2hMaXN0IiwiY29sbGVjdGlvbnMiLCJleHBsaWNpdCIsIkNvbGxlY3Rpb24iLCIkdGFzayIsIk1TSUUiLCJ0aW1lIiwiYm91bmRBcmdzIiwic2V0SW50ZXJ2YWwiLCJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMl9fXyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJpdGVtIiwibW9kdWxlcyIsIm1lZGlhUXVlcnkiLCJkZWR1cGUiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiX2FycmF5TGlrZVRvQXJyYXkiLCJhcnIyIiwiX2l0ZW0iLCJfYXJyYXlXaXRoSG9sZXMiLCJfYXJyIiwiX2UiLCJfaXRlcmFibGVUb0FycmF5TGltaXQiLCJtaW5MZW4iLCJfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkiLCJfbm9uSXRlcmFibGVSZXN0IiwiY3NzTWFwcGluZyIsImJhc2U2NCIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZVJvb3QiLCJvcHRpb25zIiwiX19lc01vZHVsZSIsIm5lZWRRdW90ZXMiLCJwcm9wSXNFbnVtZXJhYmxlIiwidGVzdDEiLCJ0ZXN0MiIsInRlc3QzIiwibGV0dGVyIiwic2hvdWxkVXNlTmF0aXZlIiwiUmVhY3RQcm9wVHlwZXNTZWNyZXQiLCJlbXB0eUZ1bmN0aW9uIiwiZW1wdHlGdW5jdGlvbldpdGhSZXNldCIsInJlc2V0V2FybmluZ0NhY2hlIiwic2hpbSIsInByb3BOYW1lIiwiY29tcG9uZW50TmFtZSIsInByb3BGdWxsTmFtZSIsInNlY3JldCIsImdldFNoaW0iLCJpc1JlcXVpcmVkIiwiUmVhY3RQcm9wVHlwZXMiLCJhcnJheSIsImJvb2wiLCJmdW5jIiwic3ltYm9sIiwiYW55IiwiYXJyYXlPZiIsImVsZW1lbnRUeXBlIiwiaW5zdGFuY2VPZiIsIm9iamVjdE9mIiwib25lT2YiLCJvbmVPZlR5cGUiLCJzaGFwZSIsImV4YWN0IiwiY2hlY2tQcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJhYSIsInUiLCJiYSIsImciLCJvbkVycm9yIiwiZGEiLCJlYSIsImZhIiwiaGEiLCJpYSIsImphIiwibGEiLCJtYSIsIm5hIiwib2EiLCJjdXJyZW50VGFyZ2V0Iiwia2EiLCJwYSIsInFhIiwicmEiLCJzYSIsImV4dHJhY3RFdmVudHMiLCJldmVudFR5cGVzIiwidGEiLCJwaGFzZWRSZWdpc3RyYXRpb25OYW1lcyIsInVhIiwicmVnaXN0cmF0aW9uTmFtZSIsInZhIiwid2EiLCJkZXBlbmRlbmNpZXMiLCJ4YSIsInlhIiwiemEiLCJBYSIsIkJhIiwiQ2EiLCJzdGF0ZU5vZGUiLCJEYSIsIkVhIiwiRmEiLCJHYSIsIkhhIiwiSWEiLCJKYSIsIkthIiwiTGEiLCJNYSIsIk5hIiwiT2EiLCJQYSIsIlFhIiwiYWNjZXB0c0Jvb2xlYW5zIiwiYXR0cmlidXRlTmFtZSIsImF0dHJpYnV0ZU5hbWVzcGFjZSIsIm11c3RVc2VQcm9wZXJ0eSIsInByb3BlcnR5TmFtZSIsInNhbml0aXplVVJMIiwiVWEiLCJWYSIsInhsaW5rSHJlZiIsIldhIiwiX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQiLCJYYSIsIlNhIiwiVGEiLCJSYSIsInJlbW92ZUF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZU5TIiwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlciIsImN1cnJlbnQiLCJSZWFjdEN1cnJlbnRCYXRjaENvbmZpZyIsInN1c3BlbnNlIiwiWWEiLCJmb3IiLCJaYSIsIiRhIiwiYWIiLCJiYiIsImNiIiwiZGIiLCJlYiIsImZiIiwiZ2IiLCJoYiIsImliIiwiamIiLCJrYiIsImxiIiwibWIiLCJuYiIsInBiIiwiZGlzcGxheU5hbWUiLCIkJHR5cGVvZiIsInJlbmRlciIsIl9zdGF0dXMiLCJfcmVzdWx0IiwicWIiLCJfZGVidWdPd25lciIsIl9kZWJ1Z1NvdXJjZSIsInJldHVybiIsInJiIiwic2IiLCJub2RlTmFtZSIsInhiIiwiX3ZhbHVlVHJhY2tlciIsImdldFZhbHVlIiwic2V0VmFsdWUiLCJzdG9wVHJhY2tpbmciLCJ0YiIsInliIiwiY2hlY2tlZCIsInpiIiwiZGVmYXVsdENoZWNrZWQiLCJkZWZhdWx0VmFsdWUiLCJfd3JhcHBlclN0YXRlIiwiaW5pdGlhbENoZWNrZWQiLCJBYiIsImluaXRpYWxWYWx1ZSIsImNvbnRyb2xsZWQiLCJCYiIsIkNiIiwiRGIiLCJFYiIsIm93bmVyRG9jdW1lbnQiLCJhY3RpdmVFbGVtZW50IiwiR2IiLCJjaGlsZHJlbiIsIkNoaWxkcmVuIiwiRmIiLCJIYiIsInNlbGVjdGVkIiwiZGVmYXVsdFNlbGVjdGVkIiwiZGlzYWJsZWQiLCJJYiIsImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIiwiSmIiLCJLYiIsIkxiIiwidGV4dENvbnRlbnQiLCJOYiIsIk9iIiwiUGIiLCJRYiIsIm5hbWVzcGFjZVVSSSIsImlubmVySFRNTCIsImZpcnN0Q2hpbGQiLCJNU0FwcCIsImV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uIiwiUmIiLCJsYXN0Q2hpbGQiLCJub2RlVHlwZSIsIm5vZGVWYWx1ZSIsIlNiIiwiVGIiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJVYiIsIlZiIiwiV2IiLCJhbmltYXRpb24iLCJ0cmFuc2l0aW9uIiwiWGIiLCJZYiIsIlpiIiwiJGIiLCJhYyIsImJjIiwiV2Vha01hcCIsIk1hcCIsImNjIiwiZGMiLCJhbHRlcm5hdGUiLCJlZmZlY3RUYWciLCJlYyIsIm1lbW9pemVkU3RhdGUiLCJkZWh5ZHJhdGVkIiwiZmMiLCJpYyIsImpjIiwia2MiLCJsYyIsIl9kaXNwYXRjaExpc3RlbmVycyIsIl9kaXNwYXRjaEluc3RhbmNlcyIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiaXNQZXJzaXN0ZW50IiwicmVsZWFzZSIsIm1jIiwibmMiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJwYXJlbnROb2RlIiwib2MiLCJwYyIsInFjIiwidG9wTGV2ZWxUeXBlIiwibmF0aXZlRXZlbnQiLCJ0YXJnZXRJbnN0IiwiYW5jZXN0b3JzIiwicmMiLCJwb3AiLCJldmVudFN5c3RlbUZsYWdzIiwic2MiLCJjb250YWluZXJJbmZvIiwidGMiLCJ1YyIsInZjIiwid2MiLCJ4YyIsInljIiwiemMiLCJBYyIsIkJjIiwiQ2MiLCJEYyIsIkVjIiwiRmMiLCJHYyIsIkhjIiwiSWMiLCJLYyIsImJsb2NrZWRPbiIsImNvbnRhaW5lciIsIkxjIiwiZGVsZXRlIiwicG9pbnRlcklkIiwiTWMiLCJOYyIsIlBjIiwidW5zdGFibGVfcnVuV2l0aFByaW9yaXR5IiwicHJpb3JpdHkiLCJoeWRyYXRlIiwiUWMiLCJSYyIsIlNjIiwiVGMiLCJVYyIsInVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2siLCJ1bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSIsIlZjIiwiV2MiLCJZYyIsIlpjIiwiJGMiLCJhZCIsImJ1YmJsZWQiLCJjYXB0dXJlZCIsImV2ZW50UHJpb3JpdHkiLCJiZCIsImNkIiwiZGQiLCJ1bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSIsImVkIiwiZmQiLCJnZCIsImhkIiwiT2MiLCJqZCIsImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IiwiYm9yZGVySW1hZ2VPdXRzZXQiLCJib3JkZXJJbWFnZVNsaWNlIiwiYm9yZGVySW1hZ2VXaWR0aCIsImJveEZsZXgiLCJib3hGbGV4R3JvdXAiLCJib3hPcmRpbmFsR3JvdXAiLCJjb2x1bW5Db3VudCIsImNvbHVtbnMiLCJmbGV4IiwiZmxleEdyb3ciLCJmbGV4UG9zaXRpdmUiLCJmbGV4U2hyaW5rIiwiZmxleE5lZ2F0aXZlIiwiZmxleE9yZGVyIiwiZ3JpZEFyZWEiLCJncmlkUm93IiwiZ3JpZFJvd0VuZCIsImdyaWRSb3dTcGFuIiwiZ3JpZFJvd1N0YXJ0IiwiZ3JpZENvbHVtbiIsImdyaWRDb2x1bW5FbmQiLCJncmlkQ29sdW1uU3BhbiIsImdyaWRDb2x1bW5TdGFydCIsImZvbnRXZWlnaHQiLCJsaW5lQ2xhbXAiLCJsaW5lSGVpZ2h0Iiwib3BhY2l0eSIsIm9yZGVyIiwib3JwaGFucyIsInRhYlNpemUiLCJ3aWRvd3MiLCJ6SW5kZXgiLCJ6b29tIiwiZmlsbE9wYWNpdHkiLCJmbG9vZE9wYWNpdHkiLCJzdG9wT3BhY2l0eSIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZURhc2hvZmZzZXQiLCJzdHJva2VNaXRlcmxpbWl0Iiwic3Ryb2tlT3BhY2l0eSIsInN0cm9rZVdpZHRoIiwia2QiLCJsZCIsIm1kIiwic2V0UHJvcGVydHkiLCJzdWJzdHJpbmciLCJuZCIsIm1lbnVpdGVtIiwiYXJlYSIsImJhc2UiLCJiciIsImNvbCIsImVtYmVkIiwiaHIiLCJpbWciLCJpbnB1dCIsImtleWdlbiIsImxpbmsiLCJwYXJhbSIsInRyYWNrIiwid2JyIiwib2QiLCJwZCIsInFkIiwicmQiLCJzZCIsInRkIiwiYm9keSIsInVkIiwidmQiLCJuZXh0U2libGluZyIsIndkIiwiY29udGFpbnMiLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsInhkIiwiSFRNTElGcmFtZUVsZW1lbnQiLCJ5ZCIsImNvbnRlbnRFZGl0YWJsZSIsIkJkIiwiQ2QiLCJEZCIsIkVkIiwiRmQiLCJhdXRvRm9jdXMiLCJHZCIsIl9faHRtbCIsIkhkIiwiSWQiLCJjbGVhclRpbWVvdXQiLCJKZCIsIktkIiwicHJldmlvdXNTaWJsaW5nIiwiTGQiLCJNZCIsIk5kIiwiT2QiLCJjaGlsZCIsIlBkIiwiUWQiLCJSZCIsIlNkIiwiVGQiLCJkaXNwYXRjaENvbmZpZyIsIlVkIiwiX3RhcmdldEluc3QiLCJWZCIsIlhkIiwiWWQiLCJaZCIsIiRkIiwiYWUiLCJiZSIsImNlIiwiSW50ZXJmYWNlIiwiaXNEZWZhdWx0UHJldmVudGVkIiwiZGVmYXVsdFByZXZlbnRlZCIsInJldHVyblZhbHVlIiwiZWUiLCJldmVudFBvb2wiLCJmZSIsImRlc3RydWN0b3IiLCJkZSIsImdldFBvb2xlZCIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwiY2FuY2VsQnViYmxlIiwicGVyc2lzdCIsImV2ZW50UGhhc2UiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsInRpbWVTdGFtcCIsImlzVHJ1c3RlZCIsImdlIiwiaGUiLCJpZSIsImplIiwia2UiLCJkb2N1bWVudE1vZGUiLCJsZSIsIm1lIiwibmUiLCJvZSIsImJlZm9yZUlucHV0IiwiY29tcG9zaXRpb25FbmQiLCJjb21wb3NpdGlvblN0YXJ0IiwiY29tcG9zaXRpb25VcGRhdGUiLCJwZSIsInFlIiwia2V5Q29kZSIsImRldGFpbCIsInNlIiwidmUiLCJsb2NhbGUiLCJ3aGljaCIsInRlIiwiY3RybEtleSIsImFsdEtleSIsIm1ldGFLZXkiLCJjaGFyIiwidWUiLCJ3ZSIsImRhdGUiLCJkYXRldGltZSIsImVtYWlsIiwibW9udGgiLCJyYW5nZSIsInRlbCIsInRleHQiLCJ3ZWVrIiwieGUiLCJ5ZSIsImNoYW5nZSIsInplIiwiQWUiLCJCZSIsIkNlIiwiRGUiLCJFZSIsIkZlIiwiR2UiLCJkZXRhY2hFdmVudCIsIkhlIiwiSWUiLCJhdHRhY2hFdmVudCIsIkplIiwiS2UiLCJMZSIsIk1lIiwiX2lzSW5wdXRFdmVudFN1cHBvcnRlZCIsIk5lIiwiT2UiLCJBbHQiLCJDb250cm9sIiwiTWV0YSIsIlNoaWZ0IiwiUGUiLCJnZXRNb2RpZmllclN0YXRlIiwiUWUiLCJSZSIsIlNlIiwiVGUiLCJVZSIsIlZlIiwic2NyZWVuWCIsInNjcmVlblkiLCJjbGllbnRYIiwiY2xpZW50WSIsInBhZ2VYIiwicGFnZVkiLCJzaGlmdEtleSIsImJ1dHRvbiIsImJ1dHRvbnMiLCJyZWxhdGVkVGFyZ2V0IiwiZnJvbUVsZW1lbnQiLCJ0b0VsZW1lbnQiLCJtb3ZlbWVudFgiLCJtb3ZlbWVudFkiLCJXZSIsIndpZHRoIiwiaGVpZ2h0IiwicHJlc3N1cmUiLCJ0YW5nZW50aWFsUHJlc3N1cmUiLCJ0aWx0WCIsInRpbHRZIiwidHdpc3QiLCJwb2ludGVyVHlwZSIsImlzUHJpbWFyeSIsIlhlIiwibW91c2VFbnRlciIsIm1vdXNlTGVhdmUiLCJwb2ludGVyRW50ZXIiLCJwb2ludGVyTGVhdmUiLCJZZSIsImRlZmF1bHRWaWV3IiwicGFyZW50V2luZG93IiwiJGUiLCJhZiIsImJmIiwiY2YiLCJkZiIsInNlbGVjdCIsImVmIiwiZmYiLCJnZiIsImhmIiwiamYiLCJzZWxlY3Rpb25TdGFydCIsInNlbGVjdGlvbkVuZCIsImFuY2hvck5vZGUiLCJnZXRTZWxlY3Rpb24iLCJhbmNob3JPZmZzZXQiLCJmb2N1c05vZGUiLCJmb2N1c09mZnNldCIsImtmIiwib25TZWxlY3QiLCJsZiIsImFuaW1hdGlvbk5hbWUiLCJlbGFwc2VkVGltZSIsInBzZXVkb0VsZW1lbnQiLCJtZiIsImNsaXBib2FyZERhdGEiLCJuZiIsImNoYXJDb2RlIiwicGYiLCJFc2MiLCJTcGFjZWJhciIsIkxlZnQiLCJVcCIsIlJpZ2h0IiwiRG93biIsIkRlbCIsIldpbiIsIk1lbnUiLCJBcHBzIiwiU2Nyb2xsIiwiTW96UHJpbnRhYmxlS2V5IiwicWYiLCI4IiwiOSIsIjEyIiwiMTMiLCIxNiIsIjE3IiwiMTgiLCIxOSIsIjIwIiwiMjciLCIzMiIsIjMzIiwiMzQiLCIzNSIsIjM2IiwiMzciLCIzOCIsIjM5IiwiNDAiLCI0NSIsIjQ2IiwiMTEyIiwiMTEzIiwiMTE0IiwiMTE1IiwiMTE2IiwiMTE3IiwiMTE4IiwiMTE5IiwiMTIwIiwiMTIxIiwiMTIyIiwiMTIzIiwiMTQ0IiwiMTQ1IiwiMjI0IiwicmYiLCJzZiIsImRhdGFUcmFuc2ZlciIsInRmIiwidG91Y2hlcyIsInRhcmdldFRvdWNoZXMiLCJjaGFuZ2VkVG91Y2hlcyIsInVmIiwidmYiLCJkZWx0YVgiLCJ3aGVlbERlbHRhWCIsImRlbHRhWSIsIndoZWVsRGVsdGFZIiwid2hlZWxEZWx0YSIsImRlbHRhWiIsImRlbHRhTW9kZSIsIndmIiwiU2ltcGxlRXZlbnRQbHVnaW4iLCJFbnRlckxlYXZlRXZlbnRQbHVnaW4iLCJDaGFuZ2VFdmVudFBsdWdpbiIsIlNlbGVjdEV2ZW50UGx1Z2luIiwiQmVmb3JlSW5wdXRFdmVudFBsdWdpbiIsInlmIiwiemYiLCJIIiwiSSIsIkFmIiwiSiIsIkJmIiwiQ2YiLCJjb250ZXh0VHlwZXMiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0IiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQiLCJjaGlsZENvbnRleHRUeXBlcyIsIkRmIiwiRWYiLCJGZiIsImdldENoaWxkQ29udGV4dCIsIkdmIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQiLCJIZiIsIklmIiwiSmYiLCJLZiIsInVuc3RhYmxlX2NhbmNlbENhbGxiYWNrIiwiTGYiLCJ1bnN0YWJsZV9yZXF1ZXN0UGFpbnQiLCJNZiIsInVuc3RhYmxlX25vdyIsIk5mIiwidW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwiLCJPZiIsInVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5IiwiUGYiLCJRZiIsIlJmIiwidW5zdGFibGVfTG93UHJpb3JpdHkiLCJTZiIsInVuc3RhYmxlX0lkbGVQcmlvcml0eSIsIlRmIiwiVWYiLCJ1bnN0YWJsZV9zaG91bGRZaWVsZCIsIlZmIiwiV2YiLCJYZiIsIllmIiwiWmYiLCIkZiIsImFnIiwiYmciLCJjZyIsImRnIiwiZWciLCJmZyIsImdnIiwiaGciLCJpZyIsImRlZmF1bHRQcm9wcyIsImpnIiwia2ciLCJsZyIsIm1nIiwibmciLCJvZyIsIl9jb250ZXh0IiwiX2N1cnJlbnRWYWx1ZSIsInBnIiwiY2hpbGRFeHBpcmF0aW9uVGltZSIsInFnIiwiZmlyc3RDb250ZXh0IiwiZXhwaXJhdGlvblRpbWUiLCJyZyIsInNnIiwib2JzZXJ2ZWRCaXRzIiwicmVzcG9uZGVycyIsInRnIiwidWciLCJ1cGRhdGVRdWV1ZSIsImJhc2VTdGF0ZSIsImJhc2VRdWV1ZSIsInBlbmRpbmciLCJlZmZlY3RzIiwidmciLCJ3ZyIsInN1c3BlbnNlQ29uZmlnIiwieGciLCJ5ZyIsInpnIiwiY2EiLCJBZyIsIkJnIiwiQ2ciLCJEZyIsIkVnIiwiQ29tcG9uZW50IiwicmVmcyIsIkZnIiwiSmciLCJpc01vdW50ZWQiLCJfcmVhY3RJbnRlcm5hbEZpYmVyIiwiZW5xdWV1ZVNldFN0YXRlIiwiR2ciLCJIZyIsIklnIiwiZW5xdWV1ZVJlcGxhY2VTdGF0ZSIsImVucXVldWVGb3JjZVVwZGF0ZSIsIktnIiwic2hvdWxkQ29tcG9uZW50VXBkYXRlIiwiaXNQdXJlUmVhY3RDb21wb25lbnQiLCJMZyIsImNvbnRleHRUeXBlIiwic3RhdGUiLCJ1cGRhdGVyIiwiTWciLCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJOZyIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsImdldFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudERpZE1vdW50IiwiT2ciLCJQZyIsInJlZiIsIl9vd25lciIsIl9zdHJpbmdSZWYiLCJRZyIsIlJnIiwibGFzdEVmZmVjdCIsIm5leHRFZmZlY3QiLCJmaXJzdEVmZmVjdCIsInNpYmxpbmciLCJTZyIsIlRnIiwiVWciLCJpbXBsZW1lbnRhdGlvbiIsIlZnIiwiV2ciLCJYZyIsIllnIiwiWmciLCIkZyIsImFoIiwiYmgiLCJkaCIsInRhZ05hbWUiLCJlaCIsImZoIiwiZ2giLCJNIiwiaGgiLCJtZW1vaXplZFByb3BzIiwicmV2ZWFsT3JkZXIiLCJpaCIsInJlc3BvbmRlciIsImpoIiwia2giLCJsaCIsIk4iLCJtaCIsIlEiLCJuaCIsIm9oIiwicGgiLCJxaCIsInJoIiwic2giLCJ0aCIsInVoIiwidmgiLCJ3aCIsImxhc3RSZW5kZXJlZFJlZHVjZXIiLCJhY3Rpb24iLCJlYWdlclJlZHVjZXIiLCJlYWdlclN0YXRlIiwibGFzdFJlbmRlcmVkU3RhdGUiLCJkaXNwYXRjaCIsInhoIiwieWgiLCJ6aCIsIkFoIiwiZGVzdHJveSIsImRlcHMiLCJCaCIsIkNoIiwiRGgiLCJFaCIsIkZoIiwiR2giLCJIaCIsIkloIiwiSmgiLCJLaCIsIkxoIiwiTWgiLCJOaCIsInJlYWRDb250ZXh0IiwidXNlQ2FsbGJhY2siLCJ1c2VDb250ZXh0IiwidXNlRWZmZWN0IiwidXNlSW1wZXJhdGl2ZUhhbmRsZSIsInVzZUxheW91dEVmZmVjdCIsInVzZU1lbW8iLCJ1c2VSZWR1Y2VyIiwidXNlUmVmIiwidXNlU3RhdGUiLCJ1c2VEZWJ1Z1ZhbHVlIiwidXNlUmVzcG9uZGVyIiwidXNlRGVmZXJyZWRWYWx1ZSIsInVzZVRyYW5zaXRpb24iLCJPaCIsIlBoIiwiUWgiLCJSaCIsIlNoIiwiVGgiLCJwZW5kaW5nUHJvcHMiLCJVaCIsIlZoIiwiV2giLCJYaCIsIlloIiwiUmVhY3RDdXJyZW50T3duZXIiLCJaaCIsIiRoIiwiYWkiLCJiaSIsImNvbXBhcmUiLCJjaSIsImRpIiwiZWkiLCJmaSIsIlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudERpZFVwZGF0ZSIsImdpIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yIiwiaGkiLCJwZW5kaW5nQ29udGV4dCIsIm5pIiwicGkiLCJxaSIsImlpIiwicmV0cnlUaW1lIiwiamkiLCJmYWxsYmFjayIsInVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrIiwia2kiLCJsaSIsImlzQmFja3dhcmRzIiwicmVuZGVyaW5nIiwicmVuZGVyaW5nU3RhcnRUaW1lIiwidGFpbCIsInRhaWxFeHBpcmF0aW9uIiwidGFpbE1vZGUiLCJtaSIsInJpIiwic2kiLCJ3YXNNdWx0aXBsZSIsIm11bHRpcGxlIiwib25DbGljayIsIm9uY2xpY2siLCJjcmVhdGVFbGVtZW50TlMiLCJ0aSIsInVpIiwidmkiLCJ3aSIsInhpIiwieWkiLCJ6aSIsIkFpIiwiQmkiLCJXZWFrU2V0IiwiU2V0IiwiQ2kiLCJGaSIsIkVpIiwiR2kiLCJfX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIkhpIiwiSWkiLCJKaSIsImZvY3VzIiwiS2kiLCJMaSIsImNvbXBvbmVudFdpbGxVbm1vdW50IiwiRGkiLCJNaSIsIk5pIiwiT2kiLCJQaSIsIlFpIiwiUmkiLCJpbnNlcnRCZWZvcmUiLCJfcmVhY3RSb290Q29udGFpbmVyIiwiU2kiLCJUaSIsIlVpIiwiVmkiLCJXaSIsIlhpIiwiWWkiLCJaaSIsIiRpIiwiY29tcG9uZW50RGlkQ2F0Y2giLCJhaiIsImNvbXBvbmVudFN0YWNrIiwiUmoiLCJiaiIsImNqIiwiZGoiLCJYIiwia2oiLCJsaiIsIm1qIiwibmoiLCJvaiIsIlkiLCJxaiIsInJqIiwic2oiLCJ0aiIsInVqIiwidmoiLCJ3aiIsInRpbWVvdXRNcyIsInhqIiwieWoiLCJaIiwiemoiLCJsYXN0RXhwaXJlZFRpbWUiLCJBaiIsImZpcnN0UGVuZGluZ1RpbWUiLCJsYXN0UGluZ2VkVGltZSIsIm5leHRLbm93blBlbmRpbmdMZXZlbCIsImNhbGxiYWNrRXhwaXJhdGlvblRpbWUiLCJjYWxsYmFja1ByaW9yaXR5IiwiY2FsbGJhY2tOb2RlIiwiQmoiLCJDaiIsIkRqIiwiRWoiLCJGaiIsIkdqIiwiSGoiLCJmaW5pc2hlZFdvcmsiLCJmaW5pc2hlZEV4cGlyYXRpb25UaW1lIiwibGFzdFN1c3BlbmRlZFRpbWUiLCJJaiIsInRpbWVvdXRIYW5kbGUiLCJKaiIsImJ1c3lNaW5EdXJhdGlvbk1zIiwiYnVzeURlbGF5TXMiLCJLaiIsInBpbmdDYWNoZSIsIk9qIiwidWIiLCJQaiIsIlhjIiwiUWoiLCJTaiIsImZpcnN0U3VzcGVuZGVkVGltZSIsInJhbmdlQ291bnQiLCJ3YiIsImFjdGl2ZUVsZW1lbnREZXRhY2hlZCIsImZvY3VzZWRFbGVtIiwic2VsZWN0aW9uUmFuZ2UiLCJUaiIsImNyZWF0ZVJhbmdlIiwic2V0U3RhcnQiLCJyZW1vdmVBbGxSYW5nZXMiLCJhZGRSYW5nZSIsInNldEVuZCIsInNjcm9sbExlZnQiLCJ0b3AiLCJzY3JvbGxUb3AiLCJ2YiIsIlVqIiwiVmoiLCJXaiIsImhpZGRlbiIsIl9jdG9yIiwib2IiLCJYaiIsIl9jYWxjdWxhdGVDaGFuZ2VkQml0cyIsInVuc3RhYmxlX29ic2VydmVkQml0cyIsIlpqIiwiaXNSZWFjdENvbXBvbmVudCIsInBlbmRpbmdDaGlsZHJlbiIsImFrIiwiYmsiLCJjayIsImRrIiwiZWsiLCJmayIsIkpjIiwiX2ludGVybmFsUm9vdCIsImdrIiwiaWsiLCJoYXNBdHRyaWJ1dGUiLCJoayIsIk5qIiwidW5tb3VudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JtIiwiTGoiLCJmaW5kRmliZXJCeUhvc3RJbnN0YW5jZSIsIl9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyIsImlzRGlzYWJsZWQiLCJzdXBwb3J0c0ZpYmVyIiwiaW5qZWN0Iiwib25Db21taXRGaWJlclJvb3QiLCJvbkNvbW1pdEZpYmVyVW5tb3VudCIsIllqIiwib3ZlcnJpZGVIb29rU3RhdGUiLCJvdmVycmlkZVByb3BzIiwic2V0U3VzcGVuc2VIYW5kbGVyIiwic2NoZWR1bGVVcGRhdGUiLCJjdXJyZW50RGlzcGF0Y2hlclJlZiIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwiZ2MiLCJoYyIsImZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaCIsInNjaGVkdWxlUmVmcmVzaCIsInNjaGVkdWxlUm9vdCIsInNldFJlZnJlc2hIYW5kbGVyIiwiZ2V0Q3VycmVudEZpYmVyIiwiYnVuZGxlVHlwZSIsInJlbmRlcmVyUGFja2FnZU5hbWUiLCJjaGVja0RDRSIsInNldFN0YXRlIiwiZm9yY2VVcGRhdGUiLCJfX3NlbGYiLCJfX3NvdXJjZSIsImtleVByZWZpeCIsImVzY2FwZSIsIklzU29tZVJlbmRlcmVyQWN0aW5nIiwidG9BcnJheSIsIm9ubHkiLCJGcmFnbWVudCIsIlByb2ZpbGVyIiwiUHVyZUNvbXBvbmVudCIsIlN0cmljdE1vZGUiLCJTdXNwZW5zZSIsImNsb25lRWxlbWVudCIsImNyZWF0ZUNvbnRleHQiLCJfY3VycmVudFZhbHVlMiIsIl90aHJlYWRDb3VudCIsIlByb3ZpZGVyIiwiQ29uc3VtZXIiLCJjcmVhdGVGYWN0b3J5IiwiY3JlYXRlUmVmIiwiZm9yd2FyZFJlZiIsImlzVmFsaWRFbGVtZW50IiwibGF6eSIsInJ1bnRpbWUiLCJPcCIsImhhc093biIsIml0ZXJhdG9yU3ltYm9sIiwiYXN5bmNJdGVyYXRvclN5bWJvbCIsImFzeW5jSXRlcmF0b3IiLCJ0b1N0cmluZ1RhZ1N5bWJvbCIsInRvU3RyaW5nVGFnIiwiaW5uZXJGbiIsIm91dGVyRm4iLCJ0cnlMb2NzTGlzdCIsInByb3RvR2VuZXJhdG9yIiwiR2VuZXJhdG9yIiwiZ2VuZXJhdG9yIiwiQ29udGV4dCIsIl9pbnZva2UiLCJHZW5TdGF0ZVN1c3BlbmRlZFN0YXJ0IiwiR2VuU3RhdGVFeGVjdXRpbmciLCJHZW5TdGF0ZUNvbXBsZXRlZCIsImRvbmVSZXN1bHQiLCJkZWxlZ2F0ZSIsImRlbGVnYXRlUmVzdWx0IiwibWF5YmVJbnZva2VEZWxlZ2F0ZSIsIkNvbnRpbnVlU2VudGluZWwiLCJzZW50IiwiX3NlbnQiLCJkaXNwYXRjaEV4Y2VwdGlvbiIsImFicnVwdCIsInJlY29yZCIsInRyeUNhdGNoIiwiR2VuU3RhdGVTdXNwZW5kZWRZaWVsZCIsIm1ha2VJbnZva2VNZXRob2QiLCJHZW5lcmF0b3JGdW5jdGlvbiIsIkdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlIiwiTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUiLCJHcCIsImRlZmluZUl0ZXJhdG9yTWV0aG9kcyIsIkFzeW5jSXRlcmF0b3IiLCJQcm9taXNlSW1wbCIsIl9fYXdhaXQiLCJ1bndyYXBwZWQiLCJwcmV2aW91c1Byb21pc2UiLCJjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZyIsImluZm8iLCJyZXN1bHROYW1lIiwibmV4dExvYyIsInB1c2hUcnlFbnRyeSIsImxvY3MiLCJ0cnlMb2MiLCJjYXRjaExvYyIsImZpbmFsbHlMb2MiLCJhZnRlckxvYyIsInRyeUVudHJpZXMiLCJyZXNldFRyeUVudHJ5IiwiY29tcGxldGlvbiIsInJlc2V0IiwiaXRlcmF0b3JNZXRob2QiLCJpc0dlbmVyYXRvckZ1bmN0aW9uIiwiZ2VuRnVuIiwiY3RvciIsIm1hcmsiLCJhd3JhcCIsImFzeW5jIiwic2tpcFRlbXBSZXNldCIsInN0b3AiLCJyb290UmVjb3JkIiwicnZhbCIsImV4Y2VwdGlvbiIsImhhbmRsZSIsImxvYyIsImNhdWdodCIsImhhc0NhdGNoIiwiaGFzRmluYWxseSIsImZpbmFsbHlFbnRyeSIsImNvbXBsZXRlIiwiZmluaXNoIiwidGhyb3duIiwiZGVsZWdhdGVZaWVsZCIsInJlZ2VuZXJhdG9yUnVudGltZSIsImFjY2lkZW50YWxTdHJpY3RNb2RlIiwidW5zdGFibGVfZm9yY2VGcmFtZVJhdGUiLCJwZXJmb3JtYW5jZSIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwic29ydEluZGV4Iiwic3RhcnRUaW1lIiwicHJpb3JpdHlMZXZlbCIsInVuc3RhYmxlX1Byb2ZpbGluZyIsInVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uIiwidW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGUiLCJ1bnN0YWJsZV9uZXh0IiwidW5zdGFibGVfcGF1c2VFeGVjdXRpb24iLCJkZWxheSIsInVuc3RhYmxlX3dyYXBDYWxsYmFjayIsImdldFRhcmdldCIsInN0eWxlVGFyZ2V0IiwicXVlcnlTZWxlY3RvciIsImNvbnRlbnREb2N1bWVudCIsInN0eWxlc0luRG9tIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwibW9kdWxlc1RvRG9tIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiY3NzIiwibWVkaWEiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwiYWRkU3R5bGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJub25jZSIsImluc2VydCIsInRleHRTdG9yZSIsInJlcGxhY2VUZXh0IiwiQm9vbGVhbiIsImFwcGx5VG9TaW5nbGV0b25UYWciLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImNzc05vZGUiLCJjaGlsZE5vZGVzIiwiYXBwbHlUb1RhZyIsInNpbmdsZXRvbiIsInNpbmdsZXRvbkNvdW50ZXIiLCJ1cGRhdGUiLCJzdHlsZUluZGV4IiwicmVtb3ZlU3R5bGVFbGVtZW50IiwibmV3T2JqIiwiYXRvYiIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaW5kZXgiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwiZGVmaW5pdGlvbiIsImdsb2JhbFRoaXMiLCJzY3JpcHRVcmwiLCJjdXJyZW50U2NyaXB0Iiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiX2dsb2JhbCIsIl9iYWJlbFBvbHlmaWxsIiwid2FybiIsIlRodW1icyIsInRodW1iQ2xpY2siLCJ0aHVtYnMiLCJpbWFnZXMiLCJ0aHVtYkNsYXNzIiwiaW1hZ2VBcnJheSIsInN1YkFycmF5IiwiY2xhc3NOYW1lIiwidHJpcGxldCIsInJvbGUiLCJ0YWJJbmRleCIsIm9uS2V5VXAiLCJhbHQiLCJpbWFnZSIsIlJlYWN0IiwicHJvcFR5cGVzIiwiTW9kYWwiLCJzaG93Wm9vbU1vZGFsIiwibGVmdENsaWNrIiwicmlnaHRDbGljayIsInRyYW5zZm9ybSIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJvbkNsb3NlIiwibW9kYWxUaHVtYnMiLCJyaWdodCIsInNob3dNb2RhbCIsIm1haW4iLCJ2aWV3Qm94IiwibW9kYWxUaHVtYkNsYXNzIiwibW9kYWxNYWluIiwiZmF2b3JpdGUiLCJnZXRJdGVtcyIsImxlZnRNb2RhbENsaWNrIiwicmlnaHRNb2RhbENsaWNrIiwibWFpbkNsaWNrIiwiY2hhbmdlRmF2IiwiaXRlbUlkIiwidGh1bWJzQXJyYXkiLCJtb2RhbFRodW1ic0FycmF5IiwiX2lkIiwiZ2V0RWxlbWVudEJ5SWQiLCJmYXZvcml0ZUJ1dHRvbiIsImZhdiIsIlJlYWN0RE9NIl0sIm1hcHBpbmdzIjoiO3lDQUVBLEVBQVEsTUFFUixFQUFRLEtBRVIsRUFBUSxLQUVSLEVBQVEsTUFFUixFQUFRLE1BRVIsRUFBUSxNQUVSLEVBQVEsTUFFUixFQUFRLE1BRVIsRUFBUSxNQUVSLEVBQVEsTUFFUixFQUFRLE1BRVIsRUFBUSxNQUVSLEVBQVEsTUFFUixFQUFRLE8sU0NwQlJBLEVBQU9DLFFBUlAsU0FBZ0NDLEdBQzlCLFFBQWEsSUFBVEEsRUFDRixNQUFNLElBQUlDLGVBQWUsNkRBRzNCLE9BQU9ELEksU0NDVEYsRUFBT0MsUUFOUCxTQUF5QkcsRUFBVUMsR0FDakMsS0FBTUQsYUFBb0JDLEdBQ3hCLE1BQU0sSUFBSUMsVUFBVSx1QyxTQ0Z4QixTQUFTQyxFQUFrQkMsRUFBUUMsR0FDakMsSUFBSyxJQUFJQyxFQUFJLEVBQUdBLEVBQUlELEVB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dUcsSyxlQ3BVVCxFQUFRLE1BQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLE1BQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLE1BQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLE1BQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLE1BQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLE1BQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLE1BQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLE1BQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLEtBQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLE1BQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLE1BQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLE1BQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLE1BQ1IsRUFBUSxLQUNSLEVBQVEsTUFDUixFQUFRLE1BQ1IsRUFBUSxNQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLE1BQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLE1BQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsTUFDUixFQUFRLE1BQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLE1BQ1IsRUFBUSxNQUNSLEVBQVEsS0FDUixFQUFRLE1BQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLE1BQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLE1BQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLE1BQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLE1BQ1IsRUFBUSxLQUNSLEVBQVEsTUFDUixFQUFRLE1BQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLE1BQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLE1BQ1IsRUFBUSxNQUNSLEVBQVEsS0FDUixFQUFRLElBQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLE1BQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLE1BQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLE1BQ1IsRUFBUSxLQUNSLEVBQVEsTUFDUixFQUFRLE1BQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLE1BQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLE1BQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLE1BQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLEtBQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLEtBQ1IsRUFBUSxNQUNSLEVBQVEsS0FDUixFQUFRLE1BQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLE1BQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLE1BQ1IsRUFBUSxNQUNSLEVBQVEsS0FDUixFQUFRLE1BQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLEtBQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLE1BQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLE1BQ1IsRUFBUSxNQUNSLEVBQVEsTUFDUixFQUFRLE1BQ1IsRUFBUSxJQUNSLEVBQVEsTUFDUnZTLEVBQU9DLFFBQVUsRUFBakIsTyxjQzFJQSxFQUFRLE1BQ1JELEVBQU9DLFFBQVUsRUFBakIscUIsY0NEQSxFQUFRLE1BQ1JELEVBQU9DLFFBQVUsRUFBakIsc0IsZUNEQSxFQUFRLE1BQ1JELEVBQU9DLFFBQVUsRUFBakIsc0IsZUNEQSxFQUFRLE1BQ1JELEVBQU9DLFFBQVUsRUFBakIsd0MsZUNEQSxFQUFRLE1BQ1JELEVBQU9DLFFBQVUsRUFBakIscUIsNEJDQUEsRUFBUSxLQUNSLEVBQVEsTUFDUkQsRUFBT0MsUUFBVSxFQUFqQix1QixlQ0hBLEVBQVEsTUFDUkQsRUFBT0MsUUFBVSxFQUFqQixxQixlQ0RBLEVBQVEsTUFDUkQsRUFBT0MsUUFBVSxFQUFqQix1QixlQ0RBLEVBQVEsTUFDUkQsRUFBT0MsUUFBVSxFQUFqQix3QixlQ0RBLEVBQVEsTUFDUkQsRUFBT0MsUUFBVSxFQUFqQix1QixlQ0RBLEVBQVEsTUFDUkQs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QUFRLEtBQVIsQ0FBMEIsVUFBVyxHQUFHLFNBQVVtcEMsR0FDaEQsT0FBTyxTQUFzQnptQyxFQUFNcXZCLEVBQVkveEIsR0FDN0MsT0FBT21wQyxFQUFLMWhDLEtBQU0vRSxFQUFNcXZCLEVBQVkveEIsUSxlQ0Z4QyxFQUFRLEtBQVIsQ0FBMEIsUUFBUyxHQUFHLFNBQVVtcEMsR0FDOUMsT0FBTyxTQUFvQnptQyxFQUFNcXZCLEVBQVkveEIsR0FDM0MsT0FBT21wQyxFQUFLMWhDLEtBQU0vRSxFQUFNcXZCLEVBQVkveEIsUSxlQ0Z4QyxFQUFRLEtBQVIsQ0FBMEIsUUFBUyxHQUFHLFNBQVVtcEMsR0FDOUMsT0FBTyxTQUFvQnptQyxFQUFNcXZCLEVBQVkveEIsR0FDM0MsT0FBT21wQyxFQUFLMWhDLEtBQU0vRSxFQUFNcXZCLEVBQVkveEIsUSxlQ0Z4QyxFQUFRLEtBQVIsQ0FBMEIsT0FBUSxHQUFHLFNBQVVtcEMsR0FDN0MsT0FBTyxTQUFtQnptQyxFQUFNcXZCLEVBQVkveEIsR0FDMUMsT0FBT21wQyxFQUFLMWhDLEtBQU0vRSxFQUFNcXZCLEVBQVkveEIsUSxlQ0Z4QyxFQUFRLEtBQVIsQ0FBMEIsU0FBVSxHQUFHLFNBQVVtcEMsR0FDL0MsT0FBTyxTQUFxQnptQyxFQUFNcXZCLEVBQVkveEIsR0FDNUMsT0FBT21wQyxFQUFLMWhDLEtBQU0vRSxFQUFNcXZCLEVBQVkveEIsUSxlQ0Z4QyxFQUFRLEtBQVIsQ0FBMEIsU0FBVSxHQUFHLFNBQVVtcEMsR0FDL0MsT0FBTyxTQUFxQnptQyxFQUFNcXZCLEVBQVkveEIsR0FDNUMsT0FBT21wQyxFQUFLMWhDLEtBQU0vRSxFQUFNcXZCLEVBQVkveEIsUSxlQ0Z4QyxFQUFRLEtBQVIsQ0FBMEIsUUFBUyxHQUFHLFNBQVVtcEMsR0FDOUMsT0FBTyxTQUFvQnptQyxFQUFNcXZCLEVBQVkveEIsR0FDM0MsT0FBT21wQyxFQUFLMWhDLEtBQU0vRSxFQUFNcXZCLEVBQVkveEIsUSxlQ0Z4QyxFQUFRLEtBQVIsQ0FBMEIsUUFBUyxHQUFHLFNBQVVtcEMsR0FDOUMs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d0JBQU14Z0UsRUFBRSx3SEFHWiwwQkFBUXlwRCxRQUFTNytELEtBQUtvMkUsVUFBVzVCLFVBQVdtQyxFQUFLenJFLEtBQUssVUFDcEQsdUJBQUswcUUsUUFBUSxhQUNWYyxLQUtQLGdCQUFDLEVBQUQsQ0FDRXJDLFdBQVl3QixFQUNaekIsT0FBUUEsRUFDUnVCLEtBQU1HLEVBQ05KLFVBQVdBLEVBQ1hILFFBQVN2MUUsS0FBS20yRSxVQUNkcnpELEtBQU05aUIsS0FBS2kyRSxlQUNYUixNQUFPejFFLEtBQUtrMkUsZ0JBQ1pWLFlBQWF4MUUsS0FBS3cxRSxtQixHQXhMUlQsaUIsaUNDRVAsSUFBSSxJQUxILENBRWQsT0FBaUIsT0FDakIsV0FBb0IsSUFNTCxXLHdCQ0pmNkIsU0FBZ0IsZ0JBQUMsRUFBRCxNQUFXN3ZFLFNBQVMwdkUsZUFBZSxXIiwiZmlsZSI6ImJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5yZXF1aXJlKFwiY29yZS1qcy9lczZcIik7XG5cbnJlcXVpcmUoXCJjb3JlLWpzL2ZuL2FycmF5L2luY2x1ZGVzXCIpO1xuXG5yZXF1aXJlKFwiY29yZS1qcy9mbi9hcnJheS9mbGF0LW1hcFwiKTtcblxucmVxdWlyZShcImNvcmUtanMvZm4vc3RyaW5nL3BhZC1zdGFydFwiKTtcblxucmVxdWlyZShcImNvcmUtanMvZm4vc3RyaW5nL3BhZC1lbmRcIik7XG5cbnJlcXVpcmUoXCJjb3JlLWpzL2ZuL3N0cmluZy90cmltLXN0YXJ0XCIpO1xuXG5yZXF1aXJlKFwiY29yZS1qcy9mbi9zdHJpbmcvdHJpbS1lbmRcIik7XG5cbnJlcXVpcmUoXCJjb3JlLWpzL2ZuL3N5bWJvbC9hc3luYy1pdGVyYXRvclwiKTtcblxucmVxdWlyZShcImNvcmUtanMvZm4vb2JqZWN0L2dldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcnNcIik7XG5cbnJlcXVpcmUoXCJjb3JlLWpzL2ZuL29iamVjdC92YWx1ZXNcIik7XG5cbnJlcXVpcmUoXCJjb3JlLWpzL2ZuL29iamVjdC9lbnRyaWVzXCIpO1xuXG5yZXF1aXJlKFwiY29yZS1qcy9mbi9wcm9taXNlL2ZpbmFsbHlcIik7XG5cbnJlcXVpcmUoXCJjb3JlLWpzL3dlYlwiKTtcblxucmVxdWlyZShcInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZVwiKTsiLCJmdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHtcbiAgaWYgKHNlbGYgPT09IHZvaWQgMCkge1xuICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtcbiAgfVxuXG4gIHJldHVybiBzZWxmO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQ7IiwiZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3Rvcikge1xuICBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfY2xhc3NDYWxsQ2hlY2s7IiwiZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykge1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTtcbiAgICBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7XG4gICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlO1xuICAgIGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpO1xuICB9XG59XG5cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHtcbiAgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7XG4gIGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTtcbiAgcmV0dXJuIENvbnN0cnVjdG9yO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9jcmVhdGVDbGFzczsiLCJmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2Yobykge1xuICBtb2R1bGUuZXhwb3J0cyA9IF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7XG4gICAgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTtcbiAgfTtcbiAgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfZ2V0UHJvdG90eXBlT2Y7IiwidmFyIHNldFByb3RvdHlwZU9mID0gcmVxdWlyZShcIi4vc2V0UHJvdG90eXBlT2ZcIik7XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpO1xuICB9XG5cbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7XG4gICAgY29uc3RydWN0b3I6IHtcbiAgICAgIHZhbHVlOiBzdWJDbGFzcyxcbiAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfVxuICB9KTtcbiAgaWYgKHN1cGVyQ2xhc3MpIHNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfaW5oZXJpdHM7IiwidmFyIF90eXBlb2YgPSByZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy90eXBlb2ZcIik7XG5cbnZhciBhc3NlcnRUaGlzSW5pdGlhbGl6ZWQgPSByZXF1aXJlKFwiLi9hc3NlcnRUaGlzSW5pdGlhbGl6ZWRcIik7XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHtcbiAgaWYgKGNhbGwgJiYgKF90eXBlb2YoY2FsbCkgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikpIHtcbiAgICByZXR1cm4gY2FsbDtcbiAgfVxuXG4gIHJldHVybiBhc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm47IiwiZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgICBvLl9fcHJvdG9fXyA9IHA7XG4gICAgcmV0dXJuIG87XG4gIH07XG5cbiAgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfc2V0UHJvdG90eXBlT2Y7IiwiZnVuY3Rpb24gX3R5cGVvZihvYmopIHtcbiAgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiO1xuXG4gIGlmICh0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIikge1xuICAgIG1vZHVsZS5leHBvcnRzID0gX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7XG4gICAgICByZXR1cm4gdHlwZW9mIG9iajtcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIG1vZHVsZS5leHBvcnRzID0gX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7XG4gICAgICByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajtcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIF90eXBlb2Yob2JqKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfdHlwZW9mOyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9saWIvYXhpb3MnKTsiLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcbnZhciBzZXR0bGUgPSByZXF1aXJlKCcuLy4uL2NvcmUvc2V0dGxlJyk7XG52YXIgY29va2llcyA9IHJlcXVpcmUoJy4vLi4vaGVscGVycy9jb29raWVzJyk7XG52YXIgYnVpbGRVUkwgPSByZXF1aXJlKCcuLy4uL2hlbHBlcnMvYnVpbGRVUkwnKTtcbnZhciBidWlsZEZ1bGxQYXRoID0gcmVxdWlyZSgnLi4vY29yZS9idWlsZEZ1bGxQYXRoJyk7XG52YXIgcGFyc2VIZWFkZXJzID0gcmVxdWlyZSgnLi8uLi9oZWxwZXJzL3BhcnNlSGVhZGVycycpO1xudmFyIGlzVVJMU2FtZU9yaWdpbiA9IHJlcXVpcmUoJy4vLi4vaGVscGVycy9pc1VSTFNhbWVPcmlnaW4nKTtcbnZhciBjcmVhdGVFcnJvciA9IHJlcXVpcmUoJy4uL2NvcmUvY3JlYXRlRXJyb3InKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB4aHJBZGFwdGVyKGNvbmZpZykge1xuICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gZGlzcGF0Y2hYaHJSZXF1ZXN0KHJlc29sdmUsIHJlamVjdCkge1xuICAgIHZhciByZXF1ZXN0RGF0YSA9IGNvbmZpZy5kYXRhO1xuICAgIHZhciByZXF1ZXN0SGVhZGVycyA9IGNvbmZpZy5oZWFkZXJzO1xuXG4gICAgaWYgKHV0aWxzLmlzRm9ybURhdGEocmVxdWVzdERhdGEpKSB7XG4gICAgICBkZWxldGUgcmVxdWVzdEhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddOyAvLyBMZXQgdGhlIGJyb3dzZXIgc2V0IGl0XG4gICAgfVxuXG4gICAgdmFyIHJlcXVlc3QgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcblxuICAgIC8vIEhUVFAgYmFzaWMgYXV0aGVudGljYXRpb25cbiAgICBpZiAoY29uZmlnLmF1dGgpIHtcbiAgICAgIHZhciB1c2VybmFtZSA9IGNvbmZpZy5hdXRoLnVzZXJuYW1lIHx8ICcnO1xuICAgICAgdmFyIHBhc3N3b3JkID0gY29uZmlnLmF1dGgucGFzc3dvcmQgPyB1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoY29uZmlnLmF1dGgucGFzc3dvcmQpKSA6ICcnO1xuICAgICAgcmVxdWVzdEhlYWRlcnMuQXV0aG9yaXphdGlvbiA9ICdCYXNpYyAnICsgYnRvYSh1c2VybmFtZSArICc6JyArIHBhc3N3b3JkKTtcbiAgICB9XG5cbiAgICB2YXIgZnVsbFBhdGggPSBidWlsZEZ1bGxQYXRoKGNvbmZpZy5iYXNlVVJMLCBjb25maWcudXJsKTtcbiAgICByZXF1ZXN0Lm9wZW4oY29uZmlnLm1ldGhvZC50b1VwcGVyQ2FzZSgpLCBidWlsZFVSTChmdWxsUGF0aCwgY29uZmlnLnBhcmFtcywgY29uZmlnLnBhcmFtc1NlcmlhbGl6ZXIpLCB0cnVlKTtcblxuICAgIC8vIFNldCB0aGUgcmVxdWVzdCB0aW1lb3V0IGluIE1TXG4gICAgcmVxdWVzdC50aW1lb3V0ID0gY29uZmlnLnRpbWVvdXQ7XG5cbiAgICAvLyBMaXN0ZW4gZm9yIHJlYWR5IHN0YXRlXG4gICAgcmVxdWVzdC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbiBoYW5kbGVMb2FkKCkge1xuICAgICAgaWYgKCFyZXF1ZXN0IHx8IHJlcXVlc3QucmVhZHlTdGF0ZSAhPT0gNCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIC8vIFRoZSByZXF1ZXN0IGVycm9yZWQgb3V0IGFuZCB3ZSBkaWRuJ3QgZ2V0IGEgcmVzcG9uc2UsIHRoaXMgd2lsbCBiZVxuICAgICAgLy8gaGFuZGxlZCBieSBvbmVycm9yIGluc3RlYWRcbiAgICAgIC8vIFdpdGggb25lIGV4Y2VwdGlvbjogcmVxdWVzdCB0aGF0IHVzaW5nIGZpbGU6IHByb3RvY29sLCBtb3N0IGJyb3dzZXJzXG4gICAgICAvLyB3aWxsIHJldHVybiBzdGF0dXMgYXMgMCBldmVuIHRob3VnaCBpdCdzIGEgc3VjY2Vzc2Z1bCByZXF1ZXN0XG4gICAgICBpZiAocmVxdWVzdC5zdGF0dXMgPT09IDAgJiYgIShyZXF1ZXN0LnJlc3BvbnNlVVJMICYmIHJlcXVlc3QucmVzcG9uc2VVUkwuaW5kZXhPZignZmlsZTonKSA9PT0gMCkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAvLyBQcmVwYXJlIHRoZSByZXNwb25zZVxuICAgICAgdmFyIHJlc3BvbnNlSGVhZGVycyA9ICdnZXRBbGxSZXNwb25zZUhlYWRlcnMnIGluIHJlcXVlc3QgPyBwYXJzZUhlYWRlcnMocmVxdWVzdC5nZXRBbGxSZXNwb25zZUhlYWRlcnMoKSkgOiBudWxsO1xuICAgICAgdmFyIHJlc3BvbnNlRGF0YSA9ICFjb25maWcucmVzcG9uc2VUeXBlIHx8IGNvbmZpZy5yZXNwb25zZVR5cGUgPT09ICd0ZXh0JyA/IHJlcXVlc3QucmVzcG9uc2VUZXh0IDogcmVxdWVzdC5yZXNwb25zZTtcbiAgICAgIHZhciByZXNwb25zZSA9IHtcbiAgICAgICAgZGF0YTogcmVzcG9uc2VEYXRhLFxuICAgICAgICBzdGF0dXM6IHJlcXVlc3Quc3RhdHVzLFxuICAgICAgICBzdGF0dXNUZXh0OiByZXF1ZXN0LnN0YXR1c1RleHQsXG4gICAgICAgIGhlYWRlcnM6IHJlc3BvbnNlSGVhZGVycyxcbiAgICAgICAgY29uZmlnOiBjb25maWcsXG4gICAgICAgIHJlcXVlc3Q6IHJlcXVlc3RcbiAgICAgIH07XG5cbiAgICAgIHNldHRsZShyZXNvbHZlLCByZWplY3QsIHJlc3BvbnNlKTtcblxuICAgICAgLy8gQ2xlYW4gdXAgcmVxdWVzdFxuICAgICAgcmVxdWVzdCA9IG51bGw7XG4gICAgfTtcblxuICAgIC8vIEhhbmRsZSBicm93c2VyIHJlcXVlc3QgY2FuY2VsbGF0aW9uIChhcyBvcHBvc2VkIHRvIGEgbWFudWFsIGNhbmNlbGxhdGlvbilcbiAgICByZXF1ZXN0Lm9uYWJvcnQgPSBmdW5jdGlvbiBoYW5kbGVBYm9ydCgpIHtcbiAgICAgIGlmICghcmVxdWVzdCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHJlamVjdChjcmVhdGVFcnJvcignUmVxdWVzdCBhYm9ydGVkJywgY29uZmlnLCAnRUNPTk5BQk9SVEVEJywgcmVxdWVzdCkpO1xuXG4gICAgICAvLyBDbGVhbiB1cCByZXF1ZXN0XG4gICAgICByZXF1ZXN0ID0gbnVsbDtcbiAgICB9O1xuXG4gICAgLy8gSGFuZGxlIGxvdyBsZXZlbCBuZXR3b3JrIGVycm9yc1xuICAgIHJlcXVlc3Qub25lcnJvciA9IGZ1bmN0aW9uIGhhbmRsZUVycm9yKCkge1xuICAgICAgLy8gUmVhbCBlcnJvcnMgYXJlIGhpZGRlbiBmcm9tIHVzIGJ5IHRoZSBicm93c2VyXG4gICAgICAvLyBvbmVycm9yIHNob3VsZCBvbmx5IGZpcmUgaWYgaXQncyBhIG5ldHdvcmsgZXJyb3JcbiAgICAgIHJlamVjdChjcmVhdGVFcnJvcignTmV0d29yayBFcnJvcicsIGNvbmZpZywgbnVsbCwgcmVxdWVzdCkpO1xuXG4gICAgICAvLyBDbGVhbiB1cCByZXF1ZXN0XG4gICAgICByZXF1ZXN0ID0gbnVsbDtcbiAgICB9O1xuXG4gICAgLy8gSGFuZGxlIHRpbWVvdXRcbiAgICByZXF1ZXN0Lm9udGltZW91dCA9IGZ1bmN0aW9uIGhhbmRsZVRpbWVvdXQoKSB7XG4gICAgICB2YXIgdGltZW91dEVycm9yTWVzc2FnZSA9ICd0aW1lb3V0IG9mICcgKyBjb25maWcudGltZW91dCArICdtcyBleGNlZWRlZCc7XG4gICAgICBpZiAoY29uZmlnLnRpbWVvdXRFcnJvck1lc3NhZ2UpIHtcbiAgICAgICAgdGltZW91dEVycm9yTWVzc2FnZSA9IGNvbmZpZy50aW1lb3V0RXJyb3JNZXNzYWdlO1xuICAgICAgfVxuICAgICAgcmVqZWN0KGNyZWF0ZUVycm9yKHRpbWVvdXRFcnJvck1lc3NhZ2UsIGNvbmZpZywgJ0VDT05OQUJPUlRFRCcsXG4gICAgICAgIHJlcXVlc3QpKTtcblxuICAgICAgLy8gQ2xlYW4gdXAgcmVxdWVzdFxuICAgICAgcmVxdWVzdCA9IG51bGw7XG4gICAgfTtcblxuICAgIC8vIEFkZCB4c3JmIGhlYWRlclxuICAgIC8vIFRoaXMgaXMgb25seSBkb25lIGlmIHJ1bm5pbmcgaW4gYSBzdGFuZGFyZCBicm93c2VyIGVudmlyb25tZW50LlxuICAgIC8vIFNwZWNpZmljYWxseSBub3QgaWYgd2UncmUgaW4gYSB3ZWIgd29ya2VyLCBvciByZWFjdC1uYXRpdmUuXG4gICAgaWYgKHV0aWxzLmlzU3RhbmRhcmRCcm93c2VyRW52KCkpIHtcbiAgICAgIC8vIEFkZCB4c3JmIGhlYWRlclxuICAgICAgdmFyIHhzcmZWYWx1ZSA9IChjb25maWcud2l0aENyZWRlbnRpYWxzIHx8IGlzVVJMU2FtZU9yaWdpbihmdWxsUGF0aCkpICYmIGNvbmZpZy54c3JmQ29va2llTmFtZSA/XG4gICAgICAgIGNvb2tpZXMucmVhZChjb25maWcueHNyZkNvb2tpZU5hbWUpIDpcbiAgICAgICAgdW5kZWZpbmVkO1xuXG4gICAgICBpZiAoeHNyZlZhbHVlKSB7XG4gICAgICAgIHJlcXVlc3RIZWFkZXJzW2NvbmZpZy54c3JmSGVhZGVyTmFtZV0gPSB4c3JmVmFsdWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gQWRkIGhlYWRlcnMgdG8gdGhlIHJlcXVlc3RcbiAgICBpZiAoJ3NldFJlcXVlc3RIZWFkZXInIGluIHJlcXVlc3QpIHtcbiAgICAgIHV0aWxzLmZvckVhY2gocmVxdWVzdEhlYWRlcnMsIGZ1bmN0aW9uIHNldFJlcXVlc3RIZWFkZXIodmFsLCBrZXkpIHtcbiAgICAgICAgaWYgKHR5cGVvZiByZXF1ZXN0RGF0YSA9PT0gJ3VuZGVmaW5lZCcgJiYga2V5LnRvTG93ZXJDYXNlKCkgPT09ICdjb250ZW50LXR5cGUnKSB7XG4gICAgICAgICAgLy8gUmVtb3ZlIENvbnRlbnQtVHlwZSBpZiBkYXRhIGlzIHVuZGVmaW5lZFxuICAgICAgICAgIGRlbGV0ZSByZXF1ZXN0SGVhZGVyc1trZXldO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIE90aGVyd2lzZSBhZGQgaGVhZGVyIHRvIHRoZSByZXF1ZXN0XG4gICAgICAgICAgcmVxdWVzdC5zZXRSZXF1ZXN0SGVhZGVyKGtleSwgdmFsKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy8gQWRkIHdpdGhDcmVkZW50aWFscyB0byByZXF1ZXN0IGlmIG5lZWRlZFxuICAgIGlmICghdXRpbHMuaXNVbmRlZmluZWQoY29uZmlnLndpdGhDcmVkZW50aWFscykpIHtcbiAgICAgIHJlcXVlc3Qud2l0aENyZWRlbnRpYWxzID0gISFjb25maWcud2l0aENyZWRlbnRpYWxzO1xuICAgIH1cblxuICAgIC8vIEFkZCByZXNwb25zZVR5cGUgdG8gcmVxdWVzdCBpZiBuZWVkZWRcbiAgICBpZiAoY29uZmlnLnJlc3BvbnNlVHlwZSkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgcmVxdWVzdC5yZXNwb25zZVR5cGUgPSBjb25maWcucmVzcG9uc2VUeXBlO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBFeHBlY3RlZCBET01FeGNlcHRpb24gdGhyb3duIGJ5IGJyb3dzZXJzIG5vdCBjb21wYXRpYmxlIFhNTEh0dHBSZXF1ZXN0IExldmVsIDIuXG4gICAgICAgIC8vIEJ1dCwgdGhpcyBjYW4gYmUgc3VwcHJlc3NlZCBmb3IgJ2pzb24nIHR5cGUgYXMgaXQgY2FuIGJlIHBhcnNlZCBieSBkZWZhdWx0ICd0cmFuc2Zvcm1SZXNwb25zZScgZnVuY3Rpb24uXG4gICAgICAgIGlmIChjb25maWcucmVzcG9uc2VUeXBlICE9PSAnanNvbicpIHtcbiAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gSGFuZGxlIHByb2dyZXNzIGlmIG5lZWRlZFxuICAgIGlmICh0eXBlb2YgY29uZmlnLm9uRG93bmxvYWRQcm9ncmVzcyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcmVxdWVzdC5hZGRFdmVudExpc3RlbmVyKCdwcm9ncmVzcycsIGNvbmZpZy5vbkRvd25sb2FkUHJvZ3Jlc3MpO1xuICAgIH1cblxuICAgIC8vIE5vdCBhbGwgYnJvd3NlcnMgc3VwcG9ydCB1cGxvYWQgZXZlbnRzXG4gICAgaWYgKHR5cGVvZiBjb25maWcub25VcGxvYWRQcm9ncmVzcyA9PT0gJ2Z1bmN0aW9uJyAmJiByZXF1ZXN0LnVwbG9hZCkge1xuICAgICAgcmVxdWVzdC51cGxvYWQuYWRkRXZlbnRMaXN0ZW5lcigncHJvZ3Jlc3MnLCBjb25maWcub25VcGxvYWRQcm9ncmVzcyk7XG4gICAgfVxuXG4gICAgaWYgKGNvbmZpZy5jYW5jZWxUb2tlbikge1xuICAgICAgLy8gSGFuZGxlIGNhbmNlbGxhdGlvblxuICAgICAgY29uZmlnLmNhbmNlbFRva2VuLnByb21pc2UudGhlbihmdW5jdGlvbiBvbkNhbmNlbGVkKGNhbmNlbCkge1xuICAgICAgICBpZiAoIXJlcXVlc3QpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICByZXF1ZXN0LmFib3J0KCk7XG4gICAgICAgIHJlamVjdChjYW5jZWwpO1xuICAgICAgICAvLyBDbGVhbiB1cCByZXF1ZXN0XG4gICAgICAgIHJlcXVlc3QgPSBudWxsO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYgKCFyZXF1ZXN0RGF0YSkge1xuICAgICAgcmVxdWVzdERhdGEgPSBudWxsO1xuICAgIH1cblxuICAgIC8vIFNlbmQgdGhlIHJlcXVlc3RcbiAgICByZXF1ZXN0LnNlbmQocmVxdWVzdERhdGEpO1xuICB9KTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKTtcbnZhciBiaW5kID0gcmVxdWlyZSgnLi9oZWxwZXJzL2JpbmQnKTtcbnZhciBBeGlvcyA9IHJlcXVpcmUoJy4vY29yZS9BeGlvcycpO1xudmFyIG1lcmdlQ29uZmlnID0gcmVxdWlyZSgnLi9jb3JlL21lcmdlQ29uZmlnJyk7XG52YXIgZGVmYXVsdHMgPSByZXF1aXJlKCcuL2RlZmF1bHRzJyk7XG5cbi8qKlxuICogQ3JlYXRlIGFuIGluc3RhbmNlIG9mIEF4aW9zXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGRlZmF1bHRDb25maWcgVGhlIGRlZmF1bHQgY29uZmlnIGZvciB0aGUgaW5zdGFuY2VcbiAqIEByZXR1cm4ge0F4aW9zfSBBIG5ldyBpbnN0YW5jZSBvZiBBeGlvc1xuICovXG5mdW5jdGlvbiBjcmVhdGVJbnN0YW5jZShkZWZhdWx0Q29uZmlnKSB7XG4gIHZhciBjb250ZXh0ID0gbmV3IEF4aW9zKGRlZmF1bHRDb25maWcpO1xuICB2YXIgaW5zdGFuY2UgPSBiaW5kKEF4aW9zLnByb3RvdHlwZS5yZXF1ZXN0LCBjb250ZXh0KTtcblxuICAvLyBDb3B5IGF4aW9zLnByb3RvdHlwZSB0byBpbnN0YW5jZVxuICB1dGlscy5leHRlbmQoaW5zdGFuY2UsIEF4aW9zLnByb3RvdHlwZSwgY29udGV4dCk7XG5cbiAgLy8gQ29weSBjb250ZXh0IHRvIGluc3RhbmNlXG4gIHV0aWxzLmV4dGVuZChpbnN0YW5jZSwgY29udGV4dCk7XG5cbiAgcmV0dXJuIGluc3RhbmNlO1xufVxuXG4vLyBDcmVhdGUgdGhlIGRlZmF1bHQgaW5zdGFuY2UgdG8gYmUgZXhwb3J0ZWRcbnZhciBheGlvcyA9IGNyZWF0ZUluc3RhbmNlKGRlZmF1bHRzKTtcblxuLy8gRXhwb3NlIEF4aW9zIGNsYXNzIHRvIGFsbG93IGNsYXNzIGluaGVyaXRhbmNlXG5heGlvcy5BeGlvcyA9IEF4aW9zO1xuXG4vLyBGYWN0b3J5IGZvciBjcmVhdGluZyBuZXcgaW5zdGFuY2VzXG5heGlvcy5jcmVhdGUgPSBmdW5jdGlvbiBjcmVhdGUoaW5zdGFuY2VDb25maWcpIHtcbiAgcmV0dXJuIGNyZWF0ZUluc3RhbmNlKG1lcmdlQ29uZmlnKGF4aW9zLmRlZmF1bHRzLCBpbnN0YW5jZUNvbmZpZykpO1xufTtcblxuLy8gRXhwb3NlIENhbmNlbCAmIENhbmNlbFRva2VuXG5heGlvcy5DYW5jZWwgPSByZXF1aXJlKCcuL2NhbmNlbC9DYW5jZWwnKTtcbmF4aW9zLkNhbmNlbFRva2VuID0gcmVxdWlyZSgnLi9jYW5jZWwvQ2FuY2VsVG9rZW4nKTtcbmF4aW9zLmlzQ2FuY2VsID0gcmVxdWlyZSgnLi9jYW5jZWwvaXNDYW5jZWwnKTtcblxuLy8gRXhwb3NlIGFsbC9zcHJlYWRcbmF4aW9zLmFsbCA9IGZ1bmN0aW9uIGFsbChwcm9taXNlcykge1xuICByZXR1cm4gUHJvbWlzZS5hbGwocHJvbWlzZXMpO1xufTtcbmF4aW9zLnNwcmVhZCA9IHJlcXVpcmUoJy4vaGVscGVycy9zcHJlYWQnKTtcblxuLy8gRXhwb3NlIGlzQXhpb3NFcnJvclxuYXhpb3MuaXNBeGlvc0Vycm9yID0gcmVxdWlyZSgnLi9oZWxwZXJzL2lzQXhpb3NFcnJvcicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGF4aW9zO1xuXG4vLyBBbGxvdyB1c2Ugb2YgZGVmYXVsdCBpbXBvcnQgc3ludGF4IGluIFR5cGVTY3JpcHRcbm1vZHVsZS5leHBvcnRzLmRlZmF1bHQgPSBheGlvcztcbiIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBBIGBDYW5jZWxgIGlzIGFuIG9iamVjdCB0aGF0IGlzIHRocm93biB3aGVuIGFuIG9wZXJhdGlvbiBpcyBjYW5jZWxlZC5cbiAqXG4gKiBAY2xhc3NcbiAqIEBwYXJhbSB7c3RyaW5nPX0gbWVzc2FnZSBUaGUgbWVzc2FnZS5cbiAqL1xuZnVuY3Rpb24gQ2FuY2VsKG1lc3NhZ2UpIHtcbiAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcbn1cblxuQ2FuY2VsLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICByZXR1cm4gJ0NhbmNlbCcgKyAodGhpcy5tZXNzYWdlID8gJzogJyArIHRoaXMubWVzc2FnZSA6ICcnKTtcbn07XG5cbkNhbmNlbC5wcm90b3R5cGUuX19DQU5DRUxfXyA9IHRydWU7XG5cbm1vZHVsZS5leHBvcnRzID0gQ2FuY2VsO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgQ2FuY2VsID0gcmVxdWlyZSgnLi9DYW5jZWwnKTtcblxuLyoqXG4gKiBBIGBDYW5jZWxUb2tlbmAgaXMgYW4gb2JqZWN0IHRoYXQgY2FuIGJlIHVzZWQgdG8gcmVxdWVzdCBjYW5jZWxsYXRpb24gb2YgYW4gb3BlcmF0aW9uLlxuICpcbiAqIEBjbGFzc1xuICogQHBhcmFtIHtGdW5jdGlvbn0gZXhlY3V0b3IgVGhlIGV4ZWN1dG9yIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiBDYW5jZWxUb2tlbihleGVjdXRvcikge1xuICBpZiAodHlwZW9mIGV4ZWN1dG9yICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignZXhlY3V0b3IgbXVzdCBiZSBhIGZ1bmN0aW9uLicpO1xuICB9XG5cbiAgdmFyIHJlc29sdmVQcm9taXNlO1xuICB0aGlzLnByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbiBwcm9taXNlRXhlY3V0b3IocmVzb2x2ZSkge1xuICAgIHJlc29sdmVQcm9taXNlID0gcmVzb2x2ZTtcbiAgfSk7XG5cbiAgdmFyIHRva2VuID0gdGhpcztcbiAgZXhlY3V0b3IoZnVuY3Rpb24gY2FuY2VsKG1lc3NhZ2UpIHtcbiAgICBpZiAodG9rZW4ucmVhc29uKSB7XG4gICAgICAvLyBDYW5jZWxsYXRpb24gaGFzIGFscmVhZHkgYmVlbiByZXF1ZXN0ZWRcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0b2tlbi5yZWFzb24gPSBuZXcgQ2FuY2VsKG1lc3NhZ2UpO1xuICAgIHJlc29sdmVQcm9taXNlKHRva2VuLnJlYXNvbik7XG4gIH0pO1xufVxuXG4vKipcbiAqIFRocm93cyBhIGBDYW5jZWxgIGlmIGNhbmNlbGxhdGlvbiBoYXMgYmVlbiByZXF1ZXN0ZWQuXG4gKi9cbkNhbmNlbFRva2VuLnByb3RvdHlwZS50aHJvd0lmUmVxdWVzdGVkID0gZnVuY3Rpb24gdGhyb3dJZlJlcXVlc3RlZCgpIHtcbiAgaWYgKHRoaXMucmVhc29uKSB7XG4gICAgdGhyb3cgdGhpcy5yZWFzb247XG4gIH1cbn07XG5cbi8qKlxuICogUmV0dXJucyBhbiBvYmplY3QgdGhhdCBjb250YWlucyBhIG5ldyBgQ2FuY2VsVG9rZW5gIGFuZCBhIGZ1bmN0aW9uIHRoYXQsIHdoZW4gY2FsbGVkLFxuICogY2FuY2VscyB0aGUgYENhbmNlbFRva2VuYC5cbiAqL1xuQ2FuY2VsVG9rZW4uc291cmNlID0gZnVuY3Rpb24gc291cmNlKCkge1xuICB2YXIgY2FuY2VsO1xuICB2YXIgdG9rZW4gPSBuZXcgQ2FuY2VsVG9rZW4oZnVuY3Rpb24gZXhlY3V0b3IoYykge1xuICAgIGNhbmNlbCA9IGM7XG4gIH0pO1xuICByZXR1cm4ge1xuICAgIHRva2VuOiB0b2tlbixcbiAgICBjYW5jZWw6IGNhbmNlbFxuICB9O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBDYW5jZWxUb2tlbjtcbiIsIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc0NhbmNlbCh2YWx1ZSkge1xuICByZXR1cm4gISEodmFsdWUgJiYgdmFsdWUuX19DQU5DRUxfXyk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG52YXIgYnVpbGRVUkwgPSByZXF1aXJlKCcuLi9oZWxwZXJzL2J1aWxkVVJMJyk7XG52YXIgSW50ZXJjZXB0b3JNYW5hZ2VyID0gcmVxdWlyZSgnLi9JbnRlcmNlcHRvck1hbmFnZXInKTtcbnZhciBkaXNwYXRjaFJlcXVlc3QgPSByZXF1aXJlKCcuL2Rpc3BhdGNoUmVxdWVzdCcpO1xudmFyIG1lcmdlQ29uZmlnID0gcmVxdWlyZSgnLi9tZXJnZUNvbmZpZycpO1xuXG4vKipcbiAqIENyZWF0ZSBhIG5ldyBpbnN0YW5jZSBvZiBBeGlvc1xuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBpbnN0YW5jZUNvbmZpZyBUaGUgZGVmYXVsdCBjb25maWcgZm9yIHRoZSBpbnN0YW5jZVxuICovXG5mdW5jdGlvbiBBeGlvcyhpbnN0YW5jZUNvbmZpZykge1xuICB0aGlzLmRlZmF1bHRzID0gaW5zdGFuY2VDb25maWc7XG4gIHRoaXMuaW50ZXJjZXB0b3JzID0ge1xuICAgIHJlcXVlc3Q6IG5ldyBJbnRlcmNlcHRvck1hbmFnZXIoKSxcbiAgICByZXNwb25zZTogbmV3IEludGVyY2VwdG9yTWFuYWdlcigpXG4gIH07XG59XG5cbi8qKlxuICogRGlzcGF0Y2ggYSByZXF1ZXN0XG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZyBUaGUgY29uZmlnIHNwZWNpZmljIGZvciB0aGlzIHJlcXVlc3QgKG1lcmdlZCB3aXRoIHRoaXMuZGVmYXVsdHMpXG4gKi9cbkF4aW9zLnByb3RvdHlwZS5yZXF1ZXN0ID0gZnVuY3Rpb24gcmVxdWVzdChjb25maWcpIHtcbiAgLyplc2xpbnQgbm8tcGFyYW0tcmVhc3NpZ246MCovXG4gIC8vIEFsbG93IGZvciBheGlvcygnZXhhbXBsZS91cmwnWywgY29uZmlnXSkgYSBsYSBmZXRjaCBBUElcbiAgaWYgKHR5cGVvZiBjb25maWcgPT09ICdzdHJpbmcnKSB7XG4gICAgY29uZmlnID0gYXJndW1lbnRzWzFdIHx8IHt9O1xuICAgIGNvbmZpZy51cmwgPSBhcmd1bWVudHNbMF07XG4gIH0gZWxzZSB7XG4gICAgY29uZmlnID0gY29uZmlnIHx8IHt9O1xuICB9XG5cbiAgY29uZmlnID0gbWVyZ2VDb25maWcodGhpcy5kZWZhdWx0cywgY29uZmlnKTtcblxuICAvLyBTZXQgY29uZmlnLm1ldGhvZFxuICBpZiAoY29uZmlnLm1ldGhvZCkge1xuICAgIGNvbmZpZy5tZXRob2QgPSBjb25maWcubWV0aG9kLnRvTG93ZXJDYXNlKCk7XG4gIH0gZWxzZSBpZiAodGhpcy5kZWZhdWx0cy5tZXRob2QpIHtcbiAgICBjb25maWcubWV0aG9kID0gdGhpcy5kZWZhdWx0cy5tZXRob2QudG9Mb3dlckNhc2UoKTtcbiAgfSBlbHNlIHtcbiAgICBjb25maWcubWV0aG9kID0gJ2dldCc7XG4gIH1cblxuICAvLyBIb29rIHVwIGludGVyY2VwdG9ycyBtaWRkbGV3YXJlXG4gIHZhciBjaGFpbiA9IFtkaXNwYXRjaFJlcXVlc3QsIHVuZGVmaW5lZF07XG4gIHZhciBwcm9taXNlID0gUHJvbWlzZS5yZXNvbHZlKGNvbmZpZyk7XG5cbiAgdGhpcy5pbnRlcmNlcHRvcnMucmVxdWVzdC5mb3JFYWNoKGZ1bmN0aW9uIHVuc2hpZnRSZXF1ZXN0SW50ZXJjZXB0b3JzKGludGVyY2VwdG9yKSB7XG4gICAgY2hhaW4udW5zaGlmdChpbnRlcmNlcHRvci5mdWxmaWxsZWQsIGludGVyY2VwdG9yLnJlamVjdGVkKTtcbiAgfSk7XG5cbiAgdGhpcy5pbnRlcmNlcHRvcnMucmVzcG9uc2UuZm9yRWFjaChmdW5jdGlvbiBwdXNoUmVzcG9uc2VJbnRlcmNlcHRvcnMoaW50ZXJjZXB0b3IpIHtcbiAgICBjaGFpbi5wdXNoKGludGVyY2VwdG9yLmZ1bGZpbGxlZCwgaW50ZXJjZXB0b3IucmVqZWN0ZWQpO1xuICB9KTtcblxuICB3aGlsZSAoY2hhaW4ubGVuZ3RoKSB7XG4gICAgcHJvbWlzZSA9IHByb21pc2UudGhlbihjaGFpbi5zaGlmdCgpLCBjaGFpbi5zaGlmdCgpKTtcbiAgfVxuXG4gIHJldHVybiBwcm9taXNlO1xufTtcblxuQXhpb3MucHJvdG90eXBlLmdldFVyaSA9IGZ1bmN0aW9uIGdldFVyaShjb25maWcpIHtcbiAgY29uZmlnID0gbWVyZ2VDb25maWcodGhpcy5kZWZhdWx0cywgY29uZmlnKTtcbiAgcmV0dXJuIGJ1aWxkVVJMKGNvbmZpZy51cmwsIGNvbmZpZy5wYXJhbXMsIGNvbmZpZy5wYXJhbXNTZXJpYWxpemVyKS5yZXBsYWNlKC9eXFw/LywgJycpO1xufTtcblxuLy8gUHJvdmlkZSBhbGlhc2VzIGZvciBzdXBwb3J0ZWQgcmVxdWVzdCBtZXRob2RzXG51dGlscy5mb3JFYWNoKFsnZGVsZXRlJywgJ2dldCcsICdoZWFkJywgJ29wdGlvbnMnXSwgZnVuY3Rpb24gZm9yRWFjaE1ldGhvZE5vRGF0YShtZXRob2QpIHtcbiAgLyplc2xpbnQgZnVuYy1uYW1lczowKi9cbiAgQXhpb3MucHJvdG90eXBlW21ldGhvZF0gPSBmdW5jdGlvbih1cmwsIGNvbmZpZykge1xuICAgIHJldHVybiB0aGlzLnJlcXVlc3QobWVyZ2VDb25maWcoY29uZmlnIHx8IHt9LCB7XG4gICAgICBtZXRob2Q6IG1ldGhvZCxcbiAgICAgIHVybDogdXJsLFxuICAgICAgZGF0YTogKGNvbmZpZyB8fCB7fSkuZGF0YVxuICAgIH0pKTtcbiAgfTtcbn0pO1xuXG51dGlscy5mb3JFYWNoKFsncG9zdCcsICdwdXQnLCAncGF0Y2gnXSwgZnVuY3Rpb24gZm9yRWFjaE1ldGhvZFdpdGhEYXRhKG1ldGhvZCkge1xuICAvKmVzbGludCBmdW5jLW5hbWVzOjAqL1xuICBBeGlvcy5wcm90b3R5cGVbbWV0aG9kXSA9IGZ1bmN0aW9uKHVybCwgZGF0YSwgY29uZmlnKSB7XG4gICAgcmV0dXJuIHRoaXMucmVxdWVzdChtZXJnZUNvbmZpZyhjb25maWcgfHwge30sIHtcbiAgICAgIG1ldGhvZDogbWV0aG9kLFxuICAgICAgdXJsOiB1cmwsXG4gICAgICBkYXRhOiBkYXRhXG4gICAgfSkpO1xuICB9O1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gQXhpb3M7XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcblxuZnVuY3Rpb24gSW50ZXJjZXB0b3JNYW5hZ2VyKCkge1xuICB0aGlzLmhhbmRsZXJzID0gW107XG59XG5cbi8qKlxuICogQWRkIGEgbmV3IGludGVyY2VwdG9yIHRvIHRoZSBzdGFja1xuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bGZpbGxlZCBUaGUgZnVuY3Rpb24gdG8gaGFuZGxlIGB0aGVuYCBmb3IgYSBgUHJvbWlzZWBcbiAqIEBwYXJhbSB7RnVuY3Rpb259IHJlamVjdGVkIFRoZSBmdW5jdGlvbiB0byBoYW5kbGUgYHJlamVjdGAgZm9yIGEgYFByb21pc2VgXG4gKlxuICogQHJldHVybiB7TnVtYmVyfSBBbiBJRCB1c2VkIHRvIHJlbW92ZSBpbnRlcmNlcHRvciBsYXRlclxuICovXG5JbnRlcmNlcHRvck1hbmFnZXIucHJvdG90eXBlLnVzZSA9IGZ1bmN0aW9uIHVzZShmdWxmaWxsZWQsIHJlamVjdGVkKSB7XG4gIHRoaXMuaGFuZGxlcnMucHVzaCh7XG4gICAgZnVsZmlsbGVkOiBmdWxmaWxsZWQsXG4gICAgcmVqZWN0ZWQ6IHJlamVjdGVkXG4gIH0pO1xuICByZXR1cm4gdGhpcy5oYW5kbGVycy5sZW5ndGggLSAxO1xufTtcblxuLyoqXG4gKiBSZW1vdmUgYW4gaW50ZXJjZXB0b3IgZnJvbSB0aGUgc3RhY2tcbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gaWQgVGhlIElEIHRoYXQgd2FzIHJldHVybmVkIGJ5IGB1c2VgXG4gKi9cbkludGVyY2VwdG9yTWFuYWdlci5wcm90b3R5cGUuZWplY3QgPSBmdW5jdGlvbiBlamVjdChpZCkge1xuICBpZiAodGhpcy5oYW5kbGVyc1tpZF0pIHtcbiAgICB0aGlzLmhhbmRsZXJzW2lkXSA9IG51bGw7XG4gIH1cbn07XG5cbi8qKlxuICogSXRlcmF0ZSBvdmVyIGFsbCB0aGUgcmVnaXN0ZXJlZCBpbnRlcmNlcHRvcnNcbiAqXG4gKiBUaGlzIG1ldGhvZCBpcyBwYXJ0aWN1bGFybHkgdXNlZnVsIGZvciBza2lwcGluZyBvdmVyIGFueVxuICogaW50ZXJjZXB0b3JzIHRoYXQgbWF5IGhhdmUgYmVjb21lIGBudWxsYCBjYWxsaW5nIGBlamVjdGAuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gVGhlIGZ1bmN0aW9uIHRvIGNhbGwgZm9yIGVhY2ggaW50ZXJjZXB0b3JcbiAqL1xuSW50ZXJjZXB0b3JNYW5hZ2VyLnByb3RvdHlwZS5mb3JFYWNoID0gZnVuY3Rpb24gZm9yRWFjaChmbikge1xuICB1dGlscy5mb3JFYWNoKHRoaXMuaGFuZGxlcnMsIGZ1bmN0aW9uIGZvckVhY2hIYW5kbGVyKGgpIHtcbiAgICBpZiAoaCAhPT0gbnVsbCkge1xuICAgICAgZm4oaCk7XG4gICAgfVxuICB9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gSW50ZXJjZXB0b3JNYW5hZ2VyO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaXNBYnNvbHV0ZVVSTCA9IHJlcXVpcmUoJy4uL2hlbHBlcnMvaXNBYnNvbHV0ZVVSTCcpO1xudmFyIGNvbWJpbmVVUkxzID0gcmVxdWlyZSgnLi4vaGVscGVycy9jb21iaW5lVVJMcycpO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBuZXcgVVJMIGJ5IGNvbWJpbmluZyB0aGUgYmFzZVVSTCB3aXRoIHRoZSByZXF1ZXN0ZWRVUkwsXG4gKiBvbmx5IHdoZW4gdGhlIHJlcXVlc3RlZFVSTCBpcyBub3QgYWxyZWFkeSBhbiBhYnNvbHV0ZSBVUkwuXG4gKiBJZiB0aGUgcmVxdWVzdFVSTCBpcyBhYnNvbHV0ZSwgdGhpcyBmdW5jdGlvbiByZXR1cm5zIHRoZSByZXF1ZXN0ZWRVUkwgdW50b3VjaGVkLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBiYXNlVVJMIFRoZSBiYXNlIFVSTFxuICogQHBhcmFtIHtzdHJpbmd9IHJlcXVlc3RlZFVSTCBBYnNvbHV0ZSBvciByZWxhdGl2ZSBVUkwgdG8gY29tYmluZVxuICogQHJldHVybnMge3N0cmluZ30gVGhlIGNvbWJpbmVkIGZ1bGwgcGF0aFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJ1aWxkRnVsbFBhdGgoYmFzZVVSTCwgcmVxdWVzdGVkVVJMKSB7XG4gIGlmIChiYXNlVVJMICYmICFpc0Fic29sdXRlVVJMKHJlcXVlc3RlZFVSTCkpIHtcbiAgICByZXR1cm4gY29tYmluZVVSTHMoYmFzZVVSTCwgcmVxdWVzdGVkVVJMKTtcbiAgfVxuICByZXR1cm4gcmVxdWVzdGVkVVJMO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGVuaGFuY2VFcnJvciA9IHJlcXVpcmUoJy4vZW5oYW5jZUVycm9yJyk7XG5cbi8qKlxuICogQ3JlYXRlIGFuIEVycm9yIHdpdGggdGhlIHNwZWNpZmllZCBtZXNzYWdlLCBjb25maWcsIGVycm9yIGNvZGUsIHJlcXVlc3QgYW5kIHJlc3BvbnNlLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlIFRoZSBlcnJvciBtZXNzYWdlLlxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZyBUaGUgY29uZmlnLlxuICogQHBhcmFtIHtzdHJpbmd9IFtjb2RlXSBUaGUgZXJyb3IgY29kZSAoZm9yIGV4YW1wbGUsICdFQ09OTkFCT1JURUQnKS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbcmVxdWVzdF0gVGhlIHJlcXVlc3QuXG4gKiBAcGFyYW0ge09iamVjdH0gW3Jlc3BvbnNlXSBUaGUgcmVzcG9uc2UuXG4gKiBAcmV0dXJucyB7RXJyb3J9IFRoZSBjcmVhdGVkIGVycm9yLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGNyZWF0ZUVycm9yKG1lc3NhZ2UsIGNvbmZpZywgY29kZSwgcmVxdWVzdCwgcmVzcG9uc2UpIHtcbiAgdmFyIGVycm9yID0gbmV3IEVycm9yKG1lc3NhZ2UpO1xuICByZXR1cm4gZW5oYW5jZUVycm9yKGVycm9yLCBjb25maWcsIGNvZGUsIHJlcXVlc3QsIHJlc3BvbnNlKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcbnZhciB0cmFuc2Zvcm1EYXRhID0gcmVxdWlyZSgnLi90cmFuc2Zvcm1EYXRhJyk7XG52YXIgaXNDYW5jZWwgPSByZXF1aXJlKCcuLi9jYW5jZWwvaXNDYW5jZWwnKTtcbnZhciBkZWZhdWx0cyA9IHJlcXVpcmUoJy4uL2RlZmF1bHRzJyk7XG5cbi8qKlxuICogVGhyb3dzIGEgYENhbmNlbGAgaWYgY2FuY2VsbGF0aW9uIGhhcyBiZWVuIHJlcXVlc3RlZC5cbiAqL1xuZnVuY3Rpb24gdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpIHtcbiAgaWYgKGNvbmZpZy5jYW5jZWxUb2tlbikge1xuICAgIGNvbmZpZy5jYW5jZWxUb2tlbi50aHJvd0lmUmVxdWVzdGVkKCk7XG4gIH1cbn1cblxuLyoqXG4gKiBEaXNwYXRjaCBhIHJlcXVlc3QgdG8gdGhlIHNlcnZlciB1c2luZyB0aGUgY29uZmlndXJlZCBhZGFwdGVyLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZyB0aGF0IGlzIHRvIGJlIHVzZWQgZm9yIHRoZSByZXF1ZXN0XG4gKiBAcmV0dXJucyB7UHJvbWlzZX0gVGhlIFByb21pc2UgdG8gYmUgZnVsZmlsbGVkXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZGlzcGF0Y2hSZXF1ZXN0KGNvbmZpZykge1xuICB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZyk7XG5cbiAgLy8gRW5zdXJlIGhlYWRlcnMgZXhpc3RcbiAgY29uZmlnLmhlYWRlcnMgPSBjb25maWcuaGVhZGVycyB8fCB7fTtcblxuICAvLyBUcmFuc2Zvcm0gcmVxdWVzdCBkYXRhXG4gIGNvbmZpZy5kYXRhID0gdHJhbnNmb3JtRGF0YShcbiAgICBjb25maWcuZGF0YSxcbiAgICBjb25maWcuaGVhZGVycyxcbiAgICBjb25maWcudHJhbnNmb3JtUmVxdWVzdFxuICApO1xuXG4gIC8vIEZsYXR0ZW4gaGVhZGVyc1xuICBjb25maWcuaGVhZGVycyA9IHV0aWxzLm1lcmdlKFxuICAgIGNvbmZpZy5oZWFkZXJzLmNvbW1vbiB8fCB7fSxcbiAgICBjb25maWcuaGVhZGVyc1tjb25maWcubWV0aG9kXSB8fCB7fSxcbiAgICBjb25maWcuaGVhZGVyc1xuICApO1xuXG4gIHV0aWxzLmZvckVhY2goXG4gICAgWydkZWxldGUnLCAnZ2V0JywgJ2hlYWQnLCAncG9zdCcsICdwdXQnLCAncGF0Y2gnLCAnY29tbW9uJ10sXG4gICAgZnVuY3Rpb24gY2xlYW5IZWFkZXJDb25maWcobWV0aG9kKSB7XG4gICAgICBkZWxldGUgY29uZmlnLmhlYWRlcnNbbWV0aG9kXTtcbiAgICB9XG4gICk7XG5cbiAgdmFyIGFkYXB0ZXIgPSBjb25maWcuYWRhcHRlciB8fCBkZWZhdWx0cy5hZGFwdGVyO1xuXG4gIHJldHVybiBhZGFwdGVyKGNvbmZpZykudGhlbihmdW5jdGlvbiBvbkFkYXB0ZXJSZXNvbHV0aW9uKHJlc3BvbnNlKSB7XG4gICAgdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpO1xuXG4gICAgLy8gVHJhbnNmb3JtIHJlc3BvbnNlIGRhdGFcbiAgICByZXNwb25zZS5kYXRhID0gdHJhbnNmb3JtRGF0YShcbiAgICAgIHJlc3BvbnNlLmRhdGEsXG4gICAgICByZXNwb25zZS5oZWFkZXJzLFxuICAgICAgY29uZmlnLnRyYW5zZm9ybVJlc3BvbnNlXG4gICAgKTtcblxuICAgIHJldHVybiByZXNwb25zZTtcbiAgfSwgZnVuY3Rpb24gb25BZGFwdGVyUmVqZWN0aW9uKHJlYXNvbikge1xuICAgIGlmICghaXNDYW5jZWwocmVhc29uKSkge1xuICAgICAgdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpO1xuXG4gICAgICAvLyBUcmFuc2Zvcm0gcmVzcG9uc2UgZGF0YVxuICAgICAgaWYgKHJlYXNvbiAmJiByZWFzb24ucmVzcG9uc2UpIHtcbiAgICAgICAgcmVhc29uLnJlc3BvbnNlLmRhdGEgPSB0cmFuc2Zvcm1EYXRhKFxuICAgICAgICAgIHJlYXNvbi5yZXNwb25zZS5kYXRhLFxuICAgICAgICAgIHJlYXNvbi5yZXNwb25zZS5oZWFkZXJzLFxuICAgICAgICAgIGNvbmZpZy50cmFuc2Zvcm1SZXNwb25zZVxuICAgICAgICApO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChyZWFzb24pO1xuICB9KTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogVXBkYXRlIGFuIEVycm9yIHdpdGggdGhlIHNwZWNpZmllZCBjb25maWcsIGVycm9yIGNvZGUsIGFuZCByZXNwb25zZS5cbiAqXG4gKiBAcGFyYW0ge0Vycm9yfSBlcnJvciBUaGUgZXJyb3IgdG8gdXBkYXRlLlxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZyBUaGUgY29uZmlnLlxuICogQHBhcmFtIHtzdHJpbmd9IFtjb2RlXSBUaGUgZXJyb3IgY29kZSAoZm9yIGV4YW1wbGUsICdFQ09OTkFCT1JURUQnKS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbcmVxdWVzdF0gVGhlIHJlcXVlc3QuXG4gKiBAcGFyYW0ge09iamVjdH0gW3Jlc3BvbnNlXSBUaGUgcmVzcG9uc2UuXG4gKiBAcmV0dXJucyB7RXJyb3J9IFRoZSBlcnJvci5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBlbmhhbmNlRXJyb3IoZXJyb3IsIGNvbmZpZywgY29kZSwgcmVxdWVzdCwgcmVzcG9uc2UpIHtcbiAgZXJyb3IuY29uZmlnID0gY29uZmlnO1xuICBpZiAoY29kZSkge1xuICAgIGVycm9yLmNvZGUgPSBjb2RlO1xuICB9XG5cbiAgZXJyb3IucmVxdWVzdCA9IHJlcXVlc3Q7XG4gIGVycm9yLnJlc3BvbnNlID0gcmVzcG9uc2U7XG4gIGVycm9yLmlzQXhpb3NFcnJvciA9IHRydWU7XG5cbiAgZXJyb3IudG9KU09OID0gZnVuY3Rpb24gdG9KU09OKCkge1xuICAgIHJldHVybiB7XG4gICAgICAvLyBTdGFuZGFyZFxuICAgICAgbWVzc2FnZTogdGhpcy5tZXNzYWdlLFxuICAgICAgbmFtZTogdGhpcy5uYW1lLFxuICAgICAgLy8gTWljcm9zb2Z0XG4gICAgICBkZXNjcmlwdGlvbjogdGhpcy5kZXNjcmlwdGlvbixcbiAgICAgIG51bWJlcjogdGhpcy5udW1iZXIsXG4gICAgICAvLyBNb3ppbGxhXG4gICAgICBmaWxlTmFtZTogdGhpcy5maWxlTmFtZSxcbiAgICAgIGxpbmVOdW1iZXI6IHRoaXMubGluZU51bWJlcixcbiAgICAgIGNvbHVtbk51bWJlcjogdGhpcy5jb2x1bW5OdW1iZXIsXG4gICAgICBzdGFjazogdGhpcy5zdGFjayxcbiAgICAgIC8vIEF4aW9zXG4gICAgICBjb25maWc6IHRoaXMuY29uZmlnLFxuICAgICAgY29kZTogdGhpcy5jb2RlXG4gICAgfTtcbiAgfTtcbiAgcmV0dXJuIGVycm9yO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcblxuLyoqXG4gKiBDb25maWctc3BlY2lmaWMgbWVyZ2UtZnVuY3Rpb24gd2hpY2ggY3JlYXRlcyBhIG5ldyBjb25maWctb2JqZWN0XG4gKiBieSBtZXJnaW5nIHR3byBjb25maWd1cmF0aW9uIG9iamVjdHMgdG9nZXRoZXIuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZzFcbiAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcyXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBOZXcgb2JqZWN0IHJlc3VsdGluZyBmcm9tIG1lcmdpbmcgY29uZmlnMiB0byBjb25maWcxXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gbWVyZ2VDb25maWcoY29uZmlnMSwgY29uZmlnMikge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgY29uZmlnMiA9IGNvbmZpZzIgfHwge307XG4gIHZhciBjb25maWcgPSB7fTtcblxuICB2YXIgdmFsdWVGcm9tQ29uZmlnMktleXMgPSBbJ3VybCcsICdtZXRob2QnLCAnZGF0YSddO1xuICB2YXIgbWVyZ2VEZWVwUHJvcGVydGllc0tleXMgPSBbJ2hlYWRlcnMnLCAnYXV0aCcsICdwcm94eScsICdwYXJhbXMnXTtcbiAgdmFyIGRlZmF1bHRUb0NvbmZpZzJLZXlzID0gW1xuICAgICdiYXNlVVJMJywgJ3RyYW5zZm9ybVJlcXVlc3QnLCAndHJhbnNmb3JtUmVzcG9uc2UnLCAncGFyYW1zU2VyaWFsaXplcicsXG4gICAgJ3RpbWVvdXQnLCAndGltZW91dE1lc3NhZ2UnLCAnd2l0aENyZWRlbnRpYWxzJywgJ2FkYXB0ZXInLCAncmVzcG9uc2VUeXBlJywgJ3hzcmZDb29raWVOYW1lJyxcbiAgICAneHNyZkhlYWRlck5hbWUnLCAnb25VcGxvYWRQcm9ncmVzcycsICdvbkRvd25sb2FkUHJvZ3Jlc3MnLCAnZGVjb21wcmVzcycsXG4gICAgJ21heENvbnRlbnRMZW5ndGgnLCAnbWF4Qm9keUxlbmd0aCcsICdtYXhSZWRpcmVjdHMnLCAndHJhbnNwb3J0JywgJ2h0dHBBZ2VudCcsXG4gICAgJ2h0dHBzQWdlbnQnLCAnY2FuY2VsVG9rZW4nLCAnc29ja2V0UGF0aCcsICdyZXNwb25zZUVuY29kaW5nJ1xuICBdO1xuICB2YXIgZGlyZWN0TWVyZ2VLZXlzID0gWyd2YWxpZGF0ZVN0YXR1cyddO1xuXG4gIGZ1bmN0aW9uIGdldE1lcmdlZFZhbHVlKHRhcmdldCwgc291cmNlKSB7XG4gICAgaWYgKHV0aWxzLmlzUGxhaW5PYmplY3QodGFyZ2V0KSAmJiB1dGlscy5pc1BsYWluT2JqZWN0KHNvdXJjZSkpIHtcbiAgICAgIHJldHVybiB1dGlscy5tZXJnZSh0YXJnZXQsIHNvdXJjZSk7XG4gICAgfSBlbHNlIGlmICh1dGlscy5pc1BsYWluT2JqZWN0KHNvdXJjZSkpIHtcbiAgICAgIHJldHVybiB1dGlscy5tZXJnZSh7fSwgc291cmNlKTtcbiAgICB9IGVsc2UgaWYgKHV0aWxzLmlzQXJyYXkoc291cmNlKSkge1xuICAgICAgcmV0dXJuIHNvdXJjZS5zbGljZSgpO1xuICAgIH1cbiAgICByZXR1cm4gc291cmNlO1xuICB9XG5cbiAgZnVuY3Rpb24gbWVyZ2VEZWVwUHJvcGVydGllcyhwcm9wKSB7XG4gICAgaWYgKCF1dGlscy5pc1VuZGVmaW5lZChjb25maWcyW3Byb3BdKSkge1xuICAgICAgY29uZmlnW3Byb3BdID0gZ2V0TWVyZ2VkVmFsdWUoY29uZmlnMVtwcm9wXSwgY29uZmlnMltwcm9wXSk7XG4gICAgfSBlbHNlIGlmICghdXRpbHMuaXNVbmRlZmluZWQoY29uZmlnMVtwcm9wXSkpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IGdldE1lcmdlZFZhbHVlKHVuZGVmaW5lZCwgY29uZmlnMVtwcm9wXSk7XG4gICAgfVxuICB9XG5cbiAgdXRpbHMuZm9yRWFjaCh2YWx1ZUZyb21Db25maWcyS2V5cywgZnVuY3Rpb24gdmFsdWVGcm9tQ29uZmlnMihwcm9wKSB7XG4gICAgaWYgKCF1dGlscy5pc1VuZGVmaW5lZChjb25maWcyW3Byb3BdKSkge1xuICAgICAgY29uZmlnW3Byb3BdID0gZ2V0TWVyZ2VkVmFsdWUodW5kZWZpbmVkLCBjb25maWcyW3Byb3BdKTtcbiAgICB9XG4gIH0pO1xuXG4gIHV0aWxzLmZvckVhY2gobWVyZ2VEZWVwUHJvcGVydGllc0tleXMsIG1lcmdlRGVlcFByb3BlcnRpZXMpO1xuXG4gIHV0aWxzLmZvckVhY2goZGVmYXVsdFRvQ29uZmlnMktleXMsIGZ1bmN0aW9uIGRlZmF1bHRUb0NvbmZpZzIocHJvcCkge1xuICAgIGlmICghdXRpbHMuaXNVbmRlZmluZWQoY29uZmlnMltwcm9wXSkpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IGdldE1lcmdlZFZhbHVlKHVuZGVmaW5lZCwgY29uZmlnMltwcm9wXSk7XG4gICAgfSBlbHNlIGlmICghdXRpbHMuaXNVbmRlZmluZWQoY29uZmlnMVtwcm9wXSkpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IGdldE1lcmdlZFZhbHVlKHVuZGVmaW5lZCwgY29uZmlnMVtwcm9wXSk7XG4gICAgfVxuICB9KTtcblxuICB1dGlscy5mb3JFYWNoKGRpcmVjdE1lcmdlS2V5cywgZnVuY3Rpb24gbWVyZ2UocHJvcCkge1xuICAgIGlmIChwcm9wIGluIGNvbmZpZzIpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IGdldE1lcmdlZFZhbHVlKGNvbmZpZzFbcHJvcF0sIGNvbmZpZzJbcHJvcF0pO1xuICAgIH0gZWxzZSBpZiAocHJvcCBpbiBjb25maWcxKSB7XG4gICAgICBjb25maWdbcHJvcF0gPSBnZXRNZXJnZWRWYWx1ZSh1bmRlZmluZWQsIGNvbmZpZzFbcHJvcF0pO1xuICAgIH1cbiAgfSk7XG5cbiAgdmFyIGF4aW9zS2V5cyA9IHZhbHVlRnJvbUNvbmZpZzJLZXlzXG4gICAgLmNvbmNhdChtZXJnZURlZXBQcm9wZXJ0aWVzS2V5cylcbiAgICAuY29uY2F0KGRlZmF1bHRUb0NvbmZpZzJLZXlzKVxuICAgIC5jb25jYXQoZGlyZWN0TWVyZ2VLZXlzKTtcblxuICB2YXIgb3RoZXJLZXlzID0gT2JqZWN0XG4gICAgLmtleXMoY29uZmlnMSlcbiAgICAuY29uY2F0KE9iamVjdC5rZXlzKGNvbmZpZzIpKVxuICAgIC5maWx0ZXIoZnVuY3Rpb24gZmlsdGVyQXhpb3NLZXlzKGtleSkge1xuICAgICAgcmV0dXJuIGF4aW9zS2V5cy5pbmRleE9mKGtleSkgPT09IC0xO1xuICAgIH0pO1xuXG4gIHV0aWxzLmZvckVhY2gob3RoZXJLZXlzLCBtZXJnZURlZXBQcm9wZXJ0aWVzKTtcblxuICByZXR1cm4gY29uZmlnO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGNyZWF0ZUVycm9yID0gcmVxdWlyZSgnLi9jcmVhdGVFcnJvcicpO1xuXG4vKipcbiAqIFJlc29sdmUgb3IgcmVqZWN0IGEgUHJvbWlzZSBiYXNlZCBvbiByZXNwb25zZSBzdGF0dXMuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVzb2x2ZSBBIGZ1bmN0aW9uIHRoYXQgcmVzb2x2ZXMgdGhlIHByb21pc2UuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSByZWplY3QgQSBmdW5jdGlvbiB0aGF0IHJlamVjdHMgdGhlIHByb21pc2UuXG4gKiBAcGFyYW0ge29iamVjdH0gcmVzcG9uc2UgVGhlIHJlc3BvbnNlLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHNldHRsZShyZXNvbHZlLCByZWplY3QsIHJlc3BvbnNlKSB7XG4gIHZhciB2YWxpZGF0ZVN0YXR1cyA9IHJlc3BvbnNlLmNvbmZpZy52YWxpZGF0ZVN0YXR1cztcbiAgaWYgKCFyZXNwb25zZS5zdGF0dXMgfHwgIXZhbGlkYXRlU3RhdHVzIHx8IHZhbGlkYXRlU3RhdHVzKHJlc3BvbnNlLnN0YXR1cykpIHtcbiAgICByZXNvbHZlKHJlc3BvbnNlKTtcbiAgfSBlbHNlIHtcbiAgICByZWplY3QoY3JlYXRlRXJyb3IoXG4gICAgICAnUmVxdWVzdCBmYWlsZWQgd2l0aCBzdGF0dXMgY29kZSAnICsgcmVzcG9uc2Uuc3RhdHVzLFxuICAgICAgcmVzcG9uc2UuY29uZmlnLFxuICAgICAgbnVsbCxcbiAgICAgIHJlc3BvbnNlLnJlcXVlc3QsXG4gICAgICByZXNwb25zZVxuICAgICkpO1xuICB9XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbi8qKlxuICogVHJhbnNmb3JtIHRoZSBkYXRhIGZvciBhIHJlcXVlc3Qgb3IgYSByZXNwb25zZVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fFN0cmluZ30gZGF0YSBUaGUgZGF0YSB0byBiZSB0cmFuc2Zvcm1lZFxuICogQHBhcmFtIHtBcnJheX0gaGVhZGVycyBUaGUgaGVhZGVycyBmb3IgdGhlIHJlcXVlc3Qgb3IgcmVzcG9uc2VcbiAqIEBwYXJhbSB7QXJyYXl8RnVuY3Rpb259IGZucyBBIHNpbmdsZSBmdW5jdGlvbiBvciBBcnJheSBvZiBmdW5jdGlvbnNcbiAqIEByZXR1cm5zIHsqfSBUaGUgcmVzdWx0aW5nIHRyYW5zZm9ybWVkIGRhdGFcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB0cmFuc2Zvcm1EYXRhKGRhdGEsIGhlYWRlcnMsIGZucykge1xuICAvKmVzbGludCBuby1wYXJhbS1yZWFzc2lnbjowKi9cbiAgdXRpbHMuZm9yRWFjaChmbnMsIGZ1bmN0aW9uIHRyYW5zZm9ybShmbikge1xuICAgIGRhdGEgPSBmbihkYXRhLCBoZWFkZXJzKTtcbiAgfSk7XG5cbiAgcmV0dXJuIGRhdGE7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG52YXIgbm9ybWFsaXplSGVhZGVyTmFtZSA9IHJlcXVpcmUoJy4vaGVscGVycy9ub3JtYWxpemVIZWFkZXJOYW1lJyk7XG5cbnZhciBERUZBVUxUX0NPTlRFTlRfVFlQRSA9IHtcbiAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnXG59O1xuXG5mdW5jdGlvbiBzZXRDb250ZW50VHlwZUlmVW5zZXQoaGVhZGVycywgdmFsdWUpIHtcbiAgaWYgKCF1dGlscy5pc1VuZGVmaW5lZChoZWFkZXJzKSAmJiB1dGlscy5pc1VuZGVmaW5lZChoZWFkZXJzWydDb250ZW50LVR5cGUnXSkpIHtcbiAgICBoZWFkZXJzWydDb250ZW50LVR5cGUnXSA9IHZhbHVlO1xuICB9XG59XG5cbmZ1bmN0aW9uIGdldERlZmF1bHRBZGFwdGVyKCkge1xuICB2YXIgYWRhcHRlcjtcbiAgaWYgKHR5cGVvZiBYTUxIdHRwUmVxdWVzdCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAvLyBGb3IgYnJvd3NlcnMgdXNlIFhIUiBhZGFwdGVyXG4gICAgYWRhcHRlciA9IHJlcXVpcmUoJy4vYWRhcHRlcnMveGhyJyk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIHByb2Nlc3MgIT09ICd1bmRlZmluZWQnICYmIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChwcm9jZXNzKSA9PT0gJ1tvYmplY3QgcHJvY2Vzc10nKSB7XG4gICAgLy8gRm9yIG5vZGUgdXNlIEhUVFAgYWRhcHRlclxuICAgIGFkYXB0ZXIgPSByZXF1aXJlKCcuL2FkYXB0ZXJzL2h0dHAnKTtcbiAgfVxuICByZXR1cm4gYWRhcHRlcjtcbn1cblxudmFyIGRlZmF1bHRzID0ge1xuICBhZGFwdGVyOiBnZXREZWZhdWx0QWRhcHRlcigpLFxuXG4gIHRyYW5zZm9ybVJlcXVlc3Q6IFtmdW5jdGlvbiB0cmFuc2Zvcm1SZXF1ZXN0KGRhdGEsIGhlYWRlcnMpIHtcbiAgICBub3JtYWxpemVIZWFkZXJOYW1lKGhlYWRlcnMsICdBY2NlcHQnKTtcbiAgICBub3JtYWxpemVIZWFkZXJOYW1lKGhlYWRlcnMsICdDb250ZW50LVR5cGUnKTtcbiAgICBpZiAodXRpbHMuaXNGb3JtRGF0YShkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNBcnJheUJ1ZmZlcihkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNCdWZmZXIoZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzU3RyZWFtKGRhdGEpIHx8XG4gICAgICB1dGlscy5pc0ZpbGUoZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzQmxvYihkYXRhKVxuICAgICkge1xuICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfVxuICAgIGlmICh1dGlscy5pc0FycmF5QnVmZmVyVmlldyhkYXRhKSkge1xuICAgICAgcmV0dXJuIGRhdGEuYnVmZmVyO1xuICAgIH1cbiAgICBpZiAodXRpbHMuaXNVUkxTZWFyY2hQYXJhbXMoZGF0YSkpIHtcbiAgICAgIHNldENvbnRlbnRUeXBlSWZVbnNldChoZWFkZXJzLCAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkO2NoYXJzZXQ9dXRmLTgnKTtcbiAgICAgIHJldHVybiBkYXRhLnRvU3RyaW5nKCk7XG4gICAgfVxuICAgIGlmICh1dGlscy5pc09iamVjdChkYXRhKSkge1xuICAgICAgc2V0Q29udGVudFR5cGVJZlVuc2V0KGhlYWRlcnMsICdhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTgnKTtcbiAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShkYXRhKTtcbiAgICB9XG4gICAgcmV0dXJuIGRhdGE7XG4gIH1dLFxuXG4gIHRyYW5zZm9ybVJlc3BvbnNlOiBbZnVuY3Rpb24gdHJhbnNmb3JtUmVzcG9uc2UoZGF0YSkge1xuICAgIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICAgIGlmICh0eXBlb2YgZGF0YSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGRhdGEgPSBKU09OLnBhcnNlKGRhdGEpO1xuICAgICAgfSBjYXRjaCAoZSkgeyAvKiBJZ25vcmUgKi8gfVxuICAgIH1cbiAgICByZXR1cm4gZGF0YTtcbiAgfV0sXG5cbiAgLyoqXG4gICAqIEEgdGltZW91dCBpbiBtaWxsaXNlY29uZHMgdG8gYWJvcnQgYSByZXF1ZXN0LiBJZiBzZXQgdG8gMCAoZGVmYXVsdCkgYVxuICAgKiB0aW1lb3V0IGlzIG5vdCBjcmVhdGVkLlxuICAgKi9cbiAgdGltZW91dDogMCxcblxuICB4c3JmQ29va2llTmFtZTogJ1hTUkYtVE9LRU4nLFxuICB4c3JmSGVhZGVyTmFtZTogJ1gtWFNSRi1UT0tFTicsXG5cbiAgbWF4Q29udGVudExlbmd0aDogLTEsXG4gIG1heEJvZHlMZW5ndGg6IC0xLFxuXG4gIHZhbGlkYXRlU3RhdHVzOiBmdW5jdGlvbiB2YWxpZGF0ZVN0YXR1cyhzdGF0dXMpIHtcbiAgICByZXR1cm4gc3RhdHVzID49IDIwMCAmJiBzdGF0dXMgPCAzMDA7XG4gIH1cbn07XG5cbmRlZmF1bHRzLmhlYWRlcnMgPSB7XG4gIGNvbW1vbjoge1xuICAgICdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbiwgdGV4dC9wbGFpbiwgKi8qJ1xuICB9XG59O1xuXG51dGlscy5mb3JFYWNoKFsnZGVsZXRlJywgJ2dldCcsICdoZWFkJ10sIGZ1bmN0aW9uIGZvckVhY2hNZXRob2ROb0RhdGEobWV0aG9kKSB7XG4gIGRlZmF1bHRzLmhlYWRlcnNbbWV0aG9kXSA9IHt9O1xufSk7XG5cbnV0aWxzLmZvckVhY2goWydwb3N0JywgJ3B1dCcsICdwYXRjaCddLCBmdW5jdGlvbiBmb3JFYWNoTWV0aG9kV2l0aERhdGEobWV0aG9kKSB7XG4gIGRlZmF1bHRzLmhlYWRlcnNbbWV0aG9kXSA9IHV0aWxzLm1lcmdlKERFRkFVTFRfQ09OVEVOVF9UWVBFKTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGRlZmF1bHRzO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJpbmQoZm4sIHRoaXNBcmcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHdyYXAoKSB7XG4gICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmdzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBhcmdzW2ldID0gYXJndW1lbnRzW2ldO1xuICAgIH1cbiAgICByZXR1cm4gZm4uYXBwbHkodGhpc0FyZywgYXJncyk7XG4gIH07XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbmZ1bmN0aW9uIGVuY29kZSh2YWwpIHtcbiAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudCh2YWwpLlxuICAgIHJlcGxhY2UoLyUzQS9naSwgJzonKS5cbiAgICByZXBsYWNlKC8lMjQvZywgJyQnKS5cbiAgICByZXBsYWNlKC8lMkMvZ2ksICcsJykuXG4gICAgcmVwbGFjZSgvJTIwL2csICcrJykuXG4gICAgcmVwbGFjZSgvJTVCL2dpLCAnWycpLlxuICAgIHJlcGxhY2UoLyU1RC9naSwgJ10nKTtcbn1cblxuLyoqXG4gKiBCdWlsZCBhIFVSTCBieSBhcHBlbmRpbmcgcGFyYW1zIHRvIHRoZSBlbmRcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsIFRoZSBiYXNlIG9mIHRoZSB1cmwgKGUuZy4sIGh0dHA6Ly93d3cuZ29vZ2xlLmNvbSlcbiAqIEBwYXJhbSB7b2JqZWN0fSBbcGFyYW1zXSBUaGUgcGFyYW1zIHRvIGJlIGFwcGVuZGVkXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgZm9ybWF0dGVkIHVybFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJ1aWxkVVJMKHVybCwgcGFyYW1zLCBwYXJhbXNTZXJpYWxpemVyKSB7XG4gIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICBpZiAoIXBhcmFtcykge1xuICAgIHJldHVybiB1cmw7XG4gIH1cblxuICB2YXIgc2VyaWFsaXplZFBhcmFtcztcbiAgaWYgKHBhcmFtc1NlcmlhbGl6ZXIpIHtcbiAgICBzZXJpYWxpemVkUGFyYW1zID0gcGFyYW1zU2VyaWFsaXplcihwYXJhbXMpO1xuICB9IGVsc2UgaWYgKHV0aWxzLmlzVVJMU2VhcmNoUGFyYW1zKHBhcmFtcykpIHtcbiAgICBzZXJpYWxpemVkUGFyYW1zID0gcGFyYW1zLnRvU3RyaW5nKCk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHBhcnRzID0gW107XG5cbiAgICB1dGlscy5mb3JFYWNoKHBhcmFtcywgZnVuY3Rpb24gc2VyaWFsaXplKHZhbCwga2V5KSB7XG4gICAgICBpZiAodmFsID09PSBudWxsIHx8IHR5cGVvZiB2YWwgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKHV0aWxzLmlzQXJyYXkodmFsKSkge1xuICAgICAgICBrZXkgPSBrZXkgKyAnW10nO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFsID0gW3ZhbF07XG4gICAgICB9XG5cbiAgICAgIHV0aWxzLmZvckVhY2godmFsLCBmdW5jdGlvbiBwYXJzZVZhbHVlKHYpIHtcbiAgICAgICAgaWYgKHV0aWxzLmlzRGF0ZSh2KSkge1xuICAgICAgICAgIHYgPSB2LnRvSVNPU3RyaW5nKCk7XG4gICAgICAgIH0gZWxzZSBpZiAodXRpbHMuaXNPYmplY3QodikpIHtcbiAgICAgICAgICB2ID0gSlNPTi5zdHJpbmdpZnkodik7XG4gICAgICAgIH1cbiAgICAgICAgcGFydHMucHVzaChlbmNvZGUoa2V5KSArICc9JyArIGVuY29kZSh2KSk7XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIHNlcmlhbGl6ZWRQYXJhbXMgPSBwYXJ0cy5qb2luKCcmJyk7XG4gIH1cblxuICBpZiAoc2VyaWFsaXplZFBhcmFtcykge1xuICAgIHZhciBoYXNobWFya0luZGV4ID0gdXJsLmluZGV4T2YoJyMnKTtcbiAgICBpZiAoaGFzaG1hcmtJbmRleCAhPT0gLTEpIHtcbiAgICAgIHVybCA9IHVybC5zbGljZSgwLCBoYXNobWFya0luZGV4KTtcbiAgICB9XG5cbiAgICB1cmwgKz0gKHVybC5pbmRleE9mKCc/JykgPT09IC0xID8gJz8nIDogJyYnKSArIHNlcmlhbGl6ZWRQYXJhbXM7XG4gIH1cblxuICByZXR1cm4gdXJsO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IFVSTCBieSBjb21iaW5pbmcgdGhlIHNwZWNpZmllZCBVUkxzXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGJhc2VVUkwgVGhlIGJhc2UgVVJMXG4gKiBAcGFyYW0ge3N0cmluZ30gcmVsYXRpdmVVUkwgVGhlIHJlbGF0aXZlIFVSTFxuICogQHJldHVybnMge3N0cmluZ30gVGhlIGNvbWJpbmVkIFVSTFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGNvbWJpbmVVUkxzKGJhc2VVUkwsIHJlbGF0aXZlVVJMKSB7XG4gIHJldHVybiByZWxhdGl2ZVVSTFxuICAgID8gYmFzZVVSTC5yZXBsYWNlKC9cXC8rJC8sICcnKSArICcvJyArIHJlbGF0aXZlVVJMLnJlcGxhY2UoL15cXC8rLywgJycpXG4gICAgOiBiYXNlVVJMO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChcbiAgdXRpbHMuaXNTdGFuZGFyZEJyb3dzZXJFbnYoKSA/XG5cbiAgLy8gU3RhbmRhcmQgYnJvd3NlciBlbnZzIHN1cHBvcnQgZG9jdW1lbnQuY29va2llXG4gICAgKGZ1bmN0aW9uIHN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHdyaXRlOiBmdW5jdGlvbiB3cml0ZShuYW1lLCB2YWx1ZSwgZXhwaXJlcywgcGF0aCwgZG9tYWluLCBzZWN1cmUpIHtcbiAgICAgICAgICB2YXIgY29va2llID0gW107XG4gICAgICAgICAgY29va2llLnB1c2gobmFtZSArICc9JyArIGVuY29kZVVSSUNvbXBvbmVudCh2YWx1ZSkpO1xuXG4gICAgICAgICAgaWYgKHV0aWxzLmlzTnVtYmVyKGV4cGlyZXMpKSB7XG4gICAgICAgICAgICBjb29raWUucHVzaCgnZXhwaXJlcz0nICsgbmV3IERhdGUoZXhwaXJlcykudG9HTVRTdHJpbmcoKSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHV0aWxzLmlzU3RyaW5nKHBhdGgpKSB7XG4gICAgICAgICAgICBjb29raWUucHVzaCgncGF0aD0nICsgcGF0aCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHV0aWxzLmlzU3RyaW5nKGRvbWFpbikpIHtcbiAgICAgICAgICAgIGNvb2tpZS5wdXNoKCdkb21haW49JyArIGRvbWFpbik7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHNlY3VyZSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgY29va2llLnB1c2goJ3NlY3VyZScpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGRvY3VtZW50LmNvb2tpZSA9IGNvb2tpZS5qb2luKCc7ICcpO1xuICAgICAgICB9LFxuXG4gICAgICAgIHJlYWQ6IGZ1bmN0aW9uIHJlYWQobmFtZSkge1xuICAgICAgICAgIHZhciBtYXRjaCA9IGRvY3VtZW50LmNvb2tpZS5tYXRjaChuZXcgUmVnRXhwKCcoXnw7XFxcXHMqKSgnICsgbmFtZSArICcpPShbXjtdKiknKSk7XG4gICAgICAgICAgcmV0dXJuIChtYXRjaCA/IGRlY29kZVVSSUNvbXBvbmVudChtYXRjaFszXSkgOiBudWxsKTtcbiAgICAgICAgfSxcblxuICAgICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZShuYW1lKSB7XG4gICAgICAgICAgdGhpcy53cml0ZShuYW1lLCAnJywgRGF0ZS5ub3coKSAtIDg2NDAwMDAwKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9KSgpIDpcblxuICAvLyBOb24gc3RhbmRhcmQgYnJvd3NlciBlbnYgKHdlYiB3b3JrZXJzLCByZWFjdC1uYXRpdmUpIGxhY2sgbmVlZGVkIHN1cHBvcnQuXG4gICAgKGZ1bmN0aW9uIG5vblN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHdyaXRlOiBmdW5jdGlvbiB3cml0ZSgpIHt9LFxuICAgICAgICByZWFkOiBmdW5jdGlvbiByZWFkKCkgeyByZXR1cm4gbnVsbDsgfSxcbiAgICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgICAgfTtcbiAgICB9KSgpXG4pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIERldGVybWluZXMgd2hldGhlciB0aGUgc3BlY2lmaWVkIFVSTCBpcyBhYnNvbHV0ZVxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB1cmwgVGhlIFVSTCB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGUgc3BlY2lmaWVkIFVSTCBpcyBhYnNvbHV0ZSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNBYnNvbHV0ZVVSTCh1cmwpIHtcbiAgLy8gQSBVUkwgaXMgY29uc2lkZXJlZCBhYnNvbHV0ZSBpZiBpdCBiZWdpbnMgd2l0aCBcIjxzY2hlbWU+Oi8vXCIgb3IgXCIvL1wiIChwcm90b2NvbC1yZWxhdGl2ZSBVUkwpLlxuICAvLyBSRkMgMzk4NiBkZWZpbmVzIHNjaGVtZSBuYW1lIGFzIGEgc2VxdWVuY2Ugb2YgY2hhcmFjdGVycyBiZWdpbm5pbmcgd2l0aCBhIGxldHRlciBhbmQgZm9sbG93ZWRcbiAgLy8gYnkgYW55IGNvbWJpbmF0aW9uIG9mIGxldHRlcnMsIGRpZ2l0cywgcGx1cywgcGVyaW9kLCBvciBoeXBoZW4uXG4gIHJldHVybiAvXihbYS16XVthLXpcXGRcXCtcXC1cXC5dKjopP1xcL1xcLy9pLnRlc3QodXJsKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSBwYXlsb2FkIGlzIGFuIGVycm9yIHRocm93biBieSBBeGlvc1xuICpcbiAqIEBwYXJhbSB7Kn0gcGF5bG9hZCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdGhlIHBheWxvYWQgaXMgYW4gZXJyb3IgdGhyb3duIGJ5IEF4aW9zLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc0F4aW9zRXJyb3IocGF5bG9hZCkge1xuICByZXR1cm4gKHR5cGVvZiBwYXlsb2FkID09PSAnb2JqZWN0JykgJiYgKHBheWxvYWQuaXNBeGlvc0Vycm9yID09PSB0cnVlKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSAoXG4gIHV0aWxzLmlzU3RhbmRhcmRCcm93c2VyRW52KCkgP1xuXG4gIC8vIFN0YW5kYXJkIGJyb3dzZXIgZW52cyBoYXZlIGZ1bGwgc3VwcG9ydCBvZiB0aGUgQVBJcyBuZWVkZWQgdG8gdGVzdFxuICAvLyB3aGV0aGVyIHRoZSByZXF1ZXN0IFVSTCBpcyBvZiB0aGUgc2FtZSBvcmlnaW4gYXMgY3VycmVudCBsb2NhdGlvbi5cbiAgICAoZnVuY3Rpb24gc3RhbmRhcmRCcm93c2VyRW52KCkge1xuICAgICAgdmFyIG1zaWUgPSAvKG1zaWV8dHJpZGVudCkvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpO1xuICAgICAgdmFyIHVybFBhcnNpbmdOb2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuICAgICAgdmFyIG9yaWdpblVSTDtcblxuICAgICAgLyoqXG4gICAgKiBQYXJzZSBhIFVSTCB0byBkaXNjb3ZlciBpdCdzIGNvbXBvbmVudHNcbiAgICAqXG4gICAgKiBAcGFyYW0ge1N0cmluZ30gdXJsIFRoZSBVUkwgdG8gYmUgcGFyc2VkXG4gICAgKiBAcmV0dXJucyB7T2JqZWN0fVxuICAgICovXG4gICAgICBmdW5jdGlvbiByZXNvbHZlVVJMKHVybCkge1xuICAgICAgICB2YXIgaHJlZiA9IHVybDtcblxuICAgICAgICBpZiAobXNpZSkge1xuICAgICAgICAvLyBJRSBuZWVkcyBhdHRyaWJ1dGUgc2V0IHR3aWNlIHRvIG5vcm1hbGl6ZSBwcm9wZXJ0aWVzXG4gICAgICAgICAgdXJsUGFyc2luZ05vZGUuc2V0QXR0cmlidXRlKCdocmVmJywgaHJlZik7XG4gICAgICAgICAgaHJlZiA9IHVybFBhcnNpbmdOb2RlLmhyZWY7XG4gICAgICAgIH1cblxuICAgICAgICB1cmxQYXJzaW5nTm9kZS5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCBocmVmKTtcblxuICAgICAgICAvLyB1cmxQYXJzaW5nTm9kZSBwcm92aWRlcyB0aGUgVXJsVXRpbHMgaW50ZXJmYWNlIC0gaHR0cDovL3VybC5zcGVjLndoYXR3Zy5vcmcvI3VybHV0aWxzXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgaHJlZjogdXJsUGFyc2luZ05vZGUuaHJlZixcbiAgICAgICAgICBwcm90b2NvbDogdXJsUGFyc2luZ05vZGUucHJvdG9jb2wgPyB1cmxQYXJzaW5nTm9kZS5wcm90b2NvbC5yZXBsYWNlKC86JC8sICcnKSA6ICcnLFxuICAgICAgICAgIGhvc3Q6IHVybFBhcnNpbmdOb2RlLmhvc3QsXG4gICAgICAgICAgc2VhcmNoOiB1cmxQYXJzaW5nTm9kZS5zZWFyY2ggPyB1cmxQYXJzaW5nTm9kZS5zZWFyY2gucmVwbGFjZSgvXlxcPy8sICcnKSA6ICcnLFxuICAgICAgICAgIGhhc2g6IHVybFBhcnNpbmdOb2RlLmhhc2ggPyB1cmxQYXJzaW5nTm9kZS5oYXNoLnJlcGxhY2UoL14jLywgJycpIDogJycsXG4gICAgICAgICAgaG9zdG5hbWU6IHVybFBhcnNpbmdOb2RlLmhvc3RuYW1lLFxuICAgICAgICAgIHBvcnQ6IHVybFBhcnNpbmdOb2RlLnBvcnQsXG4gICAgICAgICAgcGF0aG5hbWU6ICh1cmxQYXJzaW5nTm9kZS5wYXRobmFtZS5jaGFyQXQoMCkgPT09ICcvJykgP1xuICAgICAgICAgICAgdXJsUGFyc2luZ05vZGUucGF0aG5hbWUgOlxuICAgICAgICAgICAgJy8nICsgdXJsUGFyc2luZ05vZGUucGF0aG5hbWVcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgb3JpZ2luVVJMID0gcmVzb2x2ZVVSTCh3aW5kb3cubG9jYXRpb24uaHJlZik7XG5cbiAgICAgIC8qKlxuICAgICogRGV0ZXJtaW5lIGlmIGEgVVJMIHNoYXJlcyB0aGUgc2FtZSBvcmlnaW4gYXMgdGhlIGN1cnJlbnQgbG9jYXRpb25cbiAgICAqXG4gICAgKiBAcGFyYW0ge1N0cmluZ30gcmVxdWVzdFVSTCBUaGUgVVJMIHRvIHRlc3RcbiAgICAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIFVSTCBzaGFyZXMgdGhlIHNhbWUgb3JpZ2luLCBvdGhlcndpc2UgZmFsc2VcbiAgICAqL1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uIGlzVVJMU2FtZU9yaWdpbihyZXF1ZXN0VVJMKSB7XG4gICAgICAgIHZhciBwYXJzZWQgPSAodXRpbHMuaXNTdHJpbmcocmVxdWVzdFVSTCkpID8gcmVzb2x2ZVVSTChyZXF1ZXN0VVJMKSA6IHJlcXVlc3RVUkw7XG4gICAgICAgIHJldHVybiAocGFyc2VkLnByb3RvY29sID09PSBvcmlnaW5VUkwucHJvdG9jb2wgJiZcbiAgICAgICAgICAgIHBhcnNlZC5ob3N0ID09PSBvcmlnaW5VUkwuaG9zdCk7XG4gICAgICB9O1xuICAgIH0pKCkgOlxuXG4gIC8vIE5vbiBzdGFuZGFyZCBicm93c2VyIGVudnMgKHdlYiB3b3JrZXJzLCByZWFjdC1uYXRpdmUpIGxhY2sgbmVlZGVkIHN1cHBvcnQuXG4gICAgKGZ1bmN0aW9uIG5vblN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICAgIHJldHVybiBmdW5jdGlvbiBpc1VSTFNhbWVPcmlnaW4oKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfTtcbiAgICB9KSgpXG4pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIG5vcm1hbGl6ZUhlYWRlck5hbWUoaGVhZGVycywgbm9ybWFsaXplZE5hbWUpIHtcbiAgdXRpbHMuZm9yRWFjaChoZWFkZXJzLCBmdW5jdGlvbiBwcm9jZXNzSGVhZGVyKHZhbHVlLCBuYW1lKSB7XG4gICAgaWYgKG5hbWUgIT09IG5vcm1hbGl6ZWROYW1lICYmIG5hbWUudG9VcHBlckNhc2UoKSA9PT0gbm9ybWFsaXplZE5hbWUudG9VcHBlckNhc2UoKSkge1xuICAgICAgaGVhZGVyc1tub3JtYWxpemVkTmFtZV0gPSB2YWx1ZTtcbiAgICAgIGRlbGV0ZSBoZWFkZXJzW25hbWVdO1xuICAgIH1cbiAgfSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbi8vIEhlYWRlcnMgd2hvc2UgZHVwbGljYXRlcyBhcmUgaWdub3JlZCBieSBub2RlXG4vLyBjLmYuIGh0dHBzOi8vbm9kZWpzLm9yZy9hcGkvaHR0cC5odG1sI2h0dHBfbWVzc2FnZV9oZWFkZXJzXG52YXIgaWdub3JlRHVwbGljYXRlT2YgPSBbXG4gICdhZ2UnLCAnYXV0aG9yaXphdGlvbicsICdjb250ZW50LWxlbmd0aCcsICdjb250ZW50LXR5cGUnLCAnZXRhZycsXG4gICdleHBpcmVzJywgJ2Zyb20nLCAnaG9zdCcsICdpZi1tb2RpZmllZC1zaW5jZScsICdpZi11bm1vZGlmaWVkLXNpbmNlJyxcbiAgJ2xhc3QtbW9kaWZpZWQnLCAnbG9jYXRpb24nLCAnbWF4LWZvcndhcmRzJywgJ3Byb3h5LWF1dGhvcml6YXRpb24nLFxuICAncmVmZXJlcicsICdyZXRyeS1hZnRlcicsICd1c2VyLWFnZW50J1xuXTtcblxuLyoqXG4gKiBQYXJzZSBoZWFkZXJzIGludG8gYW4gb2JqZWN0XG4gKlxuICogYGBgXG4gKiBEYXRlOiBXZWQsIDI3IEF1ZyAyMDE0IDA4OjU4OjQ5IEdNVFxuICogQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uXG4gKiBDb25uZWN0aW9uOiBrZWVwLWFsaXZlXG4gKiBUcmFuc2Zlci1FbmNvZGluZzogY2h1bmtlZFxuICogYGBgXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGhlYWRlcnMgSGVhZGVycyBuZWVkaW5nIHRvIGJlIHBhcnNlZFxuICogQHJldHVybnMge09iamVjdH0gSGVhZGVycyBwYXJzZWQgaW50byBhbiBvYmplY3RcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBwYXJzZUhlYWRlcnMoaGVhZGVycykge1xuICB2YXIgcGFyc2VkID0ge307XG4gIHZhciBrZXk7XG4gIHZhciB2YWw7XG4gIHZhciBpO1xuXG4gIGlmICghaGVhZGVycykgeyByZXR1cm4gcGFyc2VkOyB9XG5cbiAgdXRpbHMuZm9yRWFjaChoZWFkZXJzLnNwbGl0KCdcXG4nKSwgZnVuY3Rpb24gcGFyc2VyKGxpbmUpIHtcbiAgICBpID0gbGluZS5pbmRleE9mKCc6Jyk7XG4gICAga2V5ID0gdXRpbHMudHJpbShsaW5lLnN1YnN0cigwLCBpKSkudG9Mb3dlckNhc2UoKTtcbiAgICB2YWwgPSB1dGlscy50cmltKGxpbmUuc3Vic3RyKGkgKyAxKSk7XG5cbiAgICBpZiAoa2V5KSB7XG4gICAgICBpZiAocGFyc2VkW2tleV0gJiYgaWdub3JlRHVwbGljYXRlT2YuaW5kZXhPZihrZXkpID49IDApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKGtleSA9PT0gJ3NldC1jb29raWUnKSB7XG4gICAgICAgIHBhcnNlZFtrZXldID0gKHBhcnNlZFtrZXldID8gcGFyc2VkW2tleV0gOiBbXSkuY29uY2F0KFt2YWxdKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBhcnNlZFtrZXldID0gcGFyc2VkW2tleV0gPyBwYXJzZWRba2V5XSArICcsICcgKyB2YWwgOiB2YWw7XG4gICAgICB9XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gcGFyc2VkO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBTeW50YWN0aWMgc3VnYXIgZm9yIGludm9raW5nIGEgZnVuY3Rpb24gYW5kIGV4cGFuZGluZyBhbiBhcnJheSBmb3IgYXJndW1lbnRzLlxuICpcbiAqIENvbW1vbiB1c2UgY2FzZSB3b3VsZCBiZSB0byB1c2UgYEZ1bmN0aW9uLnByb3RvdHlwZS5hcHBseWAuXG4gKlxuICogIGBgYGpzXG4gKiAgZnVuY3Rpb24gZih4LCB5LCB6KSB7fVxuICogIHZhciBhcmdzID0gWzEsIDIsIDNdO1xuICogIGYuYXBwbHkobnVsbCwgYXJncyk7XG4gKiAgYGBgXG4gKlxuICogV2l0aCBgc3ByZWFkYCB0aGlzIGV4YW1wbGUgY2FuIGJlIHJlLXdyaXR0ZW4uXG4gKlxuICogIGBgYGpzXG4gKiAgc3ByZWFkKGZ1bmN0aW9uKHgsIHksIHopIHt9KShbMSwgMiwgM10pO1xuICogIGBgYFxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259XG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gc3ByZWFkKGNhbGxiYWNrKSB7XG4gIHJldHVybiBmdW5jdGlvbiB3cmFwKGFycikge1xuICAgIHJldHVybiBjYWxsYmFjay5hcHBseShudWxsLCBhcnIpO1xuICB9O1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGJpbmQgPSByZXF1aXJlKCcuL2hlbHBlcnMvYmluZCcpO1xuXG4vKmdsb2JhbCB0b1N0cmluZzp0cnVlKi9cblxuLy8gdXRpbHMgaXMgYSBsaWJyYXJ5IG9mIGdlbmVyaWMgaGVscGVyIGZ1bmN0aW9ucyBub24tc3BlY2lmaWMgdG8gYXhpb3NcblxudmFyIHRvU3RyaW5nID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztcblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhbiBBcnJheVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGFuIEFycmF5LCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNBcnJheSh2YWwpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwodmFsKSA9PT0gJ1tvYmplY3QgQXJyYXldJztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyB1bmRlZmluZWRcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGUgdmFsdWUgaXMgdW5kZWZpbmVkLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNVbmRlZmluZWQodmFsKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsID09PSAndW5kZWZpbmVkJztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIEJ1ZmZlclxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgQnVmZmVyLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNCdWZmZXIodmFsKSB7XG4gIHJldHVybiB2YWwgIT09IG51bGwgJiYgIWlzVW5kZWZpbmVkKHZhbCkgJiYgdmFsLmNvbnN0cnVjdG9yICE9PSBudWxsICYmICFpc1VuZGVmaW5lZCh2YWwuY29uc3RydWN0b3IpXG4gICAgJiYgdHlwZW9mIHZhbC5jb25zdHJ1Y3Rvci5pc0J1ZmZlciA9PT0gJ2Z1bmN0aW9uJyAmJiB2YWwuY29uc3RydWN0b3IuaXNCdWZmZXIodmFsKTtcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhbiBBcnJheUJ1ZmZlclxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGFuIEFycmF5QnVmZmVyLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNBcnJheUJ1ZmZlcih2YWwpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwodmFsKSA9PT0gJ1tvYmplY3QgQXJyYXlCdWZmZXJdJztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIEZvcm1EYXRhXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYW4gRm9ybURhdGEsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0Zvcm1EYXRhKHZhbCkge1xuICByZXR1cm4gKHR5cGVvZiBGb3JtRGF0YSAhPT0gJ3VuZGVmaW5lZCcpICYmICh2YWwgaW5zdGFuY2VvZiBGb3JtRGF0YSk7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSB2aWV3IG9uIGFuIEFycmF5QnVmZmVyXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSB2aWV3IG9uIGFuIEFycmF5QnVmZmVyLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNBcnJheUJ1ZmZlclZpZXcodmFsKSB7XG4gIHZhciByZXN1bHQ7XG4gIGlmICgodHlwZW9mIEFycmF5QnVmZmVyICE9PSAndW5kZWZpbmVkJykgJiYgKEFycmF5QnVmZmVyLmlzVmlldykpIHtcbiAgICByZXN1bHQgPSBBcnJheUJ1ZmZlci5pc1ZpZXcodmFsKTtcbiAgfSBlbHNlIHtcbiAgICByZXN1bHQgPSAodmFsKSAmJiAodmFsLmJ1ZmZlcikgJiYgKHZhbC5idWZmZXIgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcik7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIFN0cmluZ1xuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgU3RyaW5nLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNTdHJpbmcodmFsKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsID09PSAnc3RyaW5nJztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIE51bWJlclxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgTnVtYmVyLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNOdW1iZXIodmFsKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsID09PSAnbnVtYmVyJztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhbiBPYmplY3RcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhbiBPYmplY3QsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc09iamVjdCh2YWwpIHtcbiAgcmV0dXJuIHZhbCAhPT0gbnVsbCAmJiB0eXBlb2YgdmFsID09PSAnb2JqZWN0Jztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIHBsYWluIE9iamVjdFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm4ge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBwbGFpbiBPYmplY3QsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc1BsYWluT2JqZWN0KHZhbCkge1xuICBpZiAodG9TdHJpbmcuY2FsbCh2YWwpICE9PSAnW29iamVjdCBPYmplY3RdJykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHZhciBwcm90b3R5cGUgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YodmFsKTtcbiAgcmV0dXJuIHByb3RvdHlwZSA9PT0gbnVsbCB8fCBwcm90b3R5cGUgPT09IE9iamVjdC5wcm90b3R5cGU7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBEYXRlXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBEYXRlLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNEYXRlKHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBEYXRlXSc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBGaWxlXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBGaWxlLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNGaWxlKHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBGaWxlXSc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBCbG9iXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBCbG9iLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNCbG9iKHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBCbG9iXSc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBGdW5jdGlvblxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgRnVuY3Rpb24sIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0Z1bmN0aW9uKHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBGdW5jdGlvbl0nO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgU3RyZWFtXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBTdHJlYW0sIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc1N0cmVhbSh2YWwpIHtcbiAgcmV0dXJuIGlzT2JqZWN0KHZhbCkgJiYgaXNGdW5jdGlvbih2YWwucGlwZSk7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBVUkxTZWFyY2hQYXJhbXMgb2JqZWN0XG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBVUkxTZWFyY2hQYXJhbXMgb2JqZWN0LCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNVUkxTZWFyY2hQYXJhbXModmFsKSB7XG4gIHJldHVybiB0eXBlb2YgVVJMU2VhcmNoUGFyYW1zICE9PSAndW5kZWZpbmVkJyAmJiB2YWwgaW5zdGFuY2VvZiBVUkxTZWFyY2hQYXJhbXM7XG59XG5cbi8qKlxuICogVHJpbSBleGNlc3Mgd2hpdGVzcGFjZSBvZmYgdGhlIGJlZ2lubmluZyBhbmQgZW5kIG9mIGEgc3RyaW5nXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0ciBUaGUgU3RyaW5nIHRvIHRyaW1cbiAqIEByZXR1cm5zIHtTdHJpbmd9IFRoZSBTdHJpbmcgZnJlZWQgb2YgZXhjZXNzIHdoaXRlc3BhY2VcbiAqL1xuZnVuY3Rpb24gdHJpbShzdHIpIHtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC9eXFxzKi8sICcnKS5yZXBsYWNlKC9cXHMqJC8sICcnKTtcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgd2UncmUgcnVubmluZyBpbiBhIHN0YW5kYXJkIGJyb3dzZXIgZW52aXJvbm1lbnRcbiAqXG4gKiBUaGlzIGFsbG93cyBheGlvcyB0byBydW4gaW4gYSB3ZWIgd29ya2VyLCBhbmQgcmVhY3QtbmF0aXZlLlxuICogQm90aCBlbnZpcm9ubWVudHMgc3VwcG9ydCBYTUxIdHRwUmVxdWVzdCwgYnV0IG5vdCBmdWxseSBzdGFuZGFyZCBnbG9iYWxzLlxuICpcbiAqIHdlYiB3b3JrZXJzOlxuICogIHR5cGVvZiB3aW5kb3cgLT4gdW5kZWZpbmVkXG4gKiAgdHlwZW9mIGRvY3VtZW50IC0+IHVuZGVmaW5lZFxuICpcbiAqIHJlYWN0LW5hdGl2ZTpcbiAqICBuYXZpZ2F0b3IucHJvZHVjdCAtPiAnUmVhY3ROYXRpdmUnXG4gKiBuYXRpdmVzY3JpcHRcbiAqICBuYXZpZ2F0b3IucHJvZHVjdCAtPiAnTmF0aXZlU2NyaXB0JyBvciAnTlMnXG4gKi9cbmZ1bmN0aW9uIGlzU3RhbmRhcmRCcm93c2VyRW52KCkge1xuICBpZiAodHlwZW9mIG5hdmlnYXRvciAhPT0gJ3VuZGVmaW5lZCcgJiYgKG5hdmlnYXRvci5wcm9kdWN0ID09PSAnUmVhY3ROYXRpdmUnIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmF2aWdhdG9yLnByb2R1Y3QgPT09ICdOYXRpdmVTY3JpcHQnIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmF2aWdhdG9yLnByb2R1Y3QgPT09ICdOUycpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiAoXG4gICAgdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICB0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnXG4gICk7XG59XG5cbi8qKlxuICogSXRlcmF0ZSBvdmVyIGFuIEFycmF5IG9yIGFuIE9iamVjdCBpbnZva2luZyBhIGZ1bmN0aW9uIGZvciBlYWNoIGl0ZW0uXG4gKlxuICogSWYgYG9iamAgaXMgYW4gQXJyYXkgY2FsbGJhY2sgd2lsbCBiZSBjYWxsZWQgcGFzc2luZ1xuICogdGhlIHZhbHVlLCBpbmRleCwgYW5kIGNvbXBsZXRlIGFycmF5IGZvciBlYWNoIGl0ZW0uXG4gKlxuICogSWYgJ29iaicgaXMgYW4gT2JqZWN0IGNhbGxiYWNrIHdpbGwgYmUgY2FsbGVkIHBhc3NpbmdcbiAqIHRoZSB2YWx1ZSwga2V5LCBhbmQgY29tcGxldGUgb2JqZWN0IGZvciBlYWNoIHByb3BlcnR5LlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fEFycmF5fSBvYmogVGhlIG9iamVjdCB0byBpdGVyYXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBUaGUgY2FsbGJhY2sgdG8gaW52b2tlIGZvciBlYWNoIGl0ZW1cbiAqL1xuZnVuY3Rpb24gZm9yRWFjaChvYmosIGZuKSB7XG4gIC8vIERvbid0IGJvdGhlciBpZiBubyB2YWx1ZSBwcm92aWRlZFxuICBpZiAob2JqID09PSBudWxsIHx8IHR5cGVvZiBvYmogPT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gRm9yY2UgYW4gYXJyYXkgaWYgbm90IGFscmVhZHkgc29tZXRoaW5nIGl0ZXJhYmxlXG4gIGlmICh0eXBlb2Ygb2JqICE9PSAnb2JqZWN0Jykge1xuICAgIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICAgIG9iaiA9IFtvYmpdO1xuICB9XG5cbiAgaWYgKGlzQXJyYXkob2JqKSkge1xuICAgIC8vIEl0ZXJhdGUgb3ZlciBhcnJheSB2YWx1ZXNcbiAgICBmb3IgKHZhciBpID0gMCwgbCA9IG9iai5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgIGZuLmNhbGwobnVsbCwgb2JqW2ldLCBpLCBvYmopO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICAvLyBJdGVyYXRlIG92ZXIgb2JqZWN0IGtleXNcbiAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG4gICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkge1xuICAgICAgICBmbi5jYWxsKG51bGwsIG9ialtrZXldLCBrZXksIG9iaik7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogQWNjZXB0cyB2YXJhcmdzIGV4cGVjdGluZyBlYWNoIGFyZ3VtZW50IHRvIGJlIGFuIG9iamVjdCwgdGhlblxuICogaW1tdXRhYmx5IG1lcmdlcyB0aGUgcHJvcGVydGllcyBvZiBlYWNoIG9iamVjdCBhbmQgcmV0dXJucyByZXN1bHQuXG4gKlxuICogV2hlbiBtdWx0aXBsZSBvYmplY3RzIGNvbnRhaW4gdGhlIHNhbWUga2V5IHRoZSBsYXRlciBvYmplY3QgaW5cbiAqIHRoZSBhcmd1bWVudHMgbGlzdCB3aWxsIHRha2UgcHJlY2VkZW5jZS5cbiAqXG4gKiBFeGFtcGxlOlxuICpcbiAqIGBgYGpzXG4gKiB2YXIgcmVzdWx0ID0gbWVyZ2Uoe2ZvbzogMTIzfSwge2ZvbzogNDU2fSk7XG4gKiBjb25zb2xlLmxvZyhyZXN1bHQuZm9vKTsgLy8gb3V0cHV0cyA0NTZcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmoxIE9iamVjdCB0byBtZXJnZVxuICogQHJldHVybnMge09iamVjdH0gUmVzdWx0IG9mIGFsbCBtZXJnZSBwcm9wZXJ0aWVzXG4gKi9cbmZ1bmN0aW9uIG1lcmdlKC8qIG9iajEsIG9iajIsIG9iajMsIC4uLiAqLykge1xuICB2YXIgcmVzdWx0ID0ge307XG4gIGZ1bmN0aW9uIGFzc2lnblZhbHVlKHZhbCwga2V5KSB7XG4gICAgaWYgKGlzUGxhaW5PYmplY3QocmVzdWx0W2tleV0pICYmIGlzUGxhaW5PYmplY3QodmFsKSkge1xuICAgICAgcmVzdWx0W2tleV0gPSBtZXJnZShyZXN1bHRba2V5XSwgdmFsKTtcbiAgICB9IGVsc2UgaWYgKGlzUGxhaW5PYmplY3QodmFsKSkge1xuICAgICAgcmVzdWx0W2tleV0gPSBtZXJnZSh7fSwgdmFsKTtcbiAgICB9IGVsc2UgaWYgKGlzQXJyYXkodmFsKSkge1xuICAgICAgcmVzdWx0W2tleV0gPSB2YWwuc2xpY2UoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzdWx0W2tleV0gPSB2YWw7XG4gICAgfVxuICB9XG5cbiAgZm9yICh2YXIgaSA9IDAsIGwgPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgZm9yRWFjaChhcmd1bWVudHNbaV0sIGFzc2lnblZhbHVlKTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIEV4dGVuZHMgb2JqZWN0IGEgYnkgbXV0YWJseSBhZGRpbmcgdG8gaXQgdGhlIHByb3BlcnRpZXMgb2Ygb2JqZWN0IGIuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGEgVGhlIG9iamVjdCB0byBiZSBleHRlbmRlZFxuICogQHBhcmFtIHtPYmplY3R9IGIgVGhlIG9iamVjdCB0byBjb3B5IHByb3BlcnRpZXMgZnJvbVxuICogQHBhcmFtIHtPYmplY3R9IHRoaXNBcmcgVGhlIG9iamVjdCB0byBiaW5kIGZ1bmN0aW9uIHRvXG4gKiBAcmV0dXJuIHtPYmplY3R9IFRoZSByZXN1bHRpbmcgdmFsdWUgb2Ygb2JqZWN0IGFcbiAqL1xuZnVuY3Rpb24gZXh0ZW5kKGEsIGIsIHRoaXNBcmcpIHtcbiAgZm9yRWFjaChiLCBmdW5jdGlvbiBhc3NpZ25WYWx1ZSh2YWwsIGtleSkge1xuICAgIGlmICh0aGlzQXJnICYmIHR5cGVvZiB2YWwgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGFba2V5XSA9IGJpbmQodmFsLCB0aGlzQXJnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYVtrZXldID0gdmFsO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBhO1xufVxuXG4vKipcbiAqIFJlbW92ZSBieXRlIG9yZGVyIG1hcmtlci4gVGhpcyBjYXRjaGVzIEVGIEJCIEJGICh0aGUgVVRGLTggQk9NKVxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBjb250ZW50IHdpdGggQk9NXG4gKiBAcmV0dXJuIHtzdHJpbmd9IGNvbnRlbnQgdmFsdWUgd2l0aG91dCBCT01cbiAqL1xuZnVuY3Rpb24gc3RyaXBCT00oY29udGVudCkge1xuICBpZiAoY29udGVudC5jaGFyQ29kZUF0KDApID09PSAweEZFRkYpIHtcbiAgICBjb250ZW50ID0gY29udGVudC5zbGljZSgxKTtcbiAgfVxuICByZXR1cm4gY29udGVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGlzQXJyYXk6IGlzQXJyYXksXG4gIGlzQXJyYXlCdWZmZXI6IGlzQXJyYXlCdWZmZXIsXG4gIGlzQnVmZmVyOiBpc0J1ZmZlcixcbiAgaXNGb3JtRGF0YTogaXNGb3JtRGF0YSxcbiAgaXNBcnJheUJ1ZmZlclZpZXc6IGlzQXJyYXlCdWZmZXJWaWV3LFxuICBpc1N0cmluZzogaXNTdHJpbmcsXG4gIGlzTnVtYmVyOiBpc051bWJlcixcbiAgaXNPYmplY3Q6IGlzT2JqZWN0LFxuICBpc1BsYWluT2JqZWN0OiBpc1BsYWluT2JqZWN0LFxuICBpc1VuZGVmaW5lZDogaXNVbmRlZmluZWQsXG4gIGlzRGF0ZTogaXNEYXRlLFxuICBpc0ZpbGU6IGlzRmlsZSxcbiAgaXNCbG9iOiBpc0Jsb2IsXG4gIGlzRnVuY3Rpb246IGlzRnVuY3Rpb24sXG4gIGlzU3RyZWFtOiBpc1N0cmVhbSxcbiAgaXNVUkxTZWFyY2hQYXJhbXM6IGlzVVJMU2VhcmNoUGFyYW1zLFxuICBpc1N0YW5kYXJkQnJvd3NlckVudjogaXNTdGFuZGFyZEJyb3dzZXJFbnYsXG4gIGZvckVhY2g6IGZvckVhY2gsXG4gIG1lcmdlOiBtZXJnZSxcbiAgZXh0ZW5kOiBleHRlbmQsXG4gIHRyaW06IHRyaW0sXG4gIHN0cmlwQk9NOiBzdHJpcEJPTVxufTtcbiIsInJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnN5bWJvbCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYub2JqZWN0LmNyZWF0ZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0eScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0aWVzJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LXByb3RvdHlwZS1vZicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYub2JqZWN0LmtleXMnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LW5hbWVzJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5vYmplY3QuZnJlZXplJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5vYmplY3Quc2VhbCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYub2JqZWN0LnByZXZlbnQtZXh0ZW5zaW9ucycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYub2JqZWN0LmlzLWZyb3plbicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYub2JqZWN0LmlzLXNlYWxlZCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYub2JqZWN0LmlzLWV4dGVuc2libGUnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm9iamVjdC5hc3NpZ24nKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm9iamVjdC5pcycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYub2JqZWN0LnNldC1wcm90b3R5cGUtb2YnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm9iamVjdC50by1zdHJpbmcnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmZ1bmN0aW9uLmJpbmQnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmZ1bmN0aW9uLm5hbWUnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmZ1bmN0aW9uLmhhcy1pbnN0YW5jZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucGFyc2UtaW50Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5wYXJzZS1mbG9hdCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubnVtYmVyLmNvbnN0cnVjdG9yJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5udW1iZXIudG8tZml4ZWQnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm51bWJlci50by1wcmVjaXNpb24nKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm51bWJlci5lcHNpbG9uJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5udW1iZXIuaXMtZmluaXRlJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5udW1iZXIuaXMtaW50ZWdlcicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubnVtYmVyLmlzLW5hbicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubnVtYmVyLmlzLXNhZmUtaW50ZWdlcicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubnVtYmVyLm1heC1zYWZlLWludGVnZXInKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm51bWJlci5taW4tc2FmZS1pbnRlZ2VyJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5udW1iZXIucGFyc2UtZmxvYXQnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm51bWJlci5wYXJzZS1pbnQnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm1hdGguYWNvc2gnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm1hdGguYXNpbmgnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm1hdGguYXRhbmgnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm1hdGguY2JydCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubWF0aC5jbHozMicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubWF0aC5jb3NoJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5tYXRoLmV4cG0xJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5tYXRoLmZyb3VuZCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubWF0aC5oeXBvdCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubWF0aC5pbXVsJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5tYXRoLmxvZzEwJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5tYXRoLmxvZzFwJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5tYXRoLmxvZzInKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm1hdGguc2lnbicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubWF0aC5zaW5oJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5tYXRoLnRhbmgnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm1hdGgudHJ1bmMnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnN0cmluZy5mcm9tLWNvZGUtcG9pbnQnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnN0cmluZy5yYXcnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnN0cmluZy50cmltJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3InKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnN0cmluZy5jb2RlLXBvaW50LWF0Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuZW5kcy13aXRoJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuaW5jbHVkZXMnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnN0cmluZy5yZXBlYXQnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnN0cmluZy5zdGFydHMtd2l0aCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuc3RyaW5nLmFuY2hvcicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuc3RyaW5nLmJpZycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuc3RyaW5nLmJsaW5rJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuYm9sZCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuc3RyaW5nLmZpeGVkJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuZm9udGNvbG9yJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuZm9udHNpemUnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnN0cmluZy5pdGFsaWNzJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcubGluaycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuc3RyaW5nLnNtYWxsJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuc3RyaWtlJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuc3ViJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuc3VwJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5kYXRlLm5vdycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuZGF0ZS50by1qc29uJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5kYXRlLnRvLWlzby1zdHJpbmcnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmRhdGUudG8tc3RyaW5nJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5kYXRlLnRvLXByaW1pdGl2ZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkuaXMtYXJyYXknKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmFycmF5LmZyb20nKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmFycmF5Lm9mJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5hcnJheS5qb2luJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5hcnJheS5zbGljZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkuc29ydCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkuZm9yLWVhY2gnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmFycmF5Lm1hcCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkuZmlsdGVyJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5hcnJheS5zb21lJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5hcnJheS5ldmVyeScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkucmVkdWNlJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5hcnJheS5yZWR1Y2UtcmlnaHQnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmFycmF5LmluZGV4LW9mJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5hcnJheS5sYXN0LWluZGV4LW9mJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5hcnJheS5jb3B5LXdpdGhpbicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkuZmlsbCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkuZmluZCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkuZmluZC1pbmRleCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkuc3BlY2llcycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkuaXRlcmF0b3InKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZ2V4cC5jb25zdHJ1Y3RvcicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucmVnZXhwLmV4ZWMnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZ2V4cC50by1zdHJpbmcnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZ2V4cC5mbGFncycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucmVnZXhwLm1hdGNoJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5yZWdleHAucmVwbGFjZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucmVnZXhwLnNlYXJjaCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucmVnZXhwLnNwbGl0Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5wcm9taXNlJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5tYXAnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnNldCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYud2Vhay1tYXAnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LndlYWstc2V0Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi50eXBlZC5hcnJheS1idWZmZXInKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnR5cGVkLmRhdGEtdmlldycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYudHlwZWQuaW50OC1hcnJheScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYudHlwZWQudWludDgtYXJyYXknKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnR5cGVkLnVpbnQ4LWNsYW1wZWQtYXJyYXknKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnR5cGVkLmludDE2LWFycmF5Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi50eXBlZC51aW50MTYtYXJyYXknKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnR5cGVkLmludDMyLWFycmF5Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi50eXBlZC51aW50MzItYXJyYXknKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnR5cGVkLmZsb2F0MzItYXJyYXknKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnR5cGVkLmZsb2F0NjQtYXJyYXknKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZmxlY3QuYXBwbHknKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZmxlY3QuY29uc3RydWN0Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5yZWZsZWN0LmRlZmluZS1wcm9wZXJ0eScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucmVmbGVjdC5kZWxldGUtcHJvcGVydHknKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZmxlY3QuZW51bWVyYXRlJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5yZWZsZWN0LmdldCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucmVmbGVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3InKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZmxlY3QuZ2V0LXByb3RvdHlwZS1vZicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucmVmbGVjdC5oYXMnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZmxlY3QuaXMtZXh0ZW5zaWJsZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucmVmbGVjdC5vd24ta2V5cycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucmVmbGVjdC5wcmV2ZW50LWV4dGVuc2lvbnMnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZmxlY3Quc2V0Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5yZWZsZWN0LnNldC1wcm90b3R5cGUtb2YnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vbW9kdWxlcy9fY29yZScpO1xuIiwicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczcuYXJyYXkuZmxhdC1tYXAnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9fY29yZScpLkFycmF5LmZsYXRNYXA7XG4iLCJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNy5hcnJheS5pbmNsdWRlcycpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuQXJyYXkuaW5jbHVkZXM7XG4iLCJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNy5vYmplY3QuZW50cmllcycpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuT2JqZWN0LmVudHJpZXM7XG4iLCJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9ycycpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnM7XG4iLCJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNy5vYmplY3QudmFsdWVzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5PYmplY3QudmFsdWVzO1xuIiwiJ3VzZSBzdHJpY3QnO1xucmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYucHJvbWlzZScpO1xucmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczcucHJvbWlzZS5maW5hbGx5Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5Qcm9taXNlWydmaW5hbGx5J107XG4iLCJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNy5zdHJpbmcucGFkLWVuZCcpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuU3RyaW5nLnBhZEVuZDtcbiIsInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM3LnN0cmluZy5wYWQtc3RhcnQnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9fY29yZScpLlN0cmluZy5wYWRTdGFydDtcbiIsInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM3LnN0cmluZy50cmltLXJpZ2h0Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5TdHJpbmcudHJpbVJpZ2h0O1xuIiwicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczcuc3RyaW5nLnRyaW0tbGVmdCcpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuU3RyaW5nLnRyaW1MZWZ0O1xuIiwicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczcuc3ltYm9sLmFzeW5jLWl0ZXJhdG9yJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX3drcy1leHQnKS5mKCdhc3luY0l0ZXJhdG9yJyk7XG4iLCJyZXF1aXJlKCcuLi9tb2R1bGVzL2VzNy5nbG9iYWwnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vbW9kdWxlcy9fY29yZScpLmdsb2JhbDtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmICh0eXBlb2YgaXQgIT0gJ2Z1bmN0aW9uJykgdGhyb3cgVHlwZUVycm9yKGl0ICsgJyBpcyBub3QgYSBmdW5jdGlvbiEnKTtcbiAgcmV0dXJuIGl0O1xufTtcbiIsInZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgaWYgKCFpc09iamVjdChpdCkpIHRocm93IFR5cGVFcnJvcihpdCArICcgaXMgbm90IGFuIG9iamVjdCEnKTtcbiAgcmV0dXJuIGl0O1xufTtcbiIsInZhciBjb3JlID0gbW9kdWxlLmV4cG9ydHMgPSB7IHZlcnNpb246ICcyLjYuMTInIH07XG5pZiAodHlwZW9mIF9fZSA9PSAnbnVtYmVyJykgX19lID0gY29yZTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bmRlZlxuIiwiLy8gb3B0aW9uYWwgLyBzaW1wbGUgY29udGV4dCBiaW5kaW5nXG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZm4sIHRoYXQsIGxlbmd0aCkge1xuICBhRnVuY3Rpb24oZm4pO1xuICBpZiAodGhhdCA9PT0gdW5kZWZpbmVkKSByZXR1cm4gZm47XG4gIHN3aXRjaCAobGVuZ3RoKSB7XG4gICAgY2FzZSAxOiByZXR1cm4gZnVuY3Rpb24gKGEpIHtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEpO1xuICAgIH07XG4gICAgY2FzZSAyOiByZXR1cm4gZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEsIGIpO1xuICAgIH07XG4gICAgY2FzZSAzOiByZXR1cm4gZnVuY3Rpb24gKGEsIGIsIGMpIHtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEsIGIsIGMpO1xuICAgIH07XG4gIH1cbiAgcmV0dXJuIGZ1bmN0aW9uICgvKiAuLi5hcmdzICovKSB7XG4gICAgcmV0dXJuIGZuLmFwcGx5KHRoYXQsIGFyZ3VtZW50cyk7XG4gIH07XG59O1xuIiwiLy8gVGhhbmsncyBJRTggZm9yIGhpcyBmdW5ueSBkZWZpbmVQcm9wZXJ0eVxubW9kdWxlLmV4cG9ydHMgPSAhcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkoe30sICdhJywgeyBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIDc7IH0gfSkuYSAhPSA3O1xufSk7XG4iLCJ2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBkb2N1bWVudCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLmRvY3VtZW50O1xuLy8gdHlwZW9mIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQgaXMgJ29iamVjdCcgaW4gb2xkIElFXG52YXIgaXMgPSBpc09iamVjdChkb2N1bWVudCkgJiYgaXNPYmplY3QoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXMgPyBkb2N1bWVudC5jcmVhdGVFbGVtZW50KGl0KSA6IHt9O1xufTtcbiIsInZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBjb3JlID0gcmVxdWlyZSgnLi9fY29yZScpO1xudmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xudmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgUFJPVE9UWVBFID0gJ3Byb3RvdHlwZSc7XG5cbnZhciAkZXhwb3J0ID0gZnVuY3Rpb24gKHR5cGUsIG5hbWUsIHNvdXJjZSkge1xuICB2YXIgSVNfRk9SQ0VEID0gdHlwZSAmICRleHBvcnQuRjtcbiAgdmFyIElTX0dMT0JBTCA9IHR5cGUgJiAkZXhwb3J0Lkc7XG4gIHZhciBJU19TVEFUSUMgPSB0eXBlICYgJGV4cG9ydC5TO1xuICB2YXIgSVNfUFJPVE8gPSB0eXBlICYgJGV4cG9ydC5QO1xuICB2YXIgSVNfQklORCA9IHR5cGUgJiAkZXhwb3J0LkI7XG4gIHZhciBJU19XUkFQID0gdHlwZSAmICRleHBvcnQuVztcbiAgdmFyIGV4cG9ydHMgPSBJU19HTE9CQUwgPyBjb3JlIDogY29yZVtuYW1lXSB8fCAoY29yZVtuYW1lXSA9IHt9KTtcbiAgdmFyIGV4cFByb3RvID0gZXhwb3J0c1tQUk9UT1RZUEVdO1xuICB2YXIgdGFyZ2V0ID0gSVNfR0xPQkFMID8gZ2xvYmFsIDogSVNfU1RBVElDID8gZ2xvYmFsW25hbWVdIDogKGdsb2JhbFtuYW1lXSB8fCB7fSlbUFJPVE9UWVBFXTtcbiAgdmFyIGtleSwgb3duLCBvdXQ7XG4gIGlmIChJU19HTE9CQUwpIHNvdXJjZSA9IG5hbWU7XG4gIGZvciAoa2V5IGluIHNvdXJjZSkge1xuICAgIC8vIGNvbnRhaW5zIGluIG5hdGl2ZVxuICAgIG93biA9ICFJU19GT1JDRUQgJiYgdGFyZ2V0ICYmIHRhcmdldFtrZXldICE9PSB1bmRlZmluZWQ7XG4gICAgaWYgKG93biAmJiBoYXMoZXhwb3J0cywga2V5KSkgY29udGludWU7XG4gICAgLy8gZXhwb3J0IG5hdGl2ZSBvciBwYXNzZWRcbiAgICBvdXQgPSBvd24gPyB0YXJnZXRba2V5XSA6IHNvdXJjZVtrZXldO1xuICAgIC8vIHByZXZlbnQgZ2xvYmFsIHBvbGx1dGlvbiBmb3IgbmFtZXNwYWNlc1xuICAgIGV4cG9ydHNba2V5XSA9IElTX0dMT0JBTCAmJiB0eXBlb2YgdGFyZ2V0W2tleV0gIT0gJ2Z1bmN0aW9uJyA/IHNvdXJjZVtrZXldXG4gICAgLy8gYmluZCB0aW1lcnMgdG8gZ2xvYmFsIGZvciBjYWxsIGZyb20gZXhwb3J0IGNvbnRleHRcbiAgICA6IElTX0JJTkQgJiYgb3duID8gY3R4KG91dCwgZ2xvYmFsKVxuICAgIC8vIHdyYXAgZ2xvYmFsIGNvbnN0cnVjdG9ycyBmb3IgcHJldmVudCBjaGFuZ2UgdGhlbSBpbiBsaWJyYXJ5XG4gICAgOiBJU19XUkFQICYmIHRhcmdldFtrZXldID09IG91dCA/IChmdW5jdGlvbiAoQykge1xuICAgICAgdmFyIEYgPSBmdW5jdGlvbiAoYSwgYiwgYykge1xuICAgICAgICBpZiAodGhpcyBpbnN0YW5jZW9mIEMpIHtcbiAgICAgICAgICBzd2l0Y2ggKGFyZ3VtZW50cy5sZW5ndGgpIHtcbiAgICAgICAgICAgIGNhc2UgMDogcmV0dXJuIG5ldyBDKCk7XG4gICAgICAgICAgICBjYXNlIDE6IHJldHVybiBuZXcgQyhhKTtcbiAgICAgICAgICAgIGNhc2UgMjogcmV0dXJuIG5ldyBDKGEsIGIpO1xuICAgICAgICAgIH0gcmV0dXJuIG5ldyBDKGEsIGIsIGMpO1xuICAgICAgICB9IHJldHVybiBDLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICB9O1xuICAgICAgRltQUk9UT1RZUEVdID0gQ1tQUk9UT1RZUEVdO1xuICAgICAgcmV0dXJuIEY7XG4gICAgLy8gbWFrZSBzdGF0aWMgdmVyc2lvbnMgZm9yIHByb3RvdHlwZSBtZXRob2RzXG4gICAgfSkob3V0KSA6IElTX1BST1RPICYmIHR5cGVvZiBvdXQgPT0gJ2Z1bmN0aW9uJyA/IGN0eChGdW5jdGlvbi5jYWxsLCBvdXQpIDogb3V0O1xuICAgIC8vIGV4cG9ydCBwcm90byBtZXRob2RzIHRvIGNvcmUuJUNPTlNUUlVDVE9SJS5tZXRob2RzLiVOQU1FJVxuICAgIGlmIChJU19QUk9UTykge1xuICAgICAgKGV4cG9ydHMudmlydHVhbCB8fCAoZXhwb3J0cy52aXJ0dWFsID0ge30pKVtrZXldID0gb3V0O1xuICAgICAgLy8gZXhwb3J0IHByb3RvIG1ldGhvZHMgdG8gY29yZS4lQ09OU1RSVUNUT1IlLnByb3RvdHlwZS4lTkFNRSVcbiAgICAgIGlmICh0eXBlICYgJGV4cG9ydC5SICYmIGV4cFByb3RvICYmICFleHBQcm90b1trZXldKSBoaWRlKGV4cFByb3RvLCBrZXksIG91dCk7XG4gICAgfVxuICB9XG59O1xuLy8gdHlwZSBiaXRtYXBcbiRleHBvcnQuRiA9IDE7ICAgLy8gZm9yY2VkXG4kZXhwb3J0LkcgPSAyOyAgIC8vIGdsb2JhbFxuJGV4cG9ydC5TID0gNDsgICAvLyBzdGF0aWNcbiRleHBvcnQuUCA9IDg7ICAgLy8gcHJvdG9cbiRleHBvcnQuQiA9IDE2OyAgLy8gYmluZFxuJGV4cG9ydC5XID0gMzI7ICAvLyB3cmFwXG4kZXhwb3J0LlUgPSA2NDsgIC8vIHNhZmVcbiRleHBvcnQuUiA9IDEyODsgLy8gcmVhbCBwcm90byBtZXRob2QgZm9yIGBsaWJyYXJ5YFxubW9kdWxlLmV4cG9ydHMgPSAkZXhwb3J0O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZXhlYykge1xuICB0cnkge1xuICAgIHJldHVybiAhIWV4ZWMoKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG59O1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzg2I2lzc3VlY29tbWVudC0xMTU3NTkwMjhcbnZhciBnbG9iYWwgPSBtb2R1bGUuZXhwb3J0cyA9IHR5cGVvZiB3aW5kb3cgIT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93Lk1hdGggPT0gTWF0aFxuICA/IHdpbmRvdyA6IHR5cGVvZiBzZWxmICE9ICd1bmRlZmluZWQnICYmIHNlbGYuTWF0aCA9PSBNYXRoID8gc2VsZlxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmV3LWZ1bmNcbiAgOiBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuaWYgKHR5cGVvZiBfX2cgPT0gJ251bWJlcicpIF9fZyA9IGdsb2JhbDsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bmRlZlxuIiwidmFyIGhhc093blByb3BlcnR5ID0ge30uaGFzT3duUHJvcGVydHk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCwga2V5KSB7XG4gIHJldHVybiBoYXNPd25Qcm9wZXJ0eS5jYWxsKGl0LCBrZXkpO1xufTtcbiIsInZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xudmFyIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgPyBmdW5jdGlvbiAob2JqZWN0LCBrZXksIHZhbHVlKSB7XG4gIHJldHVybiBkUC5mKG9iamVjdCwga2V5LCBjcmVhdGVEZXNjKDEsIHZhbHVlKSk7XG59IDogZnVuY3Rpb24gKG9iamVjdCwga2V5LCB2YWx1ZSkge1xuICBvYmplY3Rba2V5XSA9IHZhbHVlO1xuICByZXR1cm4gb2JqZWN0O1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gIXJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgJiYgIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHJlcXVpcmUoJy4vX2RvbS1jcmVhdGUnKSgnZGl2JyksICdhJywgeyBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIDc7IH0gfSkuYSAhPSA3O1xufSk7XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gdHlwZW9mIGl0ID09PSAnb2JqZWN0JyA/IGl0ICE9PSBudWxsIDogdHlwZW9mIGl0ID09PSAnZnVuY3Rpb24nO1xufTtcbiIsInZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIElFOF9ET01fREVGSU5FID0gcmVxdWlyZSgnLi9faWU4LWRvbS1kZWZpbmUnKTtcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpO1xudmFyIGRQID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xuXG5leHBvcnRzLmYgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gT2JqZWN0LmRlZmluZVByb3BlcnR5IDogZnVuY3Rpb24gZGVmaW5lUHJvcGVydHkoTywgUCwgQXR0cmlidXRlcykge1xuICBhbk9iamVjdChPKTtcbiAgUCA9IHRvUHJpbWl0aXZlKFAsIHRydWUpO1xuICBhbk9iamVjdChBdHRyaWJ1dGVzKTtcbiAgaWYgKElFOF9ET01fREVGSU5FKSB0cnkge1xuICAgIHJldHVybiBkUChPLCBQLCBBdHRyaWJ1dGVzKTtcbiAgfSBjYXRjaCAoZSkgeyAvKiBlbXB0eSAqLyB9XG4gIGlmICgnZ2V0JyBpbiBBdHRyaWJ1dGVzIHx8ICdzZXQnIGluIEF0dHJpYnV0ZXMpIHRocm93IFR5cGVFcnJvcignQWNjZXNzb3JzIG5vdCBzdXBwb3J0ZWQhJyk7XG4gIGlmICgndmFsdWUnIGluIEF0dHJpYnV0ZXMpIE9bUF0gPSBBdHRyaWJ1dGVzLnZhbHVlO1xuICByZXR1cm4gTztcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChiaXRtYXAsIHZhbHVlKSB7XG4gIHJldHVybiB7XG4gICAgZW51bWVyYWJsZTogIShiaXRtYXAgJiAxKSxcbiAgICBjb25maWd1cmFibGU6ICEoYml0bWFwICYgMiksXG4gICAgd3JpdGFibGU6ICEoYml0bWFwICYgNCksXG4gICAgdmFsdWU6IHZhbHVlXG4gIH07XG59O1xuIiwiLy8gNy4xLjEgVG9QcmltaXRpdmUoaW5wdXQgWywgUHJlZmVycmVkVHlwZV0pXG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbi8vIGluc3RlYWQgb2YgdGhlIEVTNiBzcGVjIHZlcnNpb24sIHdlIGRpZG4ndCBpbXBsZW1lbnQgQEB0b1ByaW1pdGl2ZSBjYXNlXG4vLyBhbmQgdGhlIHNlY29uZCBhcmd1bWVudCAtIGZsYWcgLSBwcmVmZXJyZWQgdHlwZSBpcyBhIHN0cmluZ1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQsIFMpIHtcbiAgaWYgKCFpc09iamVjdChpdCkpIHJldHVybiBpdDtcbiAgdmFyIGZuLCB2YWw7XG4gIGlmIChTICYmIHR5cGVvZiAoZm4gPSBpdC50b1N0cmluZykgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKSByZXR1cm4gdmFsO1xuICBpZiAodHlwZW9mIChmbiA9IGl0LnZhbHVlT2YpID09ICdmdW5jdGlvbicgJiYgIWlzT2JqZWN0KHZhbCA9IGZuLmNhbGwoaXQpKSkgcmV0dXJuIHZhbDtcbiAgaWYgKCFTICYmIHR5cGVvZiAoZm4gPSBpdC50b1N0cmluZykgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKSByZXR1cm4gdmFsO1xuICB0aHJvdyBUeXBlRXJyb3IoXCJDYW4ndCBjb252ZXJ0IG9iamVjdCB0byBwcmltaXRpdmUgdmFsdWVcIik7XG59O1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtZ2xvYmFsXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuRywgeyBnbG9iYWw6IHJlcXVpcmUoJy4vX2dsb2JhbCcpIH0pO1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgaWYgKHR5cGVvZiBpdCAhPSAnZnVuY3Rpb24nKSB0aHJvdyBUeXBlRXJyb3IoaXQgKyAnIGlzIG5vdCBhIGZ1bmN0aW9uIScpO1xuICByZXR1cm4gaXQ7XG59O1xuIiwidmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQsIG1zZykge1xuICBpZiAodHlwZW9mIGl0ICE9ICdudW1iZXInICYmIGNvZihpdCkgIT0gJ051bWJlcicpIHRocm93IFR5cGVFcnJvcihtc2cpO1xuICByZXR1cm4gK2l0O1xufTtcbiIsIi8vIDIyLjEuMy4zMSBBcnJheS5wcm90b3R5cGVbQEB1bnNjb3BhYmxlc11cbnZhciBVTlNDT1BBQkxFUyA9IHJlcXVpcmUoJy4vX3drcycpKCd1bnNjb3BhYmxlcycpO1xudmFyIEFycmF5UHJvdG8gPSBBcnJheS5wcm90b3R5cGU7XG5pZiAoQXJyYXlQcm90b1tVTlNDT1BBQkxFU10gPT0gdW5kZWZpbmVkKSByZXF1aXJlKCcuL19oaWRlJykoQXJyYXlQcm90bywgVU5TQ09QQUJMRVMsIHt9KTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGtleSkge1xuICBBcnJheVByb3RvW1VOU0NPUEFCTEVTXVtrZXldID0gdHJ1ZTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgYXQgPSByZXF1aXJlKCcuL19zdHJpbmctYXQnKSh0cnVlKTtcblxuIC8vIGBBZHZhbmNlU3RyaW5nSW5kZXhgIGFic3RyYWN0IG9wZXJhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtYWR2YW5jZXN0cmluZ2luZGV4XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChTLCBpbmRleCwgdW5pY29kZSkge1xuICByZXR1cm4gaW5kZXggKyAodW5pY29kZSA/IGF0KFMsIGluZGV4KS5sZW5ndGggOiAxKTtcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCwgQ29uc3RydWN0b3IsIG5hbWUsIGZvcmJpZGRlbkZpZWxkKSB7XG4gIGlmICghKGl0IGluc3RhbmNlb2YgQ29uc3RydWN0b3IpIHx8IChmb3JiaWRkZW5GaWVsZCAhPT0gdW5kZWZpbmVkICYmIGZvcmJpZGRlbkZpZWxkIGluIGl0KSkge1xuICAgIHRocm93IFR5cGVFcnJvcihuYW1lICsgJzogaW5jb3JyZWN0IGludm9jYXRpb24hJyk7XG4gIH0gcmV0dXJuIGl0O1xufTtcbiIsInZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgaWYgKCFpc09iamVjdChpdCkpIHRocm93IFR5cGVFcnJvcihpdCArICcgaXMgbm90IGFuIG9iamVjdCEnKTtcbiAgcmV0dXJuIGl0O1xufTtcbiIsIi8vIDIyLjEuMy4zIEFycmF5LnByb3RvdHlwZS5jb3B5V2l0aGluKHRhcmdldCwgc3RhcnQsIGVuZCA9IHRoaXMubGVuZ3RoKVxuJ3VzZSBzdHJpY3QnO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgdG9BYnNvbHV0ZUluZGV4ID0gcmVxdWlyZSgnLi9fdG8tYWJzb2x1dGUtaW5kZXgnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFtdLmNvcHlXaXRoaW4gfHwgZnVuY3Rpb24gY29weVdpdGhpbih0YXJnZXQgLyogPSAwICovLCBzdGFydCAvKiA9IDAsIGVuZCA9IEBsZW5ndGggKi8pIHtcbiAgdmFyIE8gPSB0b09iamVjdCh0aGlzKTtcbiAgdmFyIGxlbiA9IHRvTGVuZ3RoKE8ubGVuZ3RoKTtcbiAgdmFyIHRvID0gdG9BYnNvbHV0ZUluZGV4KHRhcmdldCwgbGVuKTtcbiAgdmFyIGZyb20gPSB0b0Fic29sdXRlSW5kZXgoc3RhcnQsIGxlbik7XG4gIHZhciBlbmQgPSBhcmd1bWVudHMubGVuZ3RoID4gMiA/IGFyZ3VtZW50c1syXSA6IHVuZGVmaW5lZDtcbiAgdmFyIGNvdW50ID0gTWF0aC5taW4oKGVuZCA9PT0gdW5kZWZpbmVkID8gbGVuIDogdG9BYnNvbHV0ZUluZGV4KGVuZCwgbGVuKSkgLSBmcm9tLCBsZW4gLSB0byk7XG4gIHZhciBpbmMgPSAxO1xuICBpZiAoZnJvbSA8IHRvICYmIHRvIDwgZnJvbSArIGNvdW50KSB7XG4gICAgaW5jID0gLTE7XG4gICAgZnJvbSArPSBjb3VudCAtIDE7XG4gICAgdG8gKz0gY291bnQgLSAxO1xuICB9XG4gIHdoaWxlIChjb3VudC0tID4gMCkge1xuICAgIGlmIChmcm9tIGluIE8pIE9bdG9dID0gT1tmcm9tXTtcbiAgICBlbHNlIGRlbGV0ZSBPW3RvXTtcbiAgICB0byArPSBpbmM7XG4gICAgZnJvbSArPSBpbmM7XG4gIH0gcmV0dXJuIE87XG59O1xuIiwiLy8gMjIuMS4zLjYgQXJyYXkucHJvdG90eXBlLmZpbGwodmFsdWUsIHN0YXJ0ID0gMCwgZW5kID0gdGhpcy5sZW5ndGgpXG4ndXNlIHN0cmljdCc7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciB0b0Fic29sdXRlSW5kZXggPSByZXF1aXJlKCcuL190by1hYnNvbHV0ZS1pbmRleCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGZpbGwodmFsdWUgLyogLCBzdGFydCA9IDAsIGVuZCA9IEBsZW5ndGggKi8pIHtcbiAgdmFyIE8gPSB0b09iamVjdCh0aGlzKTtcbiAgdmFyIGxlbmd0aCA9IHRvTGVuZ3RoKE8ubGVuZ3RoKTtcbiAgdmFyIGFMZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICB2YXIgaW5kZXggPSB0b0Fic29sdXRlSW5kZXgoYUxlbiA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQsIGxlbmd0aCk7XG4gIHZhciBlbmQgPSBhTGVuID4gMiA/IGFyZ3VtZW50c1syXSA6IHVuZGVmaW5lZDtcbiAgdmFyIGVuZFBvcyA9IGVuZCA9PT0gdW5kZWZpbmVkID8gbGVuZ3RoIDogdG9BYnNvbHV0ZUluZGV4KGVuZCwgbGVuZ3RoKTtcbiAgd2hpbGUgKGVuZFBvcyA+IGluZGV4KSBPW2luZGV4KytdID0gdmFsdWU7XG4gIHJldHVybiBPO1xufTtcbiIsIi8vIGZhbHNlIC0+IEFycmF5I2luZGV4T2Zcbi8vIHRydWUgIC0+IEFycmF5I2luY2x1ZGVzXG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgdG9BYnNvbHV0ZUluZGV4ID0gcmVxdWlyZSgnLi9fdG8tYWJzb2x1dGUtaW5kZXgnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKElTX0lOQ0xVREVTKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoJHRoaXMsIGVsLCBmcm9tSW5kZXgpIHtcbiAgICB2YXIgTyA9IHRvSU9iamVjdCgkdGhpcyk7XG4gICAgdmFyIGxlbmd0aCA9IHRvTGVuZ3RoKE8ubGVuZ3RoKTtcbiAgICB2YXIgaW5kZXggPSB0b0Fic29sdXRlSW5kZXgoZnJvbUluZGV4LCBsZW5ndGgpO1xuICAgIHZhciB2YWx1ZTtcbiAgICAvLyBBcnJheSNpbmNsdWRlcyB1c2VzIFNhbWVWYWx1ZVplcm8gZXF1YWxpdHkgYWxnb3JpdGhtXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICAgIGlmIChJU19JTkNMVURFUyAmJiBlbCAhPSBlbCkgd2hpbGUgKGxlbmd0aCA+IGluZGV4KSB7XG4gICAgICB2YWx1ZSA9IE9baW5kZXgrK107XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlXG4gICAgICBpZiAodmFsdWUgIT0gdmFsdWUpIHJldHVybiB0cnVlO1xuICAgIC8vIEFycmF5I2luZGV4T2YgaWdub3JlcyBob2xlcywgQXJyYXkjaW5jbHVkZXMgLSBub3RcbiAgICB9IGVsc2UgZm9yICg7bGVuZ3RoID4gaW5kZXg7IGluZGV4KyspIGlmIChJU19JTkNMVURFUyB8fCBpbmRleCBpbiBPKSB7XG4gICAgICBpZiAoT1tpbmRleF0gPT09IGVsKSByZXR1cm4gSVNfSU5DTFVERVMgfHwgaW5kZXggfHwgMDtcbiAgICB9IHJldHVybiAhSVNfSU5DTFVERVMgJiYgLTE7XG4gIH07XG59O1xuIiwiLy8gMCAtPiBBcnJheSNmb3JFYWNoXG4vLyAxIC0+IEFycmF5I21hcFxuLy8gMiAtPiBBcnJheSNmaWx0ZXJcbi8vIDMgLT4gQXJyYXkjc29tZVxuLy8gNCAtPiBBcnJheSNldmVyeVxuLy8gNSAtPiBBcnJheSNmaW5kXG4vLyA2IC0+IEFycmF5I2ZpbmRJbmRleFxudmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xudmFyIElPYmplY3QgPSByZXF1aXJlKCcuL19pb2JqZWN0Jyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGFzYyA9IHJlcXVpcmUoJy4vX2FycmF5LXNwZWNpZXMtY3JlYXRlJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChUWVBFLCAkY3JlYXRlKSB7XG4gIHZhciBJU19NQVAgPSBUWVBFID09IDE7XG4gIHZhciBJU19GSUxURVIgPSBUWVBFID09IDI7XG4gIHZhciBJU19TT01FID0gVFlQRSA9PSAzO1xuICB2YXIgSVNfRVZFUlkgPSBUWVBFID09IDQ7XG4gIHZhciBJU19GSU5EX0lOREVYID0gVFlQRSA9PSA2O1xuICB2YXIgTk9fSE9MRVMgPSBUWVBFID09IDUgfHwgSVNfRklORF9JTkRFWDtcbiAgdmFyIGNyZWF0ZSA9ICRjcmVhdGUgfHwgYXNjO1xuICByZXR1cm4gZnVuY3Rpb24gKCR0aGlzLCBjYWxsYmFja2ZuLCB0aGF0KSB7XG4gICAgdmFyIE8gPSB0b09iamVjdCgkdGhpcyk7XG4gICAgdmFyIHNlbGYgPSBJT2JqZWN0KE8pO1xuICAgIHZhciBmID0gY3R4KGNhbGxiYWNrZm4sIHRoYXQsIDMpO1xuICAgIHZhciBsZW5ndGggPSB0b0xlbmd0aChzZWxmLmxlbmd0aCk7XG4gICAgdmFyIGluZGV4ID0gMDtcbiAgICB2YXIgcmVzdWx0ID0gSVNfTUFQID8gY3JlYXRlKCR0aGlzLCBsZW5ndGgpIDogSVNfRklMVEVSID8gY3JlYXRlKCR0aGlzLCAwKSA6IHVuZGVmaW5lZDtcbiAgICB2YXIgdmFsLCByZXM7XG4gICAgZm9yICg7bGVuZ3RoID4gaW5kZXg7IGluZGV4KyspIGlmIChOT19IT0xFUyB8fCBpbmRleCBpbiBzZWxmKSB7XG4gICAgICB2YWwgPSBzZWxmW2luZGV4XTtcbiAgICAgIHJlcyA9IGYodmFsLCBpbmRleCwgTyk7XG4gICAgICBpZiAoVFlQRSkge1xuICAgICAgICBpZiAoSVNfTUFQKSByZXN1bHRbaW5kZXhdID0gcmVzOyAgIC8vIG1hcFxuICAgICAgICBlbHNlIGlmIChyZXMpIHN3aXRjaCAoVFlQRSkge1xuICAgICAgICAgIGNhc2UgMzogcmV0dXJuIHRydWU7ICAgICAgICAgICAgIC8vIHNvbWVcbiAgICAgICAgICBjYXNlIDU6IHJldHVybiB2YWw7ICAgICAgICAgICAgICAvLyBmaW5kXG4gICAgICAgICAgY2FzZSA2OiByZXR1cm4gaW5kZXg7ICAgICAgICAgICAgLy8gZmluZEluZGV4XG4gICAgICAgICAgY2FzZSAyOiByZXN1bHQucHVzaCh2YWwpOyAgICAgICAgLy8gZmlsdGVyXG4gICAgICAgIH0gZWxzZSBpZiAoSVNfRVZFUlkpIHJldHVybiBmYWxzZTsgLy8gZXZlcnlcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIElTX0ZJTkRfSU5ERVggPyAtMSA6IElTX1NPTUUgfHwgSVNfRVZFUlkgPyBJU19FVkVSWSA6IHJlc3VsdDtcbiAgfTtcbn07XG4iLCJ2YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgSU9iamVjdCA9IHJlcXVpcmUoJy4vX2lvYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh0aGF0LCBjYWxsYmFja2ZuLCBhTGVuLCBtZW1vLCBpc1JpZ2h0KSB7XG4gIGFGdW5jdGlvbihjYWxsYmFja2ZuKTtcbiAgdmFyIE8gPSB0b09iamVjdCh0aGF0KTtcbiAgdmFyIHNlbGYgPSBJT2JqZWN0KE8pO1xuICB2YXIgbGVuZ3RoID0gdG9MZW5ndGgoTy5sZW5ndGgpO1xuICB2YXIgaW5kZXggPSBpc1JpZ2h0ID8gbGVuZ3RoIC0gMSA6IDA7XG4gIHZhciBpID0gaXNSaWdodCA/IC0xIDogMTtcbiAgaWYgKGFMZW4gPCAyKSBmb3IgKDs7KSB7XG4gICAgaWYgKGluZGV4IGluIHNlbGYpIHtcbiAgICAgIG1lbW8gPSBzZWxmW2luZGV4XTtcbiAgICAgIGluZGV4ICs9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gICAgaW5kZXggKz0gaTtcbiAgICBpZiAoaXNSaWdodCA/IGluZGV4IDwgMCA6IGxlbmd0aCA8PSBpbmRleCkge1xuICAgICAgdGhyb3cgVHlwZUVycm9yKCdSZWR1Y2Ugb2YgZW1wdHkgYXJyYXkgd2l0aCBubyBpbml0aWFsIHZhbHVlJyk7XG4gICAgfVxuICB9XG4gIGZvciAoO2lzUmlnaHQgPyBpbmRleCA+PSAwIDogbGVuZ3RoID4gaW5kZXg7IGluZGV4ICs9IGkpIGlmIChpbmRleCBpbiBzZWxmKSB7XG4gICAgbWVtbyA9IGNhbGxiYWNrZm4obWVtbywgc2VsZltpbmRleF0sIGluZGV4LCBPKTtcbiAgfVxuICByZXR1cm4gbWVtbztcbn07XG4iLCJ2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBpc0FycmF5ID0gcmVxdWlyZSgnLi9faXMtYXJyYXknKTtcbnZhciBTUEVDSUVTID0gcmVxdWlyZSgnLi9fd2tzJykoJ3NwZWNpZXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob3JpZ2luYWwpIHtcbiAgdmFyIEM7XG4gIGlmIChpc0FycmF5KG9yaWdpbmFsKSkge1xuICAgIEMgPSBvcmlnaW5hbC5jb25zdHJ1Y3RvcjtcbiAgICAvLyBjcm9zcy1yZWFsbSBmYWxsYmFja1xuICAgIGlmICh0eXBlb2YgQyA9PSAnZnVuY3Rpb24nICYmIChDID09PSBBcnJheSB8fCBpc0FycmF5KEMucHJvdG90eXBlKSkpIEMgPSB1bmRlZmluZWQ7XG4gICAgaWYgKGlzT2JqZWN0KEMpKSB7XG4gICAgICBDID0gQ1tTUEVDSUVTXTtcbiAgICAgIGlmIChDID09PSBudWxsKSBDID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgfSByZXR1cm4gQyA9PT0gdW5kZWZpbmVkID8gQXJyYXkgOiBDO1xufTtcbiIsIi8vIDkuNC4yLjMgQXJyYXlTcGVjaWVzQ3JlYXRlKG9yaWdpbmFsQXJyYXksIGxlbmd0aClcbnZhciBzcGVjaWVzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuL19hcnJheS1zcGVjaWVzLWNvbnN0cnVjdG9yJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9yaWdpbmFsLCBsZW5ndGgpIHtcbiAgcmV0dXJuIG5ldyAoc3BlY2llc0NvbnN0cnVjdG9yKG9yaWdpbmFsKSkobGVuZ3RoKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgaW52b2tlID0gcmVxdWlyZSgnLi9faW52b2tlJyk7XG52YXIgYXJyYXlTbGljZSA9IFtdLnNsaWNlO1xudmFyIGZhY3RvcmllcyA9IHt9O1xuXG52YXIgY29uc3RydWN0ID0gZnVuY3Rpb24gKEYsIGxlbiwgYXJncykge1xuICBpZiAoIShsZW4gaW4gZmFjdG9yaWVzKSkge1xuICAgIGZvciAodmFyIG4gPSBbXSwgaSA9IDA7IGkgPCBsZW47IGkrKykgbltpXSA9ICdhWycgKyBpICsgJ10nO1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1uZXctZnVuY1xuICAgIGZhY3Rvcmllc1tsZW5dID0gRnVuY3Rpb24oJ0YsYScsICdyZXR1cm4gbmV3IEYoJyArIG4uam9pbignLCcpICsgJyknKTtcbiAgfSByZXR1cm4gZmFjdG9yaWVzW2xlbl0oRiwgYXJncyk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEZ1bmN0aW9uLmJpbmQgfHwgZnVuY3Rpb24gYmluZCh0aGF0IC8qICwgLi4uYXJncyAqLykge1xuICB2YXIgZm4gPSBhRnVuY3Rpb24odGhpcyk7XG4gIHZhciBwYXJ0QXJncyA9IGFycmF5U2xpY2UuY2FsbChhcmd1bWVudHMsIDEpO1xuICB2YXIgYm91bmQgPSBmdW5jdGlvbiAoLyogYXJncy4uLiAqLykge1xuICAgIHZhciBhcmdzID0gcGFydEFyZ3MuY29uY2F0KGFycmF5U2xpY2UuY2FsbChhcmd1bWVudHMpKTtcbiAgICByZXR1cm4gdGhpcyBpbnN0YW5jZW9mIGJvdW5kID8gY29uc3RydWN0KGZuLCBhcmdzLmxlbmd0aCwgYXJncykgOiBpbnZva2UoZm4sIGFyZ3MsIHRoYXQpO1xuICB9O1xuICBpZiAoaXNPYmplY3QoZm4ucHJvdG90eXBlKSkgYm91bmQucHJvdG90eXBlID0gZm4ucHJvdG90eXBlO1xuICByZXR1cm4gYm91bmQ7XG59O1xuIiwiLy8gZ2V0dGluZyB0YWcgZnJvbSAxOS4xLjMuNiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nKClcbnZhciBjb2YgPSByZXF1aXJlKCcuL19jb2YnKTtcbnZhciBUQUcgPSByZXF1aXJlKCcuL193a3MnKSgndG9TdHJpbmdUYWcnKTtcbi8vIEVTMyB3cm9uZyBoZXJlXG52YXIgQVJHID0gY29mKGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFyZ3VtZW50czsgfSgpKSA9PSAnQXJndW1lbnRzJztcblxuLy8gZmFsbGJhY2sgZm9yIElFMTEgU2NyaXB0IEFjY2VzcyBEZW5pZWQgZXJyb3JcbnZhciB0cnlHZXQgPSBmdW5jdGlvbiAoaXQsIGtleSkge1xuICB0cnkge1xuICAgIHJldHVybiBpdFtrZXldO1xuICB9IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHZhciBPLCBULCBCO1xuICByZXR1cm4gaXQgPT09IHVuZGVmaW5lZCA/ICdVbmRlZmluZWQnIDogaXQgPT09IG51bGwgPyAnTnVsbCdcbiAgICAvLyBAQHRvU3RyaW5nVGFnIGNhc2VcbiAgICA6IHR5cGVvZiAoVCA9IHRyeUdldChPID0gT2JqZWN0KGl0KSwgVEFHKSkgPT0gJ3N0cmluZycgPyBUXG4gICAgLy8gYnVpbHRpblRhZyBjYXNlXG4gICAgOiBBUkcgPyBjb2YoTylcbiAgICAvLyBFUzMgYXJndW1lbnRzIGZhbGxiYWNrXG4gICAgOiAoQiA9IGNvZihPKSkgPT0gJ09iamVjdCcgJiYgdHlwZW9mIE8uY2FsbGVlID09ICdmdW5jdGlvbicgPyAnQXJndW1lbnRzJyA6IEI7XG59O1xuIiwidmFyIHRvU3RyaW5nID0ge30udG9TdHJpbmc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKGl0KS5zbGljZSg4LCAtMSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZjtcbnZhciBjcmVhdGUgPSByZXF1aXJlKCcuL19vYmplY3QtY3JlYXRlJyk7XG52YXIgcmVkZWZpbmVBbGwgPSByZXF1aXJlKCcuL19yZWRlZmluZS1hbGwnKTtcbnZhciBjdHggPSByZXF1aXJlKCcuL19jdHgnKTtcbnZhciBhbkluc3RhbmNlID0gcmVxdWlyZSgnLi9fYW4taW5zdGFuY2UnKTtcbnZhciBmb3JPZiA9IHJlcXVpcmUoJy4vX2Zvci1vZicpO1xudmFyICRpdGVyRGVmaW5lID0gcmVxdWlyZSgnLi9faXRlci1kZWZpbmUnKTtcbnZhciBzdGVwID0gcmVxdWlyZSgnLi9faXRlci1zdGVwJyk7XG52YXIgc2V0U3BlY2llcyA9IHJlcXVpcmUoJy4vX3NldC1zcGVjaWVzJyk7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpO1xudmFyIGZhc3RLZXkgPSByZXF1aXJlKCcuL19tZXRhJykuZmFzdEtleTtcbnZhciB2YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlLWNvbGxlY3Rpb24nKTtcbnZhciBTSVpFID0gREVTQ1JJUFRPUlMgPyAnX3MnIDogJ3NpemUnO1xuXG52YXIgZ2V0RW50cnkgPSBmdW5jdGlvbiAodGhhdCwga2V5KSB7XG4gIC8vIGZhc3QgY2FzZVxuICB2YXIgaW5kZXggPSBmYXN0S2V5KGtleSk7XG4gIHZhciBlbnRyeTtcbiAgaWYgKGluZGV4ICE9PSAnRicpIHJldHVybiB0aGF0Ll9pW2luZGV4XTtcbiAgLy8gZnJvemVuIG9iamVjdCBjYXNlXG4gIGZvciAoZW50cnkgPSB0aGF0Ll9mOyBlbnRyeTsgZW50cnkgPSBlbnRyeS5uKSB7XG4gICAgaWYgKGVudHJ5LmsgPT0ga2V5KSByZXR1cm4gZW50cnk7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBnZXRDb25zdHJ1Y3RvcjogZnVuY3Rpb24gKHdyYXBwZXIsIE5BTUUsIElTX01BUCwgQURERVIpIHtcbiAgICB2YXIgQyA9IHdyYXBwZXIoZnVuY3Rpb24gKHRoYXQsIGl0ZXJhYmxlKSB7XG4gICAgICBhbkluc3RhbmNlKHRoYXQsIEMsIE5BTUUsICdfaScpO1xuICAgICAgdGhhdC5fdCA9IE5BTUU7ICAgICAgICAgLy8gY29sbGVjdGlvbiB0eXBlXG4gICAgICB0aGF0Ll9pID0gY3JlYXRlKG51bGwpOyAvLyBpbmRleFxuICAgICAgdGhhdC5fZiA9IHVuZGVmaW5lZDsgICAgLy8gZmlyc3QgZW50cnlcbiAgICAgIHRoYXQuX2wgPSB1bmRlZmluZWQ7ICAgIC8vIGxhc3QgZW50cnlcbiAgICAgIHRoYXRbU0laRV0gPSAwOyAgICAgICAgIC8vIHNpemVcbiAgICAgIGlmIChpdGVyYWJsZSAhPSB1bmRlZmluZWQpIGZvck9mKGl0ZXJhYmxlLCBJU19NQVAsIHRoYXRbQURERVJdLCB0aGF0KTtcbiAgICB9KTtcbiAgICByZWRlZmluZUFsbChDLnByb3RvdHlwZSwge1xuICAgICAgLy8gMjMuMS4zLjEgTWFwLnByb3RvdHlwZS5jbGVhcigpXG4gICAgICAvLyAyMy4yLjMuMiBTZXQucHJvdG90eXBlLmNsZWFyKClcbiAgICAgIGNsZWFyOiBmdW5jdGlvbiBjbGVhcigpIHtcbiAgICAgICAgZm9yICh2YXIgdGhhdCA9IHZhbGlkYXRlKHRoaXMsIE5BTUUpLCBkYXRhID0gdGhhdC5faSwgZW50cnkgPSB0aGF0Ll9mOyBlbnRyeTsgZW50cnkgPSBlbnRyeS5uKSB7XG4gICAgICAgICAgZW50cnkuciA9IHRydWU7XG4gICAgICAgICAgaWYgKGVudHJ5LnApIGVudHJ5LnAgPSBlbnRyeS5wLm4gPSB1bmRlZmluZWQ7XG4gICAgICAgICAgZGVsZXRlIGRhdGFbZW50cnkuaV07XG4gICAgICAgIH1cbiAgICAgICAgdGhhdC5fZiA9IHRoYXQuX2wgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoYXRbU0laRV0gPSAwO1xuICAgICAgfSxcbiAgICAgIC8vIDIzLjEuMy4zIE1hcC5wcm90b3R5cGUuZGVsZXRlKGtleSlcbiAgICAgIC8vIDIzLjIuMy40IFNldC5wcm90b3R5cGUuZGVsZXRlKHZhbHVlKVxuICAgICAgJ2RlbGV0ZSc6IGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgdmFyIHRoYXQgPSB2YWxpZGF0ZSh0aGlzLCBOQU1FKTtcbiAgICAgICAgdmFyIGVudHJ5ID0gZ2V0RW50cnkodGhhdCwga2V5KTtcbiAgICAgICAgaWYgKGVudHJ5KSB7XG4gICAgICAgICAgdmFyIG5leHQgPSBlbnRyeS5uO1xuICAgICAgICAgIHZhciBwcmV2ID0gZW50cnkucDtcbiAgICAgICAgICBkZWxldGUgdGhhdC5faVtlbnRyeS5pXTtcbiAgICAgICAgICBlbnRyeS5yID0gdHJ1ZTtcbiAgICAgICAgICBpZiAocHJldikgcHJldi5uID0gbmV4dDtcbiAgICAgICAgICBpZiAobmV4dCkgbmV4dC5wID0gcHJldjtcbiAgICAgICAgICBpZiAodGhhdC5fZiA9PSBlbnRyeSkgdGhhdC5fZiA9IG5leHQ7XG4gICAgICAgICAgaWYgKHRoYXQuX2wgPT0gZW50cnkpIHRoYXQuX2wgPSBwcmV2O1xuICAgICAgICAgIHRoYXRbU0laRV0tLTtcbiAgICAgICAgfSByZXR1cm4gISFlbnRyeTtcbiAgICAgIH0sXG4gICAgICAvLyAyMy4yLjMuNiBTZXQucHJvdG90eXBlLmZvckVhY2goY2FsbGJhY2tmbiwgdGhpc0FyZyA9IHVuZGVmaW5lZClcbiAgICAgIC8vIDIzLjEuMy41IE1hcC5wcm90b3R5cGUuZm9yRWFjaChjYWxsYmFja2ZuLCB0aGlzQXJnID0gdW5kZWZpbmVkKVxuICAgICAgZm9yRWFjaDogZnVuY3Rpb24gZm9yRWFjaChjYWxsYmFja2ZuIC8qICwgdGhhdCA9IHVuZGVmaW5lZCAqLykge1xuICAgICAgICB2YWxpZGF0ZSh0aGlzLCBOQU1FKTtcbiAgICAgICAgdmFyIGYgPSBjdHgoY2FsbGJhY2tmbiwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQsIDMpO1xuICAgICAgICB2YXIgZW50cnk7XG4gICAgICAgIHdoaWxlIChlbnRyeSA9IGVudHJ5ID8gZW50cnkubiA6IHRoaXMuX2YpIHtcbiAgICAgICAgICBmKGVudHJ5LnYsIGVudHJ5LmssIHRoaXMpO1xuICAgICAgICAgIC8vIHJldmVydCB0byB0aGUgbGFzdCBleGlzdGluZyBlbnRyeVxuICAgICAgICAgIHdoaWxlIChlbnRyeSAmJiBlbnRyeS5yKSBlbnRyeSA9IGVudHJ5LnA7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICAvLyAyMy4xLjMuNyBNYXAucHJvdG90eXBlLmhhcyhrZXkpXG4gICAgICAvLyAyMy4yLjMuNyBTZXQucHJvdG90eXBlLmhhcyh2YWx1ZSlcbiAgICAgIGhhczogZnVuY3Rpb24gaGFzKGtleSkge1xuICAgICAgICByZXR1cm4gISFnZXRFbnRyeSh2YWxpZGF0ZSh0aGlzLCBOQU1FKSwga2V5KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBpZiAoREVTQ1JJUFRPUlMpIGRQKEMucHJvdG90eXBlLCAnc2l6ZScsIHtcbiAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdmFsaWRhdGUodGhpcywgTkFNRSlbU0laRV07XG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIEM7XG4gIH0sXG4gIGRlZjogZnVuY3Rpb24gKHRoYXQsIGtleSwgdmFsdWUpIHtcbiAgICB2YXIgZW50cnkgPSBnZXRFbnRyeSh0aGF0LCBrZXkpO1xuICAgIHZhciBwcmV2LCBpbmRleDtcbiAgICAvLyBjaGFuZ2UgZXhpc3RpbmcgZW50cnlcbiAgICBpZiAoZW50cnkpIHtcbiAgICAgIGVudHJ5LnYgPSB2YWx1ZTtcbiAgICAvLyBjcmVhdGUgbmV3IGVudHJ5XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoYXQuX2wgPSBlbnRyeSA9IHtcbiAgICAgICAgaTogaW5kZXggPSBmYXN0S2V5KGtleSwgdHJ1ZSksIC8vIDwtIGluZGV4XG4gICAgICAgIGs6IGtleSwgICAgICAgICAgICAgICAgICAgICAgICAvLyA8LSBrZXlcbiAgICAgICAgdjogdmFsdWUsICAgICAgICAgICAgICAgICAgICAgIC8vIDwtIHZhbHVlXG4gICAgICAgIHA6IHByZXYgPSB0aGF0Ll9sLCAgICAgICAgICAgICAvLyA8LSBwcmV2aW91cyBlbnRyeVxuICAgICAgICBuOiB1bmRlZmluZWQsICAgICAgICAgICAgICAgICAgLy8gPC0gbmV4dCBlbnRyeVxuICAgICAgICByOiBmYWxzZSAgICAgICAgICAgICAgICAgICAgICAgLy8gPC0gcmVtb3ZlZFxuICAgICAgfTtcbiAgICAgIGlmICghdGhhdC5fZikgdGhhdC5fZiA9IGVudHJ5O1xuICAgICAgaWYgKHByZXYpIHByZXYubiA9IGVudHJ5O1xuICAgICAgdGhhdFtTSVpFXSsrO1xuICAgICAgLy8gYWRkIHRvIGluZGV4XG4gICAgICBpZiAoaW5kZXggIT09ICdGJykgdGhhdC5faVtpbmRleF0gPSBlbnRyeTtcbiAgICB9IHJldHVybiB0aGF0O1xuICB9LFxuICBnZXRFbnRyeTogZ2V0RW50cnksXG4gIHNldFN0cm9uZzogZnVuY3Rpb24gKEMsIE5BTUUsIElTX01BUCkge1xuICAgIC8vIGFkZCAua2V5cywgLnZhbHVlcywgLmVudHJpZXMsIFtAQGl0ZXJhdG9yXVxuICAgIC8vIDIzLjEuMy40LCAyMy4xLjMuOCwgMjMuMS4zLjExLCAyMy4xLjMuMTIsIDIzLjIuMy41LCAyMy4yLjMuOCwgMjMuMi4zLjEwLCAyMy4yLjMuMTFcbiAgICAkaXRlckRlZmluZShDLCBOQU1FLCBmdW5jdGlvbiAoaXRlcmF0ZWQsIGtpbmQpIHtcbiAgICAgIHRoaXMuX3QgPSB2YWxpZGF0ZShpdGVyYXRlZCwgTkFNRSk7IC8vIHRhcmdldFxuICAgICAgdGhpcy5fayA9IGtpbmQ7ICAgICAgICAgICAgICAgICAgICAgLy8ga2luZFxuICAgICAgdGhpcy5fbCA9IHVuZGVmaW5lZDsgICAgICAgICAgICAgICAgLy8gcHJldmlvdXNcbiAgICB9LCBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgdGhhdCA9IHRoaXM7XG4gICAgICB2YXIga2luZCA9IHRoYXQuX2s7XG4gICAgICB2YXIgZW50cnkgPSB0aGF0Ll9sO1xuICAgICAgLy8gcmV2ZXJ0IHRvIHRoZSBsYXN0IGV4aXN0aW5nIGVudHJ5XG4gICAgICB3aGlsZSAoZW50cnkgJiYgZW50cnkucikgZW50cnkgPSBlbnRyeS5wO1xuICAgICAgLy8gZ2V0IG5leHQgZW50cnlcbiAgICAgIGlmICghdGhhdC5fdCB8fCAhKHRoYXQuX2wgPSBlbnRyeSA9IGVudHJ5ID8gZW50cnkubiA6IHRoYXQuX3QuX2YpKSB7XG4gICAgICAgIC8vIG9yIGZpbmlzaCB0aGUgaXRlcmF0aW9uXG4gICAgICAgIHRoYXQuX3QgPSB1bmRlZmluZWQ7XG4gICAgICAgIHJldHVybiBzdGVwKDEpO1xuICAgICAgfVxuICAgICAgLy8gcmV0dXJuIHN0ZXAgYnkga2luZFxuICAgICAgaWYgKGtpbmQgPT0gJ2tleXMnKSByZXR1cm4gc3RlcCgwLCBlbnRyeS5rKTtcbiAgICAgIGlmIChraW5kID09ICd2YWx1ZXMnKSByZXR1cm4gc3RlcCgwLCBlbnRyeS52KTtcbiAgICAgIHJldHVybiBzdGVwKDAsIFtlbnRyeS5rLCBlbnRyeS52XSk7XG4gICAgfSwgSVNfTUFQID8gJ2VudHJpZXMnIDogJ3ZhbHVlcycsICFJU19NQVAsIHRydWUpO1xuXG4gICAgLy8gYWRkIFtAQHNwZWNpZXNdLCAyMy4xLjIuMiwgMjMuMi4yLjJcbiAgICBzZXRTcGVjaWVzKE5BTUUpO1xuICB9XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHJlZGVmaW5lQWxsID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUtYWxsJyk7XG52YXIgZ2V0V2VhayA9IHJlcXVpcmUoJy4vX21ldGEnKS5nZXRXZWFrO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBhbkluc3RhbmNlID0gcmVxdWlyZSgnLi9fYW4taW5zdGFuY2UnKTtcbnZhciBmb3JPZiA9IHJlcXVpcmUoJy4vX2Zvci1vZicpO1xudmFyIGNyZWF0ZUFycmF5TWV0aG9kID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpO1xudmFyICRoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciB2YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlLWNvbGxlY3Rpb24nKTtcbnZhciBhcnJheUZpbmQgPSBjcmVhdGVBcnJheU1ldGhvZCg1KTtcbnZhciBhcnJheUZpbmRJbmRleCA9IGNyZWF0ZUFycmF5TWV0aG9kKDYpO1xudmFyIGlkID0gMDtcblxuLy8gZmFsbGJhY2sgZm9yIHVuY2F1Z2h0IGZyb3plbiBrZXlzXG52YXIgdW5jYXVnaHRGcm96ZW5TdG9yZSA9IGZ1bmN0aW9uICh0aGF0KSB7XG4gIHJldHVybiB0aGF0Ll9sIHx8ICh0aGF0Ll9sID0gbmV3IFVuY2F1Z2h0RnJvemVuU3RvcmUoKSk7XG59O1xudmFyIFVuY2F1Z2h0RnJvemVuU3RvcmUgPSBmdW5jdGlvbiAoKSB7XG4gIHRoaXMuYSA9IFtdO1xufTtcbnZhciBmaW5kVW5jYXVnaHRGcm96ZW4gPSBmdW5jdGlvbiAoc3RvcmUsIGtleSkge1xuICByZXR1cm4gYXJyYXlGaW5kKHN0b3JlLmEsIGZ1bmN0aW9uIChpdCkge1xuICAgIHJldHVybiBpdFswXSA9PT0ga2V5O1xuICB9KTtcbn07XG5VbmNhdWdodEZyb3plblN0b3JlLnByb3RvdHlwZSA9IHtcbiAgZ2V0OiBmdW5jdGlvbiAoa2V5KSB7XG4gICAgdmFyIGVudHJ5ID0gZmluZFVuY2F1Z2h0RnJvemVuKHRoaXMsIGtleSk7XG4gICAgaWYgKGVudHJ5KSByZXR1cm4gZW50cnlbMV07XG4gIH0sXG4gIGhhczogZnVuY3Rpb24gKGtleSkge1xuICAgIHJldHVybiAhIWZpbmRVbmNhdWdodEZyb3plbih0aGlzLCBrZXkpO1xuICB9LFxuICBzZXQ6IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG4gICAgdmFyIGVudHJ5ID0gZmluZFVuY2F1Z2h0RnJvemVuKHRoaXMsIGtleSk7XG4gICAgaWYgKGVudHJ5KSBlbnRyeVsxXSA9IHZhbHVlO1xuICAgIGVsc2UgdGhpcy5hLnB1c2goW2tleSwgdmFsdWVdKTtcbiAgfSxcbiAgJ2RlbGV0ZSc6IGZ1bmN0aW9uIChrZXkpIHtcbiAgICB2YXIgaW5kZXggPSBhcnJheUZpbmRJbmRleCh0aGlzLmEsIGZ1bmN0aW9uIChpdCkge1xuICAgICAgcmV0dXJuIGl0WzBdID09PSBrZXk7XG4gICAgfSk7XG4gICAgaWYgKH5pbmRleCkgdGhpcy5hLnNwbGljZShpbmRleCwgMSk7XG4gICAgcmV0dXJuICEhfmluZGV4O1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZ2V0Q29uc3RydWN0b3I6IGZ1bmN0aW9uICh3cmFwcGVyLCBOQU1FLCBJU19NQVAsIEFEREVSKSB7XG4gICAgdmFyIEMgPSB3cmFwcGVyKGZ1bmN0aW9uICh0aGF0LCBpdGVyYWJsZSkge1xuICAgICAgYW5JbnN0YW5jZSh0aGF0LCBDLCBOQU1FLCAnX2knKTtcbiAgICAgIHRoYXQuX3QgPSBOQU1FOyAgICAgIC8vIGNvbGxlY3Rpb24gdHlwZVxuICAgICAgdGhhdC5faSA9IGlkKys7ICAgICAgLy8gY29sbGVjdGlvbiBpZFxuICAgICAgdGhhdC5fbCA9IHVuZGVmaW5lZDsgLy8gbGVhayBzdG9yZSBmb3IgdW5jYXVnaHQgZnJvemVuIG9iamVjdHNcbiAgICAgIGlmIChpdGVyYWJsZSAhPSB1bmRlZmluZWQpIGZvck9mKGl0ZXJhYmxlLCBJU19NQVAsIHRoYXRbQURERVJdLCB0aGF0KTtcbiAgICB9KTtcbiAgICByZWRlZmluZUFsbChDLnByb3RvdHlwZSwge1xuICAgICAgLy8gMjMuMy4zLjIgV2Vha01hcC5wcm90b3R5cGUuZGVsZXRlKGtleSlcbiAgICAgIC8vIDIzLjQuMy4zIFdlYWtTZXQucHJvdG90eXBlLmRlbGV0ZSh2YWx1ZSlcbiAgICAgICdkZWxldGUnOiBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIGlmICghaXNPYmplY3Qoa2V5KSkgcmV0dXJuIGZhbHNlO1xuICAgICAgICB2YXIgZGF0YSA9IGdldFdlYWsoa2V5KTtcbiAgICAgICAgaWYgKGRhdGEgPT09IHRydWUpIHJldHVybiB1bmNhdWdodEZyb3plblN0b3JlKHZhbGlkYXRlKHRoaXMsIE5BTUUpKVsnZGVsZXRlJ10oa2V5KTtcbiAgICAgICAgcmV0dXJuIGRhdGEgJiYgJGhhcyhkYXRhLCB0aGlzLl9pKSAmJiBkZWxldGUgZGF0YVt0aGlzLl9pXTtcbiAgICAgIH0sXG4gICAgICAvLyAyMy4zLjMuNCBXZWFrTWFwLnByb3RvdHlwZS5oYXMoa2V5KVxuICAgICAgLy8gMjMuNC4zLjQgV2Vha1NldC5wcm90b3R5cGUuaGFzKHZhbHVlKVxuICAgICAgaGFzOiBmdW5jdGlvbiBoYXMoa2V5KSB7XG4gICAgICAgIGlmICghaXNPYmplY3Qoa2V5KSkgcmV0dXJuIGZhbHNlO1xuICAgICAgICB2YXIgZGF0YSA9IGdldFdlYWsoa2V5KTtcbiAgICAgICAgaWYgKGRhdGEgPT09IHRydWUpIHJldHVybiB1bmNhdWdodEZyb3plblN0b3JlKHZhbGlkYXRlKHRoaXMsIE5BTUUpKS5oYXMoa2V5KTtcbiAgICAgICAgcmV0dXJuIGRhdGEgJiYgJGhhcyhkYXRhLCB0aGlzLl9pKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gQztcbiAgfSxcbiAgZGVmOiBmdW5jdGlvbiAodGhhdCwga2V5LCB2YWx1ZSkge1xuICAgIHZhciBkYXRhID0gZ2V0V2Vhayhhbk9iamVjdChrZXkpLCB0cnVlKTtcbiAgICBpZiAoZGF0YSA9PT0gdHJ1ZSkgdW5jYXVnaHRGcm96ZW5TdG9yZSh0aGF0KS5zZXQoa2V5LCB2YWx1ZSk7XG4gICAgZWxzZSBkYXRhW3RoYXQuX2ldID0gdmFsdWU7XG4gICAgcmV0dXJuIHRoYXQ7XG4gIH0sXG4gIHVmc3RvcmU6IHVuY2F1Z2h0RnJvemVuU3RvcmVcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKTtcbnZhciByZWRlZmluZUFsbCA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lLWFsbCcpO1xudmFyIG1ldGEgPSByZXF1aXJlKCcuL19tZXRhJyk7XG52YXIgZm9yT2YgPSByZXF1aXJlKCcuL19mb3Itb2YnKTtcbnZhciBhbkluc3RhbmNlID0gcmVxdWlyZSgnLi9fYW4taW5zdGFuY2UnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbnZhciAkaXRlckRldGVjdCA9IHJlcXVpcmUoJy4vX2l0ZXItZGV0ZWN0Jyk7XG52YXIgc2V0VG9TdHJpbmdUYWcgPSByZXF1aXJlKCcuL19zZXQtdG8tc3RyaW5nLXRhZycpO1xudmFyIGluaGVyaXRJZlJlcXVpcmVkID0gcmVxdWlyZSgnLi9faW5oZXJpdC1pZi1yZXF1aXJlZCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChOQU1FLCB3cmFwcGVyLCBtZXRob2RzLCBjb21tb24sIElTX01BUCwgSVNfV0VBSykge1xuICB2YXIgQmFzZSA9IGdsb2JhbFtOQU1FXTtcbiAgdmFyIEMgPSBCYXNlO1xuICB2YXIgQURERVIgPSBJU19NQVAgPyAnc2V0JyA6ICdhZGQnO1xuICB2YXIgcHJvdG8gPSBDICYmIEMucHJvdG90eXBlO1xuICB2YXIgTyA9IHt9O1xuICB2YXIgZml4TWV0aG9kID0gZnVuY3Rpb24gKEtFWSkge1xuICAgIHZhciBmbiA9IHByb3RvW0tFWV07XG4gICAgcmVkZWZpbmUocHJvdG8sIEtFWSxcbiAgICAgIEtFWSA9PSAnZGVsZXRlJyA/IGZ1bmN0aW9uIChhKSB7XG4gICAgICAgIHJldHVybiBJU19XRUFLICYmICFpc09iamVjdChhKSA/IGZhbHNlIDogZm4uY2FsbCh0aGlzLCBhID09PSAwID8gMCA6IGEpO1xuICAgICAgfSA6IEtFWSA9PSAnaGFzJyA/IGZ1bmN0aW9uIGhhcyhhKSB7XG4gICAgICAgIHJldHVybiBJU19XRUFLICYmICFpc09iamVjdChhKSA/IGZhbHNlIDogZm4uY2FsbCh0aGlzLCBhID09PSAwID8gMCA6IGEpO1xuICAgICAgfSA6IEtFWSA9PSAnZ2V0JyA/IGZ1bmN0aW9uIGdldChhKSB7XG4gICAgICAgIHJldHVybiBJU19XRUFLICYmICFpc09iamVjdChhKSA/IHVuZGVmaW5lZCA6IGZuLmNhbGwodGhpcywgYSA9PT0gMCA/IDAgOiBhKTtcbiAgICAgIH0gOiBLRVkgPT0gJ2FkZCcgPyBmdW5jdGlvbiBhZGQoYSkgeyBmbi5jYWxsKHRoaXMsIGEgPT09IDAgPyAwIDogYSk7IHJldHVybiB0aGlzOyB9XG4gICAgICAgIDogZnVuY3Rpb24gc2V0KGEsIGIpIHsgZm4uY2FsbCh0aGlzLCBhID09PSAwID8gMCA6IGEsIGIpOyByZXR1cm4gdGhpczsgfVxuICAgICk7XG4gIH07XG4gIGlmICh0eXBlb2YgQyAhPSAnZnVuY3Rpb24nIHx8ICEoSVNfV0VBSyB8fCBwcm90by5mb3JFYWNoICYmICFmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgbmV3IEMoKS5lbnRyaWVzKCkubmV4dCgpO1xuICB9KSkpIHtcbiAgICAvLyBjcmVhdGUgY29sbGVjdGlvbiBjb25zdHJ1Y3RvclxuICAgIEMgPSBjb21tb24uZ2V0Q29uc3RydWN0b3Iod3JhcHBlciwgTkFNRSwgSVNfTUFQLCBBRERFUik7XG4gICAgcmVkZWZpbmVBbGwoQy5wcm90b3R5cGUsIG1ldGhvZHMpO1xuICAgIG1ldGEuTkVFRCA9IHRydWU7XG4gIH0gZWxzZSB7XG4gICAgdmFyIGluc3RhbmNlID0gbmV3IEMoKTtcbiAgICAvLyBlYXJseSBpbXBsZW1lbnRhdGlvbnMgbm90IHN1cHBvcnRzIGNoYWluaW5nXG4gICAgdmFyIEhBU05UX0NIQUlOSU5HID0gaW5zdGFuY2VbQURERVJdKElTX1dFQUsgPyB7fSA6IC0wLCAxKSAhPSBpbnN0YW5jZTtcbiAgICAvLyBWOCB+ICBDaHJvbWl1bSA0MC0gd2Vhay1jb2xsZWN0aW9ucyB0aHJvd3Mgb24gcHJpbWl0aXZlcywgYnV0IHNob3VsZCByZXR1cm4gZmFsc2VcbiAgICB2YXIgVEhST1dTX09OX1BSSU1JVElWRVMgPSBmYWlscyhmdW5jdGlvbiAoKSB7IGluc3RhbmNlLmhhcygxKTsgfSk7XG4gICAgLy8gbW9zdCBlYXJseSBpbXBsZW1lbnRhdGlvbnMgZG9lc24ndCBzdXBwb3J0cyBpdGVyYWJsZXMsIG1vc3QgbW9kZXJuIC0gbm90IGNsb3NlIGl0IGNvcnJlY3RseVxuICAgIHZhciBBQ0NFUFRfSVRFUkFCTEVTID0gJGl0ZXJEZXRlY3QoZnVuY3Rpb24gKGl0ZXIpIHsgbmV3IEMoaXRlcik7IH0pOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ld1xuICAgIC8vIGZvciBlYXJseSBpbXBsZW1lbnRhdGlvbnMgLTAgYW5kICswIG5vdCB0aGUgc2FtZVxuICAgIHZhciBCVUdHWV9aRVJPID0gIUlTX1dFQUsgJiYgZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgICAgLy8gVjggfiBDaHJvbWl1bSA0Mi0gZmFpbHMgb25seSB3aXRoIDUrIGVsZW1lbnRzXG4gICAgICB2YXIgJGluc3RhbmNlID0gbmV3IEMoKTtcbiAgICAgIHZhciBpbmRleCA9IDU7XG4gICAgICB3aGlsZSAoaW5kZXgtLSkgJGluc3RhbmNlW0FEREVSXShpbmRleCwgaW5kZXgpO1xuICAgICAgcmV0dXJuICEkaW5zdGFuY2UuaGFzKC0wKTtcbiAgICB9KTtcbiAgICBpZiAoIUFDQ0VQVF9JVEVSQUJMRVMpIHtcbiAgICAgIEMgPSB3cmFwcGVyKGZ1bmN0aW9uICh0YXJnZXQsIGl0ZXJhYmxlKSB7XG4gICAgICAgIGFuSW5zdGFuY2UodGFyZ2V0LCBDLCBOQU1FKTtcbiAgICAgICAgdmFyIHRoYXQgPSBpbmhlcml0SWZSZXF1aXJlZChuZXcgQmFzZSgpLCB0YXJnZXQsIEMpO1xuICAgICAgICBpZiAoaXRlcmFibGUgIT0gdW5kZWZpbmVkKSBmb3JPZihpdGVyYWJsZSwgSVNfTUFQLCB0aGF0W0FEREVSXSwgdGhhdCk7XG4gICAgICAgIHJldHVybiB0aGF0O1xuICAgICAgfSk7XG4gICAgICBDLnByb3RvdHlwZSA9IHByb3RvO1xuICAgICAgcHJvdG8uY29uc3RydWN0b3IgPSBDO1xuICAgIH1cbiAgICBpZiAoVEhST1dTX09OX1BSSU1JVElWRVMgfHwgQlVHR1lfWkVSTykge1xuICAgICAgZml4TWV0aG9kKCdkZWxldGUnKTtcbiAgICAgIGZpeE1ldGhvZCgnaGFzJyk7XG4gICAgICBJU19NQVAgJiYgZml4TWV0aG9kKCdnZXQnKTtcbiAgICB9XG4gICAgaWYgKEJVR0dZX1pFUk8gfHwgSEFTTlRfQ0hBSU5JTkcpIGZpeE1ldGhvZChBRERFUik7XG4gICAgLy8gd2VhayBjb2xsZWN0aW9ucyBzaG91bGQgbm90IGNvbnRhaW5zIC5jbGVhciBtZXRob2RcbiAgICBpZiAoSVNfV0VBSyAmJiBwcm90by5jbGVhcikgZGVsZXRlIHByb3RvLmNsZWFyO1xuICB9XG5cbiAgc2V0VG9TdHJpbmdUYWcoQywgTkFNRSk7XG5cbiAgT1tOQU1FXSA9IEM7XG4gICRleHBvcnQoJGV4cG9ydC5HICsgJGV4cG9ydC5XICsgJGV4cG9ydC5GICogKEMgIT0gQmFzZSksIE8pO1xuXG4gIGlmICghSVNfV0VBSykgY29tbW9uLnNldFN0cm9uZyhDLCBOQU1FLCBJU19NQVApO1xuXG4gIHJldHVybiBDO1xufTtcbiIsInZhciBjb3JlID0gbW9kdWxlLmV4cG9ydHMgPSB7IHZlcnNpb246ICcyLjYuMTInIH07XG5pZiAodHlwZW9mIF9fZSA9PSAnbnVtYmVyJykgX19lID0gY29yZTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bmRlZlxuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRkZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xudmFyIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9iamVjdCwgaW5kZXgsIHZhbHVlKSB7XG4gIGlmIChpbmRleCBpbiBvYmplY3QpICRkZWZpbmVQcm9wZXJ0eS5mKG9iamVjdCwgaW5kZXgsIGNyZWF0ZURlc2MoMCwgdmFsdWUpKTtcbiAgZWxzZSBvYmplY3RbaW5kZXhdID0gdmFsdWU7XG59O1xuIiwiLy8gb3B0aW9uYWwgLyBzaW1wbGUgY29udGV4dCBiaW5kaW5nXG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZm4sIHRoYXQsIGxlbmd0aCkge1xuICBhRnVuY3Rpb24oZm4pO1xuICBpZiAodGhhdCA9PT0gdW5kZWZpbmVkKSByZXR1cm4gZm47XG4gIHN3aXRjaCAobGVuZ3RoKSB7XG4gICAgY2FzZSAxOiByZXR1cm4gZnVuY3Rpb24gKGEpIHtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEpO1xuICAgIH07XG4gICAgY2FzZSAyOiByZXR1cm4gZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEsIGIpO1xuICAgIH07XG4gICAgY2FzZSAzOiByZXR1cm4gZnVuY3Rpb24gKGEsIGIsIGMpIHtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEsIGIsIGMpO1xuICAgIH07XG4gIH1cbiAgcmV0dXJuIGZ1bmN0aW9uICgvKiAuLi5hcmdzICovKSB7XG4gICAgcmV0dXJuIGZuLmFwcGx5KHRoYXQsIGFyZ3VtZW50cyk7XG4gIH07XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gMjAuMy40LjM2IC8gMTUuOS41LjQzIERhdGUucHJvdG90eXBlLnRvSVNPU3RyaW5nKClcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG52YXIgZ2V0VGltZSA9IERhdGUucHJvdG90eXBlLmdldFRpbWU7XG52YXIgJHRvSVNPU3RyaW5nID0gRGF0ZS5wcm90b3R5cGUudG9JU09TdHJpbmc7XG5cbnZhciBseiA9IGZ1bmN0aW9uIChudW0pIHtcbiAgcmV0dXJuIG51bSA+IDkgPyBudW0gOiAnMCcgKyBudW07XG59O1xuXG4vLyBQaGFudG9tSlMgLyBvbGQgV2ViS2l0IGhhcyBhIGJyb2tlbiBpbXBsZW1lbnRhdGlvbnNcbm1vZHVsZS5leHBvcnRzID0gKGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuICR0b0lTT1N0cmluZy5jYWxsKG5ldyBEYXRlKC01ZTEzIC0gMSkpICE9ICcwMzg1LTA3LTI1VDA3OjA2OjM5Ljk5OVonO1xufSkgfHwgIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgJHRvSVNPU3RyaW5nLmNhbGwobmV3IERhdGUoTmFOKSk7XG59KSkgPyBmdW5jdGlvbiB0b0lTT1N0cmluZygpIHtcbiAgaWYgKCFpc0Zpbml0ZShnZXRUaW1lLmNhbGwodGhpcykpKSB0aHJvdyBSYW5nZUVycm9yKCdJbnZhbGlkIHRpbWUgdmFsdWUnKTtcbiAgdmFyIGQgPSB0aGlzO1xuICB2YXIgeSA9IGQuZ2V0VVRDRnVsbFllYXIoKTtcbiAgdmFyIG0gPSBkLmdldFVUQ01pbGxpc2Vjb25kcygpO1xuICB2YXIgcyA9IHkgPCAwID8gJy0nIDogeSA+IDk5OTkgPyAnKycgOiAnJztcbiAgcmV0dXJuIHMgKyAoJzAwMDAwJyArIE1hdGguYWJzKHkpKS5zbGljZShzID8gLTYgOiAtNCkgK1xuICAgICctJyArIGx6KGQuZ2V0VVRDTW9udGgoKSArIDEpICsgJy0nICsgbHooZC5nZXRVVENEYXRlKCkpICtcbiAgICAnVCcgKyBseihkLmdldFVUQ0hvdXJzKCkpICsgJzonICsgbHooZC5nZXRVVENNaW51dGVzKCkpICtcbiAgICAnOicgKyBseihkLmdldFVUQ1NlY29uZHMoKSkgKyAnLicgKyAobSA+IDk5ID8gbSA6ICcwJyArIGx6KG0pKSArICdaJztcbn0gOiAkdG9JU09TdHJpbmc7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpO1xudmFyIE5VTUJFUiA9ICdudW1iZXInO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChoaW50KSB7XG4gIGlmIChoaW50ICE9PSAnc3RyaW5nJyAmJiBoaW50ICE9PSBOVU1CRVIgJiYgaGludCAhPT0gJ2RlZmF1bHQnKSB0aHJvdyBUeXBlRXJyb3IoJ0luY29ycmVjdCBoaW50Jyk7XG4gIHJldHVybiB0b1ByaW1pdGl2ZShhbk9iamVjdCh0aGlzKSwgaGludCAhPSBOVU1CRVIpO1xufTtcbiIsIi8vIDcuMi4xIFJlcXVpcmVPYmplY3RDb2VyY2libGUoYXJndW1lbnQpXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAoaXQgPT0gdW5kZWZpbmVkKSB0aHJvdyBUeXBlRXJyb3IoXCJDYW4ndCBjYWxsIG1ldGhvZCBvbiAgXCIgKyBpdCk7XG4gIHJldHVybiBpdDtcbn07XG4iLCIvLyBUaGFuaydzIElFOCBmb3IgaGlzIGZ1bm55IGRlZmluZVByb3BlcnR5XG5tb2R1bGUuZXhwb3J0cyA9ICFyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh7fSwgJ2EnLCB7IGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gNzsgfSB9KS5hICE9IDc7XG59KTtcbiIsInZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGRvY3VtZW50ID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykuZG9jdW1lbnQ7XG4vLyB0eXBlb2YgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCBpcyAnb2JqZWN0JyBpbiBvbGQgSUVcbnZhciBpcyA9IGlzT2JqZWN0KGRvY3VtZW50KSAmJiBpc09iamVjdChkb2N1bWVudC5jcmVhdGVFbGVtZW50KTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpcyA/IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoaXQpIDoge307XG59O1xuIiwiLy8gSUUgOC0gZG9uJ3QgZW51bSBidWcga2V5c1xubW9kdWxlLmV4cG9ydHMgPSAoXG4gICdjb25zdHJ1Y3RvcixoYXNPd25Qcm9wZXJ0eSxpc1Byb3RvdHlwZU9mLHByb3BlcnR5SXNFbnVtZXJhYmxlLHRvTG9jYWxlU3RyaW5nLHRvU3RyaW5nLHZhbHVlT2YnXG4pLnNwbGl0KCcsJyk7XG4iLCIvLyBhbGwgZW51bWVyYWJsZSBvYmplY3Qga2V5cywgaW5jbHVkZXMgc3ltYm9sc1xudmFyIGdldEtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpO1xudmFyIGdPUFMgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wcycpO1xudmFyIHBJRSA9IHJlcXVpcmUoJy4vX29iamVjdC1waWUnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHZhciByZXN1bHQgPSBnZXRLZXlzKGl0KTtcbiAgdmFyIGdldFN5bWJvbHMgPSBnT1BTLmY7XG4gIGlmIChnZXRTeW1ib2xzKSB7XG4gICAgdmFyIHN5bWJvbHMgPSBnZXRTeW1ib2xzKGl0KTtcbiAgICB2YXIgaXNFbnVtID0gcElFLmY7XG4gICAgdmFyIGkgPSAwO1xuICAgIHZhciBrZXk7XG4gICAgd2hpbGUgKHN5bWJvbHMubGVuZ3RoID4gaSkgaWYgKGlzRW51bS5jYWxsKGl0LCBrZXkgPSBzeW1ib2xzW2krK10pKSByZXN1bHQucHVzaChrZXkpO1xuICB9IHJldHVybiByZXN1bHQ7XG59O1xuIiwidmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGNvcmUgPSByZXF1aXJlKCcuL19jb3JlJyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lJyk7XG52YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgUFJPVE9UWVBFID0gJ3Byb3RvdHlwZSc7XG5cbnZhciAkZXhwb3J0ID0gZnVuY3Rpb24gKHR5cGUsIG5hbWUsIHNvdXJjZSkge1xuICB2YXIgSVNfRk9SQ0VEID0gdHlwZSAmICRleHBvcnQuRjtcbiAgdmFyIElTX0dMT0JBTCA9IHR5cGUgJiAkZXhwb3J0Lkc7XG4gIHZhciBJU19TVEFUSUMgPSB0eXBlICYgJGV4cG9ydC5TO1xuICB2YXIgSVNfUFJPVE8gPSB0eXBlICYgJGV4cG9ydC5QO1xuICB2YXIgSVNfQklORCA9IHR5cGUgJiAkZXhwb3J0LkI7XG4gIHZhciB0YXJnZXQgPSBJU19HTE9CQUwgPyBnbG9iYWwgOiBJU19TVEFUSUMgPyBnbG9iYWxbbmFtZV0gfHwgKGdsb2JhbFtuYW1lXSA9IHt9KSA6IChnbG9iYWxbbmFtZV0gfHwge30pW1BST1RPVFlQRV07XG4gIHZhciBleHBvcnRzID0gSVNfR0xPQkFMID8gY29yZSA6IGNvcmVbbmFtZV0gfHwgKGNvcmVbbmFtZV0gPSB7fSk7XG4gIHZhciBleHBQcm90byA9IGV4cG9ydHNbUFJPVE9UWVBFXSB8fCAoZXhwb3J0c1tQUk9UT1RZUEVdID0ge30pO1xuICB2YXIga2V5LCBvd24sIG91dCwgZXhwO1xuICBpZiAoSVNfR0xPQkFMKSBzb3VyY2UgPSBuYW1lO1xuICBmb3IgKGtleSBpbiBzb3VyY2UpIHtcbiAgICAvLyBjb250YWlucyBpbiBuYXRpdmVcbiAgICBvd24gPSAhSVNfRk9SQ0VEICYmIHRhcmdldCAmJiB0YXJnZXRba2V5XSAhPT0gdW5kZWZpbmVkO1xuICAgIC8vIGV4cG9ydCBuYXRpdmUgb3IgcGFzc2VkXG4gICAgb3V0ID0gKG93biA/IHRhcmdldCA6IHNvdXJjZSlba2V5XTtcbiAgICAvLyBiaW5kIHRpbWVycyB0byBnbG9iYWwgZm9yIGNhbGwgZnJvbSBleHBvcnQgY29udGV4dFxuICAgIGV4cCA9IElTX0JJTkQgJiYgb3duID8gY3R4KG91dCwgZ2xvYmFsKSA6IElTX1BST1RPICYmIHR5cGVvZiBvdXQgPT0gJ2Z1bmN0aW9uJyA/IGN0eChGdW5jdGlvbi5jYWxsLCBvdXQpIDogb3V0O1xuICAgIC8vIGV4dGVuZCBnbG9iYWxcbiAgICBpZiAodGFyZ2V0KSByZWRlZmluZSh0YXJnZXQsIGtleSwgb3V0LCB0eXBlICYgJGV4cG9ydC5VKTtcbiAgICAvLyBleHBvcnRcbiAgICBpZiAoZXhwb3J0c1trZXldICE9IG91dCkgaGlkZShleHBvcnRzLCBrZXksIGV4cCk7XG4gICAgaWYgKElTX1BST1RPICYmIGV4cFByb3RvW2tleV0gIT0gb3V0KSBleHBQcm90b1trZXldID0gb3V0O1xuICB9XG59O1xuZ2xvYmFsLmNvcmUgPSBjb3JlO1xuLy8gdHlwZSBiaXRtYXBcbiRleHBvcnQuRiA9IDE7ICAgLy8gZm9yY2VkXG4kZXhwb3J0LkcgPSAyOyAgIC8vIGdsb2JhbFxuJGV4cG9ydC5TID0gNDsgICAvLyBzdGF0aWNcbiRleHBvcnQuUCA9IDg7ICAgLy8gcHJvdG9cbiRleHBvcnQuQiA9IDE2OyAgLy8gYmluZFxuJGV4cG9ydC5XID0gMzI7ICAvLyB3cmFwXG4kZXhwb3J0LlUgPSA2NDsgIC8vIHNhZmVcbiRleHBvcnQuUiA9IDEyODsgLy8gcmVhbCBwcm90byBtZXRob2QgZm9yIGBsaWJyYXJ5YFxubW9kdWxlLmV4cG9ydHMgPSAkZXhwb3J0O1xuIiwidmFyIE1BVENIID0gcmVxdWlyZSgnLi9fd2tzJykoJ21hdGNoJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChLRVkpIHtcbiAgdmFyIHJlID0gLy4vO1xuICB0cnkge1xuICAgICcvLi8nW0tFWV0ocmUpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgdHJ5IHtcbiAgICAgIHJlW01BVENIXSA9IGZhbHNlO1xuICAgICAgcmV0dXJuICEnLy4vJ1tLRVldKHJlKTtcbiAgICB9IGNhdGNoIChmKSB7IC8qIGVtcHR5ICovIH1cbiAgfSByZXR1cm4gdHJ1ZTtcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChleGVjKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuICEhZXhlYygpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbn07XG4iLCIndXNlIHN0cmljdCc7XG5yZXF1aXJlKCcuL2VzNi5yZWdleHAuZXhlYycpO1xudmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKTtcbnZhciBoaWRlID0gcmVxdWlyZSgnLi9faGlkZScpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xudmFyIHdrcyA9IHJlcXVpcmUoJy4vX3drcycpO1xudmFyIHJlZ2V4cEV4ZWMgPSByZXF1aXJlKCcuL19yZWdleHAtZXhlYycpO1xuXG52YXIgU1BFQ0lFUyA9IHdrcygnc3BlY2llcycpO1xuXG52YXIgUkVQTEFDRV9TVVBQT1JUU19OQU1FRF9HUk9VUFMgPSAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAvLyAjcmVwbGFjZSBuZWVkcyBidWlsdC1pbiBzdXBwb3J0IGZvciBuYW1lZCBncm91cHMuXG4gIC8vICNtYXRjaCB3b3JrcyBmaW5lIGJlY2F1c2UgaXQganVzdCByZXR1cm4gdGhlIGV4ZWMgcmVzdWx0cywgZXZlbiBpZiBpdCBoYXNcbiAgLy8gYSBcImdyb3BzXCIgcHJvcGVydHkuXG4gIHZhciByZSA9IC8uLztcbiAgcmUuZXhlYyA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgcmVzdWx0ID0gW107XG4gICAgcmVzdWx0Lmdyb3VwcyA9IHsgYTogJzcnIH07XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcbiAgcmV0dXJuICcnLnJlcGxhY2UocmUsICckPGE+JykgIT09ICc3Jztcbn0pO1xuXG52YXIgU1BMSVRfV09SS1NfV0lUSF9PVkVSV1JJVFRFTl9FWEVDID0gKGZ1bmN0aW9uICgpIHtcbiAgLy8gQ2hyb21lIDUxIGhhcyBhIGJ1Z2d5IFwic3BsaXRcIiBpbXBsZW1lbnRhdGlvbiB3aGVuIFJlZ0V4cCNleGVjICE9PSBuYXRpdmVFeGVjXG4gIHZhciByZSA9IC8oPzopLztcbiAgdmFyIG9yaWdpbmFsRXhlYyA9IHJlLmV4ZWM7XG4gIHJlLmV4ZWMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBvcmlnaW5hbEV4ZWMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfTtcbiAgdmFyIHJlc3VsdCA9ICdhYicuc3BsaXQocmUpO1xuICByZXR1cm4gcmVzdWx0Lmxlbmd0aCA9PT0gMiAmJiByZXN1bHRbMF0gPT09ICdhJyAmJiByZXN1bHRbMV0gPT09ICdiJztcbn0pKCk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKEtFWSwgbGVuZ3RoLCBleGVjKSB7XG4gIHZhciBTWU1CT0wgPSB3a3MoS0VZKTtcblxuICB2YXIgREVMRUdBVEVTX1RPX1NZTUJPTCA9ICFmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgLy8gU3RyaW5nIG1ldGhvZHMgY2FsbCBzeW1ib2wtbmFtZWQgUmVnRXAgbWV0aG9kc1xuICAgIHZhciBPID0ge307XG4gICAgT1tTWU1CT0xdID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gNzsgfTtcbiAgICByZXR1cm4gJydbS0VZXShPKSAhPSA3O1xuICB9KTtcblxuICB2YXIgREVMRUdBVEVTX1RPX0VYRUMgPSBERUxFR0FURVNfVE9fU1lNQk9MID8gIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICAvLyBTeW1ib2wtbmFtZWQgUmVnRXhwIG1ldGhvZHMgY2FsbCAuZXhlY1xuICAgIHZhciBleGVjQ2FsbGVkID0gZmFsc2U7XG4gICAgdmFyIHJlID0gL2EvO1xuICAgIHJlLmV4ZWMgPSBmdW5jdGlvbiAoKSB7IGV4ZWNDYWxsZWQgPSB0cnVlOyByZXR1cm4gbnVsbDsgfTtcbiAgICBpZiAoS0VZID09PSAnc3BsaXQnKSB7XG4gICAgICAvLyBSZWdFeHBbQEBzcGxpdF0gZG9lc24ndCBjYWxsIHRoZSByZWdleCdzIGV4ZWMgbWV0aG9kLCBidXQgZmlyc3QgY3JlYXRlc1xuICAgICAgLy8gYSBuZXcgb25lLiBXZSBuZWVkIHRvIHJldHVybiB0aGUgcGF0Y2hlZCByZWdleCB3aGVuIGNyZWF0aW5nIHRoZSBuZXcgb25lLlxuICAgICAgcmUuY29uc3RydWN0b3IgPSB7fTtcbiAgICAgIHJlLmNvbnN0cnVjdG9yW1NQRUNJRVNdID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gcmU7IH07XG4gICAgfVxuICAgIHJlW1NZTUJPTF0oJycpO1xuICAgIHJldHVybiAhZXhlY0NhbGxlZDtcbiAgfSkgOiB1bmRlZmluZWQ7XG5cbiAgaWYgKFxuICAgICFERUxFR0FURVNfVE9fU1lNQk9MIHx8XG4gICAgIURFTEVHQVRFU19UT19FWEVDIHx8XG4gICAgKEtFWSA9PT0gJ3JlcGxhY2UnICYmICFSRVBMQUNFX1NVUFBPUlRTX05BTUVEX0dST1VQUykgfHxcbiAgICAoS0VZID09PSAnc3BsaXQnICYmICFTUExJVF9XT1JLU19XSVRIX09WRVJXUklUVEVOX0VYRUMpXG4gICkge1xuICAgIHZhciBuYXRpdmVSZWdFeHBNZXRob2QgPSAvLi9bU1lNQk9MXTtcbiAgICB2YXIgZm5zID0gZXhlYyhcbiAgICAgIGRlZmluZWQsXG4gICAgICBTWU1CT0wsXG4gICAgICAnJ1tLRVldLFxuICAgICAgZnVuY3Rpb24gbWF5YmVDYWxsTmF0aXZlKG5hdGl2ZU1ldGhvZCwgcmVnZXhwLCBzdHIsIGFyZzIsIGZvcmNlU3RyaW5nTWV0aG9kKSB7XG4gICAgICAgIGlmIChyZWdleHAuZXhlYyA9PT0gcmVnZXhwRXhlYykge1xuICAgICAgICAgIGlmIChERUxFR0FURVNfVE9fU1lNQk9MICYmICFmb3JjZVN0cmluZ01ldGhvZCkge1xuICAgICAgICAgICAgLy8gVGhlIG5hdGl2ZSBTdHJpbmcgbWV0aG9kIGFscmVhZHkgZGVsZWdhdGVzIHRvIEBAbWV0aG9kICh0aGlzXG4gICAgICAgICAgICAvLyBwb2x5ZmlsbGVkIGZ1bmN0aW9uKSwgbGVhc2luZyB0byBpbmZpbml0ZSByZWN1cnNpb24uXG4gICAgICAgICAgICAvLyBXZSBhdm9pZCBpdCBieSBkaXJlY3RseSBjYWxsaW5nIHRoZSBuYXRpdmUgQEBtZXRob2QgbWV0aG9kLlxuICAgICAgICAgICAgcmV0dXJuIHsgZG9uZTogdHJ1ZSwgdmFsdWU6IG5hdGl2ZVJlZ0V4cE1ldGhvZC5jYWxsKHJlZ2V4cCwgc3RyLCBhcmcyKSB9O1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4geyBkb25lOiB0cnVlLCB2YWx1ZTogbmF0aXZlTWV0aG9kLmNhbGwoc3RyLCByZWdleHAsIGFyZzIpIH07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHsgZG9uZTogZmFsc2UgfTtcbiAgICAgIH1cbiAgICApO1xuICAgIHZhciBzdHJmbiA9IGZuc1swXTtcbiAgICB2YXIgcnhmbiA9IGZuc1sxXTtcblxuICAgIHJlZGVmaW5lKFN0cmluZy5wcm90b3R5cGUsIEtFWSwgc3RyZm4pO1xuICAgIGhpZGUoUmVnRXhwLnByb3RvdHlwZSwgU1lNQk9MLCBsZW5ndGggPT0gMlxuICAgICAgLy8gMjEuMi41LjggUmVnRXhwLnByb3RvdHlwZVtAQHJlcGxhY2VdKHN0cmluZywgcmVwbGFjZVZhbHVlKVxuICAgICAgLy8gMjEuMi41LjExIFJlZ0V4cC5wcm90b3R5cGVbQEBzcGxpdF0oc3RyaW5nLCBsaW1pdClcbiAgICAgID8gZnVuY3Rpb24gKHN0cmluZywgYXJnKSB7IHJldHVybiByeGZuLmNhbGwoc3RyaW5nLCB0aGlzLCBhcmcpOyB9XG4gICAgICAvLyAyMS4yLjUuNiBSZWdFeHAucHJvdG90eXBlW0BAbWF0Y2hdKHN0cmluZylcbiAgICAgIC8vIDIxLjIuNS45IFJlZ0V4cC5wcm90b3R5cGVbQEBzZWFyY2hdKHN0cmluZylcbiAgICAgIDogZnVuY3Rpb24gKHN0cmluZykgeyByZXR1cm4gcnhmbi5jYWxsKHN0cmluZywgdGhpcyk7IH1cbiAgICApO1xuICB9XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gMjEuMi41LjMgZ2V0IFJlZ0V4cC5wcm90b3R5cGUuZmxhZ3NcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG4gIHZhciB0aGF0ID0gYW5PYmplY3QodGhpcyk7XG4gIHZhciByZXN1bHQgPSAnJztcbiAgaWYgKHRoYXQuZ2xvYmFsKSByZXN1bHQgKz0gJ2cnO1xuICBpZiAodGhhdC5pZ25vcmVDYXNlKSByZXN1bHQgKz0gJ2knO1xuICBpZiAodGhhdC5tdWx0aWxpbmUpIHJlc3VsdCArPSAnbSc7XG4gIGlmICh0aGF0LnVuaWNvZGUpIHJlc3VsdCArPSAndSc7XG4gIGlmICh0aGF0LnN0aWNreSkgcmVzdWx0ICs9ICd5JztcbiAgcmV0dXJuIHJlc3VsdDtcbn07XG4iLCIndXNlIHN0cmljdCc7XG4vLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL3Byb3Bvc2FsLWZsYXRNYXAvI3NlYy1GbGF0dGVuSW50b0FycmF5XG52YXIgaXNBcnJheSA9IHJlcXVpcmUoJy4vX2lzLWFycmF5Jyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xudmFyIElTX0NPTkNBVF9TUFJFQURBQkxFID0gcmVxdWlyZSgnLi9fd2tzJykoJ2lzQ29uY2F0U3ByZWFkYWJsZScpO1xuXG5mdW5jdGlvbiBmbGF0dGVuSW50b0FycmF5KHRhcmdldCwgb3JpZ2luYWwsIHNvdXJjZSwgc291cmNlTGVuLCBzdGFydCwgZGVwdGgsIG1hcHBlciwgdGhpc0FyZykge1xuICB2YXIgdGFyZ2V0SW5kZXggPSBzdGFydDtcbiAgdmFyIHNvdXJjZUluZGV4ID0gMDtcbiAgdmFyIG1hcEZuID0gbWFwcGVyID8gY3R4KG1hcHBlciwgdGhpc0FyZywgMykgOiBmYWxzZTtcbiAgdmFyIGVsZW1lbnQsIHNwcmVhZGFibGU7XG5cbiAgd2hpbGUgKHNvdXJjZUluZGV4IDwgc291cmNlTGVuKSB7XG4gICAgaWYgKHNvdXJjZUluZGV4IGluIHNvdXJjZSkge1xuICAgICAgZWxlbWVudCA9IG1hcEZuID8gbWFwRm4oc291cmNlW3NvdXJjZUluZGV4XSwgc291cmNlSW5kZXgsIG9yaWdpbmFsKSA6IHNvdXJjZVtzb3VyY2VJbmRleF07XG5cbiAgICAgIHNwcmVhZGFibGUgPSBmYWxzZTtcbiAgICAgIGlmIChpc09iamVjdChlbGVtZW50KSkge1xuICAgICAgICBzcHJlYWRhYmxlID0gZWxlbWVudFtJU19DT05DQVRfU1BSRUFEQUJMRV07XG4gICAgICAgIHNwcmVhZGFibGUgPSBzcHJlYWRhYmxlICE9PSB1bmRlZmluZWQgPyAhIXNwcmVhZGFibGUgOiBpc0FycmF5KGVsZW1lbnQpO1xuICAgICAgfVxuXG4gICAgICBpZiAoc3ByZWFkYWJsZSAmJiBkZXB0aCA+IDApIHtcbiAgICAgICAgdGFyZ2V0SW5kZXggPSBmbGF0dGVuSW50b0FycmF5KHRhcmdldCwgb3JpZ2luYWwsIGVsZW1lbnQsIHRvTGVuZ3RoKGVsZW1lbnQubGVuZ3RoKSwgdGFyZ2V0SW5kZXgsIGRlcHRoIC0gMSkgLSAxO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKHRhcmdldEluZGV4ID49IDB4MWZmZmZmZmZmZmZmZmYpIHRocm93IFR5cGVFcnJvcigpO1xuICAgICAgICB0YXJnZXRbdGFyZ2V0SW5kZXhdID0gZWxlbWVudDtcbiAgICAgIH1cblxuICAgICAgdGFyZ2V0SW5kZXgrKztcbiAgICB9XG4gICAgc291cmNlSW5kZXgrKztcbiAgfVxuICByZXR1cm4gdGFyZ2V0SW5kZXg7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZmxhdHRlbkludG9BcnJheTtcbiIsInZhciBjdHggPSByZXF1aXJlKCcuL19jdHgnKTtcbnZhciBjYWxsID0gcmVxdWlyZSgnLi9faXRlci1jYWxsJyk7XG52YXIgaXNBcnJheUl0ZXIgPSByZXF1aXJlKCcuL19pcy1hcnJheS1pdGVyJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGdldEl0ZXJGbiA9IHJlcXVpcmUoJy4vY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kJyk7XG52YXIgQlJFQUsgPSB7fTtcbnZhciBSRVRVUk4gPSB7fTtcbnZhciBleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlcmFibGUsIGVudHJpZXMsIGZuLCB0aGF0LCBJVEVSQVRPUikge1xuICB2YXIgaXRlckZuID0gSVRFUkFUT1IgPyBmdW5jdGlvbiAoKSB7IHJldHVybiBpdGVyYWJsZTsgfSA6IGdldEl0ZXJGbihpdGVyYWJsZSk7XG4gIHZhciBmID0gY3R4KGZuLCB0aGF0LCBlbnRyaWVzID8gMiA6IDEpO1xuICB2YXIgaW5kZXggPSAwO1xuICB2YXIgbGVuZ3RoLCBzdGVwLCBpdGVyYXRvciwgcmVzdWx0O1xuICBpZiAodHlwZW9mIGl0ZXJGbiAhPSAnZnVuY3Rpb24nKSB0aHJvdyBUeXBlRXJyb3IoaXRlcmFibGUgKyAnIGlzIG5vdCBpdGVyYWJsZSEnKTtcbiAgLy8gZmFzdCBjYXNlIGZvciBhcnJheXMgd2l0aCBkZWZhdWx0IGl0ZXJhdG9yXG4gIGlmIChpc0FycmF5SXRlcihpdGVyRm4pKSBmb3IgKGxlbmd0aCA9IHRvTGVuZ3RoKGl0ZXJhYmxlLmxlbmd0aCk7IGxlbmd0aCA+IGluZGV4OyBpbmRleCsrKSB7XG4gICAgcmVzdWx0ID0gZW50cmllcyA/IGYoYW5PYmplY3Qoc3RlcCA9IGl0ZXJhYmxlW2luZGV4XSlbMF0sIHN0ZXBbMV0pIDogZihpdGVyYWJsZVtpbmRleF0pO1xuICAgIGlmIChyZXN1bHQgPT09IEJSRUFLIHx8IHJlc3VsdCA9PT0gUkVUVVJOKSByZXR1cm4gcmVzdWx0O1xuICB9IGVsc2UgZm9yIChpdGVyYXRvciA9IGl0ZXJGbi5jYWxsKGl0ZXJhYmxlKTsgIShzdGVwID0gaXRlcmF0b3IubmV4dCgpKS5kb25lOykge1xuICAgIHJlc3VsdCA9IGNhbGwoaXRlcmF0b3IsIGYsIHN0ZXAudmFsdWUsIGVudHJpZXMpO1xuICAgIGlmIChyZXN1bHQgPT09IEJSRUFLIHx8IHJlc3VsdCA9PT0gUkVUVVJOKSByZXR1cm4gcmVzdWx0O1xuICB9XG59O1xuZXhwb3J0cy5CUkVBSyA9IEJSRUFLO1xuZXhwb3J0cy5SRVRVUk4gPSBSRVRVUk47XG4iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX3NoYXJlZCcpKCduYXRpdmUtZnVuY3Rpb24tdG8tc3RyaW5nJywgRnVuY3Rpb24udG9TdHJpbmcpO1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzg2I2lzc3VlY29tbWVudC0xMTU3NTkwMjhcbnZhciBnbG9iYWwgPSBtb2R1bGUuZXhwb3J0cyA9IHR5cGVvZiB3aW5kb3cgIT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93Lk1hdGggPT0gTWF0aFxuICA/IHdpbmRvdyA6IHR5cGVvZiBzZWxmICE9ICd1bmRlZmluZWQnICYmIHNlbGYuTWF0aCA9PSBNYXRoID8gc2VsZlxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmV3LWZ1bmNcbiAgOiBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuaWYgKHR5cGVvZiBfX2cgPT0gJ251bWJlcicpIF9fZyA9IGdsb2JhbDsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bmRlZlxuIiwidmFyIGhhc093blByb3BlcnR5ID0ge30uaGFzT3duUHJvcGVydHk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCwga2V5KSB7XG4gIHJldHVybiBoYXNPd25Qcm9wZXJ0eS5jYWxsKGl0LCBrZXkpO1xufTtcbiIsInZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xudmFyIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgPyBmdW5jdGlvbiAob2JqZWN0LCBrZXksIHZhbHVlKSB7XG4gIHJldHVybiBkUC5mKG9iamVjdCwga2V5LCBjcmVhdGVEZXNjKDEsIHZhbHVlKSk7XG59IDogZnVuY3Rpb24gKG9iamVjdCwga2V5LCB2YWx1ZSkge1xuICBvYmplY3Rba2V5XSA9IHZhbHVlO1xuICByZXR1cm4gb2JqZWN0O1xufTtcbiIsInZhciBkb2N1bWVudCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLmRvY3VtZW50O1xubW9kdWxlLmV4cG9ydHMgPSBkb2N1bWVudCAmJiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG4iLCJtb2R1bGUuZXhwb3J0cyA9ICFyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpICYmICFyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyZXF1aXJlKCcuL19kb20tY3JlYXRlJykoJ2RpdicpLCAnYScsIHsgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiA3OyB9IH0pLmEgIT0gNztcbn0pO1xuIiwidmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgc2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuL19zZXQtcHJvdG8nKS5zZXQ7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh0aGF0LCB0YXJnZXQsIEMpIHtcbiAgdmFyIFMgPSB0YXJnZXQuY29uc3RydWN0b3I7XG4gIHZhciBQO1xuICBpZiAoUyAhPT0gQyAmJiB0eXBlb2YgUyA9PSAnZnVuY3Rpb24nICYmIChQID0gUy5wcm90b3R5cGUpICE9PSBDLnByb3RvdHlwZSAmJiBpc09iamVjdChQKSAmJiBzZXRQcm90b3R5cGVPZikge1xuICAgIHNldFByb3RvdHlwZU9mKHRoYXQsIFApO1xuICB9IHJldHVybiB0aGF0O1xufTtcbiIsIi8vIGZhc3QgYXBwbHksIGh0dHA6Ly9qc3BlcmYubG5raXQuY29tL2Zhc3QtYXBwbHkvNVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZm4sIGFyZ3MsIHRoYXQpIHtcbiAgdmFyIHVuID0gdGhhdCA9PT0gdW5kZWZpbmVkO1xuICBzd2l0Y2ggKGFyZ3MubGVuZ3RoKSB7XG4gICAgY2FzZSAwOiByZXR1cm4gdW4gPyBmbigpXG4gICAgICAgICAgICAgICAgICAgICAgOiBmbi5jYWxsKHRoYXQpO1xuICAgIGNhc2UgMTogcmV0dXJuIHVuID8gZm4oYXJnc1swXSlcbiAgICAgICAgICAgICAgICAgICAgICA6IGZuLmNhbGwodGhhdCwgYXJnc1swXSk7XG4gICAgY2FzZSAyOiByZXR1cm4gdW4gPyBmbihhcmdzWzBdLCBhcmdzWzFdKVxuICAgICAgICAgICAgICAgICAgICAgIDogZm4uY2FsbCh0aGF0LCBhcmdzWzBdLCBhcmdzWzFdKTtcbiAgICBjYXNlIDM6IHJldHVybiB1biA/IGZuKGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0pXG4gICAgICAgICAgICAgICAgICAgICAgOiBmbi5jYWxsKHRoYXQsIGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0pO1xuICAgIGNhc2UgNDogcmV0dXJuIHVuID8gZm4oYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSwgYXJnc1szXSlcbiAgICAgICAgICAgICAgICAgICAgICA6IGZuLmNhbGwodGhhdCwgYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSwgYXJnc1szXSk7XG4gIH0gcmV0dXJuIGZuLmFwcGx5KHRoYXQsIGFyZ3MpO1xufTtcbiIsIi8vIGZhbGxiYWNrIGZvciBub24tYXJyYXktbGlrZSBFUzMgYW5kIG5vbi1lbnVtZXJhYmxlIG9sZCBWOCBzdHJpbmdzXG52YXIgY29mID0gcmVxdWlyZSgnLi9fY29mJyk7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcHJvdG90eXBlLWJ1aWx0aW5zXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdCgneicpLnByb3BlcnR5SXNFbnVtZXJhYmxlKDApID8gT2JqZWN0IDogZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBjb2YoaXQpID09ICdTdHJpbmcnID8gaXQuc3BsaXQoJycpIDogT2JqZWN0KGl0KTtcbn07XG4iLCIvLyBjaGVjayBvbiBkZWZhdWx0IEFycmF5IGl0ZXJhdG9yXG52YXIgSXRlcmF0b3JzID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJyk7XG52YXIgSVRFUkFUT1IgPSByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKTtcbnZhciBBcnJheVByb3RvID0gQXJyYXkucHJvdG90eXBlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXQgIT09IHVuZGVmaW5lZCAmJiAoSXRlcmF0b3JzLkFycmF5ID09PSBpdCB8fCBBcnJheVByb3RvW0lURVJBVE9SXSA9PT0gaXQpO1xufTtcbiIsIi8vIDcuMi4yIElzQXJyYXkoYXJndW1lbnQpXG52YXIgY29mID0gcmVxdWlyZSgnLi9fY29mJyk7XG5tb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gaXNBcnJheShhcmcpIHtcbiAgcmV0dXJuIGNvZihhcmcpID09ICdBcnJheSc7XG59O1xuIiwiLy8gMjAuMS4yLjMgTnVtYmVyLmlzSW50ZWdlcihudW1iZXIpXG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBmbG9vciA9IE1hdGguZmxvb3I7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzSW50ZWdlcihpdCkge1xuICByZXR1cm4gIWlzT2JqZWN0KGl0KSAmJiBpc0Zpbml0ZShpdCkgJiYgZmxvb3IoaXQpID09PSBpdDtcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gdHlwZW9mIGl0ID09PSAnb2JqZWN0JyA/IGl0ICE9PSBudWxsIDogdHlwZW9mIGl0ID09PSAnZnVuY3Rpb24nO1xufTtcbiIsIi8vIDcuMi44IElzUmVnRXhwKGFyZ3VtZW50KVxudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgY29mID0gcmVxdWlyZSgnLi9fY29mJyk7XG52YXIgTUFUQ0ggPSByZXF1aXJlKCcuL193a3MnKSgnbWF0Y2gnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHZhciBpc1JlZ0V4cDtcbiAgcmV0dXJuIGlzT2JqZWN0KGl0KSAmJiAoKGlzUmVnRXhwID0gaXRbTUFUQ0hdKSAhPT0gdW5kZWZpbmVkID8gISFpc1JlZ0V4cCA6IGNvZihpdCkgPT0gJ1JlZ0V4cCcpO1xufTtcbiIsIi8vIGNhbGwgc29tZXRoaW5nIG9uIGl0ZXJhdG9yIHN0ZXAgd2l0aCBzYWZlIGNsb3Npbmcgb24gZXJyb3JcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlcmF0b3IsIGZuLCB2YWx1ZSwgZW50cmllcykge1xuICB0cnkge1xuICAgIHJldHVybiBlbnRyaWVzID8gZm4oYW5PYmplY3QodmFsdWUpWzBdLCB2YWx1ZVsxXSkgOiBmbih2YWx1ZSk7XG4gIC8vIDcuNC42IEl0ZXJhdG9yQ2xvc2UoaXRlcmF0b3IsIGNvbXBsZXRpb24pXG4gIH0gY2F0Y2ggKGUpIHtcbiAgICB2YXIgcmV0ID0gaXRlcmF0b3JbJ3JldHVybiddO1xuICAgIGlmIChyZXQgIT09IHVuZGVmaW5lZCkgYW5PYmplY3QocmV0LmNhbGwoaXRlcmF0b3IpKTtcbiAgICB0aHJvdyBlO1xuICB9XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGNyZWF0ZSA9IHJlcXVpcmUoJy4vX29iamVjdC1jcmVhdGUnKTtcbnZhciBkZXNjcmlwdG9yID0gcmVxdWlyZSgnLi9fcHJvcGVydHktZGVzYycpO1xudmFyIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKTtcbnZhciBJdGVyYXRvclByb3RvdHlwZSA9IHt9O1xuXG4vLyAyNS4xLjIuMS4xICVJdGVyYXRvclByb3RvdHlwZSVbQEBpdGVyYXRvcl0oKVxucmVxdWlyZSgnLi9faGlkZScpKEl0ZXJhdG9yUHJvdG90eXBlLCByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKSwgZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpczsgfSk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBOQU1FLCBuZXh0KSB7XG4gIENvbnN0cnVjdG9yLnByb3RvdHlwZSA9IGNyZWF0ZShJdGVyYXRvclByb3RvdHlwZSwgeyBuZXh0OiBkZXNjcmlwdG9yKDEsIG5leHQpIH0pO1xuICBzZXRUb1N0cmluZ1RhZyhDb25zdHJ1Y3RvciwgTkFNRSArICcgSXRlcmF0b3InKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgTElCUkFSWSA9IHJlcXVpcmUoJy4vX2xpYnJhcnknKTtcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgcmVkZWZpbmUgPSByZXF1aXJlKCcuL19yZWRlZmluZScpO1xudmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG52YXIgSXRlcmF0b3JzID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJyk7XG52YXIgJGl0ZXJDcmVhdGUgPSByZXF1aXJlKCcuL19pdGVyLWNyZWF0ZScpO1xudmFyIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKTtcbnZhciBnZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKTtcbnZhciBJVEVSQVRPUiA9IHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpO1xudmFyIEJVR0dZID0gIShbXS5rZXlzICYmICduZXh0JyBpbiBbXS5rZXlzKCkpOyAvLyBTYWZhcmkgaGFzIGJ1Z2d5IGl0ZXJhdG9ycyB3L28gYG5leHRgXG52YXIgRkZfSVRFUkFUT1IgPSAnQEBpdGVyYXRvcic7XG52YXIgS0VZUyA9ICdrZXlzJztcbnZhciBWQUxVRVMgPSAndmFsdWVzJztcblxudmFyIHJldHVyblRoaXMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzOyB9O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChCYXNlLCBOQU1FLCBDb25zdHJ1Y3RvciwgbmV4dCwgREVGQVVMVCwgSVNfU0VULCBGT1JDRUQpIHtcbiAgJGl0ZXJDcmVhdGUoQ29uc3RydWN0b3IsIE5BTUUsIG5leHQpO1xuICB2YXIgZ2V0TWV0aG9kID0gZnVuY3Rpb24gKGtpbmQpIHtcbiAgICBpZiAoIUJVR0dZICYmIGtpbmQgaW4gcHJvdG8pIHJldHVybiBwcm90b1traW5kXTtcbiAgICBzd2l0Y2ggKGtpbmQpIHtcbiAgICAgIGNhc2UgS0VZUzogcmV0dXJuIGZ1bmN0aW9uIGtleXMoKSB7IHJldHVybiBuZXcgQ29uc3RydWN0b3IodGhpcywga2luZCk7IH07XG4gICAgICBjYXNlIFZBTFVFUzogcmV0dXJuIGZ1bmN0aW9uIHZhbHVlcygpIHsgcmV0dXJuIG5ldyBDb25zdHJ1Y3Rvcih0aGlzLCBraW5kKTsgfTtcbiAgICB9IHJldHVybiBmdW5jdGlvbiBlbnRyaWVzKCkgeyByZXR1cm4gbmV3IENvbnN0cnVjdG9yKHRoaXMsIGtpbmQpOyB9O1xuICB9O1xuICB2YXIgVEFHID0gTkFNRSArICcgSXRlcmF0b3InO1xuICB2YXIgREVGX1ZBTFVFUyA9IERFRkFVTFQgPT0gVkFMVUVTO1xuICB2YXIgVkFMVUVTX0JVRyA9IGZhbHNlO1xuICB2YXIgcHJvdG8gPSBCYXNlLnByb3RvdHlwZTtcbiAgdmFyICRuYXRpdmUgPSBwcm90b1tJVEVSQVRPUl0gfHwgcHJvdG9bRkZfSVRFUkFUT1JdIHx8IERFRkFVTFQgJiYgcHJvdG9bREVGQVVMVF07XG4gIHZhciAkZGVmYXVsdCA9ICRuYXRpdmUgfHwgZ2V0TWV0aG9kKERFRkFVTFQpO1xuICB2YXIgJGVudHJpZXMgPSBERUZBVUxUID8gIURFRl9WQUxVRVMgPyAkZGVmYXVsdCA6IGdldE1ldGhvZCgnZW50cmllcycpIDogdW5kZWZpbmVkO1xuICB2YXIgJGFueU5hdGl2ZSA9IE5BTUUgPT0gJ0FycmF5JyA/IHByb3RvLmVudHJpZXMgfHwgJG5hdGl2ZSA6ICRuYXRpdmU7XG4gIHZhciBtZXRob2RzLCBrZXksIEl0ZXJhdG9yUHJvdG90eXBlO1xuICAvLyBGaXggbmF0aXZlXG4gIGlmICgkYW55TmF0aXZlKSB7XG4gICAgSXRlcmF0b3JQcm90b3R5cGUgPSBnZXRQcm90b3R5cGVPZigkYW55TmF0aXZlLmNhbGwobmV3IEJhc2UoKSkpO1xuICAgIGlmIChJdGVyYXRvclByb3RvdHlwZSAhPT0gT2JqZWN0LnByb3RvdHlwZSAmJiBJdGVyYXRvclByb3RvdHlwZS5uZXh0KSB7XG4gICAgICAvLyBTZXQgQEB0b1N0cmluZ1RhZyB0byBuYXRpdmUgaXRlcmF0b3JzXG4gICAgICBzZXRUb1N0cmluZ1RhZyhJdGVyYXRvclByb3RvdHlwZSwgVEFHLCB0cnVlKTtcbiAgICAgIC8vIGZpeCBmb3Igc29tZSBvbGQgZW5naW5lc1xuICAgICAgaWYgKCFMSUJSQVJZICYmIHR5cGVvZiBJdGVyYXRvclByb3RvdHlwZVtJVEVSQVRPUl0gIT0gJ2Z1bmN0aW9uJykgaGlkZShJdGVyYXRvclByb3RvdHlwZSwgSVRFUkFUT1IsIHJldHVyblRoaXMpO1xuICAgIH1cbiAgfVxuICAvLyBmaXggQXJyYXkje3ZhbHVlcywgQEBpdGVyYXRvcn0ubmFtZSBpbiBWOCAvIEZGXG4gIGlmIChERUZfVkFMVUVTICYmICRuYXRpdmUgJiYgJG5hdGl2ZS5uYW1lICE9PSBWQUxVRVMpIHtcbiAgICBWQUxVRVNfQlVHID0gdHJ1ZTtcbiAgICAkZGVmYXVsdCA9IGZ1bmN0aW9uIHZhbHVlcygpIHsgcmV0dXJuICRuYXRpdmUuY2FsbCh0aGlzKTsgfTtcbiAgfVxuICAvLyBEZWZpbmUgaXRlcmF0b3JcbiAgaWYgKCghTElCUkFSWSB8fCBGT1JDRUQpICYmIChCVUdHWSB8fCBWQUxVRVNfQlVHIHx8ICFwcm90b1tJVEVSQVRPUl0pKSB7XG4gICAgaGlkZShwcm90bywgSVRFUkFUT1IsICRkZWZhdWx0KTtcbiAgfVxuICAvLyBQbHVnIGZvciBsaWJyYXJ5XG4gIEl0ZXJhdG9yc1tOQU1FXSA9ICRkZWZhdWx0O1xuICBJdGVyYXRvcnNbVEFHXSA9IHJldHVyblRoaXM7XG4gIGlmIChERUZBVUxUKSB7XG4gICAgbWV0aG9kcyA9IHtcbiAgICAgIHZhbHVlczogREVGX1ZBTFVFUyA/ICRkZWZhdWx0IDogZ2V0TWV0aG9kKFZBTFVFUyksXG4gICAgICBrZXlzOiBJU19TRVQgPyAkZGVmYXVsdCA6IGdldE1ldGhvZChLRVlTKSxcbiAgICAgIGVudHJpZXM6ICRlbnRyaWVzXG4gICAgfTtcbiAgICBpZiAoRk9SQ0VEKSBmb3IgKGtleSBpbiBtZXRob2RzKSB7XG4gICAgICBpZiAoIShrZXkgaW4gcHJvdG8pKSByZWRlZmluZShwcm90bywga2V5LCBtZXRob2RzW2tleV0pO1xuICAgIH0gZWxzZSAkZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIChCVUdHWSB8fCBWQUxVRVNfQlVHKSwgTkFNRSwgbWV0aG9kcyk7XG4gIH1cbiAgcmV0dXJuIG1ldGhvZHM7XG59O1xuIiwidmFyIElURVJBVE9SID0gcmVxdWlyZSgnLi9fd2tzJykoJ2l0ZXJhdG9yJyk7XG52YXIgU0FGRV9DTE9TSU5HID0gZmFsc2U7XG5cbnRyeSB7XG4gIHZhciByaXRlciA9IFs3XVtJVEVSQVRPUl0oKTtcbiAgcml0ZXJbJ3JldHVybiddID0gZnVuY3Rpb24gKCkgeyBTQUZFX0NMT1NJTkcgPSB0cnVlOyB9O1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdGhyb3ctbGl0ZXJhbFxuICBBcnJheS5mcm9tKHJpdGVyLCBmdW5jdGlvbiAoKSB7IHRocm93IDI7IH0pO1xufSBjYXRjaCAoZSkgeyAvKiBlbXB0eSAqLyB9XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGV4ZWMsIHNraXBDbG9zaW5nKSB7XG4gIGlmICghc2tpcENsb3NpbmcgJiYgIVNBRkVfQ0xPU0lORykgcmV0dXJuIGZhbHNlO1xuICB2YXIgc2FmZSA9IGZhbHNlO1xuICB0cnkge1xuICAgIHZhciBhcnIgPSBbN107XG4gICAgdmFyIGl0ZXIgPSBhcnJbSVRFUkFUT1JdKCk7XG4gICAgaXRlci5uZXh0ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4geyBkb25lOiBzYWZlID0gdHJ1ZSB9OyB9O1xuICAgIGFycltJVEVSQVRPUl0gPSBmdW5jdGlvbiAoKSB7IHJldHVybiBpdGVyOyB9O1xuICAgIGV4ZWMoYXJyKTtcbiAgfSBjYXRjaCAoZSkgeyAvKiBlbXB0eSAqLyB9XG4gIHJldHVybiBzYWZlO1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGRvbmUsIHZhbHVlKSB7XG4gIHJldHVybiB7IHZhbHVlOiB2YWx1ZSwgZG9uZTogISFkb25lIH07XG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSB7fTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZmFsc2U7XG4iLCIvLyAyMC4yLjIuMTQgTWF0aC5leHBtMSh4KVxudmFyICRleHBtMSA9IE1hdGguZXhwbTE7XG5tb2R1bGUuZXhwb3J0cyA9ICghJGV4cG0xXG4gIC8vIE9sZCBGRiBidWdcbiAgfHwgJGV4cG0xKDEwKSA+IDIyMDI1LjQ2NTc5NDgwNjcxOSB8fCAkZXhwbTEoMTApIDwgMjIwMjUuNDY1Nzk0ODA2NzE2NTE2OFxuICAvLyBUb3IgQnJvd3NlciBidWdcbiAgfHwgJGV4cG0xKC0yZS0xNykgIT0gLTJlLTE3XG4pID8gZnVuY3Rpb24gZXhwbTEoeCkge1xuICByZXR1cm4gKHggPSAreCkgPT0gMCA/IHggOiB4ID4gLTFlLTYgJiYgeCA8IDFlLTYgPyB4ICsgeCAqIHggLyAyIDogTWF0aC5leHAoeCkgLSAxO1xufSA6ICRleHBtMTtcbiIsIi8vIDIwLjIuMi4xNiBNYXRoLmZyb3VuZCh4KVxudmFyIHNpZ24gPSByZXF1aXJlKCcuL19tYXRoLXNpZ24nKTtcbnZhciBwb3cgPSBNYXRoLnBvdztcbnZhciBFUFNJTE9OID0gcG93KDIsIC01Mik7XG52YXIgRVBTSUxPTjMyID0gcG93KDIsIC0yMyk7XG52YXIgTUFYMzIgPSBwb3coMiwgMTI3KSAqICgyIC0gRVBTSUxPTjMyKTtcbnZhciBNSU4zMiA9IHBvdygyLCAtMTI2KTtcblxudmFyIHJvdW5kVGllc1RvRXZlbiA9IGZ1bmN0aW9uIChuKSB7XG4gIHJldHVybiBuICsgMSAvIEVQU0lMT04gLSAxIC8gRVBTSUxPTjtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gTWF0aC5mcm91bmQgfHwgZnVuY3Rpb24gZnJvdW5kKHgpIHtcbiAgdmFyICRhYnMgPSBNYXRoLmFicyh4KTtcbiAgdmFyICRzaWduID0gc2lnbih4KTtcbiAgdmFyIGEsIHJlc3VsdDtcbiAgaWYgKCRhYnMgPCBNSU4zMikgcmV0dXJuICRzaWduICogcm91bmRUaWVzVG9FdmVuKCRhYnMgLyBNSU4zMiAvIEVQU0lMT04zMikgKiBNSU4zMiAqIEVQU0lMT04zMjtcbiAgYSA9ICgxICsgRVBTSUxPTjMyIC8gRVBTSUxPTikgKiAkYWJzO1xuICByZXN1bHQgPSBhIC0gKGEgLSAkYWJzKTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICBpZiAocmVzdWx0ID4gTUFYMzIgfHwgcmVzdWx0ICE9IHJlc3VsdCkgcmV0dXJuICRzaWduICogSW5maW5pdHk7XG4gIHJldHVybiAkc2lnbiAqIHJlc3VsdDtcbn07XG4iLCIvLyAyMC4yLjIuMjAgTWF0aC5sb2cxcCh4KVxubW9kdWxlLmV4cG9ydHMgPSBNYXRoLmxvZzFwIHx8IGZ1bmN0aW9uIGxvZzFwKHgpIHtcbiAgcmV0dXJuICh4ID0gK3gpID4gLTFlLTggJiYgeCA8IDFlLTggPyB4IC0geCAqIHggLyAyIDogTWF0aC5sb2coMSArIHgpO1xufTtcbiIsIi8vIDIwLjIuMi4yOCBNYXRoLnNpZ24oeClcbm1vZHVsZS5leHBvcnRzID0gTWF0aC5zaWduIHx8IGZ1bmN0aW9uIHNpZ24oeCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlXG4gIHJldHVybiAoeCA9ICt4KSA9PSAwIHx8IHggIT0geCA/IHggOiB4IDwgMCA/IC0xIDogMTtcbn07XG4iLCJ2YXIgTUVUQSA9IHJlcXVpcmUoJy4vX3VpZCcpKCdtZXRhJyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciBzZXREZXNjID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZjtcbnZhciBpZCA9IDA7XG52YXIgaXNFeHRlbnNpYmxlID0gT2JqZWN0LmlzRXh0ZW5zaWJsZSB8fCBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0cnVlO1xufTtcbnZhciBGUkVFWkUgPSAhcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBpc0V4dGVuc2libGUoT2JqZWN0LnByZXZlbnRFeHRlbnNpb25zKHt9KSk7XG59KTtcbnZhciBzZXRNZXRhID0gZnVuY3Rpb24gKGl0KSB7XG4gIHNldERlc2MoaXQsIE1FVEEsIHsgdmFsdWU6IHtcbiAgICBpOiAnTycgKyArK2lkLCAvLyBvYmplY3QgSURcbiAgICB3OiB7fSAgICAgICAgICAvLyB3ZWFrIGNvbGxlY3Rpb25zIElEc1xuICB9IH0pO1xufTtcbnZhciBmYXN0S2V5ID0gZnVuY3Rpb24gKGl0LCBjcmVhdGUpIHtcbiAgLy8gcmV0dXJuIHByaW1pdGl2ZSB3aXRoIHByZWZpeFxuICBpZiAoIWlzT2JqZWN0KGl0KSkgcmV0dXJuIHR5cGVvZiBpdCA9PSAnc3ltYm9sJyA/IGl0IDogKHR5cGVvZiBpdCA9PSAnc3RyaW5nJyA/ICdTJyA6ICdQJykgKyBpdDtcbiAgaWYgKCFoYXMoaXQsIE1FVEEpKSB7XG4gICAgLy8gY2FuJ3Qgc2V0IG1ldGFkYXRhIHRvIHVuY2F1Z2h0IGZyb3plbiBvYmplY3RcbiAgICBpZiAoIWlzRXh0ZW5zaWJsZShpdCkpIHJldHVybiAnRic7XG4gICAgLy8gbm90IG5lY2Vzc2FyeSB0byBhZGQgbWV0YWRhdGFcbiAgICBpZiAoIWNyZWF0ZSkgcmV0dXJuICdFJztcbiAgICAvLyBhZGQgbWlzc2luZyBtZXRhZGF0YVxuICAgIHNldE1ldGEoaXQpO1xuICAvLyByZXR1cm4gb2JqZWN0IElEXG4gIH0gcmV0dXJuIGl0W01FVEFdLmk7XG59O1xudmFyIGdldFdlYWsgPSBmdW5jdGlvbiAoaXQsIGNyZWF0ZSkge1xuICBpZiAoIWhhcyhpdCwgTUVUQSkpIHtcbiAgICAvLyBjYW4ndCBzZXQgbWV0YWRhdGEgdG8gdW5jYXVnaHQgZnJvemVuIG9iamVjdFxuICAgIGlmICghaXNFeHRlbnNpYmxlKGl0KSkgcmV0dXJuIHRydWU7XG4gICAgLy8gbm90IG5lY2Vzc2FyeSB0byBhZGQgbWV0YWRhdGFcbiAgICBpZiAoIWNyZWF0ZSkgcmV0dXJuIGZhbHNlO1xuICAgIC8vIGFkZCBtaXNzaW5nIG1ldGFkYXRhXG4gICAgc2V0TWV0YShpdCk7XG4gIC8vIHJldHVybiBoYXNoIHdlYWsgY29sbGVjdGlvbnMgSURzXG4gIH0gcmV0dXJuIGl0W01FVEFdLnc7XG59O1xuLy8gYWRkIG1ldGFkYXRhIG9uIGZyZWV6ZS1mYW1pbHkgbWV0aG9kcyBjYWxsaW5nXG52YXIgb25GcmVlemUgPSBmdW5jdGlvbiAoaXQpIHtcbiAgaWYgKEZSRUVaRSAmJiBtZXRhLk5FRUQgJiYgaXNFeHRlbnNpYmxlKGl0KSAmJiAhaGFzKGl0LCBNRVRBKSkgc2V0TWV0YShpdCk7XG4gIHJldHVybiBpdDtcbn07XG52YXIgbWV0YSA9IG1vZHVsZS5leHBvcnRzID0ge1xuICBLRVk6IE1FVEEsXG4gIE5FRUQ6IGZhbHNlLFxuICBmYXN0S2V5OiBmYXN0S2V5LFxuICBnZXRXZWFrOiBnZXRXZWFrLFxuICBvbkZyZWV6ZTogb25GcmVlemVcbn07XG4iLCJ2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgbWFjcm90YXNrID0gcmVxdWlyZSgnLi9fdGFzaycpLnNldDtcbnZhciBPYnNlcnZlciA9IGdsb2JhbC5NdXRhdGlvbk9ic2VydmVyIHx8IGdsb2JhbC5XZWJLaXRNdXRhdGlvbk9ic2VydmVyO1xudmFyIHByb2Nlc3MgPSBnbG9iYWwucHJvY2VzcztcbnZhciBQcm9taXNlID0gZ2xvYmFsLlByb21pc2U7XG52YXIgaXNOb2RlID0gcmVxdWlyZSgnLi9fY29mJykocHJvY2VzcykgPT0gJ3Byb2Nlc3MnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIGhlYWQsIGxhc3QsIG5vdGlmeTtcblxuICB2YXIgZmx1c2ggPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHBhcmVudCwgZm47XG4gICAgaWYgKGlzTm9kZSAmJiAocGFyZW50ID0gcHJvY2Vzcy5kb21haW4pKSBwYXJlbnQuZXhpdCgpO1xuICAgIHdoaWxlIChoZWFkKSB7XG4gICAgICBmbiA9IGhlYWQuZm47XG4gICAgICBoZWFkID0gaGVhZC5uZXh0O1xuICAgICAgdHJ5IHtcbiAgICAgICAgZm4oKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgaWYgKGhlYWQpIG5vdGlmeSgpO1xuICAgICAgICBlbHNlIGxhc3QgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRocm93IGU7XG4gICAgICB9XG4gICAgfSBsYXN0ID0gdW5kZWZpbmVkO1xuICAgIGlmIChwYXJlbnQpIHBhcmVudC5lbnRlcigpO1xuICB9O1xuXG4gIC8vIE5vZGUuanNcbiAgaWYgKGlzTm9kZSkge1xuICAgIG5vdGlmeSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHByb2Nlc3MubmV4dFRpY2soZmx1c2gpO1xuICAgIH07XG4gIC8vIGJyb3dzZXJzIHdpdGggTXV0YXRpb25PYnNlcnZlciwgZXhjZXB0IGlPUyBTYWZhcmkgLSBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvMzM5XG4gIH0gZWxzZSBpZiAoT2JzZXJ2ZXIgJiYgIShnbG9iYWwubmF2aWdhdG9yICYmIGdsb2JhbC5uYXZpZ2F0b3Iuc3RhbmRhbG9uZSkpIHtcbiAgICB2YXIgdG9nZ2xlID0gdHJ1ZTtcbiAgICB2YXIgbm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCcnKTtcbiAgICBuZXcgT2JzZXJ2ZXIoZmx1c2gpLm9ic2VydmUobm9kZSwgeyBjaGFyYWN0ZXJEYXRhOiB0cnVlIH0pOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ld1xuICAgIG5vdGlmeSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIG5vZGUuZGF0YSA9IHRvZ2dsZSA9ICF0b2dnbGU7XG4gICAgfTtcbiAgLy8gZW52aXJvbm1lbnRzIHdpdGggbWF5YmUgbm9uLWNvbXBsZXRlbHkgY29ycmVjdCwgYnV0IGV4aXN0ZW50IFByb21pc2VcbiAgfSBlbHNlIGlmIChQcm9taXNlICYmIFByb21pc2UucmVzb2x2ZSkge1xuICAgIC8vIFByb21pc2UucmVzb2x2ZSB3aXRob3V0IGFuIGFyZ3VtZW50IHRocm93cyBhbiBlcnJvciBpbiBMRyBXZWJPUyAyXG4gICAgdmFyIHByb21pc2UgPSBQcm9taXNlLnJlc29sdmUodW5kZWZpbmVkKTtcbiAgICBub3RpZnkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBwcm9taXNlLnRoZW4oZmx1c2gpO1xuICAgIH07XG4gIC8vIGZvciBvdGhlciBlbnZpcm9ubWVudHMgLSBtYWNyb3Rhc2sgYmFzZWQgb246XG4gIC8vIC0gc2V0SW1tZWRpYXRlXG4gIC8vIC0gTWVzc2FnZUNoYW5uZWxcbiAgLy8gLSB3aW5kb3cucG9zdE1lc3NhZ1xuICAvLyAtIG9ucmVhZHlzdGF0ZWNoYW5nZVxuICAvLyAtIHNldFRpbWVvdXRcbiAgfSBlbHNlIHtcbiAgICBub3RpZnkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBzdHJhbmdlIElFICsgd2VicGFjayBkZXYgc2VydmVyIGJ1ZyAtIHVzZSAuY2FsbChnbG9iYWwpXG4gICAgICBtYWNyb3Rhc2suY2FsbChnbG9iYWwsIGZsdXNoKTtcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChmbikge1xuICAgIHZhciB0YXNrID0geyBmbjogZm4sIG5leHQ6IHVuZGVmaW5lZCB9O1xuICAgIGlmIChsYXN0KSBsYXN0Lm5leHQgPSB0YXNrO1xuICAgIGlmICghaGVhZCkge1xuICAgICAgaGVhZCA9IHRhc2s7XG4gICAgICBub3RpZnkoKTtcbiAgICB9IGxhc3QgPSB0YXNrO1xuICB9O1xufTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIDI1LjQuMS41IE5ld1Byb21pc2VDYXBhYmlsaXR5KEMpXG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xuXG5mdW5jdGlvbiBQcm9taXNlQ2FwYWJpbGl0eShDKSB7XG4gIHZhciByZXNvbHZlLCByZWplY3Q7XG4gIHRoaXMucHJvbWlzZSA9IG5ldyBDKGZ1bmN0aW9uICgkJHJlc29sdmUsICQkcmVqZWN0KSB7XG4gICAgaWYgKHJlc29sdmUgIT09IHVuZGVmaW5lZCB8fCByZWplY3QgIT09IHVuZGVmaW5lZCkgdGhyb3cgVHlwZUVycm9yKCdCYWQgUHJvbWlzZSBjb25zdHJ1Y3RvcicpO1xuICAgIHJlc29sdmUgPSAkJHJlc29sdmU7XG4gICAgcmVqZWN0ID0gJCRyZWplY3Q7XG4gIH0pO1xuICB0aGlzLnJlc29sdmUgPSBhRnVuY3Rpb24ocmVzb2x2ZSk7XG4gIHRoaXMucmVqZWN0ID0gYUZ1bmN0aW9uKHJlamVjdCk7XG59XG5cbm1vZHVsZS5leHBvcnRzLmYgPSBmdW5jdGlvbiAoQykge1xuICByZXR1cm4gbmV3IFByb21pc2VDYXBhYmlsaXR5KEMpO1xufTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIDE5LjEuMi4xIE9iamVjdC5hc3NpZ24odGFyZ2V0LCBzb3VyY2UsIC4uLilcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJyk7XG52YXIgZ2V0S2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzJyk7XG52YXIgZ09QUyA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BzJyk7XG52YXIgcElFID0gcmVxdWlyZSgnLi9fb2JqZWN0LXBpZScpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgSU9iamVjdCA9IHJlcXVpcmUoJy4vX2lvYmplY3QnKTtcbnZhciAkYXNzaWduID0gT2JqZWN0LmFzc2lnbjtcblxuLy8gc2hvdWxkIHdvcmsgd2l0aCBzeW1ib2xzIGFuZCBzaG91bGQgaGF2ZSBkZXRlcm1pbmlzdGljIHByb3BlcnR5IG9yZGVyIChWOCBidWcpXG5tb2R1bGUuZXhwb3J0cyA9ICEkYXNzaWduIHx8IHJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICB2YXIgQSA9IHt9O1xuICB2YXIgQiA9IHt9O1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgdmFyIFMgPSBTeW1ib2woKTtcbiAgdmFyIEsgPSAnYWJjZGVmZ2hpamtsbW5vcHFyc3QnO1xuICBBW1NdID0gNztcbiAgSy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAoaykgeyBCW2tdID0gazsgfSk7XG4gIHJldHVybiAkYXNzaWduKHt9LCBBKVtTXSAhPSA3IHx8IE9iamVjdC5rZXlzKCRhc3NpZ24oe30sIEIpKS5qb2luKCcnKSAhPSBLO1xufSkgPyBmdW5jdGlvbiBhc3NpZ24odGFyZ2V0LCBzb3VyY2UpIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuICB2YXIgVCA9IHRvT2JqZWN0KHRhcmdldCk7XG4gIHZhciBhTGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgdmFyIGluZGV4ID0gMTtcbiAgdmFyIGdldFN5bWJvbHMgPSBnT1BTLmY7XG4gIHZhciBpc0VudW0gPSBwSUUuZjtcbiAgd2hpbGUgKGFMZW4gPiBpbmRleCkge1xuICAgIHZhciBTID0gSU9iamVjdChhcmd1bWVudHNbaW5kZXgrK10pO1xuICAgIHZhciBrZXlzID0gZ2V0U3ltYm9scyA/IGdldEtleXMoUykuY29uY2F0KGdldFN5bWJvbHMoUykpIDogZ2V0S2V5cyhTKTtcbiAgICB2YXIgbGVuZ3RoID0ga2V5cy5sZW5ndGg7XG4gICAgdmFyIGogPSAwO1xuICAgIHZhciBrZXk7XG4gICAgd2hpbGUgKGxlbmd0aCA+IGopIHtcbiAgICAgIGtleSA9IGtleXNbaisrXTtcbiAgICAgIGlmICghREVTQ1JJUFRPUlMgfHwgaXNFbnVtLmNhbGwoUywga2V5KSkgVFtrZXldID0gU1trZXldO1xuICAgIH1cbiAgfSByZXR1cm4gVDtcbn0gOiAkYXNzaWduO1xuIiwiLy8gMTkuMS4yLjIgLyAxNS4yLjMuNSBPYmplY3QuY3JlYXRlKE8gWywgUHJvcGVydGllc10pXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBkUHMgPSByZXF1aXJlKCcuL19vYmplY3QtZHBzJyk7XG52YXIgZW51bUJ1Z0tleXMgPSByZXF1aXJlKCcuL19lbnVtLWJ1Zy1rZXlzJyk7XG52YXIgSUVfUFJPVE8gPSByZXF1aXJlKCcuL19zaGFyZWQta2V5JykoJ0lFX1BST1RPJyk7XG52YXIgRW1wdHkgPSBmdW5jdGlvbiAoKSB7IC8qIGVtcHR5ICovIH07XG52YXIgUFJPVE9UWVBFID0gJ3Byb3RvdHlwZSc7XG5cbi8vIENyZWF0ZSBvYmplY3Qgd2l0aCBmYWtlIGBudWxsYCBwcm90b3R5cGU6IHVzZSBpZnJhbWUgT2JqZWN0IHdpdGggY2xlYXJlZCBwcm90b3R5cGVcbnZhciBjcmVhdGVEaWN0ID0gZnVuY3Rpb24gKCkge1xuICAvLyBUaHJhc2gsIHdhc3RlIGFuZCBzb2RvbXk6IElFIEdDIGJ1Z1xuICB2YXIgaWZyYW1lID0gcmVxdWlyZSgnLi9fZG9tLWNyZWF0ZScpKCdpZnJhbWUnKTtcbiAgdmFyIGkgPSBlbnVtQnVnS2V5cy5sZW5ndGg7XG4gIHZhciBsdCA9ICc8JztcbiAgdmFyIGd0ID0gJz4nO1xuICB2YXIgaWZyYW1lRG9jdW1lbnQ7XG4gIGlmcmFtZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICByZXF1aXJlKCcuL19odG1sJykuYXBwZW5kQ2hpbGQoaWZyYW1lKTtcbiAgaWZyYW1lLnNyYyA9ICdqYXZhc2NyaXB0Oic7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tc2NyaXB0LXVybFxuICAvLyBjcmVhdGVEaWN0ID0gaWZyYW1lLmNvbnRlbnRXaW5kb3cuT2JqZWN0O1xuICAvLyBodG1sLnJlbW92ZUNoaWxkKGlmcmFtZSk7XG4gIGlmcmFtZURvY3VtZW50ID0gaWZyYW1lLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQ7XG4gIGlmcmFtZURvY3VtZW50Lm9wZW4oKTtcbiAgaWZyYW1lRG9jdW1lbnQud3JpdGUobHQgKyAnc2NyaXB0JyArIGd0ICsgJ2RvY3VtZW50LkY9T2JqZWN0JyArIGx0ICsgJy9zY3JpcHQnICsgZ3QpO1xuICBpZnJhbWVEb2N1bWVudC5jbG9zZSgpO1xuICBjcmVhdGVEaWN0ID0gaWZyYW1lRG9jdW1lbnQuRjtcbiAgd2hpbGUgKGktLSkgZGVsZXRlIGNyZWF0ZURpY3RbUFJPVE9UWVBFXVtlbnVtQnVnS2V5c1tpXV07XG4gIHJldHVybiBjcmVhdGVEaWN0KCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5jcmVhdGUgfHwgZnVuY3Rpb24gY3JlYXRlKE8sIFByb3BlcnRpZXMpIHtcbiAgdmFyIHJlc3VsdDtcbiAgaWYgKE8gIT09IG51bGwpIHtcbiAgICBFbXB0eVtQUk9UT1RZUEVdID0gYW5PYmplY3QoTyk7XG4gICAgcmVzdWx0ID0gbmV3IEVtcHR5KCk7XG4gICAgRW1wdHlbUFJPVE9UWVBFXSA9IG51bGw7XG4gICAgLy8gYWRkIFwiX19wcm90b19fXCIgZm9yIE9iamVjdC5nZXRQcm90b3R5cGVPZiBwb2x5ZmlsbFxuICAgIHJlc3VsdFtJRV9QUk9UT10gPSBPO1xuICB9IGVsc2UgcmVzdWx0ID0gY3JlYXRlRGljdCgpO1xuICByZXR1cm4gUHJvcGVydGllcyA9PT0gdW5kZWZpbmVkID8gcmVzdWx0IDogZFBzKHJlc3VsdCwgUHJvcGVydGllcyk7XG59O1xuIiwidmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgSUU4X0RPTV9ERUZJTkUgPSByZXF1aXJlKCcuL19pZTgtZG9tLWRlZmluZScpO1xudmFyIHRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJyk7XG52YXIgZFAgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG5cbmV4cG9ydHMuZiA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgPyBPYmplY3QuZGVmaW5lUHJvcGVydHkgOiBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0eShPLCBQLCBBdHRyaWJ1dGVzKSB7XG4gIGFuT2JqZWN0KE8pO1xuICBQID0gdG9QcmltaXRpdmUoUCwgdHJ1ZSk7XG4gIGFuT2JqZWN0KEF0dHJpYnV0ZXMpO1xuICBpZiAoSUU4X0RPTV9ERUZJTkUpIHRyeSB7XG4gICAgcmV0dXJuIGRQKE8sIFAsIEF0dHJpYnV0ZXMpO1xuICB9IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cbiAgaWYgKCdnZXQnIGluIEF0dHJpYnV0ZXMgfHwgJ3NldCcgaW4gQXR0cmlidXRlcykgdGhyb3cgVHlwZUVycm9yKCdBY2Nlc3NvcnMgbm90IHN1cHBvcnRlZCEnKTtcbiAgaWYgKCd2YWx1ZScgaW4gQXR0cmlidXRlcykgT1tQXSA9IEF0dHJpYnV0ZXMudmFsdWU7XG4gIHJldHVybiBPO1xufTtcbiIsInZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgZ2V0S2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzIDogZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyhPLCBQcm9wZXJ0aWVzKSB7XG4gIGFuT2JqZWN0KE8pO1xuICB2YXIga2V5cyA9IGdldEtleXMoUHJvcGVydGllcyk7XG4gIHZhciBsZW5ndGggPSBrZXlzLmxlbmd0aDtcbiAgdmFyIGkgPSAwO1xuICB2YXIgUDtcbiAgd2hpbGUgKGxlbmd0aCA+IGkpIGRQLmYoTywgUCA9IGtleXNbaSsrXSwgUHJvcGVydGllc1tQXSk7XG4gIHJldHVybiBPO1xufTtcbiIsInZhciBwSUUgPSByZXF1aXJlKCcuL19vYmplY3QtcGllJyk7XG52YXIgY3JlYXRlRGVzYyA9IHJlcXVpcmUoJy4vX3Byb3BlcnR5LWRlc2MnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgdG9QcmltaXRpdmUgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKTtcbnZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciBJRThfRE9NX0RFRklORSA9IHJlcXVpcmUoJy4vX2llOC1kb20tZGVmaW5lJyk7XG52YXIgZ09QRCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG5cbmV4cG9ydHMuZiA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgPyBnT1BEIDogZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE8sIFApIHtcbiAgTyA9IHRvSU9iamVjdChPKTtcbiAgUCA9IHRvUHJpbWl0aXZlKFAsIHRydWUpO1xuICBpZiAoSUU4X0RPTV9ERUZJTkUpIHRyeSB7XG4gICAgcmV0dXJuIGdPUEQoTywgUCk7XG4gIH0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxuICBpZiAoaGFzKE8sIFApKSByZXR1cm4gY3JlYXRlRGVzYyghcElFLmYuY2FsbChPLCBQKSwgT1tQXSk7XG59O1xuIiwiLy8gZmFsbGJhY2sgZm9yIElFMTEgYnVnZ3kgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMgd2l0aCBpZnJhbWUgYW5kIHdpbmRvd1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbnZhciBnT1BOID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcG4nKS5mO1xudmFyIHRvU3RyaW5nID0ge30udG9TdHJpbmc7XG5cbnZhciB3aW5kb3dOYW1lcyA9IHR5cGVvZiB3aW5kb3cgPT0gJ29iamVjdCcgJiYgd2luZG93ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzXG4gID8gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMod2luZG93KSA6IFtdO1xuXG52YXIgZ2V0V2luZG93TmFtZXMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gZ09QTihpdCk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gd2luZG93TmFtZXMuc2xpY2UoKTtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMuZiA9IGZ1bmN0aW9uIGdldE93blByb3BlcnR5TmFtZXMoaXQpIHtcbiAgcmV0dXJuIHdpbmRvd05hbWVzICYmIHRvU3RyaW5nLmNhbGwoaXQpID09ICdbb2JqZWN0IFdpbmRvd10nID8gZ2V0V2luZG93TmFtZXMoaXQpIDogZ09QTih0b0lPYmplY3QoaXQpKTtcbn07XG4iLCIvLyAxOS4xLjIuNyAvIDE1LjIuMy40IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKE8pXG52YXIgJGtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cy1pbnRlcm5hbCcpO1xudmFyIGhpZGRlbktleXMgPSByZXF1aXJlKCcuL19lbnVtLWJ1Zy1rZXlzJykuY29uY2F0KCdsZW5ndGgnLCAncHJvdG90eXBlJyk7XG5cbmV4cG9ydHMuZiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzIHx8IGZ1bmN0aW9uIGdldE93blByb3BlcnR5TmFtZXMoTykge1xuICByZXR1cm4gJGtleXMoTywgaGlkZGVuS2V5cyk7XG59O1xuIiwiZXhwb3J0cy5mID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbiIsIi8vIDE5LjEuMi45IC8gMTUuMi4zLjIgT2JqZWN0LmdldFByb3RvdHlwZU9mKE8pXG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciBJRV9QUk9UTyA9IHJlcXVpcmUoJy4vX3NoYXJlZC1rZXknKSgnSUVfUFJPVE8nKTtcbnZhciBPYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmdldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIChPKSB7XG4gIE8gPSB0b09iamVjdChPKTtcbiAgaWYgKGhhcyhPLCBJRV9QUk9UTykpIHJldHVybiBPW0lFX1BST1RPXTtcbiAgaWYgKHR5cGVvZiBPLmNvbnN0cnVjdG9yID09ICdmdW5jdGlvbicgJiYgTyBpbnN0YW5jZW9mIE8uY29uc3RydWN0b3IpIHtcbiAgICByZXR1cm4gTy5jb25zdHJ1Y3Rvci5wcm90b3R5cGU7XG4gIH0gcmV0dXJuIE8gaW5zdGFuY2VvZiBPYmplY3QgPyBPYmplY3RQcm90byA6IG51bGw7XG59O1xuIiwidmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbnZhciBhcnJheUluZGV4T2YgPSByZXF1aXJlKCcuL19hcnJheS1pbmNsdWRlcycpKGZhbHNlKTtcbnZhciBJRV9QUk9UTyA9IHJlcXVpcmUoJy4vX3NoYXJlZC1rZXknKSgnSUVfUFJPVE8nKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob2JqZWN0LCBuYW1lcykge1xuICB2YXIgTyA9IHRvSU9iamVjdChvYmplY3QpO1xuICB2YXIgaSA9IDA7XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgdmFyIGtleTtcbiAgZm9yIChrZXkgaW4gTykgaWYgKGtleSAhPSBJRV9QUk9UTykgaGFzKE8sIGtleSkgJiYgcmVzdWx0LnB1c2goa2V5KTtcbiAgLy8gRG9uJ3QgZW51bSBidWcgJiBoaWRkZW4ga2V5c1xuICB3aGlsZSAobmFtZXMubGVuZ3RoID4gaSkgaWYgKGhhcyhPLCBrZXkgPSBuYW1lc1tpKytdKSkge1xuICAgIH5hcnJheUluZGV4T2YocmVzdWx0LCBrZXkpIHx8IHJlc3VsdC5wdXNoKGtleSk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG4iLCIvLyAxOS4xLjIuMTQgLyAxNS4yLjMuMTQgT2JqZWN0LmtleXMoTylcbnZhciAka2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzLWludGVybmFsJyk7XG52YXIgZW51bUJ1Z0tleXMgPSByZXF1aXJlKCcuL19lbnVtLWJ1Zy1rZXlzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmtleXMgfHwgZnVuY3Rpb24ga2V5cyhPKSB7XG4gIHJldHVybiAka2V5cyhPLCBlbnVtQnVnS2V5cyk7XG59O1xuIiwiZXhwb3J0cy5mID0ge30ucHJvcGVydHlJc0VudW1lcmFibGU7XG4iLCIvLyBtb3N0IE9iamVjdCBtZXRob2RzIGJ5IEVTNiBzaG91bGQgYWNjZXB0IHByaW1pdGl2ZXNcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgY29yZSA9IHJlcXVpcmUoJy4vX2NvcmUnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChLRVksIGV4ZWMpIHtcbiAgdmFyIGZuID0gKGNvcmUuT2JqZWN0IHx8IHt9KVtLRVldIHx8IE9iamVjdFtLRVldO1xuICB2YXIgZXhwID0ge307XG4gIGV4cFtLRVldID0gZXhlYyhmbik7XG4gICRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogZmFpbHMoZnVuY3Rpb24gKCkgeyBmbigxKTsgfSksICdPYmplY3QnLCBleHApO1xufTtcbiIsInZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJyk7XG52YXIgZ2V0S2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzJyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIGlzRW51bSA9IHJlcXVpcmUoJy4vX29iamVjdC1waWUnKS5mO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXNFbnRyaWVzKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoaXQpIHtcbiAgICB2YXIgTyA9IHRvSU9iamVjdChpdCk7XG4gICAgdmFyIGtleXMgPSBnZXRLZXlzKE8pO1xuICAgIHZhciBsZW5ndGggPSBrZXlzLmxlbmd0aDtcbiAgICB2YXIgaSA9IDA7XG4gICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgIHZhciBrZXk7XG4gICAgd2hpbGUgKGxlbmd0aCA+IGkpIHtcbiAgICAgIGtleSA9IGtleXNbaSsrXTtcbiAgICAgIGlmICghREVTQ1JJUFRPUlMgfHwgaXNFbnVtLmNhbGwoTywga2V5KSkge1xuICAgICAgICByZXN1bHQucHVzaChpc0VudHJpZXMgPyBba2V5LCBPW2tleV1dIDogT1trZXldKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcbn07XG4iLCIvLyBhbGwgb2JqZWN0IGtleXMsIGluY2x1ZGVzIG5vbi1lbnVtZXJhYmxlIGFuZCBzeW1ib2xzXG52YXIgZ09QTiA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BuJyk7XG52YXIgZ09QUyA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BzJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBSZWZsZWN0ID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykuUmVmbGVjdDtcbm1vZHVsZS5leHBvcnRzID0gUmVmbGVjdCAmJiBSZWZsZWN0Lm93bktleXMgfHwgZnVuY3Rpb24gb3duS2V5cyhpdCkge1xuICB2YXIga2V5cyA9IGdPUE4uZihhbk9iamVjdChpdCkpO1xuICB2YXIgZ2V0U3ltYm9scyA9IGdPUFMuZjtcbiAgcmV0dXJuIGdldFN5bWJvbHMgPyBrZXlzLmNvbmNhdChnZXRTeW1ib2xzKGl0KSkgOiBrZXlzO1xufTtcbiIsInZhciAkcGFyc2VGbG9hdCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLnBhcnNlRmxvYXQ7XG52YXIgJHRyaW0gPSByZXF1aXJlKCcuL19zdHJpbmctdHJpbScpLnRyaW07XG5cbm1vZHVsZS5leHBvcnRzID0gMSAvICRwYXJzZUZsb2F0KHJlcXVpcmUoJy4vX3N0cmluZy13cycpICsgJy0wJykgIT09IC1JbmZpbml0eSA/IGZ1bmN0aW9uIHBhcnNlRmxvYXQoc3RyKSB7XG4gIHZhciBzdHJpbmcgPSAkdHJpbShTdHJpbmcoc3RyKSwgMyk7XG4gIHZhciByZXN1bHQgPSAkcGFyc2VGbG9hdChzdHJpbmcpO1xuICByZXR1cm4gcmVzdWx0ID09PSAwICYmIHN0cmluZy5jaGFyQXQoMCkgPT0gJy0nID8gLTAgOiByZXN1bHQ7XG59IDogJHBhcnNlRmxvYXQ7XG4iLCJ2YXIgJHBhcnNlSW50ID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykucGFyc2VJbnQ7XG52YXIgJHRyaW0gPSByZXF1aXJlKCcuL19zdHJpbmctdHJpbScpLnRyaW07XG52YXIgd3MgPSByZXF1aXJlKCcuL19zdHJpbmctd3MnKTtcbnZhciBoZXggPSAvXlstK10/MFt4WF0vO1xuXG5tb2R1bGUuZXhwb3J0cyA9ICRwYXJzZUludCh3cyArICcwOCcpICE9PSA4IHx8ICRwYXJzZUludCh3cyArICcweDE2JykgIT09IDIyID8gZnVuY3Rpb24gcGFyc2VJbnQoc3RyLCByYWRpeCkge1xuICB2YXIgc3RyaW5nID0gJHRyaW0oU3RyaW5nKHN0ciksIDMpO1xuICByZXR1cm4gJHBhcnNlSW50KHN0cmluZywgKHJhZGl4ID4+PiAwKSB8fCAoaGV4LnRlc3Qoc3RyaW5nKSA/IDE2IDogMTApKTtcbn0gOiAkcGFyc2VJbnQ7XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChleGVjKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHsgZTogZmFsc2UsIHY6IGV4ZWMoKSB9O1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIHsgZTogdHJ1ZSwgdjogZSB9O1xuICB9XG59O1xuIiwidmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBuZXdQcm9taXNlQ2FwYWJpbGl0eSA9IHJlcXVpcmUoJy4vX25ldy1wcm9taXNlLWNhcGFiaWxpdHknKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoQywgeCkge1xuICBhbk9iamVjdChDKTtcbiAgaWYgKGlzT2JqZWN0KHgpICYmIHguY29uc3RydWN0b3IgPT09IEMpIHJldHVybiB4O1xuICB2YXIgcHJvbWlzZUNhcGFiaWxpdHkgPSBuZXdQcm9taXNlQ2FwYWJpbGl0eS5mKEMpO1xuICB2YXIgcmVzb2x2ZSA9IHByb21pc2VDYXBhYmlsaXR5LnJlc29sdmU7XG4gIHJlc29sdmUoeCk7XG4gIHJldHVybiBwcm9taXNlQ2FwYWJpbGl0eS5wcm9taXNlO1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGJpdG1hcCwgdmFsdWUpIHtcbiAgcmV0dXJuIHtcbiAgICBlbnVtZXJhYmxlOiAhKGJpdG1hcCAmIDEpLFxuICAgIGNvbmZpZ3VyYWJsZTogIShiaXRtYXAgJiAyKSxcbiAgICB3cml0YWJsZTogIShiaXRtYXAgJiA0KSxcbiAgICB2YWx1ZTogdmFsdWVcbiAgfTtcbn07XG4iLCJ2YXIgcmVkZWZpbmUgPSByZXF1aXJlKCcuL19yZWRlZmluZScpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodGFyZ2V0LCBzcmMsIHNhZmUpIHtcbiAgZm9yICh2YXIga2V5IGluIHNyYykgcmVkZWZpbmUodGFyZ2V0LCBrZXksIHNyY1trZXldLCBzYWZlKTtcbiAgcmV0dXJuIHRhcmdldDtcbn07XG4iLCJ2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciBTUkMgPSByZXF1aXJlKCcuL191aWQnKSgnc3JjJyk7XG52YXIgJHRvU3RyaW5nID0gcmVxdWlyZSgnLi9fZnVuY3Rpb24tdG8tc3RyaW5nJyk7XG52YXIgVE9fU1RSSU5HID0gJ3RvU3RyaW5nJztcbnZhciBUUEwgPSAoJycgKyAkdG9TdHJpbmcpLnNwbGl0KFRPX1NUUklORyk7XG5cbnJlcXVpcmUoJy4vX2NvcmUnKS5pbnNwZWN0U291cmNlID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiAkdG9TdHJpbmcuY2FsbChpdCk7XG59O1xuXG4obW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoTywga2V5LCB2YWwsIHNhZmUpIHtcbiAgdmFyIGlzRnVuY3Rpb24gPSB0eXBlb2YgdmFsID09ICdmdW5jdGlvbic7XG4gIGlmIChpc0Z1bmN0aW9uKSBoYXModmFsLCAnbmFtZScpIHx8IGhpZGUodmFsLCAnbmFtZScsIGtleSk7XG4gIGlmIChPW2tleV0gPT09IHZhbCkgcmV0dXJuO1xuICBpZiAoaXNGdW5jdGlvbikgaGFzKHZhbCwgU1JDKSB8fCBoaWRlKHZhbCwgU1JDLCBPW2tleV0gPyAnJyArIE9ba2V5XSA6IFRQTC5qb2luKFN0cmluZyhrZXkpKSk7XG4gIGlmIChPID09PSBnbG9iYWwpIHtcbiAgICBPW2tleV0gPSB2YWw7XG4gIH0gZWxzZSBpZiAoIXNhZmUpIHtcbiAgICBkZWxldGUgT1trZXldO1xuICAgIGhpZGUoTywga2V5LCB2YWwpO1xuICB9IGVsc2UgaWYgKE9ba2V5XSkge1xuICAgIE9ba2V5XSA9IHZhbDtcbiAgfSBlbHNlIHtcbiAgICBoaWRlKE8sIGtleSwgdmFsKTtcbiAgfVxuLy8gYWRkIGZha2UgRnVuY3Rpb24jdG9TdHJpbmcgZm9yIGNvcnJlY3Qgd29yayB3cmFwcGVkIG1ldGhvZHMgLyBjb25zdHJ1Y3RvcnMgd2l0aCBtZXRob2RzIGxpa2UgTG9EYXNoIGlzTmF0aXZlXG59KShGdW5jdGlvbi5wcm90b3R5cGUsIFRPX1NUUklORywgZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gIHJldHVybiB0eXBlb2YgdGhpcyA9PSAnZnVuY3Rpb24nICYmIHRoaXNbU1JDXSB8fCAkdG9TdHJpbmcuY2FsbCh0aGlzKTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4vX2NsYXNzb2YnKTtcbnZhciBidWlsdGluRXhlYyA9IFJlZ0V4cC5wcm90b3R5cGUuZXhlYztcblxuIC8vIGBSZWdFeHBFeGVjYCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXJlZ2V4cGV4ZWNcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKFIsIFMpIHtcbiAgdmFyIGV4ZWMgPSBSLmV4ZWM7XG4gIGlmICh0eXBlb2YgZXhlYyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHZhciByZXN1bHQgPSBleGVjLmNhbGwoUiwgUyk7XG4gICAgaWYgKHR5cGVvZiByZXN1bHQgIT09ICdvYmplY3QnKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdSZWdFeHAgZXhlYyBtZXRob2QgcmV0dXJuZWQgc29tZXRoaW5nIG90aGVyIHRoYW4gYW4gT2JqZWN0IG9yIG51bGwnKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuICBpZiAoY2xhc3NvZihSKSAhPT0gJ1JlZ0V4cCcpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdSZWdFeHAjZXhlYyBjYWxsZWQgb24gaW5jb21wYXRpYmxlIHJlY2VpdmVyJyk7XG4gIH1cbiAgcmV0dXJuIGJ1aWx0aW5FeGVjLmNhbGwoUiwgUyk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcmVnZXhwRmxhZ3MgPSByZXF1aXJlKCcuL19mbGFncycpO1xuXG52YXIgbmF0aXZlRXhlYyA9IFJlZ0V4cC5wcm90b3R5cGUuZXhlYztcbi8vIFRoaXMgYWx3YXlzIHJlZmVycyB0byB0aGUgbmF0aXZlIGltcGxlbWVudGF0aW9uLCBiZWNhdXNlIHRoZVxuLy8gU3RyaW5nI3JlcGxhY2UgcG9seWZpbGwgdXNlcyAuL2ZpeC1yZWdleHAtd2VsbC1rbm93bi1zeW1ib2wtbG9naWMuanMsXG4vLyB3aGljaCBsb2FkcyB0aGlzIGZpbGUgYmVmb3JlIHBhdGNoaW5nIHRoZSBtZXRob2QuXG52YXIgbmF0aXZlUmVwbGFjZSA9IFN0cmluZy5wcm90b3R5cGUucmVwbGFjZTtcblxudmFyIHBhdGNoZWRFeGVjID0gbmF0aXZlRXhlYztcblxudmFyIExBU1RfSU5ERVggPSAnbGFzdEluZGV4JztcblxudmFyIFVQREFURVNfTEFTVF9JTkRFWF9XUk9ORyA9IChmdW5jdGlvbiAoKSB7XG4gIHZhciByZTEgPSAvYS8sXG4gICAgICByZTIgPSAvYiovZztcbiAgbmF0aXZlRXhlYy5jYWxsKHJlMSwgJ2EnKTtcbiAgbmF0aXZlRXhlYy5jYWxsKHJlMiwgJ2EnKTtcbiAgcmV0dXJuIHJlMVtMQVNUX0lOREVYXSAhPT0gMCB8fCByZTJbTEFTVF9JTkRFWF0gIT09IDA7XG59KSgpO1xuXG4vLyBub25wYXJ0aWNpcGF0aW5nIGNhcHR1cmluZyBncm91cCwgY29waWVkIGZyb20gZXM1LXNoaW0ncyBTdHJpbmcjc3BsaXQgcGF0Y2guXG52YXIgTlBDR19JTkNMVURFRCA9IC8oKT8/Ly5leGVjKCcnKVsxXSAhPT0gdW5kZWZpbmVkO1xuXG52YXIgUEFUQ0ggPSBVUERBVEVTX0xBU1RfSU5ERVhfV1JPTkcgfHwgTlBDR19JTkNMVURFRDtcblxuaWYgKFBBVENIKSB7XG4gIHBhdGNoZWRFeGVjID0gZnVuY3Rpb24gZXhlYyhzdHIpIHtcbiAgICB2YXIgcmUgPSB0aGlzO1xuICAgIHZhciBsYXN0SW5kZXgsIHJlQ29weSwgbWF0Y2gsIGk7XG5cbiAgICBpZiAoTlBDR19JTkNMVURFRCkge1xuICAgICAgcmVDb3B5ID0gbmV3IFJlZ0V4cCgnXicgKyByZS5zb3VyY2UgKyAnJCg/IVxcXFxzKScsIHJlZ2V4cEZsYWdzLmNhbGwocmUpKTtcbiAgICB9XG4gICAgaWYgKFVQREFURVNfTEFTVF9JTkRFWF9XUk9ORykgbGFzdEluZGV4ID0gcmVbTEFTVF9JTkRFWF07XG5cbiAgICBtYXRjaCA9IG5hdGl2ZUV4ZWMuY2FsbChyZSwgc3RyKTtcblxuICAgIGlmIChVUERBVEVTX0xBU1RfSU5ERVhfV1JPTkcgJiYgbWF0Y2gpIHtcbiAgICAgIHJlW0xBU1RfSU5ERVhdID0gcmUuZ2xvYmFsID8gbWF0Y2guaW5kZXggKyBtYXRjaFswXS5sZW5ndGggOiBsYXN0SW5kZXg7XG4gICAgfVxuICAgIGlmIChOUENHX0lOQ0xVREVEICYmIG1hdGNoICYmIG1hdGNoLmxlbmd0aCA+IDEpIHtcbiAgICAgIC8vIEZpeCBicm93c2VycyB3aG9zZSBgZXhlY2AgbWV0aG9kcyBkb24ndCBjb25zaXN0ZW50bHkgcmV0dXJuIGB1bmRlZmluZWRgXG4gICAgICAvLyBmb3IgTlBDRywgbGlrZSBJRTguIE5PVEU6IFRoaXMgZG9lc24nIHdvcmsgZm9yIC8oLj8pPy9cbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1sb29wLWZ1bmNcbiAgICAgIG5hdGl2ZVJlcGxhY2UuY2FsbChtYXRjaFswXSwgcmVDb3B5LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGZvciAoaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoIC0gMjsgaSsrKSB7XG4gICAgICAgICAgaWYgKGFyZ3VtZW50c1tpXSA9PT0gdW5kZWZpbmVkKSBtYXRjaFtpXSA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1hdGNoO1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHBhdGNoZWRFeGVjO1xuIiwiLy8gNy4yLjkgU2FtZVZhbHVlKHgsIHkpXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5pcyB8fCBmdW5jdGlvbiBpcyh4LCB5KSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgcmV0dXJuIHggPT09IHkgPyB4ICE9PSAwIHx8IDEgLyB4ID09PSAxIC8geSA6IHggIT0geCAmJiB5ICE9IHk7XG59O1xuIiwiLy8gV29ya3Mgd2l0aCBfX3Byb3RvX18gb25seS4gT2xkIHY4IGNhbid0IHdvcmsgd2l0aCBudWxsIHByb3RvIG9iamVjdHMuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby1wcm90byAqL1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBjaGVjayA9IGZ1bmN0aW9uIChPLCBwcm90bykge1xuICBhbk9iamVjdChPKTtcbiAgaWYgKCFpc09iamVjdChwcm90bykgJiYgcHJvdG8gIT09IG51bGwpIHRocm93IFR5cGVFcnJvcihwcm90byArIFwiOiBjYW4ndCBzZXQgYXMgcHJvdG90eXBlIVwiKTtcbn07XG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc2V0OiBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgKCdfX3Byb3RvX18nIGluIHt9ID8gLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICAgIGZ1bmN0aW9uICh0ZXN0LCBidWdneSwgc2V0KSB7XG4gICAgICB0cnkge1xuICAgICAgICBzZXQgPSByZXF1aXJlKCcuL19jdHgnKShGdW5jdGlvbi5jYWxsLCByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpLmYoT2JqZWN0LnByb3RvdHlwZSwgJ19fcHJvdG9fXycpLnNldCwgMik7XG4gICAgICAgIHNldCh0ZXN0LCBbXSk7XG4gICAgICAgIGJ1Z2d5ID0gISh0ZXN0IGluc3RhbmNlb2YgQXJyYXkpO1xuICAgICAgfSBjYXRjaCAoZSkgeyBidWdneSA9IHRydWU7IH1cbiAgICAgIHJldHVybiBmdW5jdGlvbiBzZXRQcm90b3R5cGVPZihPLCBwcm90bykge1xuICAgICAgICBjaGVjayhPLCBwcm90byk7XG4gICAgICAgIGlmIChidWdneSkgTy5fX3Byb3RvX18gPSBwcm90bztcbiAgICAgICAgZWxzZSBzZXQoTywgcHJvdG8pO1xuICAgICAgICByZXR1cm4gTztcbiAgICAgIH07XG4gICAgfSh7fSwgZmFsc2UpIDogdW5kZWZpbmVkKSxcbiAgY2hlY2s6IGNoZWNrXG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpO1xudmFyIFNQRUNJRVMgPSByZXF1aXJlKCcuL193a3MnKSgnc3BlY2llcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChLRVkpIHtcbiAgdmFyIEMgPSBnbG9iYWxbS0VZXTtcbiAgaWYgKERFU0NSSVBUT1JTICYmIEMgJiYgIUNbU1BFQ0lFU10pIGRQLmYoQywgU1BFQ0lFUywge1xuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH1cbiAgfSk7XG59O1xuIiwidmFyIGRlZiA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgVEFHID0gcmVxdWlyZSgnLi9fd2tzJykoJ3RvU3RyaW5nVGFnJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCB0YWcsIHN0YXQpIHtcbiAgaWYgKGl0ICYmICFoYXMoaXQgPSBzdGF0ID8gaXQgOiBpdC5wcm90b3R5cGUsIFRBRykpIGRlZihpdCwgVEFHLCB7IGNvbmZpZ3VyYWJsZTogdHJ1ZSwgdmFsdWU6IHRhZyB9KTtcbn07XG4iLCJ2YXIgc2hhcmVkID0gcmVxdWlyZSgnLi9fc2hhcmVkJykoJ2tleXMnKTtcbnZhciB1aWQgPSByZXF1aXJlKCcuL191aWQnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGtleSkge1xuICByZXR1cm4gc2hhcmVkW2tleV0gfHwgKHNoYXJlZFtrZXldID0gdWlkKGtleSkpO1xufTtcbiIsInZhciBjb3JlID0gcmVxdWlyZSgnLi9fY29yZScpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIFNIQVJFRCA9ICdfX2NvcmUtanNfc2hhcmVkX18nO1xudmFyIHN0b3JlID0gZ2xvYmFsW1NIQVJFRF0gfHwgKGdsb2JhbFtTSEFSRURdID0ge30pO1xuXG4obW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuICByZXR1cm4gc3RvcmVba2V5XSB8fCAoc3RvcmVba2V5XSA9IHZhbHVlICE9PSB1bmRlZmluZWQgPyB2YWx1ZSA6IHt9KTtcbn0pKCd2ZXJzaW9ucycsIFtdKS5wdXNoKHtcbiAgdmVyc2lvbjogY29yZS52ZXJzaW9uLFxuICBtb2RlOiByZXF1aXJlKCcuL19saWJyYXJ5JykgPyAncHVyZScgOiAnZ2xvYmFsJyxcbiAgY29weXJpZ2h0OiAnwqkgMjAyMCBEZW5pcyBQdXNoa2FyZXYgKHpsb2lyb2NrLnJ1KSdcbn0pO1xuIiwiLy8gNy4zLjIwIFNwZWNpZXNDb25zdHJ1Y3RvcihPLCBkZWZhdWx0Q29uc3RydWN0b3IpXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG52YXIgU1BFQ0lFUyA9IHJlcXVpcmUoJy4vX3drcycpKCdzcGVjaWVzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChPLCBEKSB7XG4gIHZhciBDID0gYW5PYmplY3QoTykuY29uc3RydWN0b3I7XG4gIHZhciBTO1xuICByZXR1cm4gQyA9PT0gdW5kZWZpbmVkIHx8IChTID0gYW5PYmplY3QoQylbU1BFQ0lFU10pID09IHVuZGVmaW5lZCA/IEQgOiBhRnVuY3Rpb24oUyk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobWV0aG9kLCBhcmcpIHtcbiAgcmV0dXJuICEhbWV0aG9kICYmIGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdXNlbGVzcy1jYWxsXG4gICAgYXJnID8gbWV0aG9kLmNhbGwobnVsbCwgZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9LCAxKSA6IG1ldGhvZC5jYWxsKG51bGwpO1xuICB9KTtcbn07XG4iLCJ2YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xudmFyIGRlZmluZWQgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7XG4vLyB0cnVlICAtPiBTdHJpbmcjYXRcbi8vIGZhbHNlIC0+IFN0cmluZyNjb2RlUG9pbnRBdFxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoVE9fU1RSSU5HKSB7XG4gIHJldHVybiBmdW5jdGlvbiAodGhhdCwgcG9zKSB7XG4gICAgdmFyIHMgPSBTdHJpbmcoZGVmaW5lZCh0aGF0KSk7XG4gICAgdmFyIGkgPSB0b0ludGVnZXIocG9zKTtcbiAgICB2YXIgbCA9IHMubGVuZ3RoO1xuICAgIHZhciBhLCBiO1xuICAgIGlmIChpIDwgMCB8fCBpID49IGwpIHJldHVybiBUT19TVFJJTkcgPyAnJyA6IHVuZGVmaW5lZDtcbiAgICBhID0gcy5jaGFyQ29kZUF0KGkpO1xuICAgIHJldHVybiBhIDwgMHhkODAwIHx8IGEgPiAweGRiZmYgfHwgaSArIDEgPT09IGwgfHwgKGIgPSBzLmNoYXJDb2RlQXQoaSArIDEpKSA8IDB4ZGMwMCB8fCBiID4gMHhkZmZmXG4gICAgICA/IFRPX1NUUklORyA/IHMuY2hhckF0KGkpIDogYVxuICAgICAgOiBUT19TVFJJTkcgPyBzLnNsaWNlKGksIGkgKyAyKSA6IChhIC0gMHhkODAwIDw8IDEwKSArIChiIC0gMHhkYzAwKSArIDB4MTAwMDA7XG4gIH07XG59O1xuIiwiLy8gaGVscGVyIGZvciBTdHJpbmcje3N0YXJ0c1dpdGgsIGVuZHNXaXRoLCBpbmNsdWRlc31cbnZhciBpc1JlZ0V4cCA9IHJlcXVpcmUoJy4vX2lzLXJlZ2V4cCcpO1xudmFyIGRlZmluZWQgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHRoYXQsIHNlYXJjaFN0cmluZywgTkFNRSkge1xuICBpZiAoaXNSZWdFeHAoc2VhcmNoU3RyaW5nKSkgdGhyb3cgVHlwZUVycm9yKCdTdHJpbmcjJyArIE5BTUUgKyBcIiBkb2Vzbid0IGFjY2VwdCByZWdleCFcIik7XG4gIHJldHVybiBTdHJpbmcoZGVmaW5lZCh0aGF0KSk7XG59O1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbnZhciBxdW90ID0gL1wiL2c7XG4vLyBCLjIuMy4yLjEgQ3JlYXRlSFRNTChzdHJpbmcsIHRhZywgYXR0cmlidXRlLCB2YWx1ZSlcbnZhciBjcmVhdGVIVE1MID0gZnVuY3Rpb24gKHN0cmluZywgdGFnLCBhdHRyaWJ1dGUsIHZhbHVlKSB7XG4gIHZhciBTID0gU3RyaW5nKGRlZmluZWQoc3RyaW5nKSk7XG4gIHZhciBwMSA9ICc8JyArIHRhZztcbiAgaWYgKGF0dHJpYnV0ZSAhPT0gJycpIHAxICs9ICcgJyArIGF0dHJpYnV0ZSArICc9XCInICsgU3RyaW5nKHZhbHVlKS5yZXBsYWNlKHF1b3QsICcmcXVvdDsnKSArICdcIic7XG4gIHJldHVybiBwMSArICc+JyArIFMgKyAnPC8nICsgdGFnICsgJz4nO1xufTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKE5BTUUsIGV4ZWMpIHtcbiAgdmFyIE8gPSB7fTtcbiAgT1tOQU1FXSA9IGV4ZWMoY3JlYXRlSFRNTCk7XG4gICRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgIHZhciB0ZXN0ID0gJydbTkFNRV0oJ1wiJyk7XG4gICAgcmV0dXJuIHRlc3QgIT09IHRlc3QudG9Mb3dlckNhc2UoKSB8fCB0ZXN0LnNwbGl0KCdcIicpLmxlbmd0aCA+IDM7XG4gIH0pLCAnU3RyaW5nJywgTyk7XG59O1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtc3RyaW5nLXBhZC1zdGFydC1lbmRcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIHJlcGVhdCA9IHJlcXVpcmUoJy4vX3N0cmluZy1yZXBlYXQnKTtcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh0aGF0LCBtYXhMZW5ndGgsIGZpbGxTdHJpbmcsIGxlZnQpIHtcbiAgdmFyIFMgPSBTdHJpbmcoZGVmaW5lZCh0aGF0KSk7XG4gIHZhciBzdHJpbmdMZW5ndGggPSBTLmxlbmd0aDtcbiAgdmFyIGZpbGxTdHIgPSBmaWxsU3RyaW5nID09PSB1bmRlZmluZWQgPyAnICcgOiBTdHJpbmcoZmlsbFN0cmluZyk7XG4gIHZhciBpbnRNYXhMZW5ndGggPSB0b0xlbmd0aChtYXhMZW5ndGgpO1xuICBpZiAoaW50TWF4TGVuZ3RoIDw9IHN0cmluZ0xlbmd0aCB8fCBmaWxsU3RyID09ICcnKSByZXR1cm4gUztcbiAgdmFyIGZpbGxMZW4gPSBpbnRNYXhMZW5ndGggLSBzdHJpbmdMZW5ndGg7XG4gIHZhciBzdHJpbmdGaWxsZXIgPSByZXBlYXQuY2FsbChmaWxsU3RyLCBNYXRoLmNlaWwoZmlsbExlbiAvIGZpbGxTdHIubGVuZ3RoKSk7XG4gIGlmIChzdHJpbmdGaWxsZXIubGVuZ3RoID4gZmlsbExlbikgc3RyaW5nRmlsbGVyID0gc3RyaW5nRmlsbGVyLnNsaWNlKDAsIGZpbGxMZW4pO1xuICByZXR1cm4gbGVmdCA/IHN0cmluZ0ZpbGxlciArIFMgOiBTICsgc3RyaW5nRmlsbGVyO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiByZXBlYXQoY291bnQpIHtcbiAgdmFyIHN0ciA9IFN0cmluZyhkZWZpbmVkKHRoaXMpKTtcbiAgdmFyIHJlcyA9ICcnO1xuICB2YXIgbiA9IHRvSW50ZWdlcihjb3VudCk7XG4gIGlmIChuIDwgMCB8fCBuID09IEluZmluaXR5KSB0aHJvdyBSYW5nZUVycm9yKFwiQ291bnQgY2FuJ3QgYmUgbmVnYXRpdmVcIik7XG4gIGZvciAoO24gPiAwOyAobiA+Pj49IDEpICYmIChzdHIgKz0gc3RyKSkgaWYgKG4gJiAxKSByZXMgKz0gc3RyO1xuICByZXR1cm4gcmVzO1xufTtcbiIsInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG52YXIgc3BhY2VzID0gcmVxdWlyZSgnLi9fc3RyaW5nLXdzJyk7XG52YXIgc3BhY2UgPSAnWycgKyBzcGFjZXMgKyAnXSc7XG52YXIgbm9uID0gJ1xcdTIwMGJcXHUwMDg1JztcbnZhciBsdHJpbSA9IFJlZ0V4cCgnXicgKyBzcGFjZSArIHNwYWNlICsgJyonKTtcbnZhciBydHJpbSA9IFJlZ0V4cChzcGFjZSArIHNwYWNlICsgJyokJyk7XG5cbnZhciBleHBvcnRlciA9IGZ1bmN0aW9uIChLRVksIGV4ZWMsIEFMSUFTKSB7XG4gIHZhciBleHAgPSB7fTtcbiAgdmFyIEZPUkNFID0gZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiAhIXNwYWNlc1tLRVldKCkgfHwgbm9uW0tFWV0oKSAhPSBub247XG4gIH0pO1xuICB2YXIgZm4gPSBleHBbS0VZXSA9IEZPUkNFID8gZXhlYyh0cmltKSA6IHNwYWNlc1tLRVldO1xuICBpZiAoQUxJQVMpIGV4cFtBTElBU10gPSBmbjtcbiAgJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiBGT1JDRSwgJ1N0cmluZycsIGV4cCk7XG59O1xuXG4vLyAxIC0+IFN0cmluZyN0cmltTGVmdFxuLy8gMiAtPiBTdHJpbmcjdHJpbVJpZ2h0XG4vLyAzIC0+IFN0cmluZyN0cmltXG52YXIgdHJpbSA9IGV4cG9ydGVyLnRyaW0gPSBmdW5jdGlvbiAoc3RyaW5nLCBUWVBFKSB7XG4gIHN0cmluZyA9IFN0cmluZyhkZWZpbmVkKHN0cmluZykpO1xuICBpZiAoVFlQRSAmIDEpIHN0cmluZyA9IHN0cmluZy5yZXBsYWNlKGx0cmltLCAnJyk7XG4gIGlmIChUWVBFICYgMikgc3RyaW5nID0gc3RyaW5nLnJlcGxhY2UocnRyaW0sICcnKTtcbiAgcmV0dXJuIHN0cmluZztcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0ZXI7XG4iLCJtb2R1bGUuZXhwb3J0cyA9ICdcXHgwOVxceDBBXFx4MEJcXHgwQ1xceDBEXFx4MjBcXHhBMFxcdTE2ODBcXHUxODBFXFx1MjAwMFxcdTIwMDFcXHUyMDAyXFx1MjAwMycgK1xuICAnXFx1MjAwNFxcdTIwMDVcXHUyMDA2XFx1MjAwN1xcdTIwMDhcXHUyMDA5XFx1MjAwQVxcdTIwMkZcXHUyMDVGXFx1MzAwMFxcdTIwMjhcXHUyMDI5XFx1RkVGRic7XG4iLCJ2YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgaW52b2tlID0gcmVxdWlyZSgnLi9faW52b2tlJyk7XG52YXIgaHRtbCA9IHJlcXVpcmUoJy4vX2h0bWwnKTtcbnZhciBjZWwgPSByZXF1aXJlKCcuL19kb20tY3JlYXRlJyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgcHJvY2VzcyA9IGdsb2JhbC5wcm9jZXNzO1xudmFyIHNldFRhc2sgPSBnbG9iYWwuc2V0SW1tZWRpYXRlO1xudmFyIGNsZWFyVGFzayA9IGdsb2JhbC5jbGVhckltbWVkaWF0ZTtcbnZhciBNZXNzYWdlQ2hhbm5lbCA9IGdsb2JhbC5NZXNzYWdlQ2hhbm5lbDtcbnZhciBEaXNwYXRjaCA9IGdsb2JhbC5EaXNwYXRjaDtcbnZhciBjb3VudGVyID0gMDtcbnZhciBxdWV1ZSA9IHt9O1xudmFyIE9OUkVBRFlTVEFURUNIQU5HRSA9ICdvbnJlYWR5c3RhdGVjaGFuZ2UnO1xudmFyIGRlZmVyLCBjaGFubmVsLCBwb3J0O1xudmFyIHJ1biA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIGlkID0gK3RoaXM7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wcm90b3R5cGUtYnVpbHRpbnNcbiAgaWYgKHF1ZXVlLmhhc093blByb3BlcnR5KGlkKSkge1xuICAgIHZhciBmbiA9IHF1ZXVlW2lkXTtcbiAgICBkZWxldGUgcXVldWVbaWRdO1xuICAgIGZuKCk7XG4gIH1cbn07XG52YXIgbGlzdGVuZXIgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgcnVuLmNhbGwoZXZlbnQuZGF0YSk7XG59O1xuLy8gTm9kZS5qcyAwLjkrICYgSUUxMCsgaGFzIHNldEltbWVkaWF0ZSwgb3RoZXJ3aXNlOlxuaWYgKCFzZXRUYXNrIHx8ICFjbGVhclRhc2spIHtcbiAgc2V0VGFzayA9IGZ1bmN0aW9uIHNldEltbWVkaWF0ZShmbikge1xuICAgIHZhciBhcmdzID0gW107XG4gICAgdmFyIGkgPSAxO1xuICAgIHdoaWxlIChhcmd1bWVudHMubGVuZ3RoID4gaSkgYXJncy5wdXNoKGFyZ3VtZW50c1tpKytdKTtcbiAgICBxdWV1ZVsrK2NvdW50ZXJdID0gZnVuY3Rpb24gKCkge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW5ldy1mdW5jXG4gICAgICBpbnZva2UodHlwZW9mIGZuID09ICdmdW5jdGlvbicgPyBmbiA6IEZ1bmN0aW9uKGZuKSwgYXJncyk7XG4gICAgfTtcbiAgICBkZWZlcihjb3VudGVyKTtcbiAgICByZXR1cm4gY291bnRlcjtcbiAgfTtcbiAgY2xlYXJUYXNrID0gZnVuY3Rpb24gY2xlYXJJbW1lZGlhdGUoaWQpIHtcbiAgICBkZWxldGUgcXVldWVbaWRdO1xuICB9O1xuICAvLyBOb2RlLmpzIDAuOC1cbiAgaWYgKHJlcXVpcmUoJy4vX2NvZicpKHByb2Nlc3MpID09ICdwcm9jZXNzJykge1xuICAgIGRlZmVyID0gZnVuY3Rpb24gKGlkKSB7XG4gICAgICBwcm9jZXNzLm5leHRUaWNrKGN0eChydW4sIGlkLCAxKSk7XG4gICAgfTtcbiAgLy8gU3BoZXJlIChKUyBnYW1lIGVuZ2luZSkgRGlzcGF0Y2ggQVBJXG4gIH0gZWxzZSBpZiAoRGlzcGF0Y2ggJiYgRGlzcGF0Y2gubm93KSB7XG4gICAgZGVmZXIgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgIERpc3BhdGNoLm5vdyhjdHgocnVuLCBpZCwgMSkpO1xuICAgIH07XG4gIC8vIEJyb3dzZXJzIHdpdGggTWVzc2FnZUNoYW5uZWwsIGluY2x1ZGVzIFdlYldvcmtlcnNcbiAgfSBlbHNlIGlmIChNZXNzYWdlQ2hhbm5lbCkge1xuICAgIGNoYW5uZWwgPSBuZXcgTWVzc2FnZUNoYW5uZWwoKTtcbiAgICBwb3J0ID0gY2hhbm5lbC5wb3J0MjtcbiAgICBjaGFubmVsLnBvcnQxLm9ubWVzc2FnZSA9IGxpc3RlbmVyO1xuICAgIGRlZmVyID0gY3R4KHBvcnQucG9zdE1lc3NhZ2UsIHBvcnQsIDEpO1xuICAvLyBCcm93c2VycyB3aXRoIHBvc3RNZXNzYWdlLCBza2lwIFdlYldvcmtlcnNcbiAgLy8gSUU4IGhhcyBwb3N0TWVzc2FnZSwgYnV0IGl0J3Mgc3luYyAmIHR5cGVvZiBpdHMgcG9zdE1lc3NhZ2UgaXMgJ29iamVjdCdcbiAgfSBlbHNlIGlmIChnbG9iYWwuYWRkRXZlbnRMaXN0ZW5lciAmJiB0eXBlb2YgcG9zdE1lc3NhZ2UgPT0gJ2Z1bmN0aW9uJyAmJiAhZ2xvYmFsLmltcG9ydFNjcmlwdHMpIHtcbiAgICBkZWZlciA9IGZ1bmN0aW9uIChpZCkge1xuICAgICAgZ2xvYmFsLnBvc3RNZXNzYWdlKGlkICsgJycsICcqJyk7XG4gICAgfTtcbiAgICBnbG9iYWwuYWRkRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsIGxpc3RlbmVyLCBmYWxzZSk7XG4gIC8vIElFOC1cbiAgfSBlbHNlIGlmIChPTlJFQURZU1RBVEVDSEFOR0UgaW4gY2VsKCdzY3JpcHQnKSkge1xuICAgIGRlZmVyID0gZnVuY3Rpb24gKGlkKSB7XG4gICAgICBodG1sLmFwcGVuZENoaWxkKGNlbCgnc2NyaXB0JykpW09OUkVBRFlTVEFURUNIQU5HRV0gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGh0bWwucmVtb3ZlQ2hpbGQodGhpcyk7XG4gICAgICAgIHJ1bi5jYWxsKGlkKTtcbiAgICAgIH07XG4gICAgfTtcbiAgLy8gUmVzdCBvbGQgYnJvd3NlcnNcbiAgfSBlbHNlIHtcbiAgICBkZWZlciA9IGZ1bmN0aW9uIChpZCkge1xuICAgICAgc2V0VGltZW91dChjdHgocnVuLCBpZCwgMSksIDApO1xuICAgIH07XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0ge1xuICBzZXQ6IHNldFRhc2ssXG4gIGNsZWFyOiBjbGVhclRhc2tcbn07XG4iLCJ2YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xudmFyIG1heCA9IE1hdGgubWF4O1xudmFyIG1pbiA9IE1hdGgubWluO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaW5kZXgsIGxlbmd0aCkge1xuICBpbmRleCA9IHRvSW50ZWdlcihpbmRleCk7XG4gIHJldHVybiBpbmRleCA8IDAgPyBtYXgoaW5kZXggKyBsZW5ndGgsIDApIDogbWluKGluZGV4LCBsZW5ndGgpO1xufTtcbiIsIi8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXRvaW5kZXhcbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmIChpdCA9PT0gdW5kZWZpbmVkKSByZXR1cm4gMDtcbiAgdmFyIG51bWJlciA9IHRvSW50ZWdlcihpdCk7XG4gIHZhciBsZW5ndGggPSB0b0xlbmd0aChudW1iZXIpO1xuICBpZiAobnVtYmVyICE9PSBsZW5ndGgpIHRocm93IFJhbmdlRXJyb3IoJ1dyb25nIGxlbmd0aCEnKTtcbiAgcmV0dXJuIGxlbmd0aDtcbn07XG4iLCIvLyA3LjEuNCBUb0ludGVnZXJcbnZhciBjZWlsID0gTWF0aC5jZWlsO1xudmFyIGZsb29yID0gTWF0aC5mbG9vcjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpc05hTihpdCA9ICtpdCkgPyAwIDogKGl0ID4gMCA/IGZsb29yIDogY2VpbCkoaXQpO1xufTtcbiIsIi8vIHRvIGluZGV4ZWQgb2JqZWN0LCB0b09iamVjdCB3aXRoIGZhbGxiYWNrIGZvciBub24tYXJyYXktbGlrZSBFUzMgc3RyaW5nc1xudmFyIElPYmplY3QgPSByZXF1aXJlKCcuL19pb2JqZWN0Jyk7XG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBJT2JqZWN0KGRlZmluZWQoaXQpKTtcbn07XG4iLCIvLyA3LjEuMTUgVG9MZW5ndGhcbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgbWluID0gTWF0aC5taW47XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXQgPiAwID8gbWluKHRvSW50ZWdlcihpdCksIDB4MWZmZmZmZmZmZmZmZmYpIDogMDsgLy8gcG93KDIsIDUzKSAtIDEgPT0gOTAwNzE5OTI1NDc0MDk5MVxufTtcbiIsIi8vIDcuMS4xMyBUb09iamVjdChhcmd1bWVudClcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIE9iamVjdChkZWZpbmVkKGl0KSk7XG59O1xuIiwiLy8gNy4xLjEgVG9QcmltaXRpdmUoaW5wdXQgWywgUHJlZmVycmVkVHlwZV0pXG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbi8vIGluc3RlYWQgb2YgdGhlIEVTNiBzcGVjIHZlcnNpb24sIHdlIGRpZG4ndCBpbXBsZW1lbnQgQEB0b1ByaW1pdGl2ZSBjYXNlXG4vLyBhbmQgdGhlIHNlY29uZCBhcmd1bWVudCAtIGZsYWcgLSBwcmVmZXJyZWQgdHlwZSBpcyBhIHN0cmluZ1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQsIFMpIHtcbiAgaWYgKCFpc09iamVjdChpdCkpIHJldHVybiBpdDtcbiAgdmFyIGZuLCB2YWw7XG4gIGlmIChTICYmIHR5cGVvZiAoZm4gPSBpdC50b1N0cmluZykgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKSByZXR1cm4gdmFsO1xuICBpZiAodHlwZW9mIChmbiA9IGl0LnZhbHVlT2YpID09ICdmdW5jdGlvbicgJiYgIWlzT2JqZWN0KHZhbCA9IGZuLmNhbGwoaXQpKSkgcmV0dXJuIHZhbDtcbiAgaWYgKCFTICYmIHR5cGVvZiAoZm4gPSBpdC50b1N0cmluZykgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKSByZXR1cm4gdmFsO1xuICB0aHJvdyBUeXBlRXJyb3IoXCJDYW4ndCBjb252ZXJ0IG9iamVjdCB0byBwcmltaXRpdmUgdmFsdWVcIik7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuaWYgKHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykpIHtcbiAgdmFyIExJQlJBUlkgPSByZXF1aXJlKCcuL19saWJyYXJ5Jyk7XG4gIHZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbiAgdmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbiAgdmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbiAgdmFyICR0eXBlZCA9IHJlcXVpcmUoJy4vX3R5cGVkJyk7XG4gIHZhciAkYnVmZmVyID0gcmVxdWlyZSgnLi9fdHlwZWQtYnVmZmVyJyk7XG4gIHZhciBjdHggPSByZXF1aXJlKCcuL19jdHgnKTtcbiAgdmFyIGFuSW5zdGFuY2UgPSByZXF1aXJlKCcuL19hbi1pbnN0YW5jZScpO1xuICB2YXIgcHJvcGVydHlEZXNjID0gcmVxdWlyZSgnLi9fcHJvcGVydHktZGVzYycpO1xuICB2YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbiAgdmFyIHJlZGVmaW5lQWxsID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUtYWxsJyk7XG4gIHZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG4gIHZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xuICB2YXIgdG9JbmRleCA9IHJlcXVpcmUoJy4vX3RvLWluZGV4Jyk7XG4gIHZhciB0b0Fic29sdXRlSW5kZXggPSByZXF1aXJlKCcuL190by1hYnNvbHV0ZS1pbmRleCcpO1xuICB2YXIgdG9QcmltaXRpdmUgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKTtcbiAgdmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xuICB2YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4vX2NsYXNzb2YnKTtcbiAgdmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG4gIHZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xuICB2YXIgaXNBcnJheUl0ZXIgPSByZXF1aXJlKCcuL19pcy1hcnJheS1pdGVyJyk7XG4gIHZhciBjcmVhdGUgPSByZXF1aXJlKCcuL19vYmplY3QtY3JlYXRlJyk7XG4gIHZhciBnZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKTtcbiAgdmFyIGdPUE4gPSByZXF1aXJlKCcuL19vYmplY3QtZ29wbicpLmY7XG4gIHZhciBnZXRJdGVyRm4gPSByZXF1aXJlKCcuL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZCcpO1xuICB2YXIgdWlkID0gcmVxdWlyZSgnLi9fdWlkJyk7XG4gIHZhciB3a3MgPSByZXF1aXJlKCcuL193a3MnKTtcbiAgdmFyIGNyZWF0ZUFycmF5TWV0aG9kID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpO1xuICB2YXIgY3JlYXRlQXJyYXlJbmNsdWRlcyA9IHJlcXVpcmUoJy4vX2FycmF5LWluY2x1ZGVzJyk7XG4gIHZhciBzcGVjaWVzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuL19zcGVjaWVzLWNvbnN0cnVjdG9yJyk7XG4gIHZhciBBcnJheUl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vZXM2LmFycmF5Lml0ZXJhdG9yJyk7XG4gIHZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKTtcbiAgdmFyICRpdGVyRGV0ZWN0ID0gcmVxdWlyZSgnLi9faXRlci1kZXRlY3QnKTtcbiAgdmFyIHNldFNwZWNpZXMgPSByZXF1aXJlKCcuL19zZXQtc3BlY2llcycpO1xuICB2YXIgYXJyYXlGaWxsID0gcmVxdWlyZSgnLi9fYXJyYXktZmlsbCcpO1xuICB2YXIgYXJyYXlDb3B5V2l0aGluID0gcmVxdWlyZSgnLi9fYXJyYXktY29weS13aXRoaW4nKTtcbiAgdmFyICREUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xuICB2YXIgJEdPUEQgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpO1xuICB2YXIgZFAgPSAkRFAuZjtcbiAgdmFyIGdPUEQgPSAkR09QRC5mO1xuICB2YXIgUmFuZ2VFcnJvciA9IGdsb2JhbC5SYW5nZUVycm9yO1xuICB2YXIgVHlwZUVycm9yID0gZ2xvYmFsLlR5cGVFcnJvcjtcbiAgdmFyIFVpbnQ4QXJyYXkgPSBnbG9iYWwuVWludDhBcnJheTtcbiAgdmFyIEFSUkFZX0JVRkZFUiA9ICdBcnJheUJ1ZmZlcic7XG4gIHZhciBTSEFSRURfQlVGRkVSID0gJ1NoYXJlZCcgKyBBUlJBWV9CVUZGRVI7XG4gIHZhciBCWVRFU19QRVJfRUxFTUVOVCA9ICdCWVRFU19QRVJfRUxFTUVOVCc7XG4gIHZhciBQUk9UT1RZUEUgPSAncHJvdG90eXBlJztcbiAgdmFyIEFycmF5UHJvdG8gPSBBcnJheVtQUk9UT1RZUEVdO1xuICB2YXIgJEFycmF5QnVmZmVyID0gJGJ1ZmZlci5BcnJheUJ1ZmZlcjtcbiAgdmFyICREYXRhVmlldyA9ICRidWZmZXIuRGF0YVZpZXc7XG4gIHZhciBhcnJheUZvckVhY2ggPSBjcmVhdGVBcnJheU1ldGhvZCgwKTtcbiAgdmFyIGFycmF5RmlsdGVyID0gY3JlYXRlQXJyYXlNZXRob2QoMik7XG4gIHZhciBhcnJheVNvbWUgPSBjcmVhdGVBcnJheU1ldGhvZCgzKTtcbiAgdmFyIGFycmF5RXZlcnkgPSBjcmVhdGVBcnJheU1ldGhvZCg0KTtcbiAgdmFyIGFycmF5RmluZCA9IGNyZWF0ZUFycmF5TWV0aG9kKDUpO1xuICB2YXIgYXJyYXlGaW5kSW5kZXggPSBjcmVhdGVBcnJheU1ldGhvZCg2KTtcbiAgdmFyIGFycmF5SW5jbHVkZXMgPSBjcmVhdGVBcnJheUluY2x1ZGVzKHRydWUpO1xuICB2YXIgYXJyYXlJbmRleE9mID0gY3JlYXRlQXJyYXlJbmNsdWRlcyhmYWxzZSk7XG4gIHZhciBhcnJheVZhbHVlcyA9IEFycmF5SXRlcmF0b3JzLnZhbHVlcztcbiAgdmFyIGFycmF5S2V5cyA9IEFycmF5SXRlcmF0b3JzLmtleXM7XG4gIHZhciBhcnJheUVudHJpZXMgPSBBcnJheUl0ZXJhdG9ycy5lbnRyaWVzO1xuICB2YXIgYXJyYXlMYXN0SW5kZXhPZiA9IEFycmF5UHJvdG8ubGFzdEluZGV4T2Y7XG4gIHZhciBhcnJheVJlZHVjZSA9IEFycmF5UHJvdG8ucmVkdWNlO1xuICB2YXIgYXJyYXlSZWR1Y2VSaWdodCA9IEFycmF5UHJvdG8ucmVkdWNlUmlnaHQ7XG4gIHZhciBhcnJheUpvaW4gPSBBcnJheVByb3RvLmpvaW47XG4gIHZhciBhcnJheVNvcnQgPSBBcnJheVByb3RvLnNvcnQ7XG4gIHZhciBhcnJheVNsaWNlID0gQXJyYXlQcm90by5zbGljZTtcbiAgdmFyIGFycmF5VG9TdHJpbmcgPSBBcnJheVByb3RvLnRvU3RyaW5nO1xuICB2YXIgYXJyYXlUb0xvY2FsZVN0cmluZyA9IEFycmF5UHJvdG8udG9Mb2NhbGVTdHJpbmc7XG4gIHZhciBJVEVSQVRPUiA9IHdrcygnaXRlcmF0b3InKTtcbiAgdmFyIFRBRyA9IHdrcygndG9TdHJpbmdUYWcnKTtcbiAgdmFyIFRZUEVEX0NPTlNUUlVDVE9SID0gdWlkKCd0eXBlZF9jb25zdHJ1Y3RvcicpO1xuICB2YXIgREVGX0NPTlNUUlVDVE9SID0gdWlkKCdkZWZfY29uc3RydWN0b3InKTtcbiAgdmFyIEFMTF9DT05TVFJVQ1RPUlMgPSAkdHlwZWQuQ09OU1RSO1xuICB2YXIgVFlQRURfQVJSQVkgPSAkdHlwZWQuVFlQRUQ7XG4gIHZhciBWSUVXID0gJHR5cGVkLlZJRVc7XG4gIHZhciBXUk9OR19MRU5HVEggPSAnV3JvbmcgbGVuZ3RoISc7XG5cbiAgdmFyICRtYXAgPSBjcmVhdGVBcnJheU1ldGhvZCgxLCBmdW5jdGlvbiAoTywgbGVuZ3RoKSB7XG4gICAgcmV0dXJuIGFsbG9jYXRlKHNwZWNpZXNDb25zdHJ1Y3RvcihPLCBPW0RFRl9DT05TVFJVQ1RPUl0pLCBsZW5ndGgpO1xuICB9KTtcblxuICB2YXIgTElUVExFX0VORElBTiA9IGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkobmV3IFVpbnQxNkFycmF5KFsxXSkuYnVmZmVyKVswXSA9PT0gMTtcbiAgfSk7XG5cbiAgdmFyIEZPUkNFRF9TRVQgPSAhIVVpbnQ4QXJyYXkgJiYgISFVaW50OEFycmF5W1BST1RPVFlQRV0uc2V0ICYmIGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICBuZXcgVWludDhBcnJheSgxKS5zZXQoe30pO1xuICB9KTtcblxuICB2YXIgdG9PZmZzZXQgPSBmdW5jdGlvbiAoaXQsIEJZVEVTKSB7XG4gICAgdmFyIG9mZnNldCA9IHRvSW50ZWdlcihpdCk7XG4gICAgaWYgKG9mZnNldCA8IDAgfHwgb2Zmc2V0ICUgQllURVMpIHRocm93IFJhbmdlRXJyb3IoJ1dyb25nIG9mZnNldCEnKTtcbiAgICByZXR1cm4gb2Zmc2V0O1xuICB9O1xuXG4gIHZhciB2YWxpZGF0ZSA9IGZ1bmN0aW9uIChpdCkge1xuICAgIGlmIChpc09iamVjdChpdCkgJiYgVFlQRURfQVJSQVkgaW4gaXQpIHJldHVybiBpdDtcbiAgICB0aHJvdyBUeXBlRXJyb3IoaXQgKyAnIGlzIG5vdCBhIHR5cGVkIGFycmF5IScpO1xuICB9O1xuXG4gIHZhciBhbGxvY2F0ZSA9IGZ1bmN0aW9uIChDLCBsZW5ndGgpIHtcbiAgICBpZiAoIShpc09iamVjdChDKSAmJiBUWVBFRF9DT05TVFJVQ1RPUiBpbiBDKSkge1xuICAgICAgdGhyb3cgVHlwZUVycm9yKCdJdCBpcyBub3QgYSB0eXBlZCBhcnJheSBjb25zdHJ1Y3RvciEnKTtcbiAgICB9IHJldHVybiBuZXcgQyhsZW5ndGgpO1xuICB9O1xuXG4gIHZhciBzcGVjaWVzRnJvbUxpc3QgPSBmdW5jdGlvbiAoTywgbGlzdCkge1xuICAgIHJldHVybiBmcm9tTGlzdChzcGVjaWVzQ29uc3RydWN0b3IoTywgT1tERUZfQ09OU1RSVUNUT1JdKSwgbGlzdCk7XG4gIH07XG5cbiAgdmFyIGZyb21MaXN0ID0gZnVuY3Rpb24gKEMsIGxpc3QpIHtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIHZhciBsZW5ndGggPSBsaXN0Lmxlbmd0aDtcbiAgICB2YXIgcmVzdWx0ID0gYWxsb2NhdGUoQywgbGVuZ3RoKTtcbiAgICB3aGlsZSAobGVuZ3RoID4gaW5kZXgpIHJlc3VsdFtpbmRleF0gPSBsaXN0W2luZGV4KytdO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG5cbiAgdmFyIGFkZEdldHRlciA9IGZ1bmN0aW9uIChpdCwga2V5LCBpbnRlcm5hbCkge1xuICAgIGRQKGl0LCBrZXksIHsgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzLl9kW2ludGVybmFsXTsgfSB9KTtcbiAgfTtcblxuICB2YXIgJGZyb20gPSBmdW5jdGlvbiBmcm9tKHNvdXJjZSAvKiAsIG1hcGZuLCB0aGlzQXJnICovKSB7XG4gICAgdmFyIE8gPSB0b09iamVjdChzb3VyY2UpO1xuICAgIHZhciBhTGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICB2YXIgbWFwZm4gPSBhTGVuID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZDtcbiAgICB2YXIgbWFwcGluZyA9IG1hcGZuICE9PSB1bmRlZmluZWQ7XG4gICAgdmFyIGl0ZXJGbiA9IGdldEl0ZXJGbihPKTtcbiAgICB2YXIgaSwgbGVuZ3RoLCB2YWx1ZXMsIHJlc3VsdCwgc3RlcCwgaXRlcmF0b3I7XG4gICAgaWYgKGl0ZXJGbiAhPSB1bmRlZmluZWQgJiYgIWlzQXJyYXlJdGVyKGl0ZXJGbikpIHtcbiAgICAgIGZvciAoaXRlcmF0b3IgPSBpdGVyRm4uY2FsbChPKSwgdmFsdWVzID0gW10sIGkgPSAwOyAhKHN0ZXAgPSBpdGVyYXRvci5uZXh0KCkpLmRvbmU7IGkrKykge1xuICAgICAgICB2YWx1ZXMucHVzaChzdGVwLnZhbHVlKTtcbiAgICAgIH0gTyA9IHZhbHVlcztcbiAgICB9XG4gICAgaWYgKG1hcHBpbmcgJiYgYUxlbiA+IDIpIG1hcGZuID0gY3R4KG1hcGZuLCBhcmd1bWVudHNbMl0sIDIpO1xuICAgIGZvciAoaSA9IDAsIGxlbmd0aCA9IHRvTGVuZ3RoKE8ubGVuZ3RoKSwgcmVzdWx0ID0gYWxsb2NhdGUodGhpcywgbGVuZ3RoKTsgbGVuZ3RoID4gaTsgaSsrKSB7XG4gICAgICByZXN1bHRbaV0gPSBtYXBwaW5nID8gbWFwZm4oT1tpXSwgaSkgOiBPW2ldO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xuXG4gIHZhciAkb2YgPSBmdW5jdGlvbiBvZigvKiAuLi5pdGVtcyAqLykge1xuICAgIHZhciBpbmRleCA9IDA7XG4gICAgdmFyIGxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgdmFyIHJlc3VsdCA9IGFsbG9jYXRlKHRoaXMsIGxlbmd0aCk7XG4gICAgd2hpbGUgKGxlbmd0aCA+IGluZGV4KSByZXN1bHRbaW5kZXhdID0gYXJndW1lbnRzW2luZGV4KytdO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG5cbiAgLy8gaU9TIFNhZmFyaSA2LnggZmFpbHMgaGVyZVxuICB2YXIgVE9fTE9DQUxFX0JVRyA9ICEhVWludDhBcnJheSAmJiBmYWlscyhmdW5jdGlvbiAoKSB7IGFycmF5VG9Mb2NhbGVTdHJpbmcuY2FsbChuZXcgVWludDhBcnJheSgxKSk7IH0pO1xuXG4gIHZhciAkdG9Mb2NhbGVTdHJpbmcgPSBmdW5jdGlvbiB0b0xvY2FsZVN0cmluZygpIHtcbiAgICByZXR1cm4gYXJyYXlUb0xvY2FsZVN0cmluZy5hcHBseShUT19MT0NBTEVfQlVHID8gYXJyYXlTbGljZS5jYWxsKHZhbGlkYXRlKHRoaXMpKSA6IHZhbGlkYXRlKHRoaXMpLCBhcmd1bWVudHMpO1xuICB9O1xuXG4gIHZhciBwcm90byA9IHtcbiAgICBjb3B5V2l0aGluOiBmdW5jdGlvbiBjb3B5V2l0aGluKHRhcmdldCwgc3RhcnQgLyogLCBlbmQgKi8pIHtcbiAgICAgIHJldHVybiBhcnJheUNvcHlXaXRoaW4uY2FsbCh2YWxpZGF0ZSh0aGlzKSwgdGFyZ2V0LCBzdGFydCwgYXJndW1lbnRzLmxlbmd0aCA+IDIgPyBhcmd1bWVudHNbMl0gOiB1bmRlZmluZWQpO1xuICAgIH0sXG4gICAgZXZlcnk6IGZ1bmN0aW9uIGV2ZXJ5KGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKSB7XG4gICAgICByZXR1cm4gYXJyYXlFdmVyeSh2YWxpZGF0ZSh0aGlzKSwgY2FsbGJhY2tmbiwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICAgIH0sXG4gICAgZmlsbDogZnVuY3Rpb24gZmlsbCh2YWx1ZSAvKiAsIHN0YXJ0LCBlbmQgKi8pIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuICAgICAgcmV0dXJuIGFycmF5RmlsbC5hcHBseSh2YWxpZGF0ZSh0aGlzKSwgYXJndW1lbnRzKTtcbiAgICB9LFxuICAgIGZpbHRlcjogZnVuY3Rpb24gZmlsdGVyKGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKSB7XG4gICAgICByZXR1cm4gc3BlY2llc0Zyb21MaXN0KHRoaXMsIGFycmF5RmlsdGVyKHZhbGlkYXRlKHRoaXMpLCBjYWxsYmFja2ZuLFxuICAgICAgICBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCkpO1xuICAgIH0sXG4gICAgZmluZDogZnVuY3Rpb24gZmluZChwcmVkaWNhdGUgLyogLCB0aGlzQXJnICovKSB7XG4gICAgICByZXR1cm4gYXJyYXlGaW5kKHZhbGlkYXRlKHRoaXMpLCBwcmVkaWNhdGUsIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgICB9LFxuICAgIGZpbmRJbmRleDogZnVuY3Rpb24gZmluZEluZGV4KHByZWRpY2F0ZSAvKiAsIHRoaXNBcmcgKi8pIHtcbiAgICAgIHJldHVybiBhcnJheUZpbmRJbmRleCh2YWxpZGF0ZSh0aGlzKSwgcHJlZGljYXRlLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7XG4gICAgfSxcbiAgICBmb3JFYWNoOiBmdW5jdGlvbiBmb3JFYWNoKGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKSB7XG4gICAgICBhcnJheUZvckVhY2godmFsaWRhdGUodGhpcyksIGNhbGxiYWNrZm4sIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgICB9LFxuICAgIGluZGV4T2Y6IGZ1bmN0aW9uIGluZGV4T2Yoc2VhcmNoRWxlbWVudCAvKiAsIGZyb21JbmRleCAqLykge1xuICAgICAgcmV0dXJuIGFycmF5SW5kZXhPZih2YWxpZGF0ZSh0aGlzKSwgc2VhcmNoRWxlbWVudCwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICAgIH0sXG4gICAgaW5jbHVkZXM6IGZ1bmN0aW9uIGluY2x1ZGVzKHNlYXJjaEVsZW1lbnQgLyogLCBmcm9tSW5kZXggKi8pIHtcbiAgICAgIHJldHVybiBhcnJheUluY2x1ZGVzKHZhbGlkYXRlKHRoaXMpLCBzZWFyY2hFbGVtZW50LCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7XG4gICAgfSxcbiAgICBqb2luOiBmdW5jdGlvbiBqb2luKHNlcGFyYXRvcikgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gICAgICByZXR1cm4gYXJyYXlKb2luLmFwcGx5KHZhbGlkYXRlKHRoaXMpLCBhcmd1bWVudHMpO1xuICAgIH0sXG4gICAgbGFzdEluZGV4T2Y6IGZ1bmN0aW9uIGxhc3RJbmRleE9mKHNlYXJjaEVsZW1lbnQgLyogLCBmcm9tSW5kZXggKi8pIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuICAgICAgcmV0dXJuIGFycmF5TGFzdEluZGV4T2YuYXBwbHkodmFsaWRhdGUodGhpcyksIGFyZ3VtZW50cyk7XG4gICAgfSxcbiAgICBtYXA6IGZ1bmN0aW9uIG1hcChtYXBmbiAvKiAsIHRoaXNBcmcgKi8pIHtcbiAgICAgIHJldHVybiAkbWFwKHZhbGlkYXRlKHRoaXMpLCBtYXBmbiwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICAgIH0sXG4gICAgcmVkdWNlOiBmdW5jdGlvbiByZWR1Y2UoY2FsbGJhY2tmbiAvKiAsIGluaXRpYWxWYWx1ZSAqLykgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gICAgICByZXR1cm4gYXJyYXlSZWR1Y2UuYXBwbHkodmFsaWRhdGUodGhpcyksIGFyZ3VtZW50cyk7XG4gICAgfSxcbiAgICByZWR1Y2VSaWdodDogZnVuY3Rpb24gcmVkdWNlUmlnaHQoY2FsbGJhY2tmbiAvKiAsIGluaXRpYWxWYWx1ZSAqLykgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gICAgICByZXR1cm4gYXJyYXlSZWR1Y2VSaWdodC5hcHBseSh2YWxpZGF0ZSh0aGlzKSwgYXJndW1lbnRzKTtcbiAgICB9LFxuICAgIHJldmVyc2U6IGZ1bmN0aW9uIHJldmVyc2UoKSB7XG4gICAgICB2YXIgdGhhdCA9IHRoaXM7XG4gICAgICB2YXIgbGVuZ3RoID0gdmFsaWRhdGUodGhhdCkubGVuZ3RoO1xuICAgICAgdmFyIG1pZGRsZSA9IE1hdGguZmxvb3IobGVuZ3RoIC8gMik7XG4gICAgICB2YXIgaW5kZXggPSAwO1xuICAgICAgdmFyIHZhbHVlO1xuICAgICAgd2hpbGUgKGluZGV4IDwgbWlkZGxlKSB7XG4gICAgICAgIHZhbHVlID0gdGhhdFtpbmRleF07XG4gICAgICAgIHRoYXRbaW5kZXgrK10gPSB0aGF0Wy0tbGVuZ3RoXTtcbiAgICAgICAgdGhhdFtsZW5ndGhdID0gdmFsdWU7XG4gICAgICB9IHJldHVybiB0aGF0O1xuICAgIH0sXG4gICAgc29tZTogZnVuY3Rpb24gc29tZShjYWxsYmFja2ZuIC8qICwgdGhpc0FyZyAqLykge1xuICAgICAgcmV0dXJuIGFycmF5U29tZSh2YWxpZGF0ZSh0aGlzKSwgY2FsbGJhY2tmbiwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICAgIH0sXG4gICAgc29ydDogZnVuY3Rpb24gc29ydChjb21wYXJlZm4pIHtcbiAgICAgIHJldHVybiBhcnJheVNvcnQuY2FsbCh2YWxpZGF0ZSh0aGlzKSwgY29tcGFyZWZuKTtcbiAgICB9LFxuICAgIHN1YmFycmF5OiBmdW5jdGlvbiBzdWJhcnJheShiZWdpbiwgZW5kKSB7XG4gICAgICB2YXIgTyA9IHZhbGlkYXRlKHRoaXMpO1xuICAgICAgdmFyIGxlbmd0aCA9IE8ubGVuZ3RoO1xuICAgICAgdmFyICRiZWdpbiA9IHRvQWJzb2x1dGVJbmRleChiZWdpbiwgbGVuZ3RoKTtcbiAgICAgIHJldHVybiBuZXcgKHNwZWNpZXNDb25zdHJ1Y3RvcihPLCBPW0RFRl9DT05TVFJVQ1RPUl0pKShcbiAgICAgICAgTy5idWZmZXIsXG4gICAgICAgIE8uYnl0ZU9mZnNldCArICRiZWdpbiAqIE8uQllURVNfUEVSX0VMRU1FTlQsXG4gICAgICAgIHRvTGVuZ3RoKChlbmQgPT09IHVuZGVmaW5lZCA/IGxlbmd0aCA6IHRvQWJzb2x1dGVJbmRleChlbmQsIGxlbmd0aCkpIC0gJGJlZ2luKVxuICAgICAgKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyICRzbGljZSA9IGZ1bmN0aW9uIHNsaWNlKHN0YXJ0LCBlbmQpIHtcbiAgICByZXR1cm4gc3BlY2llc0Zyb21MaXN0KHRoaXMsIGFycmF5U2xpY2UuY2FsbCh2YWxpZGF0ZSh0aGlzKSwgc3RhcnQsIGVuZCkpO1xuICB9O1xuXG4gIHZhciAkc2V0ID0gZnVuY3Rpb24gc2V0KGFycmF5TGlrZSAvKiAsIG9mZnNldCAqLykge1xuICAgIHZhbGlkYXRlKHRoaXMpO1xuICAgIHZhciBvZmZzZXQgPSB0b09mZnNldChhcmd1bWVudHNbMV0sIDEpO1xuICAgIHZhciBsZW5ndGggPSB0aGlzLmxlbmd0aDtcbiAgICB2YXIgc3JjID0gdG9PYmplY3QoYXJyYXlMaWtlKTtcbiAgICB2YXIgbGVuID0gdG9MZW5ndGgoc3JjLmxlbmd0aCk7XG4gICAgdmFyIGluZGV4ID0gMDtcbiAgICBpZiAobGVuICsgb2Zmc2V0ID4gbGVuZ3RoKSB0aHJvdyBSYW5nZUVycm9yKFdST05HX0xFTkdUSCk7XG4gICAgd2hpbGUgKGluZGV4IDwgbGVuKSB0aGlzW29mZnNldCArIGluZGV4XSA9IHNyY1tpbmRleCsrXTtcbiAgfTtcblxuICB2YXIgJGl0ZXJhdG9ycyA9IHtcbiAgICBlbnRyaWVzOiBmdW5jdGlvbiBlbnRyaWVzKCkge1xuICAgICAgcmV0dXJuIGFycmF5RW50cmllcy5jYWxsKHZhbGlkYXRlKHRoaXMpKTtcbiAgICB9LFxuICAgIGtleXM6IGZ1bmN0aW9uIGtleXMoKSB7XG4gICAgICByZXR1cm4gYXJyYXlLZXlzLmNhbGwodmFsaWRhdGUodGhpcykpO1xuICAgIH0sXG4gICAgdmFsdWVzOiBmdW5jdGlvbiB2YWx1ZXMoKSB7XG4gICAgICByZXR1cm4gYXJyYXlWYWx1ZXMuY2FsbCh2YWxpZGF0ZSh0aGlzKSk7XG4gICAgfVxuICB9O1xuXG4gIHZhciBpc1RBSW5kZXggPSBmdW5jdGlvbiAodGFyZ2V0LCBrZXkpIHtcbiAgICByZXR1cm4gaXNPYmplY3QodGFyZ2V0KVxuICAgICAgJiYgdGFyZ2V0W1RZUEVEX0FSUkFZXVxuICAgICAgJiYgdHlwZW9mIGtleSAhPSAnc3ltYm9sJ1xuICAgICAgJiYga2V5IGluIHRhcmdldFxuICAgICAgJiYgU3RyaW5nKCtrZXkpID09IFN0cmluZyhrZXkpO1xuICB9O1xuICB2YXIgJGdldERlc2MgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBrZXkpIHtcbiAgICByZXR1cm4gaXNUQUluZGV4KHRhcmdldCwga2V5ID0gdG9QcmltaXRpdmUoa2V5LCB0cnVlKSlcbiAgICAgID8gcHJvcGVydHlEZXNjKDIsIHRhcmdldFtrZXldKVxuICAgICAgOiBnT1BEKHRhcmdldCwga2V5KTtcbiAgfTtcbiAgdmFyICRzZXREZXNjID0gZnVuY3Rpb24gZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIGRlc2MpIHtcbiAgICBpZiAoaXNUQUluZGV4KHRhcmdldCwga2V5ID0gdG9QcmltaXRpdmUoa2V5LCB0cnVlKSlcbiAgICAgICYmIGlzT2JqZWN0KGRlc2MpXG4gICAgICAmJiBoYXMoZGVzYywgJ3ZhbHVlJylcbiAgICAgICYmICFoYXMoZGVzYywgJ2dldCcpXG4gICAgICAmJiAhaGFzKGRlc2MsICdzZXQnKVxuICAgICAgLy8gVE9ETzogYWRkIHZhbGlkYXRpb24gZGVzY3JpcHRvciB3L28gY2FsbGluZyBhY2Nlc3NvcnNcbiAgICAgICYmICFkZXNjLmNvbmZpZ3VyYWJsZVxuICAgICAgJiYgKCFoYXMoZGVzYywgJ3dyaXRhYmxlJykgfHwgZGVzYy53cml0YWJsZSlcbiAgICAgICYmICghaGFzKGRlc2MsICdlbnVtZXJhYmxlJykgfHwgZGVzYy5lbnVtZXJhYmxlKVxuICAgICkge1xuICAgICAgdGFyZ2V0W2tleV0gPSBkZXNjLnZhbHVlO1xuICAgICAgcmV0dXJuIHRhcmdldDtcbiAgICB9IHJldHVybiBkUCh0YXJnZXQsIGtleSwgZGVzYyk7XG4gIH07XG5cbiAgaWYgKCFBTExfQ09OU1RSVUNUT1JTKSB7XG4gICAgJEdPUEQuZiA9ICRnZXREZXNjO1xuICAgICREUC5mID0gJHNldERlc2M7XG4gIH1cblxuICAkZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFBTExfQ09OU1RSVUNUT1JTLCAnT2JqZWN0Jywge1xuICAgIGdldE93blByb3BlcnR5RGVzY3JpcHRvcjogJGdldERlc2MsXG4gICAgZGVmaW5lUHJvcGVydHk6ICRzZXREZXNjXG4gIH0pO1xuXG4gIGlmIChmYWlscyhmdW5jdGlvbiAoKSB7IGFycmF5VG9TdHJpbmcuY2FsbCh7fSk7IH0pKSB7XG4gICAgYXJyYXlUb1N0cmluZyA9IGFycmF5VG9Mb2NhbGVTdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICAgIHJldHVybiBhcnJheUpvaW4uY2FsbCh0aGlzKTtcbiAgICB9O1xuICB9XG5cbiAgdmFyICRUeXBlZEFycmF5UHJvdG90eXBlJCA9IHJlZGVmaW5lQWxsKHt9LCBwcm90byk7XG4gIHJlZGVmaW5lQWxsKCRUeXBlZEFycmF5UHJvdG90eXBlJCwgJGl0ZXJhdG9ycyk7XG4gIGhpZGUoJFR5cGVkQXJyYXlQcm90b3R5cGUkLCBJVEVSQVRPUiwgJGl0ZXJhdG9ycy52YWx1ZXMpO1xuICByZWRlZmluZUFsbCgkVHlwZWRBcnJheVByb3RvdHlwZSQsIHtcbiAgICBzbGljZTogJHNsaWNlLFxuICAgIHNldDogJHNldCxcbiAgICBjb25zdHJ1Y3RvcjogZnVuY3Rpb24gKCkgeyAvKiBub29wICovIH0sXG4gICAgdG9TdHJpbmc6IGFycmF5VG9TdHJpbmcsXG4gICAgdG9Mb2NhbGVTdHJpbmc6ICR0b0xvY2FsZVN0cmluZ1xuICB9KTtcbiAgYWRkR2V0dGVyKCRUeXBlZEFycmF5UHJvdG90eXBlJCwgJ2J1ZmZlcicsICdiJyk7XG4gIGFkZEdldHRlcigkVHlwZWRBcnJheVByb3RvdHlwZSQsICdieXRlT2Zmc2V0JywgJ28nKTtcbiAgYWRkR2V0dGVyKCRUeXBlZEFycmF5UHJvdG90eXBlJCwgJ2J5dGVMZW5ndGgnLCAnbCcpO1xuICBhZGRHZXR0ZXIoJFR5cGVkQXJyYXlQcm90b3R5cGUkLCAnbGVuZ3RoJywgJ2UnKTtcbiAgZFAoJFR5cGVkQXJyYXlQcm90b3R5cGUkLCBUQUcsIHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXNbVFlQRURfQVJSQVldOyB9XG4gIH0pO1xuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBtYXgtc3RhdGVtZW50c1xuICBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChLRVksIEJZVEVTLCB3cmFwcGVyLCBDTEFNUEVEKSB7XG4gICAgQ0xBTVBFRCA9ICEhQ0xBTVBFRDtcbiAgICB2YXIgTkFNRSA9IEtFWSArIChDTEFNUEVEID8gJ0NsYW1wZWQnIDogJycpICsgJ0FycmF5JztcbiAgICB2YXIgR0VUVEVSID0gJ2dldCcgKyBLRVk7XG4gICAgdmFyIFNFVFRFUiA9ICdzZXQnICsgS0VZO1xuICAgIHZhciBUeXBlZEFycmF5ID0gZ2xvYmFsW05BTUVdO1xuICAgIHZhciBCYXNlID0gVHlwZWRBcnJheSB8fCB7fTtcbiAgICB2YXIgVEFDID0gVHlwZWRBcnJheSAmJiBnZXRQcm90b3R5cGVPZihUeXBlZEFycmF5KTtcbiAgICB2YXIgRk9SQ0VEID0gIVR5cGVkQXJyYXkgfHwgISR0eXBlZC5BQlY7XG4gICAgdmFyIE8gPSB7fTtcbiAgICB2YXIgVHlwZWRBcnJheVByb3RvdHlwZSA9IFR5cGVkQXJyYXkgJiYgVHlwZWRBcnJheVtQUk9UT1RZUEVdO1xuICAgIHZhciBnZXR0ZXIgPSBmdW5jdGlvbiAodGhhdCwgaW5kZXgpIHtcbiAgICAgIHZhciBkYXRhID0gdGhhdC5fZDtcbiAgICAgIHJldHVybiBkYXRhLnZbR0VUVEVSXShpbmRleCAqIEJZVEVTICsgZGF0YS5vLCBMSVRUTEVfRU5ESUFOKTtcbiAgICB9O1xuICAgIHZhciBzZXR0ZXIgPSBmdW5jdGlvbiAodGhhdCwgaW5kZXgsIHZhbHVlKSB7XG4gICAgICB2YXIgZGF0YSA9IHRoYXQuX2Q7XG4gICAgICBpZiAoQ0xBTVBFRCkgdmFsdWUgPSAodmFsdWUgPSBNYXRoLnJvdW5kKHZhbHVlKSkgPCAwID8gMCA6IHZhbHVlID4gMHhmZiA/IDB4ZmYgOiB2YWx1ZSAmIDB4ZmY7XG4gICAgICBkYXRhLnZbU0VUVEVSXShpbmRleCAqIEJZVEVTICsgZGF0YS5vLCB2YWx1ZSwgTElUVExFX0VORElBTik7XG4gICAgfTtcbiAgICB2YXIgYWRkRWxlbWVudCA9IGZ1bmN0aW9uICh0aGF0LCBpbmRleCkge1xuICAgICAgZFAodGhhdCwgaW5kZXgsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuIGdldHRlcih0aGlzLCBpbmRleCk7XG4gICAgICAgIH0sXG4gICAgICAgIHNldDogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuIHNldHRlcih0aGlzLCBpbmRleCwgdmFsdWUpO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlXG4gICAgICB9KTtcbiAgICB9O1xuICAgIGlmIChGT1JDRUQpIHtcbiAgICAgIFR5cGVkQXJyYXkgPSB3cmFwcGVyKGZ1bmN0aW9uICh0aGF0LCBkYXRhLCAkb2Zmc2V0LCAkbGVuZ3RoKSB7XG4gICAgICAgIGFuSW5zdGFuY2UodGhhdCwgVHlwZWRBcnJheSwgTkFNRSwgJ19kJyk7XG4gICAgICAgIHZhciBpbmRleCA9IDA7XG4gICAgICAgIHZhciBvZmZzZXQgPSAwO1xuICAgICAgICB2YXIgYnVmZmVyLCBieXRlTGVuZ3RoLCBsZW5ndGgsIGtsYXNzO1xuICAgICAgICBpZiAoIWlzT2JqZWN0KGRhdGEpKSB7XG4gICAgICAgICAgbGVuZ3RoID0gdG9JbmRleChkYXRhKTtcbiAgICAgICAgICBieXRlTGVuZ3RoID0gbGVuZ3RoICogQllURVM7XG4gICAgICAgICAgYnVmZmVyID0gbmV3ICRBcnJheUJ1ZmZlcihieXRlTGVuZ3RoKTtcbiAgICAgICAgfSBlbHNlIGlmIChkYXRhIGluc3RhbmNlb2YgJEFycmF5QnVmZmVyIHx8IChrbGFzcyA9IGNsYXNzb2YoZGF0YSkpID09IEFSUkFZX0JVRkZFUiB8fCBrbGFzcyA9PSBTSEFSRURfQlVGRkVSKSB7XG4gICAgICAgICAgYnVmZmVyID0gZGF0YTtcbiAgICAgICAgICBvZmZzZXQgPSB0b09mZnNldCgkb2Zmc2V0LCBCWVRFUyk7XG4gICAgICAgICAgdmFyICRsZW4gPSBkYXRhLmJ5dGVMZW5ndGg7XG4gICAgICAgICAgaWYgKCRsZW5ndGggPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgaWYgKCRsZW4gJSBCWVRFUykgdGhyb3cgUmFuZ2VFcnJvcihXUk9OR19MRU5HVEgpO1xuICAgICAgICAgICAgYnl0ZUxlbmd0aCA9ICRsZW4gLSBvZmZzZXQ7XG4gICAgICAgICAgICBpZiAoYnl0ZUxlbmd0aCA8IDApIHRocm93IFJhbmdlRXJyb3IoV1JPTkdfTEVOR1RIKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYnl0ZUxlbmd0aCA9IHRvTGVuZ3RoKCRsZW5ndGgpICogQllURVM7XG4gICAgICAgICAgICBpZiAoYnl0ZUxlbmd0aCArIG9mZnNldCA+ICRsZW4pIHRocm93IFJhbmdlRXJyb3IoV1JPTkdfTEVOR1RIKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgbGVuZ3RoID0gYnl0ZUxlbmd0aCAvIEJZVEVTO1xuICAgICAgICB9IGVsc2UgaWYgKFRZUEVEX0FSUkFZIGluIGRhdGEpIHtcbiAgICAgICAgICByZXR1cm4gZnJvbUxpc3QoVHlwZWRBcnJheSwgZGF0YSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuICRmcm9tLmNhbGwoVHlwZWRBcnJheSwgZGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgaGlkZSh0aGF0LCAnX2QnLCB7XG4gICAgICAgICAgYjogYnVmZmVyLFxuICAgICAgICAgIG86IG9mZnNldCxcbiAgICAgICAgICBsOiBieXRlTGVuZ3RoLFxuICAgICAgICAgIGU6IGxlbmd0aCxcbiAgICAgICAgICB2OiBuZXcgJERhdGFWaWV3KGJ1ZmZlcilcbiAgICAgICAgfSk7XG4gICAgICAgIHdoaWxlIChpbmRleCA8IGxlbmd0aCkgYWRkRWxlbWVudCh0aGF0LCBpbmRleCsrKTtcbiAgICAgIH0pO1xuICAgICAgVHlwZWRBcnJheVByb3RvdHlwZSA9IFR5cGVkQXJyYXlbUFJPVE9UWVBFXSA9IGNyZWF0ZSgkVHlwZWRBcnJheVByb3RvdHlwZSQpO1xuICAgICAgaGlkZShUeXBlZEFycmF5UHJvdG90eXBlLCAnY29uc3RydWN0b3InLCBUeXBlZEFycmF5KTtcbiAgICB9IGVsc2UgaWYgKCFmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgICBUeXBlZEFycmF5KDEpO1xuICAgIH0pIHx8ICFmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgICBuZXcgVHlwZWRBcnJheSgtMSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3XG4gICAgfSkgfHwgISRpdGVyRGV0ZWN0KGZ1bmN0aW9uIChpdGVyKSB7XG4gICAgICBuZXcgVHlwZWRBcnJheSgpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ld1xuICAgICAgbmV3IFR5cGVkQXJyYXkobnVsbCk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3XG4gICAgICBuZXcgVHlwZWRBcnJheSgxLjUpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ld1xuICAgICAgbmV3IFR5cGVkQXJyYXkoaXRlcik7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3XG4gICAgfSwgdHJ1ZSkpIHtcbiAgICAgIFR5cGVkQXJyYXkgPSB3cmFwcGVyKGZ1bmN0aW9uICh0aGF0LCBkYXRhLCAkb2Zmc2V0LCAkbGVuZ3RoKSB7XG4gICAgICAgIGFuSW5zdGFuY2UodGhhdCwgVHlwZWRBcnJheSwgTkFNRSk7XG4gICAgICAgIHZhciBrbGFzcztcbiAgICAgICAgLy8gYHdzYCBtb2R1bGUgYnVnLCB0ZW1wb3JhcmlseSByZW1vdmUgdmFsaWRhdGlvbiBsZW5ndGggZm9yIFVpbnQ4QXJyYXlcbiAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL3dlYnNvY2tldHMvd3MvcHVsbC82NDVcbiAgICAgICAgaWYgKCFpc09iamVjdChkYXRhKSkgcmV0dXJuIG5ldyBCYXNlKHRvSW5kZXgoZGF0YSkpO1xuICAgICAgICBpZiAoZGF0YSBpbnN0YW5jZW9mICRBcnJheUJ1ZmZlciB8fCAoa2xhc3MgPSBjbGFzc29mKGRhdGEpKSA9PSBBUlJBWV9CVUZGRVIgfHwga2xhc3MgPT0gU0hBUkVEX0JVRkZFUikge1xuICAgICAgICAgIHJldHVybiAkbGVuZ3RoICE9PSB1bmRlZmluZWRcbiAgICAgICAgICAgID8gbmV3IEJhc2UoZGF0YSwgdG9PZmZzZXQoJG9mZnNldCwgQllURVMpLCAkbGVuZ3RoKVxuICAgICAgICAgICAgOiAkb2Zmc2V0ICE9PSB1bmRlZmluZWRcbiAgICAgICAgICAgICAgPyBuZXcgQmFzZShkYXRhLCB0b09mZnNldCgkb2Zmc2V0LCBCWVRFUykpXG4gICAgICAgICAgICAgIDogbmV3IEJhc2UoZGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKFRZUEVEX0FSUkFZIGluIGRhdGEpIHJldHVybiBmcm9tTGlzdChUeXBlZEFycmF5LCBkYXRhKTtcbiAgICAgICAgcmV0dXJuICRmcm9tLmNhbGwoVHlwZWRBcnJheSwgZGF0YSk7XG4gICAgICB9KTtcbiAgICAgIGFycmF5Rm9yRWFjaChUQUMgIT09IEZ1bmN0aW9uLnByb3RvdHlwZSA/IGdPUE4oQmFzZSkuY29uY2F0KGdPUE4oVEFDKSkgOiBnT1BOKEJhc2UpLCBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIGlmICghKGtleSBpbiBUeXBlZEFycmF5KSkgaGlkZShUeXBlZEFycmF5LCBrZXksIEJhc2Vba2V5XSk7XG4gICAgICB9KTtcbiAgICAgIFR5cGVkQXJyYXlbUFJPVE9UWVBFXSA9IFR5cGVkQXJyYXlQcm90b3R5cGU7XG4gICAgICBpZiAoIUxJQlJBUlkpIFR5cGVkQXJyYXlQcm90b3R5cGUuY29uc3RydWN0b3IgPSBUeXBlZEFycmF5O1xuICAgIH1cbiAgICB2YXIgJG5hdGl2ZUl0ZXJhdG9yID0gVHlwZWRBcnJheVByb3RvdHlwZVtJVEVSQVRPUl07XG4gICAgdmFyIENPUlJFQ1RfSVRFUl9OQU1FID0gISEkbmF0aXZlSXRlcmF0b3JcbiAgICAgICYmICgkbmF0aXZlSXRlcmF0b3IubmFtZSA9PSAndmFsdWVzJyB8fCAkbmF0aXZlSXRlcmF0b3IubmFtZSA9PSB1bmRlZmluZWQpO1xuICAgIHZhciAkaXRlcmF0b3IgPSAkaXRlcmF0b3JzLnZhbHVlcztcbiAgICBoaWRlKFR5cGVkQXJyYXksIFRZUEVEX0NPTlNUUlVDVE9SLCB0cnVlKTtcbiAgICBoaWRlKFR5cGVkQXJyYXlQcm90b3R5cGUsIFRZUEVEX0FSUkFZLCBOQU1FKTtcbiAgICBoaWRlKFR5cGVkQXJyYXlQcm90b3R5cGUsIFZJRVcsIHRydWUpO1xuICAgIGhpZGUoVHlwZWRBcnJheVByb3RvdHlwZSwgREVGX0NPTlNUUlVDVE9SLCBUeXBlZEFycmF5KTtcblxuICAgIGlmIChDTEFNUEVEID8gbmV3IFR5cGVkQXJyYXkoMSlbVEFHXSAhPSBOQU1FIDogIShUQUcgaW4gVHlwZWRBcnJheVByb3RvdHlwZSkpIHtcbiAgICAgIGRQKFR5cGVkQXJyYXlQcm90b3R5cGUsIFRBRywge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIE5BTUU7IH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIE9bTkFNRV0gPSBUeXBlZEFycmF5O1xuXG4gICAgJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LlcgKyAkZXhwb3J0LkYgKiAoVHlwZWRBcnJheSAhPSBCYXNlKSwgTyk7XG5cbiAgICAkZXhwb3J0KCRleHBvcnQuUywgTkFNRSwge1xuICAgICAgQllURVNfUEVSX0VMRU1FTlQ6IEJZVEVTXG4gICAgfSk7XG5cbiAgICAkZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIGZhaWxzKGZ1bmN0aW9uICgpIHsgQmFzZS5vZi5jYWxsKFR5cGVkQXJyYXksIDEpOyB9KSwgTkFNRSwge1xuICAgICAgZnJvbTogJGZyb20sXG4gICAgICBvZjogJG9mXG4gICAgfSk7XG5cbiAgICBpZiAoIShCWVRFU19QRVJfRUxFTUVOVCBpbiBUeXBlZEFycmF5UHJvdG90eXBlKSkgaGlkZShUeXBlZEFycmF5UHJvdG90eXBlLCBCWVRFU19QRVJfRUxFTUVOVCwgQllURVMpO1xuXG4gICAgJGV4cG9ydCgkZXhwb3J0LlAsIE5BTUUsIHByb3RvKTtcblxuICAgIHNldFNwZWNpZXMoTkFNRSk7XG5cbiAgICAkZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIEZPUkNFRF9TRVQsIE5BTUUsIHsgc2V0OiAkc2V0IH0pO1xuXG4gICAgJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAhQ09SUkVDVF9JVEVSX05BTUUsIE5BTUUsICRpdGVyYXRvcnMpO1xuXG4gICAgaWYgKCFMSUJSQVJZICYmIFR5cGVkQXJyYXlQcm90b3R5cGUudG9TdHJpbmcgIT0gYXJyYXlUb1N0cmluZykgVHlwZWRBcnJheVByb3RvdHlwZS50b1N0cmluZyA9IGFycmF5VG9TdHJpbmc7XG5cbiAgICAkZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICAgIG5ldyBUeXBlZEFycmF5KDEpLnNsaWNlKCk7XG4gICAgfSksIE5BTUUsIHsgc2xpY2U6ICRzbGljZSB9KTtcblxuICAgICRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogKGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBbMSwgMl0udG9Mb2NhbGVTdHJpbmcoKSAhPSBuZXcgVHlwZWRBcnJheShbMSwgMl0pLnRvTG9jYWxlU3RyaW5nKCk7XG4gICAgfSkgfHwgIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICAgIFR5cGVkQXJyYXlQcm90b3R5cGUudG9Mb2NhbGVTdHJpbmcuY2FsbChbMSwgMl0pO1xuICAgIH0pKSwgTkFNRSwgeyB0b0xvY2FsZVN0cmluZzogJHRvTG9jYWxlU3RyaW5nIH0pO1xuXG4gICAgSXRlcmF0b3JzW05BTUVdID0gQ09SUkVDVF9JVEVSX05BTUUgPyAkbmF0aXZlSXRlcmF0b3IgOiAkaXRlcmF0b3I7XG4gICAgaWYgKCFMSUJSQVJZICYmICFDT1JSRUNUX0lURVJfTkFNRSkgaGlkZShUeXBlZEFycmF5UHJvdG90eXBlLCBJVEVSQVRPUiwgJGl0ZXJhdG9yKTtcbiAgfTtcbn0gZWxzZSBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJyk7XG52YXIgTElCUkFSWSA9IHJlcXVpcmUoJy4vX2xpYnJhcnknKTtcbnZhciAkdHlwZWQgPSByZXF1aXJlKCcuL190eXBlZCcpO1xudmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG52YXIgcmVkZWZpbmVBbGwgPSByZXF1aXJlKCcuL19yZWRlZmluZS1hbGwnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG52YXIgYW5JbnN0YW5jZSA9IHJlcXVpcmUoJy4vX2FuLWluc3RhbmNlJyk7XG52YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgdG9JbmRleCA9IHJlcXVpcmUoJy4vX3RvLWluZGV4Jyk7XG52YXIgZ09QTiA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BuJykuZjtcbnZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG52YXIgYXJyYXlGaWxsID0gcmVxdWlyZSgnLi9fYXJyYXktZmlsbCcpO1xudmFyIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKTtcbnZhciBBUlJBWV9CVUZGRVIgPSAnQXJyYXlCdWZmZXInO1xudmFyIERBVEFfVklFVyA9ICdEYXRhVmlldyc7XG52YXIgUFJPVE9UWVBFID0gJ3Byb3RvdHlwZSc7XG52YXIgV1JPTkdfTEVOR1RIID0gJ1dyb25nIGxlbmd0aCEnO1xudmFyIFdST05HX0lOREVYID0gJ1dyb25nIGluZGV4ISc7XG52YXIgJEFycmF5QnVmZmVyID0gZ2xvYmFsW0FSUkFZX0JVRkZFUl07XG52YXIgJERhdGFWaWV3ID0gZ2xvYmFsW0RBVEFfVklFV107XG52YXIgTWF0aCA9IGdsb2JhbC5NYXRoO1xudmFyIFJhbmdlRXJyb3IgPSBnbG9iYWwuUmFuZ2VFcnJvcjtcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zaGFkb3ctcmVzdHJpY3RlZC1uYW1lc1xudmFyIEluZmluaXR5ID0gZ2xvYmFsLkluZmluaXR5O1xudmFyIEJhc2VCdWZmZXIgPSAkQXJyYXlCdWZmZXI7XG52YXIgYWJzID0gTWF0aC5hYnM7XG52YXIgcG93ID0gTWF0aC5wb3c7XG52YXIgZmxvb3IgPSBNYXRoLmZsb29yO1xudmFyIGxvZyA9IE1hdGgubG9nO1xudmFyIExOMiA9IE1hdGguTE4yO1xudmFyIEJVRkZFUiA9ICdidWZmZXInO1xudmFyIEJZVEVfTEVOR1RIID0gJ2J5dGVMZW5ndGgnO1xudmFyIEJZVEVfT0ZGU0VUID0gJ2J5dGVPZmZzZXQnO1xudmFyICRCVUZGRVIgPSBERVNDUklQVE9SUyA/ICdfYicgOiBCVUZGRVI7XG52YXIgJExFTkdUSCA9IERFU0NSSVBUT1JTID8gJ19sJyA6IEJZVEVfTEVOR1RIO1xudmFyICRPRkZTRVQgPSBERVNDUklQVE9SUyA/ICdfbycgOiBCWVRFX09GRlNFVDtcblxuLy8gSUVFRTc1NCBjb252ZXJzaW9ucyBiYXNlZCBvbiBodHRwczovL2dpdGh1Yi5jb20vZmVyb3NzL2llZWU3NTRcbmZ1bmN0aW9uIHBhY2tJRUVFNzU0KHZhbHVlLCBtTGVuLCBuQnl0ZXMpIHtcbiAgdmFyIGJ1ZmZlciA9IG5ldyBBcnJheShuQnl0ZXMpO1xuICB2YXIgZUxlbiA9IG5CeXRlcyAqIDggLSBtTGVuIC0gMTtcbiAgdmFyIGVNYXggPSAoMSA8PCBlTGVuKSAtIDE7XG4gIHZhciBlQmlhcyA9IGVNYXggPj4gMTtcbiAgdmFyIHJ0ID0gbUxlbiA9PT0gMjMgPyBwb3coMiwgLTI0KSAtIHBvdygyLCAtNzcpIDogMDtcbiAgdmFyIGkgPSAwO1xuICB2YXIgcyA9IHZhbHVlIDwgMCB8fCB2YWx1ZSA9PT0gMCAmJiAxIC8gdmFsdWUgPCAwID8gMSA6IDA7XG4gIHZhciBlLCBtLCBjO1xuICB2YWx1ZSA9IGFicyh2YWx1ZSk7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgaWYgKHZhbHVlICE9IHZhbHVlIHx8IHZhbHVlID09PSBJbmZpbml0eSkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgICBtID0gdmFsdWUgIT0gdmFsdWUgPyAxIDogMDtcbiAgICBlID0gZU1heDtcbiAgfSBlbHNlIHtcbiAgICBlID0gZmxvb3IobG9nKHZhbHVlKSAvIExOMik7XG4gICAgaWYgKHZhbHVlICogKGMgPSBwb3coMiwgLWUpKSA8IDEpIHtcbiAgICAgIGUtLTtcbiAgICAgIGMgKj0gMjtcbiAgICB9XG4gICAgaWYgKGUgKyBlQmlhcyA+PSAxKSB7XG4gICAgICB2YWx1ZSArPSBydCAvIGM7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhbHVlICs9IHJ0ICogcG93KDIsIDEgLSBlQmlhcyk7XG4gICAgfVxuICAgIGlmICh2YWx1ZSAqIGMgPj0gMikge1xuICAgICAgZSsrO1xuICAgICAgYyAvPSAyO1xuICAgIH1cbiAgICBpZiAoZSArIGVCaWFzID49IGVNYXgpIHtcbiAgICAgIG0gPSAwO1xuICAgICAgZSA9IGVNYXg7XG4gICAgfSBlbHNlIGlmIChlICsgZUJpYXMgPj0gMSkge1xuICAgICAgbSA9ICh2YWx1ZSAqIGMgLSAxKSAqIHBvdygyLCBtTGVuKTtcbiAgICAgIGUgPSBlICsgZUJpYXM7XG4gICAgfSBlbHNlIHtcbiAgICAgIG0gPSB2YWx1ZSAqIHBvdygyLCBlQmlhcyAtIDEpICogcG93KDIsIG1MZW4pO1xuICAgICAgZSA9IDA7XG4gICAgfVxuICB9XG4gIGZvciAoOyBtTGVuID49IDg7IGJ1ZmZlcltpKytdID0gbSAmIDI1NSwgbSAvPSAyNTYsIG1MZW4gLT0gOCk7XG4gIGUgPSBlIDw8IG1MZW4gfCBtO1xuICBlTGVuICs9IG1MZW47XG4gIGZvciAoOyBlTGVuID4gMDsgYnVmZmVyW2krK10gPSBlICYgMjU1LCBlIC89IDI1NiwgZUxlbiAtPSA4KTtcbiAgYnVmZmVyWy0taV0gfD0gcyAqIDEyODtcbiAgcmV0dXJuIGJ1ZmZlcjtcbn1cbmZ1bmN0aW9uIHVucGFja0lFRUU3NTQoYnVmZmVyLCBtTGVuLCBuQnl0ZXMpIHtcbiAgdmFyIGVMZW4gPSBuQnl0ZXMgKiA4IC0gbUxlbiAtIDE7XG4gIHZhciBlTWF4ID0gKDEgPDwgZUxlbikgLSAxO1xuICB2YXIgZUJpYXMgPSBlTWF4ID4+IDE7XG4gIHZhciBuQml0cyA9IGVMZW4gLSA3O1xuICB2YXIgaSA9IG5CeXRlcyAtIDE7XG4gIHZhciBzID0gYnVmZmVyW2ktLV07XG4gIHZhciBlID0gcyAmIDEyNztcbiAgdmFyIG07XG4gIHMgPj49IDc7XG4gIGZvciAoOyBuQml0cyA+IDA7IGUgPSBlICogMjU2ICsgYnVmZmVyW2ldLCBpLS0sIG5CaXRzIC09IDgpO1xuICBtID0gZSAmICgxIDw8IC1uQml0cykgLSAxO1xuICBlID4+PSAtbkJpdHM7XG4gIG5CaXRzICs9IG1MZW47XG4gIGZvciAoOyBuQml0cyA+IDA7IG0gPSBtICogMjU2ICsgYnVmZmVyW2ldLCBpLS0sIG5CaXRzIC09IDgpO1xuICBpZiAoZSA9PT0gMCkge1xuICAgIGUgPSAxIC0gZUJpYXM7XG4gIH0gZWxzZSBpZiAoZSA9PT0gZU1heCkge1xuICAgIHJldHVybiBtID8gTmFOIDogcyA/IC1JbmZpbml0eSA6IEluZmluaXR5O1xuICB9IGVsc2Uge1xuICAgIG0gPSBtICsgcG93KDIsIG1MZW4pO1xuICAgIGUgPSBlIC0gZUJpYXM7XG4gIH0gcmV0dXJuIChzID8gLTEgOiAxKSAqIG0gKiBwb3coMiwgZSAtIG1MZW4pO1xufVxuXG5mdW5jdGlvbiB1bnBhY2tJMzIoYnl0ZXMpIHtcbiAgcmV0dXJuIGJ5dGVzWzNdIDw8IDI0IHwgYnl0ZXNbMl0gPDwgMTYgfCBieXRlc1sxXSA8PCA4IHwgYnl0ZXNbMF07XG59XG5mdW5jdGlvbiBwYWNrSTgoaXQpIHtcbiAgcmV0dXJuIFtpdCAmIDB4ZmZdO1xufVxuZnVuY3Rpb24gcGFja0kxNihpdCkge1xuICByZXR1cm4gW2l0ICYgMHhmZiwgaXQgPj4gOCAmIDB4ZmZdO1xufVxuZnVuY3Rpb24gcGFja0kzMihpdCkge1xuICByZXR1cm4gW2l0ICYgMHhmZiwgaXQgPj4gOCAmIDB4ZmYsIGl0ID4+IDE2ICYgMHhmZiwgaXQgPj4gMjQgJiAweGZmXTtcbn1cbmZ1bmN0aW9uIHBhY2tGNjQoaXQpIHtcbiAgcmV0dXJuIHBhY2tJRUVFNzU0KGl0LCA1MiwgOCk7XG59XG5mdW5jdGlvbiBwYWNrRjMyKGl0KSB7XG4gIHJldHVybiBwYWNrSUVFRTc1NChpdCwgMjMsIDQpO1xufVxuXG5mdW5jdGlvbiBhZGRHZXR0ZXIoQywga2V5LCBpbnRlcm5hbCkge1xuICBkUChDW1BST1RPVFlQRV0sIGtleSwgeyBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXNbaW50ZXJuYWxdOyB9IH0pO1xufVxuXG5mdW5jdGlvbiBnZXQodmlldywgYnl0ZXMsIGluZGV4LCBpc0xpdHRsZUVuZGlhbikge1xuICB2YXIgbnVtSW5kZXggPSAraW5kZXg7XG4gIHZhciBpbnRJbmRleCA9IHRvSW5kZXgobnVtSW5kZXgpO1xuICBpZiAoaW50SW5kZXggKyBieXRlcyA+IHZpZXdbJExFTkdUSF0pIHRocm93IFJhbmdlRXJyb3IoV1JPTkdfSU5ERVgpO1xuICB2YXIgc3RvcmUgPSB2aWV3WyRCVUZGRVJdLl9iO1xuICB2YXIgc3RhcnQgPSBpbnRJbmRleCArIHZpZXdbJE9GRlNFVF07XG4gIHZhciBwYWNrID0gc3RvcmUuc2xpY2Uoc3RhcnQsIHN0YXJ0ICsgYnl0ZXMpO1xuICByZXR1cm4gaXNMaXR0bGVFbmRpYW4gPyBwYWNrIDogcGFjay5yZXZlcnNlKCk7XG59XG5mdW5jdGlvbiBzZXQodmlldywgYnl0ZXMsIGluZGV4LCBjb252ZXJzaW9uLCB2YWx1ZSwgaXNMaXR0bGVFbmRpYW4pIHtcbiAgdmFyIG51bUluZGV4ID0gK2luZGV4O1xuICB2YXIgaW50SW5kZXggPSB0b0luZGV4KG51bUluZGV4KTtcbiAgaWYgKGludEluZGV4ICsgYnl0ZXMgPiB2aWV3WyRMRU5HVEhdKSB0aHJvdyBSYW5nZUVycm9yKFdST05HX0lOREVYKTtcbiAgdmFyIHN0b3JlID0gdmlld1skQlVGRkVSXS5fYjtcbiAgdmFyIHN0YXJ0ID0gaW50SW5kZXggKyB2aWV3WyRPRkZTRVRdO1xuICB2YXIgcGFjayA9IGNvbnZlcnNpb24oK3ZhbHVlKTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBieXRlczsgaSsrKSBzdG9yZVtzdGFydCArIGldID0gcGFja1tpc0xpdHRsZUVuZGlhbiA/IGkgOiBieXRlcyAtIGkgLSAxXTtcbn1cblxuaWYgKCEkdHlwZWQuQUJWKSB7XG4gICRBcnJheUJ1ZmZlciA9IGZ1bmN0aW9uIEFycmF5QnVmZmVyKGxlbmd0aCkge1xuICAgIGFuSW5zdGFuY2UodGhpcywgJEFycmF5QnVmZmVyLCBBUlJBWV9CVUZGRVIpO1xuICAgIHZhciBieXRlTGVuZ3RoID0gdG9JbmRleChsZW5ndGgpO1xuICAgIHRoaXMuX2IgPSBhcnJheUZpbGwuY2FsbChuZXcgQXJyYXkoYnl0ZUxlbmd0aCksIDApO1xuICAgIHRoaXNbJExFTkdUSF0gPSBieXRlTGVuZ3RoO1xuICB9O1xuXG4gICREYXRhVmlldyA9IGZ1bmN0aW9uIERhdGFWaWV3KGJ1ZmZlciwgYnl0ZU9mZnNldCwgYnl0ZUxlbmd0aCkge1xuICAgIGFuSW5zdGFuY2UodGhpcywgJERhdGFWaWV3LCBEQVRBX1ZJRVcpO1xuICAgIGFuSW5zdGFuY2UoYnVmZmVyLCAkQXJyYXlCdWZmZXIsIERBVEFfVklFVyk7XG4gICAgdmFyIGJ1ZmZlckxlbmd0aCA9IGJ1ZmZlclskTEVOR1RIXTtcbiAgICB2YXIgb2Zmc2V0ID0gdG9JbnRlZ2VyKGJ5dGVPZmZzZXQpO1xuICAgIGlmIChvZmZzZXQgPCAwIHx8IG9mZnNldCA+IGJ1ZmZlckxlbmd0aCkgdGhyb3cgUmFuZ2VFcnJvcignV3Jvbmcgb2Zmc2V0IScpO1xuICAgIGJ5dGVMZW5ndGggPSBieXRlTGVuZ3RoID09PSB1bmRlZmluZWQgPyBidWZmZXJMZW5ndGggLSBvZmZzZXQgOiB0b0xlbmd0aChieXRlTGVuZ3RoKTtcbiAgICBpZiAob2Zmc2V0ICsgYnl0ZUxlbmd0aCA+IGJ1ZmZlckxlbmd0aCkgdGhyb3cgUmFuZ2VFcnJvcihXUk9OR19MRU5HVEgpO1xuICAgIHRoaXNbJEJVRkZFUl0gPSBidWZmZXI7XG4gICAgdGhpc1skT0ZGU0VUXSA9IG9mZnNldDtcbiAgICB0aGlzWyRMRU5HVEhdID0gYnl0ZUxlbmd0aDtcbiAgfTtcblxuICBpZiAoREVTQ1JJUFRPUlMpIHtcbiAgICBhZGRHZXR0ZXIoJEFycmF5QnVmZmVyLCBCWVRFX0xFTkdUSCwgJ19sJyk7XG4gICAgYWRkR2V0dGVyKCREYXRhVmlldywgQlVGRkVSLCAnX2InKTtcbiAgICBhZGRHZXR0ZXIoJERhdGFWaWV3LCBCWVRFX0xFTkdUSCwgJ19sJyk7XG4gICAgYWRkR2V0dGVyKCREYXRhVmlldywgQllURV9PRkZTRVQsICdfbycpO1xuICB9XG5cbiAgcmVkZWZpbmVBbGwoJERhdGFWaWV3W1BST1RPVFlQRV0sIHtcbiAgICBnZXRJbnQ4OiBmdW5jdGlvbiBnZXRJbnQ4KGJ5dGVPZmZzZXQpIHtcbiAgICAgIHJldHVybiBnZXQodGhpcywgMSwgYnl0ZU9mZnNldClbMF0gPDwgMjQgPj4gMjQ7XG4gICAgfSxcbiAgICBnZXRVaW50ODogZnVuY3Rpb24gZ2V0VWludDgoYnl0ZU9mZnNldCkge1xuICAgICAgcmV0dXJuIGdldCh0aGlzLCAxLCBieXRlT2Zmc2V0KVswXTtcbiAgICB9LFxuICAgIGdldEludDE2OiBmdW5jdGlvbiBnZXRJbnQxNihieXRlT2Zmc2V0IC8qICwgbGl0dGxlRW5kaWFuICovKSB7XG4gICAgICB2YXIgYnl0ZXMgPSBnZXQodGhpcywgMiwgYnl0ZU9mZnNldCwgYXJndW1lbnRzWzFdKTtcbiAgICAgIHJldHVybiAoYnl0ZXNbMV0gPDwgOCB8IGJ5dGVzWzBdKSA8PCAxNiA+PiAxNjtcbiAgICB9LFxuICAgIGdldFVpbnQxNjogZnVuY3Rpb24gZ2V0VWludDE2KGJ5dGVPZmZzZXQgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHZhciBieXRlcyA9IGdldCh0aGlzLCAyLCBieXRlT2Zmc2V0LCBhcmd1bWVudHNbMV0pO1xuICAgICAgcmV0dXJuIGJ5dGVzWzFdIDw8IDggfCBieXRlc1swXTtcbiAgICB9LFxuICAgIGdldEludDMyOiBmdW5jdGlvbiBnZXRJbnQzMihieXRlT2Zmc2V0IC8qICwgbGl0dGxlRW5kaWFuICovKSB7XG4gICAgICByZXR1cm4gdW5wYWNrSTMyKGdldCh0aGlzLCA0LCBieXRlT2Zmc2V0LCBhcmd1bWVudHNbMV0pKTtcbiAgICB9LFxuICAgIGdldFVpbnQzMjogZnVuY3Rpb24gZ2V0VWludDMyKGJ5dGVPZmZzZXQgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHJldHVybiB1bnBhY2tJMzIoZ2V0KHRoaXMsIDQsIGJ5dGVPZmZzZXQsIGFyZ3VtZW50c1sxXSkpID4+PiAwO1xuICAgIH0sXG4gICAgZ2V0RmxvYXQzMjogZnVuY3Rpb24gZ2V0RmxvYXQzMihieXRlT2Zmc2V0IC8qICwgbGl0dGxlRW5kaWFuICovKSB7XG4gICAgICByZXR1cm4gdW5wYWNrSUVFRTc1NChnZXQodGhpcywgNCwgYnl0ZU9mZnNldCwgYXJndW1lbnRzWzFdKSwgMjMsIDQpO1xuICAgIH0sXG4gICAgZ2V0RmxvYXQ2NDogZnVuY3Rpb24gZ2V0RmxvYXQ2NChieXRlT2Zmc2V0IC8qICwgbGl0dGxlRW5kaWFuICovKSB7XG4gICAgICByZXR1cm4gdW5wYWNrSUVFRTc1NChnZXQodGhpcywgOCwgYnl0ZU9mZnNldCwgYXJndW1lbnRzWzFdKSwgNTIsIDgpO1xuICAgIH0sXG4gICAgc2V0SW50ODogZnVuY3Rpb24gc2V0SW50OChieXRlT2Zmc2V0LCB2YWx1ZSkge1xuICAgICAgc2V0KHRoaXMsIDEsIGJ5dGVPZmZzZXQsIHBhY2tJOCwgdmFsdWUpO1xuICAgIH0sXG4gICAgc2V0VWludDg6IGZ1bmN0aW9uIHNldFVpbnQ4KGJ5dGVPZmZzZXQsIHZhbHVlKSB7XG4gICAgICBzZXQodGhpcywgMSwgYnl0ZU9mZnNldCwgcGFja0k4LCB2YWx1ZSk7XG4gICAgfSxcbiAgICBzZXRJbnQxNjogZnVuY3Rpb24gc2V0SW50MTYoYnl0ZU9mZnNldCwgdmFsdWUgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHNldCh0aGlzLCAyLCBieXRlT2Zmc2V0LCBwYWNrSTE2LCB2YWx1ZSwgYXJndW1lbnRzWzJdKTtcbiAgICB9LFxuICAgIHNldFVpbnQxNjogZnVuY3Rpb24gc2V0VWludDE2KGJ5dGVPZmZzZXQsIHZhbHVlIC8qICwgbGl0dGxlRW5kaWFuICovKSB7XG4gICAgICBzZXQodGhpcywgMiwgYnl0ZU9mZnNldCwgcGFja0kxNiwgdmFsdWUsIGFyZ3VtZW50c1syXSk7XG4gICAgfSxcbiAgICBzZXRJbnQzMjogZnVuY3Rpb24gc2V0SW50MzIoYnl0ZU9mZnNldCwgdmFsdWUgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHNldCh0aGlzLCA0LCBieXRlT2Zmc2V0LCBwYWNrSTMyLCB2YWx1ZSwgYXJndW1lbnRzWzJdKTtcbiAgICB9LFxuICAgIHNldFVpbnQzMjogZnVuY3Rpb24gc2V0VWludDMyKGJ5dGVPZmZzZXQsIHZhbHVlIC8qICwgbGl0dGxlRW5kaWFuICovKSB7XG4gICAgICBzZXQodGhpcywgNCwgYnl0ZU9mZnNldCwgcGFja0kzMiwgdmFsdWUsIGFyZ3VtZW50c1syXSk7XG4gICAgfSxcbiAgICBzZXRGbG9hdDMyOiBmdW5jdGlvbiBzZXRGbG9hdDMyKGJ5dGVPZmZzZXQsIHZhbHVlIC8qICwgbGl0dGxlRW5kaWFuICovKSB7XG4gICAgICBzZXQodGhpcywgNCwgYnl0ZU9mZnNldCwgcGFja0YzMiwgdmFsdWUsIGFyZ3VtZW50c1syXSk7XG4gICAgfSxcbiAgICBzZXRGbG9hdDY0OiBmdW5jdGlvbiBzZXRGbG9hdDY0KGJ5dGVPZmZzZXQsIHZhbHVlIC8qICwgbGl0dGxlRW5kaWFuICovKSB7XG4gICAgICBzZXQodGhpcywgOCwgYnl0ZU9mZnNldCwgcGFja0Y2NCwgdmFsdWUsIGFyZ3VtZW50c1syXSk7XG4gICAgfVxuICB9KTtcbn0gZWxzZSB7XG4gIGlmICghZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgICRBcnJheUJ1ZmZlcigxKTtcbiAgfSkgfHwgIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICBuZXcgJEFycmF5QnVmZmVyKC0xKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXdcbiAgfSkgfHwgZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgIG5ldyAkQXJyYXlCdWZmZXIoKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXdcbiAgICBuZXcgJEFycmF5QnVmZmVyKDEuNSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3XG4gICAgbmV3ICRBcnJheUJ1ZmZlcihOYU4pOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ld1xuICAgIHJldHVybiAkQXJyYXlCdWZmZXIubmFtZSAhPSBBUlJBWV9CVUZGRVI7XG4gIH0pKSB7XG4gICAgJEFycmF5QnVmZmVyID0gZnVuY3Rpb24gQXJyYXlCdWZmZXIobGVuZ3RoKSB7XG4gICAgICBhbkluc3RhbmNlKHRoaXMsICRBcnJheUJ1ZmZlcik7XG4gICAgICByZXR1cm4gbmV3IEJhc2VCdWZmZXIodG9JbmRleChsZW5ndGgpKTtcbiAgICB9O1xuICAgIHZhciBBcnJheUJ1ZmZlclByb3RvID0gJEFycmF5QnVmZmVyW1BST1RPVFlQRV0gPSBCYXNlQnVmZmVyW1BST1RPVFlQRV07XG4gICAgZm9yICh2YXIga2V5cyA9IGdPUE4oQmFzZUJ1ZmZlciksIGogPSAwLCBrZXk7IGtleXMubGVuZ3RoID4gajspIHtcbiAgICAgIGlmICghKChrZXkgPSBrZXlzW2orK10pIGluICRBcnJheUJ1ZmZlcikpIGhpZGUoJEFycmF5QnVmZmVyLCBrZXksIEJhc2VCdWZmZXJba2V5XSk7XG4gICAgfVxuICAgIGlmICghTElCUkFSWSkgQXJyYXlCdWZmZXJQcm90by5jb25zdHJ1Y3RvciA9ICRBcnJheUJ1ZmZlcjtcbiAgfVxuICAvLyBpT1MgU2FmYXJpIDcueCBidWdcbiAgdmFyIHZpZXcgPSBuZXcgJERhdGFWaWV3KG5ldyAkQXJyYXlCdWZmZXIoMikpO1xuICB2YXIgJHNldEludDggPSAkRGF0YVZpZXdbUFJPVE9UWVBFXS5zZXRJbnQ4O1xuICB2aWV3LnNldEludDgoMCwgMjE0NzQ4MzY0OCk7XG4gIHZpZXcuc2V0SW50OCgxLCAyMTQ3NDgzNjQ5KTtcbiAgaWYgKHZpZXcuZ2V0SW50OCgwKSB8fCAhdmlldy5nZXRJbnQ4KDEpKSByZWRlZmluZUFsbCgkRGF0YVZpZXdbUFJPVE9UWVBFXSwge1xuICAgIHNldEludDg6IGZ1bmN0aW9uIHNldEludDgoYnl0ZU9mZnNldCwgdmFsdWUpIHtcbiAgICAgICRzZXRJbnQ4LmNhbGwodGhpcywgYnl0ZU9mZnNldCwgdmFsdWUgPDwgMjQgPj4gMjQpO1xuICAgIH0sXG4gICAgc2V0VWludDg6IGZ1bmN0aW9uIHNldFVpbnQ4KGJ5dGVPZmZzZXQsIHZhbHVlKSB7XG4gICAgICAkc2V0SW50OC5jYWxsKHRoaXMsIGJ5dGVPZmZzZXQsIHZhbHVlIDw8IDI0ID4+IDI0KTtcbiAgICB9XG4gIH0sIHRydWUpO1xufVxuc2V0VG9TdHJpbmdUYWcoJEFycmF5QnVmZmVyLCBBUlJBWV9CVUZGRVIpO1xuc2V0VG9TdHJpbmdUYWcoJERhdGFWaWV3LCBEQVRBX1ZJRVcpO1xuaGlkZSgkRGF0YVZpZXdbUFJPVE9UWVBFXSwgJHR5cGVkLlZJRVcsIHRydWUpO1xuZXhwb3J0c1tBUlJBWV9CVUZGRVJdID0gJEFycmF5QnVmZmVyO1xuZXhwb3J0c1tEQVRBX1ZJRVddID0gJERhdGFWaWV3O1xuIiwidmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG52YXIgdWlkID0gcmVxdWlyZSgnLi9fdWlkJyk7XG52YXIgVFlQRUQgPSB1aWQoJ3R5cGVkX2FycmF5Jyk7XG52YXIgVklFVyA9IHVpZCgndmlldycpO1xudmFyIEFCViA9ICEhKGdsb2JhbC5BcnJheUJ1ZmZlciAmJiBnbG9iYWwuRGF0YVZpZXcpO1xudmFyIENPTlNUUiA9IEFCVjtcbnZhciBpID0gMDtcbnZhciBsID0gOTtcbnZhciBUeXBlZDtcblxudmFyIFR5cGVkQXJyYXlDb25zdHJ1Y3RvcnMgPSAoXG4gICdJbnQ4QXJyYXksVWludDhBcnJheSxVaW50OENsYW1wZWRBcnJheSxJbnQxNkFycmF5LFVpbnQxNkFycmF5LEludDMyQXJyYXksVWludDMyQXJyYXksRmxvYXQzMkFycmF5LEZsb2F0NjRBcnJheSdcbikuc3BsaXQoJywnKTtcblxud2hpbGUgKGkgPCBsKSB7XG4gIGlmIChUeXBlZCA9IGdsb2JhbFtUeXBlZEFycmF5Q29uc3RydWN0b3JzW2krK11dKSB7XG4gICAgaGlkZShUeXBlZC5wcm90b3R5cGUsIFRZUEVELCB0cnVlKTtcbiAgICBoaWRlKFR5cGVkLnByb3RvdHlwZSwgVklFVywgdHJ1ZSk7XG4gIH0gZWxzZSBDT05TVFIgPSBmYWxzZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIEFCVjogQUJWLFxuICBDT05TVFI6IENPTlNUUixcbiAgVFlQRUQ6IFRZUEVELFxuICBWSUVXOiBWSUVXXG59O1xuIiwidmFyIGlkID0gMDtcbnZhciBweCA9IE1hdGgucmFuZG9tKCk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgcmV0dXJuICdTeW1ib2woJy5jb25jYXQoa2V5ID09PSB1bmRlZmluZWQgPyAnJyA6IGtleSwgJylfJywgKCsraWQgKyBweCkudG9TdHJpbmcoMzYpKTtcbn07XG4iLCJ2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgbmF2aWdhdG9yID0gZ2xvYmFsLm5hdmlnYXRvcjtcblxubW9kdWxlLmV4cG9ydHMgPSBuYXZpZ2F0b3IgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudCB8fCAnJztcbiIsInZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQsIFRZUEUpIHtcbiAgaWYgKCFpc09iamVjdChpdCkgfHwgaXQuX3QgIT09IFRZUEUpIHRocm93IFR5cGVFcnJvcignSW5jb21wYXRpYmxlIHJlY2VpdmVyLCAnICsgVFlQRSArICcgcmVxdWlyZWQhJyk7XG4gIHJldHVybiBpdDtcbn07XG4iLCJ2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgY29yZSA9IHJlcXVpcmUoJy4vX2NvcmUnKTtcbnZhciBMSUJSQVJZID0gcmVxdWlyZSgnLi9fbGlicmFyeScpO1xudmFyIHdrc0V4dCA9IHJlcXVpcmUoJy4vX3drcy1leHQnKTtcbnZhciBkZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gIHZhciAkU3ltYm9sID0gY29yZS5TeW1ib2wgfHwgKGNvcmUuU3ltYm9sID0gTElCUkFSWSA/IHt9IDogZ2xvYmFsLlN5bWJvbCB8fCB7fSk7XG4gIGlmIChuYW1lLmNoYXJBdCgwKSAhPSAnXycgJiYgIShuYW1lIGluICRTeW1ib2wpKSBkZWZpbmVQcm9wZXJ0eSgkU3ltYm9sLCBuYW1lLCB7IHZhbHVlOiB3a3NFeHQuZihuYW1lKSB9KTtcbn07XG4iLCJleHBvcnRzLmYgPSByZXF1aXJlKCcuL193a3MnKTtcbiIsInZhciBzdG9yZSA9IHJlcXVpcmUoJy4vX3NoYXJlZCcpKCd3a3MnKTtcbnZhciB1aWQgPSByZXF1aXJlKCcuL191aWQnKTtcbnZhciBTeW1ib2wgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5TeW1ib2w7XG52YXIgVVNFX1NZTUJPTCA9IHR5cGVvZiBTeW1ib2wgPT0gJ2Z1bmN0aW9uJztcblxudmFyICRleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobmFtZSkge1xuICByZXR1cm4gc3RvcmVbbmFtZV0gfHwgKHN0b3JlW25hbWVdID1cbiAgICBVU0VfU1lNQk9MICYmIFN5bWJvbFtuYW1lXSB8fCAoVVNFX1NZTUJPTCA/IFN5bWJvbCA6IHVpZCkoJ1N5bWJvbC4nICsgbmFtZSkpO1xufTtcblxuJGV4cG9ydHMuc3RvcmUgPSBzdG9yZTtcbiIsInZhciBjbGFzc29mID0gcmVxdWlyZSgnLi9fY2xhc3NvZicpO1xudmFyIElURVJBVE9SID0gcmVxdWlyZSgnLi9fd2tzJykoJ2l0ZXJhdG9yJyk7XG52YXIgSXRlcmF0b3JzID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2NvcmUnKS5nZXRJdGVyYXRvck1ldGhvZCA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAoaXQgIT0gdW5kZWZpbmVkKSByZXR1cm4gaXRbSVRFUkFUT1JdXG4gICAgfHwgaXRbJ0BAaXRlcmF0b3InXVxuICAgIHx8IEl0ZXJhdG9yc1tjbGFzc29mKGl0KV07XG59O1xuIiwiLy8gMjIuMS4zLjMgQXJyYXkucHJvdG90eXBlLmNvcHlXaXRoaW4odGFyZ2V0LCBzdGFydCwgZW5kID0gdGhpcy5sZW5ndGgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCwgJ0FycmF5JywgeyBjb3B5V2l0aGluOiByZXF1aXJlKCcuL19hcnJheS1jb3B5LXdpdGhpbicpIH0pO1xuXG5yZXF1aXJlKCcuL19hZGQtdG8tdW5zY29wYWJsZXMnKSgnY29weVdpdGhpbicpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkZXZlcnkgPSByZXF1aXJlKCcuL19hcnJheS1tZXRob2RzJykoNCk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKShbXS5ldmVyeSwgdHJ1ZSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjUgLyAxNS40LjQuMTYgQXJyYXkucHJvdG90eXBlLmV2ZXJ5KGNhbGxiYWNrZm4gWywgdGhpc0FyZ10pXG4gIGV2ZXJ5OiBmdW5jdGlvbiBldmVyeShjYWxsYmFja2ZuIC8qICwgdGhpc0FyZyAqLykge1xuICAgIHJldHVybiAkZXZlcnkodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzWzFdKTtcbiAgfVxufSk7XG4iLCIvLyAyMi4xLjMuNiBBcnJheS5wcm90b3R5cGUuZmlsbCh2YWx1ZSwgc3RhcnQgPSAwLCBlbmQgPSB0aGlzLmxlbmd0aClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QLCAnQXJyYXknLCB7IGZpbGw6IHJlcXVpcmUoJy4vX2FycmF5LWZpbGwnKSB9KTtcblxucmVxdWlyZSgnLi9fYWRkLXRvLXVuc2NvcGFibGVzJykoJ2ZpbGwnKTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGZpbHRlciA9IHJlcXVpcmUoJy4vX2FycmF5LW1ldGhvZHMnKSgyKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKFtdLmZpbHRlciwgdHJ1ZSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjcgLyAxNS40LjQuMjAgQXJyYXkucHJvdG90eXBlLmZpbHRlcihjYWxsYmFja2ZuIFssIHRoaXNBcmddKVxuICBmaWx0ZXI6IGZ1bmN0aW9uIGZpbHRlcihjYWxsYmFja2ZuIC8qICwgdGhpc0FyZyAqLykge1xuICAgIHJldHVybiAkZmlsdGVyKHRoaXMsIGNhbGxiYWNrZm4sIGFyZ3VtZW50c1sxXSk7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gMjIuMS4zLjkgQXJyYXkucHJvdG90eXBlLmZpbmRJbmRleChwcmVkaWNhdGUsIHRoaXNBcmcgPSB1bmRlZmluZWQpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRmaW5kID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpKDYpO1xudmFyIEtFWSA9ICdmaW5kSW5kZXgnO1xudmFyIGZvcmNlZCA9IHRydWU7XG4vLyBTaG91bGRuJ3Qgc2tpcCBob2xlc1xuaWYgKEtFWSBpbiBbXSkgQXJyYXkoMSlbS0VZXShmdW5jdGlvbiAoKSB7IGZvcmNlZCA9IGZhbHNlOyB9KTtcbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogZm9yY2VkLCAnQXJyYXknLCB7XG4gIGZpbmRJbmRleDogZnVuY3Rpb24gZmluZEluZGV4KGNhbGxiYWNrZm4gLyogLCB0aGF0ID0gdW5kZWZpbmVkICovKSB7XG4gICAgcmV0dXJuICRmaW5kKHRoaXMsIGNhbGxiYWNrZm4sIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgfVxufSk7XG5yZXF1aXJlKCcuL19hZGQtdG8tdW5zY29wYWJsZXMnKShLRVkpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gMjIuMS4zLjggQXJyYXkucHJvdG90eXBlLmZpbmQocHJlZGljYXRlLCB0aGlzQXJnID0gdW5kZWZpbmVkKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkZmluZCA9IHJlcXVpcmUoJy4vX2FycmF5LW1ldGhvZHMnKSg1KTtcbnZhciBLRVkgPSAnZmluZCc7XG52YXIgZm9yY2VkID0gdHJ1ZTtcbi8vIFNob3VsZG4ndCBza2lwIGhvbGVzXG5pZiAoS0VZIGluIFtdKSBBcnJheSgxKVtLRVldKGZ1bmN0aW9uICgpIHsgZm9yY2VkID0gZmFsc2U7IH0pO1xuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiBmb3JjZWQsICdBcnJheScsIHtcbiAgZmluZDogZnVuY3Rpb24gZmluZChjYWxsYmFja2ZuIC8qICwgdGhhdCA9IHVuZGVmaW5lZCAqLykge1xuICAgIHJldHVybiAkZmluZCh0aGlzLCBjYWxsYmFja2ZuLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7XG4gIH1cbn0pO1xucmVxdWlyZSgnLi9fYWRkLXRvLXVuc2NvcGFibGVzJykoS0VZKTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGZvckVhY2ggPSByZXF1aXJlKCcuL19hcnJheS1tZXRob2RzJykoMCk7XG52YXIgU1RSSUNUID0gcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKFtdLmZvckVhY2gsIHRydWUpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqICFTVFJJQ1QsICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjEwIC8gMTUuNC40LjE4IEFycmF5LnByb3RvdHlwZS5mb3JFYWNoKGNhbGxiYWNrZm4gWywgdGhpc0FyZ10pXG4gIGZvckVhY2g6IGZ1bmN0aW9uIGZvckVhY2goY2FsbGJhY2tmbiAvKiAsIHRoaXNBcmcgKi8pIHtcbiAgICByZXR1cm4gJGZvckVhY2godGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzWzFdKTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgY2FsbCA9IHJlcXVpcmUoJy4vX2l0ZXItY2FsbCcpO1xudmFyIGlzQXJyYXlJdGVyID0gcmVxdWlyZSgnLi9faXMtYXJyYXktaXRlcicpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgY3JlYXRlUHJvcGVydHkgPSByZXF1aXJlKCcuL19jcmVhdGUtcHJvcGVydHknKTtcbnZhciBnZXRJdGVyRm4gPSByZXF1aXJlKCcuL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19pdGVyLWRldGVjdCcpKGZ1bmN0aW9uIChpdGVyKSB7IEFycmF5LmZyb20oaXRlcik7IH0pLCAnQXJyYXknLCB7XG4gIC8vIDIyLjEuMi4xIEFycmF5LmZyb20oYXJyYXlMaWtlLCBtYXBmbiA9IHVuZGVmaW5lZCwgdGhpc0FyZyA9IHVuZGVmaW5lZClcbiAgZnJvbTogZnVuY3Rpb24gZnJvbShhcnJheUxpa2UgLyogLCBtYXBmbiA9IHVuZGVmaW5lZCwgdGhpc0FyZyA9IHVuZGVmaW5lZCAqLykge1xuICAgIHZhciBPID0gdG9PYmplY3QoYXJyYXlMaWtlKTtcbiAgICB2YXIgQyA9IHR5cGVvZiB0aGlzID09ICdmdW5jdGlvbicgPyB0aGlzIDogQXJyYXk7XG4gICAgdmFyIGFMZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIHZhciBtYXBmbiA9IGFMZW4gPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkO1xuICAgIHZhciBtYXBwaW5nID0gbWFwZm4gIT09IHVuZGVmaW5lZDtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIHZhciBpdGVyRm4gPSBnZXRJdGVyRm4oTyk7XG4gICAgdmFyIGxlbmd0aCwgcmVzdWx0LCBzdGVwLCBpdGVyYXRvcjtcbiAgICBpZiAobWFwcGluZykgbWFwZm4gPSBjdHgobWFwZm4sIGFMZW4gPiAyID8gYXJndW1lbnRzWzJdIDogdW5kZWZpbmVkLCAyKTtcbiAgICAvLyBpZiBvYmplY3QgaXNuJ3QgaXRlcmFibGUgb3IgaXQncyBhcnJheSB3aXRoIGRlZmF1bHQgaXRlcmF0b3IgLSB1c2Ugc2ltcGxlIGNhc2VcbiAgICBpZiAoaXRlckZuICE9IHVuZGVmaW5lZCAmJiAhKEMgPT0gQXJyYXkgJiYgaXNBcnJheUl0ZXIoaXRlckZuKSkpIHtcbiAgICAgIGZvciAoaXRlcmF0b3IgPSBpdGVyRm4uY2FsbChPKSwgcmVzdWx0ID0gbmV3IEMoKTsgIShzdGVwID0gaXRlcmF0b3IubmV4dCgpKS5kb25lOyBpbmRleCsrKSB7XG4gICAgICAgIGNyZWF0ZVByb3BlcnR5KHJlc3VsdCwgaW5kZXgsIG1hcHBpbmcgPyBjYWxsKGl0ZXJhdG9yLCBtYXBmbiwgW3N0ZXAudmFsdWUsIGluZGV4XSwgdHJ1ZSkgOiBzdGVwLnZhbHVlKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgbGVuZ3RoID0gdG9MZW5ndGgoTy5sZW5ndGgpO1xuICAgICAgZm9yIChyZXN1bHQgPSBuZXcgQyhsZW5ndGgpOyBsZW5ndGggPiBpbmRleDsgaW5kZXgrKykge1xuICAgICAgICBjcmVhdGVQcm9wZXJ0eShyZXN1bHQsIGluZGV4LCBtYXBwaW5nID8gbWFwZm4oT1tpbmRleF0sIGluZGV4KSA6IE9baW5kZXhdKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmVzdWx0Lmxlbmd0aCA9IGluZGV4O1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkaW5kZXhPZiA9IHJlcXVpcmUoJy4vX2FycmF5LWluY2x1ZGVzJykoZmFsc2UpO1xudmFyICRuYXRpdmUgPSBbXS5pbmRleE9mO1xudmFyIE5FR0FUSVZFX1pFUk8gPSAhISRuYXRpdmUgJiYgMSAvIFsxXS5pbmRleE9mKDEsIC0wKSA8IDA7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogKE5FR0FUSVZFX1pFUk8gfHwgIXJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKSgkbmF0aXZlKSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjExIC8gMTUuNC40LjE0IEFycmF5LnByb3RvdHlwZS5pbmRleE9mKHNlYXJjaEVsZW1lbnQgWywgZnJvbUluZGV4XSlcbiAgaW5kZXhPZjogZnVuY3Rpb24gaW5kZXhPZihzZWFyY2hFbGVtZW50IC8qICwgZnJvbUluZGV4ID0gMCAqLykge1xuICAgIHJldHVybiBORUdBVElWRV9aRVJPXG4gICAgICAvLyBjb252ZXJ0IC0wIHRvICswXG4gICAgICA/ICRuYXRpdmUuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCAwXG4gICAgICA6ICRpbmRleE9mKHRoaXMsIHNlYXJjaEVsZW1lbnQsIGFyZ3VtZW50c1sxXSk7XG4gIH1cbn0pO1xuIiwiLy8gMjIuMS4yLjIgLyAxNS40LjMuMiBBcnJheS5pc0FycmF5KGFyZylcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnQXJyYXknLCB7IGlzQXJyYXk6IHJlcXVpcmUoJy4vX2lzLWFycmF5JykgfSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgYWRkVG9VbnNjb3BhYmxlcyA9IHJlcXVpcmUoJy4vX2FkZC10by11bnNjb3BhYmxlcycpO1xudmFyIHN0ZXAgPSByZXF1aXJlKCcuL19pdGVyLXN0ZXAnKTtcbnZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG5cbi8vIDIyLjEuMy40IEFycmF5LnByb3RvdHlwZS5lbnRyaWVzKClcbi8vIDIyLjEuMy4xMyBBcnJheS5wcm90b3R5cGUua2V5cygpXG4vLyAyMi4xLjMuMjkgQXJyYXkucHJvdG90eXBlLnZhbHVlcygpXG4vLyAyMi4xLjMuMzAgQXJyYXkucHJvdG90eXBlW0BAaXRlcmF0b3JdKClcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9faXRlci1kZWZpbmUnKShBcnJheSwgJ0FycmF5JywgZnVuY3Rpb24gKGl0ZXJhdGVkLCBraW5kKSB7XG4gIHRoaXMuX3QgPSB0b0lPYmplY3QoaXRlcmF0ZWQpOyAvLyB0YXJnZXRcbiAgdGhpcy5faSA9IDA7ICAgICAgICAgICAgICAgICAgIC8vIG5leHQgaW5kZXhcbiAgdGhpcy5fayA9IGtpbmQ7ICAgICAgICAgICAgICAgIC8vIGtpbmRcbi8vIDIyLjEuNS4yLjEgJUFycmF5SXRlcmF0b3JQcm90b3R5cGUlLm5leHQoKVxufSwgZnVuY3Rpb24gKCkge1xuICB2YXIgTyA9IHRoaXMuX3Q7XG4gIHZhciBraW5kID0gdGhpcy5faztcbiAgdmFyIGluZGV4ID0gdGhpcy5faSsrO1xuICBpZiAoIU8gfHwgaW5kZXggPj0gTy5sZW5ndGgpIHtcbiAgICB0aGlzLl90ID0gdW5kZWZpbmVkO1xuICAgIHJldHVybiBzdGVwKDEpO1xuICB9XG4gIGlmIChraW5kID09ICdrZXlzJykgcmV0dXJuIHN0ZXAoMCwgaW5kZXgpO1xuICBpZiAoa2luZCA9PSAndmFsdWVzJykgcmV0dXJuIHN0ZXAoMCwgT1tpbmRleF0pO1xuICByZXR1cm4gc3RlcCgwLCBbaW5kZXgsIE9baW5kZXhdXSk7XG59LCAndmFsdWVzJyk7XG5cbi8vIGFyZ3VtZW50c0xpc3RbQEBpdGVyYXRvcl0gaXMgJUFycmF5UHJvdG9fdmFsdWVzJSAoOS40LjQuNiwgOS40LjQuNylcbkl0ZXJhdG9ycy5Bcmd1bWVudHMgPSBJdGVyYXRvcnMuQXJyYXk7XG5cbmFkZFRvVW5zY29wYWJsZXMoJ2tleXMnKTtcbmFkZFRvVW5zY29wYWJsZXMoJ3ZhbHVlcycpO1xuYWRkVG9VbnNjb3BhYmxlcygnZW50cmllcycpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gMjIuMS4zLjEzIEFycmF5LnByb3RvdHlwZS5qb2luKHNlcGFyYXRvcilcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIGFycmF5Sm9pbiA9IFtdLmpvaW47XG5cbi8vIGZhbGxiYWNrIGZvciBub3QgYXJyYXktbGlrZSBzdHJpbmdzXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIChyZXF1aXJlKCcuL19pb2JqZWN0JykgIT0gT2JqZWN0IHx8ICFyZXF1aXJlKCcuL19zdHJpY3QtbWV0aG9kJykoYXJyYXlKb2luKSksICdBcnJheScsIHtcbiAgam9pbjogZnVuY3Rpb24gam9pbihzZXBhcmF0b3IpIHtcbiAgICByZXR1cm4gYXJyYXlKb2luLmNhbGwodG9JT2JqZWN0KHRoaXMpLCBzZXBhcmF0b3IgPT09IHVuZGVmaW5lZCA/ICcsJyA6IHNlcGFyYXRvcik7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgJG5hdGl2ZSA9IFtdLmxhc3RJbmRleE9mO1xudmFyIE5FR0FUSVZFX1pFUk8gPSAhISRuYXRpdmUgJiYgMSAvIFsxXS5sYXN0SW5kZXhPZigxLCAtMCkgPCAwO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIChORUdBVElWRV9aRVJPIHx8ICFyZXF1aXJlKCcuL19zdHJpY3QtbWV0aG9kJykoJG5hdGl2ZSkpLCAnQXJyYXknLCB7XG4gIC8vIDIyLjEuMy4xNCAvIDE1LjQuNC4xNSBBcnJheS5wcm90b3R5cGUubGFzdEluZGV4T2Yoc2VhcmNoRWxlbWVudCBbLCBmcm9tSW5kZXhdKVxuICBsYXN0SW5kZXhPZjogZnVuY3Rpb24gbGFzdEluZGV4T2Yoc2VhcmNoRWxlbWVudCAvKiAsIGZyb21JbmRleCA9IEBbKi0xXSAqLykge1xuICAgIC8vIGNvbnZlcnQgLTAgdG8gKzBcbiAgICBpZiAoTkVHQVRJVkVfWkVSTykgcmV0dXJuICRuYXRpdmUuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCAwO1xuICAgIHZhciBPID0gdG9JT2JqZWN0KHRoaXMpO1xuICAgIHZhciBsZW5ndGggPSB0b0xlbmd0aChPLmxlbmd0aCk7XG4gICAgdmFyIGluZGV4ID0gbGVuZ3RoIC0gMTtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDEpIGluZGV4ID0gTWF0aC5taW4oaW5kZXgsIHRvSW50ZWdlcihhcmd1bWVudHNbMV0pKTtcbiAgICBpZiAoaW5kZXggPCAwKSBpbmRleCA9IGxlbmd0aCArIGluZGV4O1xuICAgIGZvciAoO2luZGV4ID49IDA7IGluZGV4LS0pIGlmIChpbmRleCBpbiBPKSBpZiAoT1tpbmRleF0gPT09IHNlYXJjaEVsZW1lbnQpIHJldHVybiBpbmRleCB8fCAwO1xuICAgIHJldHVybiAtMTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRtYXAgPSByZXF1aXJlKCcuL19hcnJheS1tZXRob2RzJykoMSk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKShbXS5tYXAsIHRydWUpLCAnQXJyYXknLCB7XG4gIC8vIDIyLjEuMy4xNSAvIDE1LjQuNC4xOSBBcnJheS5wcm90b3R5cGUubWFwKGNhbGxiYWNrZm4gWywgdGhpc0FyZ10pXG4gIG1hcDogZnVuY3Rpb24gbWFwKGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKSB7XG4gICAgcmV0dXJuICRtYXAodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzWzFdKTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGNyZWF0ZVByb3BlcnR5ID0gcmVxdWlyZSgnLi9fY3JlYXRlLXByb3BlcnR5Jyk7XG5cbi8vIFdlYktpdCBBcnJheS5vZiBpc24ndCBnZW5lcmljXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIHJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBGKCkgeyAvKiBlbXB0eSAqLyB9XG4gIHJldHVybiAhKEFycmF5Lm9mLmNhbGwoRikgaW5zdGFuY2VvZiBGKTtcbn0pLCAnQXJyYXknLCB7XG4gIC8vIDIyLjEuMi4zIEFycmF5Lm9mKCAuLi5pdGVtcylcbiAgb2Y6IGZ1bmN0aW9uIG9mKC8qIC4uLmFyZ3MgKi8pIHtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIHZhciBhTGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICB2YXIgcmVzdWx0ID0gbmV3ICh0eXBlb2YgdGhpcyA9PSAnZnVuY3Rpb24nID8gdGhpcyA6IEFycmF5KShhTGVuKTtcbiAgICB3aGlsZSAoYUxlbiA+IGluZGV4KSBjcmVhdGVQcm9wZXJ0eShyZXN1bHQsIGluZGV4LCBhcmd1bWVudHNbaW5kZXgrK10pO1xuICAgIHJlc3VsdC5sZW5ndGggPSBhTGVuO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkcmVkdWNlID0gcmVxdWlyZSgnLi9fYXJyYXktcmVkdWNlJyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKShbXS5yZWR1Y2VSaWdodCwgdHJ1ZSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjE5IC8gMTUuNC40LjIyIEFycmF5LnByb3RvdHlwZS5yZWR1Y2VSaWdodChjYWxsYmFja2ZuIFssIGluaXRpYWxWYWx1ZV0pXG4gIHJlZHVjZVJpZ2h0OiBmdW5jdGlvbiByZWR1Y2VSaWdodChjYWxsYmFja2ZuIC8qICwgaW5pdGlhbFZhbHVlICovKSB7XG4gICAgcmV0dXJuICRyZWR1Y2UodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzLmxlbmd0aCwgYXJndW1lbnRzWzFdLCB0cnVlKTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRyZWR1Y2UgPSByZXF1aXJlKCcuL19hcnJheS1yZWR1Y2UnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKFtdLnJlZHVjZSwgdHJ1ZSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjE4IC8gMTUuNC40LjIxIEFycmF5LnByb3RvdHlwZS5yZWR1Y2UoY2FsbGJhY2tmbiBbLCBpbml0aWFsVmFsdWVdKVxuICByZWR1Y2U6IGZ1bmN0aW9uIHJlZHVjZShjYWxsYmFja2ZuIC8qICwgaW5pdGlhbFZhbHVlICovKSB7XG4gICAgcmV0dXJuICRyZWR1Y2UodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzLmxlbmd0aCwgYXJndW1lbnRzWzFdLCBmYWxzZSk7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBodG1sID0gcmVxdWlyZSgnLi9faHRtbCcpO1xudmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpO1xudmFyIHRvQWJzb2x1dGVJbmRleCA9IHJlcXVpcmUoJy4vX3RvLWFic29sdXRlLWluZGV4Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciBhcnJheVNsaWNlID0gW10uc2xpY2U7XG5cbi8vIGZhbGxiYWNrIGZvciBub3QgYXJyYXktbGlrZSBFUzMgc3RyaW5ncyBhbmQgRE9NIG9iamVjdHNcbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIGlmIChodG1sKSBhcnJheVNsaWNlLmNhbGwoaHRtbCk7XG59KSwgJ0FycmF5Jywge1xuICBzbGljZTogZnVuY3Rpb24gc2xpY2UoYmVnaW4sIGVuZCkge1xuICAgIHZhciBsZW4gPSB0b0xlbmd0aCh0aGlzLmxlbmd0aCk7XG4gICAgdmFyIGtsYXNzID0gY29mKHRoaXMpO1xuICAgIGVuZCA9IGVuZCA9PT0gdW5kZWZpbmVkID8gbGVuIDogZW5kO1xuICAgIGlmIChrbGFzcyA9PSAnQXJyYXknKSByZXR1cm4gYXJyYXlTbGljZS5jYWxsKHRoaXMsIGJlZ2luLCBlbmQpO1xuICAgIHZhciBzdGFydCA9IHRvQWJzb2x1dGVJbmRleChiZWdpbiwgbGVuKTtcbiAgICB2YXIgdXBUbyA9IHRvQWJzb2x1dGVJbmRleChlbmQsIGxlbik7XG4gICAgdmFyIHNpemUgPSB0b0xlbmd0aCh1cFRvIC0gc3RhcnQpO1xuICAgIHZhciBjbG9uZWQgPSBuZXcgQXJyYXkoc2l6ZSk7XG4gICAgdmFyIGkgPSAwO1xuICAgIGZvciAoOyBpIDwgc2l6ZTsgaSsrKSBjbG9uZWRbaV0gPSBrbGFzcyA9PSAnU3RyaW5nJ1xuICAgICAgPyB0aGlzLmNoYXJBdChzdGFydCArIGkpXG4gICAgICA6IHRoaXNbc3RhcnQgKyBpXTtcbiAgICByZXR1cm4gY2xvbmVkO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJHNvbWUgPSByZXF1aXJlKCcuL19hcnJheS1tZXRob2RzJykoMyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKShbXS5zb21lLCB0cnVlKSwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjMuMjMgLyAxNS40LjQuMTcgQXJyYXkucHJvdG90eXBlLnNvbWUoY2FsbGJhY2tmbiBbLCB0aGlzQXJnXSlcbiAgc29tZTogZnVuY3Rpb24gc29tZShjYWxsYmFja2ZuIC8qICwgdGhpc0FyZyAqLykge1xuICAgIHJldHVybiAkc29tZSh0aGlzLCBjYWxsYmFja2ZuLCBhcmd1bWVudHNbMV0pO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xudmFyICRzb3J0ID0gW10uc29ydDtcbnZhciB0ZXN0ID0gWzEsIDIsIDNdO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIChmYWlscyhmdW5jdGlvbiAoKSB7XG4gIC8vIElFOC1cbiAgdGVzdC5zb3J0KHVuZGVmaW5lZCk7XG59KSB8fCAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAvLyBWOCBidWdcbiAgdGVzdC5zb3J0KG51bGwpO1xuICAvLyBPbGQgV2ViS2l0XG59KSB8fCAhcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKCRzb3J0KSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjI1IEFycmF5LnByb3RvdHlwZS5zb3J0KGNvbXBhcmVmbilcbiAgc29ydDogZnVuY3Rpb24gc29ydChjb21wYXJlZm4pIHtcbiAgICByZXR1cm4gY29tcGFyZWZuID09PSB1bmRlZmluZWRcbiAgICAgID8gJHNvcnQuY2FsbCh0b09iamVjdCh0aGlzKSlcbiAgICAgIDogJHNvcnQuY2FsbCh0b09iamVjdCh0aGlzKSwgYUZ1bmN0aW9uKGNvbXBhcmVmbikpO1xuICB9XG59KTtcbiIsInJlcXVpcmUoJy4vX3NldC1zcGVjaWVzJykoJ0FycmF5Jyk7XG4iLCIvLyAyMC4zLjMuMSAvIDE1LjkuNC40IERhdGUubm93KClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnRGF0ZScsIHsgbm93OiBmdW5jdGlvbiAoKSB7IHJldHVybiBuZXcgRGF0ZSgpLmdldFRpbWUoKTsgfSB9KTtcbiIsIi8vIDIwLjMuNC4zNiAvIDE1LjkuNS40MyBEYXRlLnByb3RvdHlwZS50b0lTT1N0cmluZygpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHRvSVNPU3RyaW5nID0gcmVxdWlyZSgnLi9fZGF0ZS10by1pc28tc3RyaW5nJyk7XG5cbi8vIFBoYW50b21KUyAvIG9sZCBXZWJLaXQgaGFzIGEgYnJva2VuIGltcGxlbWVudGF0aW9uc1xuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAoRGF0ZS5wcm90b3R5cGUudG9JU09TdHJpbmcgIT09IHRvSVNPU3RyaW5nKSwgJ0RhdGUnLCB7XG4gIHRvSVNPU3RyaW5nOiB0b0lTT1N0cmluZ1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgdG9QcmltaXRpdmUgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiByZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIG5ldyBEYXRlKE5hTikudG9KU09OKCkgIT09IG51bGxcbiAgICB8fCBEYXRlLnByb3RvdHlwZS50b0pTT04uY2FsbCh7IHRvSVNPU3RyaW5nOiBmdW5jdGlvbiAoKSB7IHJldHVybiAxOyB9IH0pICE9PSAxO1xufSksICdEYXRlJywge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgdG9KU09OOiBmdW5jdGlvbiB0b0pTT04oa2V5KSB7XG4gICAgdmFyIE8gPSB0b09iamVjdCh0aGlzKTtcbiAgICB2YXIgcHYgPSB0b1ByaW1pdGl2ZShPKTtcbiAgICByZXR1cm4gdHlwZW9mIHB2ID09ICdudW1iZXInICYmICFpc0Zpbml0ZShwdikgPyBudWxsIDogTy50b0lTT1N0cmluZygpO1xuICB9XG59KTtcbiIsInZhciBUT19QUklNSVRJVkUgPSByZXF1aXJlKCcuL193a3MnKSgndG9QcmltaXRpdmUnKTtcbnZhciBwcm90byA9IERhdGUucHJvdG90eXBlO1xuXG5pZiAoIShUT19QUklNSVRJVkUgaW4gcHJvdG8pKSByZXF1aXJlKCcuL19oaWRlJykocHJvdG8sIFRPX1BSSU1JVElWRSwgcmVxdWlyZSgnLi9fZGF0ZS10by1wcmltaXRpdmUnKSk7XG4iLCJ2YXIgRGF0ZVByb3RvID0gRGF0ZS5wcm90b3R5cGU7XG52YXIgSU5WQUxJRF9EQVRFID0gJ0ludmFsaWQgRGF0ZSc7XG52YXIgVE9fU1RSSU5HID0gJ3RvU3RyaW5nJztcbnZhciAkdG9TdHJpbmcgPSBEYXRlUHJvdG9bVE9fU1RSSU5HXTtcbnZhciBnZXRUaW1lID0gRGF0ZVByb3RvLmdldFRpbWU7XG5pZiAobmV3IERhdGUoTmFOKSArICcnICE9IElOVkFMSURfREFURSkge1xuICByZXF1aXJlKCcuL19yZWRlZmluZScpKERhdGVQcm90bywgVE9fU1RSSU5HLCBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICB2YXIgdmFsdWUgPSBnZXRUaW1lLmNhbGwodGhpcyk7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICAgIHJldHVybiB2YWx1ZSA9PT0gdmFsdWUgPyAkdG9TdHJpbmcuY2FsbCh0aGlzKSA6IElOVkFMSURfREFURTtcbiAgfSk7XG59XG4iLCIvLyAxOS4yLjMuMiAvIDE1LjMuNC41IEZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kKHRoaXNBcmcsIGFyZ3MuLi4pXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCwgJ0Z1bmN0aW9uJywgeyBiaW5kOiByZXF1aXJlKCcuL19iaW5kJykgfSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBnZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKTtcbnZhciBIQVNfSU5TVEFOQ0UgPSByZXF1aXJlKCcuL193a3MnKSgnaGFzSW5zdGFuY2UnKTtcbnZhciBGdW5jdGlvblByb3RvID0gRnVuY3Rpb24ucHJvdG90eXBlO1xuLy8gMTkuMi4zLjYgRnVuY3Rpb24ucHJvdG90eXBlW0BAaGFzSW5zdGFuY2VdKFYpXG5pZiAoIShIQVNfSU5TVEFOQ0UgaW4gRnVuY3Rpb25Qcm90bykpIHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmYoRnVuY3Rpb25Qcm90bywgSEFTX0lOU1RBTkNFLCB7IHZhbHVlOiBmdW5jdGlvbiAoTykge1xuICBpZiAodHlwZW9mIHRoaXMgIT0gJ2Z1bmN0aW9uJyB8fCAhaXNPYmplY3QoTykpIHJldHVybiBmYWxzZTtcbiAgaWYgKCFpc09iamVjdCh0aGlzLnByb3RvdHlwZSkpIHJldHVybiBPIGluc3RhbmNlb2YgdGhpcztcbiAgLy8gZm9yIGVudmlyb25tZW50IHcvbyBuYXRpdmUgYEBAaGFzSW5zdGFuY2VgIGxvZ2ljIGVub3VnaCBgaW5zdGFuY2VvZmAsIGJ1dCBhZGQgdGhpczpcbiAgd2hpbGUgKE8gPSBnZXRQcm90b3R5cGVPZihPKSkgaWYgKHRoaXMucHJvdG90eXBlID09PSBPKSByZXR1cm4gdHJ1ZTtcbiAgcmV0dXJuIGZhbHNlO1xufSB9KTtcbiIsInZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG52YXIgRlByb3RvID0gRnVuY3Rpb24ucHJvdG90eXBlO1xudmFyIG5hbWVSRSA9IC9eXFxzKmZ1bmN0aW9uIChbXiAoXSopLztcbnZhciBOQU1FID0gJ25hbWUnO1xuXG4vLyAxOS4yLjQuMiBuYW1lXG5OQU1FIGluIEZQcm90byB8fCByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpICYmIGRQKEZQcm90bywgTkFNRSwge1xuICBjb25maWd1cmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4gKCcnICsgdGhpcykubWF0Y2gobmFtZVJFKVsxXTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXR1cm4gJyc7XG4gICAgfVxuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBzdHJvbmcgPSByZXF1aXJlKCcuL19jb2xsZWN0aW9uLXN0cm9uZycpO1xudmFyIHZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUtY29sbGVjdGlvbicpO1xudmFyIE1BUCA9ICdNYXAnO1xuXG4vLyAyMy4xIE1hcCBPYmplY3RzXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2NvbGxlY3Rpb24nKShNQVAsIGZ1bmN0aW9uIChnZXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIE1hcCgpIHsgcmV0dXJuIGdldCh0aGlzLCBhcmd1bWVudHMubGVuZ3RoID4gMCA/IGFyZ3VtZW50c1swXSA6IHVuZGVmaW5lZCk7IH07XG59LCB7XG4gIC8vIDIzLjEuMy42IE1hcC5wcm90b3R5cGUuZ2V0KGtleSlcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoa2V5KSB7XG4gICAgdmFyIGVudHJ5ID0gc3Ryb25nLmdldEVudHJ5KHZhbGlkYXRlKHRoaXMsIE1BUCksIGtleSk7XG4gICAgcmV0dXJuIGVudHJ5ICYmIGVudHJ5LnY7XG4gIH0sXG4gIC8vIDIzLjEuMy45IE1hcC5wcm90b3R5cGUuc2V0KGtleSwgdmFsdWUpXG4gIHNldDogZnVuY3Rpb24gc2V0KGtleSwgdmFsdWUpIHtcbiAgICByZXR1cm4gc3Ryb25nLmRlZih2YWxpZGF0ZSh0aGlzLCBNQVApLCBrZXkgPT09IDAgPyAwIDoga2V5LCB2YWx1ZSk7XG4gIH1cbn0sIHN0cm9uZywgdHJ1ZSk7XG4iLCIvLyAyMC4yLjIuMyBNYXRoLmFjb3NoKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGxvZzFwID0gcmVxdWlyZSgnLi9fbWF0aC1sb2cxcCcpO1xudmFyIHNxcnQgPSBNYXRoLnNxcnQ7XG52YXIgJGFjb3NoID0gTWF0aC5hY29zaDtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhKCRhY29zaFxuICAvLyBWOCBidWc6IGh0dHBzOi8vY29kZS5nb29nbGUuY29tL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zNTA5XG4gICYmIE1hdGguZmxvb3IoJGFjb3NoKE51bWJlci5NQVhfVkFMVUUpKSA9PSA3MTBcbiAgLy8gVG9yIEJyb3dzZXIgYnVnOiBNYXRoLmFjb3NoKEluZmluaXR5KSAtPiBOYU5cbiAgJiYgJGFjb3NoKEluZmluaXR5KSA9PSBJbmZpbml0eVxuKSwgJ01hdGgnLCB7XG4gIGFjb3NoOiBmdW5jdGlvbiBhY29zaCh4KSB7XG4gICAgcmV0dXJuICh4ID0gK3gpIDwgMSA/IE5hTiA6IHggPiA5NDkwNjI2NS42MjQyNTE1NlxuICAgICAgPyBNYXRoLmxvZyh4KSArIE1hdGguTE4yXG4gICAgICA6IGxvZzFwKHggLSAxICsgc3FydCh4IC0gMSkgKiBzcXJ0KHggKyAxKSk7XG4gIH1cbn0pO1xuIiwiLy8gMjAuMi4yLjUgTWF0aC5hc2luaCh4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkYXNpbmggPSBNYXRoLmFzaW5oO1xuXG5mdW5jdGlvbiBhc2luaCh4KSB7XG4gIHJldHVybiAhaXNGaW5pdGUoeCA9ICt4KSB8fCB4ID09IDAgPyB4IDogeCA8IDAgPyAtYXNpbmgoLXgpIDogTWF0aC5sb2coeCArIE1hdGguc3FydCh4ICogeCArIDEpKTtcbn1cblxuLy8gVG9yIEJyb3dzZXIgYnVnOiBNYXRoLmFzaW5oKDApIC0+IC0wXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICEoJGFzaW5oICYmIDEgLyAkYXNpbmgoMCkgPiAwKSwgJ01hdGgnLCB7IGFzaW5oOiBhc2luaCB9KTtcbiIsIi8vIDIwLjIuMi43IE1hdGguYXRhbmgoeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGF0YW5oID0gTWF0aC5hdGFuaDtcblxuLy8gVG9yIEJyb3dzZXIgYnVnOiBNYXRoLmF0YW5oKC0wKSAtPiAwXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICEoJGF0YW5oICYmIDEgLyAkYXRhbmgoLTApIDwgMCksICdNYXRoJywge1xuICBhdGFuaDogZnVuY3Rpb24gYXRhbmgoeCkge1xuICAgIHJldHVybiAoeCA9ICt4KSA9PSAwID8geCA6IE1hdGgubG9nKCgxICsgeCkgLyAoMSAtIHgpKSAvIDI7XG4gIH1cbn0pO1xuIiwiLy8gMjAuMi4yLjkgTWF0aC5jYnJ0KHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHNpZ24gPSByZXF1aXJlKCcuL19tYXRoLXNpZ24nKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywge1xuICBjYnJ0OiBmdW5jdGlvbiBjYnJ0KHgpIHtcbiAgICByZXR1cm4gc2lnbih4ID0gK3gpICogTWF0aC5wb3coTWF0aC5hYnMoeCksIDEgLyAzKTtcbiAgfVxufSk7XG4iLCIvLyAyMC4yLjIuMTEgTWF0aC5jbHozMih4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywge1xuICBjbHozMjogZnVuY3Rpb24gY2x6MzIoeCkge1xuICAgIHJldHVybiAoeCA+Pj49IDApID8gMzEgLSBNYXRoLmZsb29yKE1hdGgubG9nKHggKyAwLjUpICogTWF0aC5MT0cyRSkgOiAzMjtcbiAgfVxufSk7XG4iLCIvLyAyMC4yLjIuMTIgTWF0aC5jb3NoKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGV4cCA9IE1hdGguZXhwO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7XG4gIGNvc2g6IGZ1bmN0aW9uIGNvc2goeCkge1xuICAgIHJldHVybiAoZXhwKHggPSAreCkgKyBleHAoLXgpKSAvIDI7XG4gIH1cbn0pO1xuIiwiLy8gMjAuMi4yLjE0IE1hdGguZXhwbTEoeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGV4cG0xID0gcmVxdWlyZSgnLi9fbWF0aC1leHBtMScpO1xuXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICgkZXhwbTEgIT0gTWF0aC5leHBtMSksICdNYXRoJywgeyBleHBtMTogJGV4cG0xIH0pO1xuIiwiLy8gMjAuMi4yLjE2IE1hdGguZnJvdW5kKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7IGZyb3VuZDogcmVxdWlyZSgnLi9fbWF0aC1mcm91bmQnKSB9KTtcbiIsIi8vIDIwLjIuMi4xNyBNYXRoLmh5cG90KFt2YWx1ZTFbLCB2YWx1ZTJbLCDigKYgXV1dKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBhYnMgPSBNYXRoLmFicztcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywge1xuICBoeXBvdDogZnVuY3Rpb24gaHlwb3QodmFsdWUxLCB2YWx1ZTIpIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuICAgIHZhciBzdW0gPSAwO1xuICAgIHZhciBpID0gMDtcbiAgICB2YXIgYUxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgdmFyIGxhcmcgPSAwO1xuICAgIHZhciBhcmcsIGRpdjtcbiAgICB3aGlsZSAoaSA8IGFMZW4pIHtcbiAgICAgIGFyZyA9IGFicyhhcmd1bWVudHNbaSsrXSk7XG4gICAgICBpZiAobGFyZyA8IGFyZykge1xuICAgICAgICBkaXYgPSBsYXJnIC8gYXJnO1xuICAgICAgICBzdW0gPSBzdW0gKiBkaXYgKiBkaXYgKyAxO1xuICAgICAgICBsYXJnID0gYXJnO1xuICAgICAgfSBlbHNlIGlmIChhcmcgPiAwKSB7XG4gICAgICAgIGRpdiA9IGFyZyAvIGxhcmc7XG4gICAgICAgIHN1bSArPSBkaXYgKiBkaXY7XG4gICAgICB9IGVsc2Ugc3VtICs9IGFyZztcbiAgICB9XG4gICAgcmV0dXJuIGxhcmcgPT09IEluZmluaXR5ID8gSW5maW5pdHkgOiBsYXJnICogTWF0aC5zcXJ0KHN1bSk7XG4gIH1cbn0pO1xuIiwiLy8gMjAuMi4yLjE4IE1hdGguaW11bCh4LCB5KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkaW11bCA9IE1hdGguaW11bDtcblxuLy8gc29tZSBXZWJLaXQgdmVyc2lvbnMgZmFpbHMgd2l0aCBiaWcgbnVtYmVycywgc29tZSBoYXMgd3JvbmcgYXJpdHlcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIHJldHVybiAkaW11bCgweGZmZmZmZmZmLCA1KSAhPSAtNSB8fCAkaW11bC5sZW5ndGggIT0gMjtcbn0pLCAnTWF0aCcsIHtcbiAgaW11bDogZnVuY3Rpb24gaW11bCh4LCB5KSB7XG4gICAgdmFyIFVJTlQxNiA9IDB4ZmZmZjtcbiAgICB2YXIgeG4gPSAreDtcbiAgICB2YXIgeW4gPSAreTtcbiAgICB2YXIgeGwgPSBVSU5UMTYgJiB4bjtcbiAgICB2YXIgeWwgPSBVSU5UMTYgJiB5bjtcbiAgICByZXR1cm4gMCB8IHhsICogeWwgKyAoKFVJTlQxNiAmIHhuID4+PiAxNikgKiB5bCArIHhsICogKFVJTlQxNiAmIHluID4+PiAxNikgPDwgMTYgPj4+IDApO1xuICB9XG59KTtcbiIsIi8vIDIwLjIuMi4yMSBNYXRoLmxvZzEwKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7XG4gIGxvZzEwOiBmdW5jdGlvbiBsb2cxMCh4KSB7XG4gICAgcmV0dXJuIE1hdGgubG9nKHgpICogTWF0aC5MT0cxMEU7XG4gIH1cbn0pO1xuIiwiLy8gMjAuMi4yLjIwIE1hdGgubG9nMXAoeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHsgbG9nMXA6IHJlcXVpcmUoJy4vX21hdGgtbG9nMXAnKSB9KTtcbiIsIi8vIDIwLjIuMi4yMiBNYXRoLmxvZzIoeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHtcbiAgbG9nMjogZnVuY3Rpb24gbG9nMih4KSB7XG4gICAgcmV0dXJuIE1hdGgubG9nKHgpIC8gTWF0aC5MTjI7XG4gIH1cbn0pO1xuIiwiLy8gMjAuMi4yLjI4IE1hdGguc2lnbih4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywgeyBzaWduOiByZXF1aXJlKCcuL19tYXRoLXNpZ24nKSB9KTtcbiIsIi8vIDIwLjIuMi4zMCBNYXRoLnNpbmgoeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgZXhwbTEgPSByZXF1aXJlKCcuL19tYXRoLWV4cG0xJyk7XG52YXIgZXhwID0gTWF0aC5leHA7XG5cbi8vIFY4IG5lYXIgQ2hyb21pdW0gMzggaGFzIGEgcHJvYmxlbSB3aXRoIHZlcnkgc21hbGwgbnVtYmVyc1xuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiByZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuICFNYXRoLnNpbmgoLTJlLTE3KSAhPSAtMmUtMTc7XG59KSwgJ01hdGgnLCB7XG4gIHNpbmg6IGZ1bmN0aW9uIHNpbmgoeCkge1xuICAgIHJldHVybiBNYXRoLmFicyh4ID0gK3gpIDwgMVxuICAgICAgPyAoZXhwbTEoeCkgLSBleHBtMSgteCkpIC8gMlxuICAgICAgOiAoZXhwKHggLSAxKSAtIGV4cCgteCAtIDEpKSAqIChNYXRoLkUgLyAyKTtcbiAgfVxufSk7XG4iLCIvLyAyMC4yLjIuMzMgTWF0aC50YW5oKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGV4cG0xID0gcmVxdWlyZSgnLi9fbWF0aC1leHBtMScpO1xudmFyIGV4cCA9IE1hdGguZXhwO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7XG4gIHRhbmg6IGZ1bmN0aW9uIHRhbmgoeCkge1xuICAgIHZhciBhID0gZXhwbTEoeCA9ICt4KTtcbiAgICB2YXIgYiA9IGV4cG0xKC14KTtcbiAgICByZXR1cm4gYSA9PSBJbmZpbml0eSA/IDEgOiBiID09IEluZmluaXR5ID8gLTEgOiAoYSAtIGIpIC8gKGV4cCh4KSArIGV4cCgteCkpO1xuICB9XG59KTtcbiIsIi8vIDIwLjIuMi4zNCBNYXRoLnRydW5jKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7XG4gIHRydW5jOiBmdW5jdGlvbiB0cnVuYyhpdCkge1xuICAgIHJldHVybiAoaXQgPiAwID8gTWF0aC5mbG9vciA6IE1hdGguY2VpbCkoaXQpO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciBjb2YgPSByZXF1aXJlKCcuL19jb2YnKTtcbnZhciBpbmhlcml0SWZSZXF1aXJlZCA9IHJlcXVpcmUoJy4vX2luaGVyaXQtaWYtcmVxdWlyZWQnKTtcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbnZhciBnT1BOID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcG4nKS5mO1xudmFyIGdPUEQgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpLmY7XG52YXIgZFAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mO1xudmFyICR0cmltID0gcmVxdWlyZSgnLi9fc3RyaW5nLXRyaW0nKS50cmltO1xudmFyIE5VTUJFUiA9ICdOdW1iZXInO1xudmFyICROdW1iZXIgPSBnbG9iYWxbTlVNQkVSXTtcbnZhciBCYXNlID0gJE51bWJlcjtcbnZhciBwcm90byA9ICROdW1iZXIucHJvdG90eXBlO1xuLy8gT3BlcmEgfjEyIGhhcyBicm9rZW4gT2JqZWN0I3RvU3RyaW5nXG52YXIgQlJPS0VOX0NPRiA9IGNvZihyZXF1aXJlKCcuL19vYmplY3QtY3JlYXRlJykocHJvdG8pKSA9PSBOVU1CRVI7XG52YXIgVFJJTSA9ICd0cmltJyBpbiBTdHJpbmcucHJvdG90eXBlO1xuXG4vLyA3LjEuMyBUb051bWJlcihhcmd1bWVudClcbnZhciB0b051bWJlciA9IGZ1bmN0aW9uIChhcmd1bWVudCkge1xuICB2YXIgaXQgPSB0b1ByaW1pdGl2ZShhcmd1bWVudCwgZmFsc2UpO1xuICBpZiAodHlwZW9mIGl0ID09ICdzdHJpbmcnICYmIGl0Lmxlbmd0aCA+IDIpIHtcbiAgICBpdCA9IFRSSU0gPyBpdC50cmltKCkgOiAkdHJpbShpdCwgMyk7XG4gICAgdmFyIGZpcnN0ID0gaXQuY2hhckNvZGVBdCgwKTtcbiAgICB2YXIgdGhpcmQsIHJhZGl4LCBtYXhDb2RlO1xuICAgIGlmIChmaXJzdCA9PT0gNDMgfHwgZmlyc3QgPT09IDQ1KSB7XG4gICAgICB0aGlyZCA9IGl0LmNoYXJDb2RlQXQoMik7XG4gICAgICBpZiAodGhpcmQgPT09IDg4IHx8IHRoaXJkID09PSAxMjApIHJldHVybiBOYU47IC8vIE51bWJlcignKzB4MScpIHNob3VsZCBiZSBOYU4sIG9sZCBWOCBmaXhcbiAgICB9IGVsc2UgaWYgKGZpcnN0ID09PSA0OCkge1xuICAgICAgc3dpdGNoIChpdC5jaGFyQ29kZUF0KDEpKSB7XG4gICAgICAgIGNhc2UgNjY6IGNhc2UgOTg6IHJhZGl4ID0gMjsgbWF4Q29kZSA9IDQ5OyBicmVhazsgLy8gZmFzdCBlcXVhbCAvXjBiWzAxXSskL2lcbiAgICAgICAgY2FzZSA3OTogY2FzZSAxMTE6IHJhZGl4ID0gODsgbWF4Q29kZSA9IDU1OyBicmVhazsgLy8gZmFzdCBlcXVhbCAvXjBvWzAtN10rJC9pXG4gICAgICAgIGRlZmF1bHQ6IHJldHVybiAraXQ7XG4gICAgICB9XG4gICAgICBmb3IgKHZhciBkaWdpdHMgPSBpdC5zbGljZSgyKSwgaSA9IDAsIGwgPSBkaWdpdHMubGVuZ3RoLCBjb2RlOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGNvZGUgPSBkaWdpdHMuY2hhckNvZGVBdChpKTtcbiAgICAgICAgLy8gcGFyc2VJbnQgcGFyc2VzIGEgc3RyaW5nIHRvIGEgZmlyc3QgdW5hdmFpbGFibGUgc3ltYm9sXG4gICAgICAgIC8vIGJ1dCBUb051bWJlciBzaG91bGQgcmV0dXJuIE5hTiBpZiBhIHN0cmluZyBjb250YWlucyB1bmF2YWlsYWJsZSBzeW1ib2xzXG4gICAgICAgIGlmIChjb2RlIDwgNDggfHwgY29kZSA+IG1heENvZGUpIHJldHVybiBOYU47XG4gICAgICB9IHJldHVybiBwYXJzZUludChkaWdpdHMsIHJhZGl4KTtcbiAgICB9XG4gIH0gcmV0dXJuICtpdDtcbn07XG5cbmlmICghJE51bWJlcignIDBvMScpIHx8ICEkTnVtYmVyKCcwYjEnKSB8fCAkTnVtYmVyKCcrMHgxJykpIHtcbiAgJE51bWJlciA9IGZ1bmN0aW9uIE51bWJlcih2YWx1ZSkge1xuICAgIHZhciBpdCA9IGFyZ3VtZW50cy5sZW5ndGggPCAxID8gMCA6IHZhbHVlO1xuICAgIHZhciB0aGF0ID0gdGhpcztcbiAgICByZXR1cm4gdGhhdCBpbnN0YW5jZW9mICROdW1iZXJcbiAgICAgIC8vIGNoZWNrIG9uIDEuLmNvbnN0cnVjdG9yKGZvbykgY2FzZVxuICAgICAgJiYgKEJST0tFTl9DT0YgPyBmYWlscyhmdW5jdGlvbiAoKSB7IHByb3RvLnZhbHVlT2YuY2FsbCh0aGF0KTsgfSkgOiBjb2YodGhhdCkgIT0gTlVNQkVSKVxuICAgICAgICA/IGluaGVyaXRJZlJlcXVpcmVkKG5ldyBCYXNlKHRvTnVtYmVyKGl0KSksIHRoYXQsICROdW1iZXIpIDogdG9OdW1iZXIoaXQpO1xuICB9O1xuICBmb3IgKHZhciBrZXlzID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSA/IGdPUE4oQmFzZSkgOiAoXG4gICAgLy8gRVMzOlxuICAgICdNQVhfVkFMVUUsTUlOX1ZBTFVFLE5hTixORUdBVElWRV9JTkZJTklUWSxQT1NJVElWRV9JTkZJTklUWSwnICtcbiAgICAvLyBFUzYgKGluIGNhc2UsIGlmIG1vZHVsZXMgd2l0aCBFUzYgTnVtYmVyIHN0YXRpY3MgcmVxdWlyZWQgYmVmb3JlKTpcbiAgICAnRVBTSUxPTixpc0Zpbml0ZSxpc0ludGVnZXIsaXNOYU4saXNTYWZlSW50ZWdlcixNQVhfU0FGRV9JTlRFR0VSLCcgK1xuICAgICdNSU5fU0FGRV9JTlRFR0VSLHBhcnNlRmxvYXQscGFyc2VJbnQsaXNJbnRlZ2VyJ1xuICApLnNwbGl0KCcsJyksIGogPSAwLCBrZXk7IGtleXMubGVuZ3RoID4gajsgaisrKSB7XG4gICAgaWYgKGhhcyhCYXNlLCBrZXkgPSBrZXlzW2pdKSAmJiAhaGFzKCROdW1iZXIsIGtleSkpIHtcbiAgICAgIGRQKCROdW1iZXIsIGtleSwgZ09QRChCYXNlLCBrZXkpKTtcbiAgICB9XG4gIH1cbiAgJE51bWJlci5wcm90b3R5cGUgPSBwcm90bztcbiAgcHJvdG8uY29uc3RydWN0b3IgPSAkTnVtYmVyO1xuICByZXF1aXJlKCcuL19yZWRlZmluZScpKGdsb2JhbCwgTlVNQkVSLCAkTnVtYmVyKTtcbn1cbiIsIi8vIDIwLjEuMi4xIE51bWJlci5FUFNJTE9OXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ051bWJlcicsIHsgRVBTSUxPTjogTWF0aC5wb3coMiwgLTUyKSB9KTtcbiIsIi8vIDIwLjEuMi4yIE51bWJlci5pc0Zpbml0ZShudW1iZXIpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIF9pc0Zpbml0ZSA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLmlzRmluaXRlO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ051bWJlcicsIHtcbiAgaXNGaW5pdGU6IGZ1bmN0aW9uIGlzRmluaXRlKGl0KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBpdCA9PSAnbnVtYmVyJyAmJiBfaXNGaW5pdGUoaXQpO1xuICB9XG59KTtcbiIsIi8vIDIwLjEuMi4zIE51bWJlci5pc0ludGVnZXIobnVtYmVyKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdOdW1iZXInLCB7IGlzSW50ZWdlcjogcmVxdWlyZSgnLi9faXMtaW50ZWdlcicpIH0pO1xuIiwiLy8gMjAuMS4yLjQgTnVtYmVyLmlzTmFOKG51bWJlcilcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTnVtYmVyJywge1xuICBpc05hTjogZnVuY3Rpb24gaXNOYU4obnVtYmVyKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICAgIHJldHVybiBudW1iZXIgIT0gbnVtYmVyO1xuICB9XG59KTtcbiIsIi8vIDIwLjEuMi41IE51bWJlci5pc1NhZmVJbnRlZ2VyKG51bWJlcilcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgaXNJbnRlZ2VyID0gcmVxdWlyZSgnLi9faXMtaW50ZWdlcicpO1xudmFyIGFicyA9IE1hdGguYWJzO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ051bWJlcicsIHtcbiAgaXNTYWZlSW50ZWdlcjogZnVuY3Rpb24gaXNTYWZlSW50ZWdlcihudW1iZXIpIHtcbiAgICByZXR1cm4gaXNJbnRlZ2VyKG51bWJlcikgJiYgYWJzKG51bWJlcikgPD0gMHgxZmZmZmZmZmZmZmZmZjtcbiAgfVxufSk7XG4iLCIvLyAyMC4xLjIuNiBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUlxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdOdW1iZXInLCB7IE1BWF9TQUZFX0lOVEVHRVI6IDB4MWZmZmZmZmZmZmZmZmYgfSk7XG4iLCIvLyAyMC4xLjIuMTAgTnVtYmVyLk1JTl9TQUZFX0lOVEVHRVJcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTnVtYmVyJywgeyBNSU5fU0FGRV9JTlRFR0VSOiAtMHgxZmZmZmZmZmZmZmZmZiB9KTtcbiIsInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJHBhcnNlRmxvYXQgPSByZXF1aXJlKCcuL19wYXJzZS1mbG9hdCcpO1xuLy8gMjAuMS4yLjEyIE51bWJlci5wYXJzZUZsb2F0KHN0cmluZylcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogKE51bWJlci5wYXJzZUZsb2F0ICE9ICRwYXJzZUZsb2F0KSwgJ051bWJlcicsIHsgcGFyc2VGbG9hdDogJHBhcnNlRmxvYXQgfSk7XG4iLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRwYXJzZUludCA9IHJlcXVpcmUoJy4vX3BhcnNlLWludCcpO1xuLy8gMjAuMS4yLjEzIE51bWJlci5wYXJzZUludChzdHJpbmcsIHJhZGl4KVxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAoTnVtYmVyLnBhcnNlSW50ICE9ICRwYXJzZUludCksICdOdW1iZXInLCB7IHBhcnNlSW50OiAkcGFyc2VJbnQgfSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKTtcbnZhciBhTnVtYmVyVmFsdWUgPSByZXF1aXJlKCcuL19hLW51bWJlci12YWx1ZScpO1xudmFyIHJlcGVhdCA9IHJlcXVpcmUoJy4vX3N0cmluZy1yZXBlYXQnKTtcbnZhciAkdG9GaXhlZCA9IDEuMC50b0ZpeGVkO1xudmFyIGZsb29yID0gTWF0aC5mbG9vcjtcbnZhciBkYXRhID0gWzAsIDAsIDAsIDAsIDAsIDBdO1xudmFyIEVSUk9SID0gJ051bWJlci50b0ZpeGVkOiBpbmNvcnJlY3QgaW52b2NhdGlvbiEnO1xudmFyIFpFUk8gPSAnMCc7XG5cbnZhciBtdWx0aXBseSA9IGZ1bmN0aW9uIChuLCBjKSB7XG4gIHZhciBpID0gLTE7XG4gIHZhciBjMiA9IGM7XG4gIHdoaWxlICgrK2kgPCA2KSB7XG4gICAgYzIgKz0gbiAqIGRhdGFbaV07XG4gICAgZGF0YVtpXSA9IGMyICUgMWU3O1xuICAgIGMyID0gZmxvb3IoYzIgLyAxZTcpO1xuICB9XG59O1xudmFyIGRpdmlkZSA9IGZ1bmN0aW9uIChuKSB7XG4gIHZhciBpID0gNjtcbiAgdmFyIGMgPSAwO1xuICB3aGlsZSAoLS1pID49IDApIHtcbiAgICBjICs9IGRhdGFbaV07XG4gICAgZGF0YVtpXSA9IGZsb29yKGMgLyBuKTtcbiAgICBjID0gKGMgJSBuKSAqIDFlNztcbiAgfVxufTtcbnZhciBudW1Ub1N0cmluZyA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIGkgPSA2O1xuICB2YXIgcyA9ICcnO1xuICB3aGlsZSAoLS1pID49IDApIHtcbiAgICBpZiAocyAhPT0gJycgfHwgaSA9PT0gMCB8fCBkYXRhW2ldICE9PSAwKSB7XG4gICAgICB2YXIgdCA9IFN0cmluZyhkYXRhW2ldKTtcbiAgICAgIHMgPSBzID09PSAnJyA/IHQgOiBzICsgcmVwZWF0LmNhbGwoWkVSTywgNyAtIHQubGVuZ3RoKSArIHQ7XG4gICAgfVxuICB9IHJldHVybiBzO1xufTtcbnZhciBwb3cgPSBmdW5jdGlvbiAoeCwgbiwgYWNjKSB7XG4gIHJldHVybiBuID09PSAwID8gYWNjIDogbiAlIDIgPT09IDEgPyBwb3coeCwgbiAtIDEsIGFjYyAqIHgpIDogcG93KHggKiB4LCBuIC8gMiwgYWNjKTtcbn07XG52YXIgbG9nID0gZnVuY3Rpb24gKHgpIHtcbiAgdmFyIG4gPSAwO1xuICB2YXIgeDIgPSB4O1xuICB3aGlsZSAoeDIgPj0gNDA5Nikge1xuICAgIG4gKz0gMTI7XG4gICAgeDIgLz0gNDA5NjtcbiAgfVxuICB3aGlsZSAoeDIgPj0gMikge1xuICAgIG4gKz0gMTtcbiAgICB4MiAvPSAyO1xuICB9IHJldHVybiBuO1xufTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAoISEkdG9GaXhlZCAmJiAoXG4gIDAuMDAwMDgudG9GaXhlZCgzKSAhPT0gJzAuMDAwJyB8fFxuICAwLjkudG9GaXhlZCgwKSAhPT0gJzEnIHx8XG4gIDEuMjU1LnRvRml4ZWQoMikgIT09ICcxLjI1JyB8fFxuICAxMDAwMDAwMDAwMDAwMDAwMTI4LjAudG9GaXhlZCgwKSAhPT0gJzEwMDAwMDAwMDAwMDAwMDAxMjgnXG4pIHx8ICFyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgLy8gVjggfiBBbmRyb2lkIDQuMy1cbiAgJHRvRml4ZWQuY2FsbCh7fSk7XG59KSksICdOdW1iZXInLCB7XG4gIHRvRml4ZWQ6IGZ1bmN0aW9uIHRvRml4ZWQoZnJhY3Rpb25EaWdpdHMpIHtcbiAgICB2YXIgeCA9IGFOdW1iZXJWYWx1ZSh0aGlzLCBFUlJPUik7XG4gICAgdmFyIGYgPSB0b0ludGVnZXIoZnJhY3Rpb25EaWdpdHMpO1xuICAgIHZhciBzID0gJyc7XG4gICAgdmFyIG0gPSBaRVJPO1xuICAgIHZhciBlLCB6LCBqLCBrO1xuICAgIGlmIChmIDwgMCB8fCBmID4gMjApIHRocm93IFJhbmdlRXJyb3IoRVJST1IpO1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgICBpZiAoeCAhPSB4KSByZXR1cm4gJ05hTic7XG4gICAgaWYgKHggPD0gLTFlMjEgfHwgeCA+PSAxZTIxKSByZXR1cm4gU3RyaW5nKHgpO1xuICAgIGlmICh4IDwgMCkge1xuICAgICAgcyA9ICctJztcbiAgICAgIHggPSAteDtcbiAgICB9XG4gICAgaWYgKHggPiAxZS0yMSkge1xuICAgICAgZSA9IGxvZyh4ICogcG93KDIsIDY5LCAxKSkgLSA2OTtcbiAgICAgIHogPSBlIDwgMCA/IHggKiBwb3coMiwgLWUsIDEpIDogeCAvIHBvdygyLCBlLCAxKTtcbiAgICAgIHogKj0gMHgxMDAwMDAwMDAwMDAwMDtcbiAgICAgIGUgPSA1MiAtIGU7XG4gICAgICBpZiAoZSA+IDApIHtcbiAgICAgICAgbXVsdGlwbHkoMCwgeik7XG4gICAgICAgIGogPSBmO1xuICAgICAgICB3aGlsZSAoaiA+PSA3KSB7XG4gICAgICAgICAgbXVsdGlwbHkoMWU3LCAwKTtcbiAgICAgICAgICBqIC09IDc7XG4gICAgICAgIH1cbiAgICAgICAgbXVsdGlwbHkocG93KDEwLCBqLCAxKSwgMCk7XG4gICAgICAgIGogPSBlIC0gMTtcbiAgICAgICAgd2hpbGUgKGogPj0gMjMpIHtcbiAgICAgICAgICBkaXZpZGUoMSA8PCAyMyk7XG4gICAgICAgICAgaiAtPSAyMztcbiAgICAgICAgfVxuICAgICAgICBkaXZpZGUoMSA8PCBqKTtcbiAgICAgICAgbXVsdGlwbHkoMSwgMSk7XG4gICAgICAgIGRpdmlkZSgyKTtcbiAgICAgICAgbSA9IG51bVRvU3RyaW5nKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBtdWx0aXBseSgwLCB6KTtcbiAgICAgICAgbXVsdGlwbHkoMSA8PCAtZSwgMCk7XG4gICAgICAgIG0gPSBudW1Ub1N0cmluZygpICsgcmVwZWF0LmNhbGwoWkVSTywgZik7XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChmID4gMCkge1xuICAgICAgayA9IG0ubGVuZ3RoO1xuICAgICAgbSA9IHMgKyAoayA8PSBmID8gJzAuJyArIHJlcGVhdC5jYWxsKFpFUk8sIGYgLSBrKSArIG0gOiBtLnNsaWNlKDAsIGsgLSBmKSArICcuJyArIG0uc2xpY2UoayAtIGYpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgbSA9IHMgKyBtO1xuICAgIH0gcmV0dXJuIG07XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xudmFyIGFOdW1iZXJWYWx1ZSA9IHJlcXVpcmUoJy4vX2EtbnVtYmVyLXZhbHVlJyk7XG52YXIgJHRvUHJlY2lzaW9uID0gMS4wLnRvUHJlY2lzaW9uO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqICgkZmFpbHMoZnVuY3Rpb24gKCkge1xuICAvLyBJRTctXG4gIHJldHVybiAkdG9QcmVjaXNpb24uY2FsbCgxLCB1bmRlZmluZWQpICE9PSAnMSc7XG59KSB8fCAhJGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgLy8gVjggfiBBbmRyb2lkIDQuMy1cbiAgJHRvUHJlY2lzaW9uLmNhbGwoe30pO1xufSkpLCAnTnVtYmVyJywge1xuICB0b1ByZWNpc2lvbjogZnVuY3Rpb24gdG9QcmVjaXNpb24ocHJlY2lzaW9uKSB7XG4gICAgdmFyIHRoYXQgPSBhTnVtYmVyVmFsdWUodGhpcywgJ051bWJlciN0b1ByZWNpc2lvbjogaW5jb3JyZWN0IGludm9jYXRpb24hJyk7XG4gICAgcmV0dXJuIHByZWNpc2lvbiA9PT0gdW5kZWZpbmVkID8gJHRvUHJlY2lzaW9uLmNhbGwodGhhdCkgOiAkdG9QcmVjaXNpb24uY2FsbCh0aGF0LCBwcmVjaXNpb24pO1xuICB9XG59KTtcbiIsIi8vIDE5LjEuMy4xIE9iamVjdC5hc3NpZ24odGFyZ2V0LCBzb3VyY2UpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiwgJ09iamVjdCcsIHsgYXNzaWduOiByZXF1aXJlKCcuL19vYmplY3QtYXNzaWduJykgfSk7XG4iLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuLy8gMTkuMS4yLjIgLyAxNS4yLjMuNSBPYmplY3QuY3JlYXRlKE8gWywgUHJvcGVydGllc10pXG4kZXhwb3J0KCRleHBvcnQuUywgJ09iamVjdCcsIHsgY3JlYXRlOiByZXF1aXJlKCcuL19vYmplY3QtY3JlYXRlJykgfSk7XG4iLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuLy8gMTkuMS4yLjMgLyAxNS4yLjMuNyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhPLCBQcm9wZXJ0aWVzKVxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSwgJ09iamVjdCcsIHsgZGVmaW5lUHJvcGVydGllczogcmVxdWlyZSgnLi9fb2JqZWN0LWRwcycpIH0pO1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbi8vIDE5LjEuMi40IC8gMTUuMi4zLjYgT2JqZWN0LmRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpLCAnT2JqZWN0JywgeyBkZWZpbmVQcm9wZXJ0eTogcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZiB9KTtcbiIsIi8vIDE5LjEuMi41IE9iamVjdC5mcmVlemUoTylcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIG1ldGEgPSByZXF1aXJlKCcuL19tZXRhJykub25GcmVlemU7XG5cbnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgnZnJlZXplJywgZnVuY3Rpb24gKCRmcmVlemUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGZyZWV6ZShpdCkge1xuICAgIHJldHVybiAkZnJlZXplICYmIGlzT2JqZWN0KGl0KSA/ICRmcmVlemUobWV0YShpdCkpIDogaXQ7XG4gIH07XG59KTtcbiIsIi8vIDE5LjEuMi42IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTywgUClcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgJGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJykuZjtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3InLCBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaXQsIGtleSkge1xuICAgIHJldHVybiAkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRvSU9iamVjdChpdCksIGtleSk7XG4gIH07XG59KTtcbiIsIi8vIDE5LjEuMi43IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKE8pXG5yZXF1aXJlKCcuL19vYmplY3Qtc2FwJykoJ2dldE93blByb3BlcnR5TmFtZXMnLCBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiByZXF1aXJlKCcuL19vYmplY3QtZ29wbi1leHQnKS5mO1xufSk7XG4iLCIvLyAxOS4xLjIuOSBPYmplY3QuZ2V0UHJvdG90eXBlT2YoTylcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyICRnZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKTtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdnZXRQcm90b3R5cGVPZicsIGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGdldFByb3RvdHlwZU9mKGl0KSB7XG4gICAgcmV0dXJuICRnZXRQcm90b3R5cGVPZih0b09iamVjdChpdCkpO1xuICB9O1xufSk7XG4iLCIvLyAxOS4xLjIuMTEgT2JqZWN0LmlzRXh0ZW5zaWJsZShPKVxudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG5cbnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgnaXNFeHRlbnNpYmxlJywgZnVuY3Rpb24gKCRpc0V4dGVuc2libGUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGlzRXh0ZW5zaWJsZShpdCkge1xuICAgIHJldHVybiBpc09iamVjdChpdCkgPyAkaXNFeHRlbnNpYmxlID8gJGlzRXh0ZW5zaWJsZShpdCkgOiB0cnVlIDogZmFsc2U7XG4gIH07XG59KTtcbiIsIi8vIDE5LjEuMi4xMiBPYmplY3QuaXNGcm96ZW4oTylcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xuXG5yZXF1aXJlKCcuL19vYmplY3Qtc2FwJykoJ2lzRnJvemVuJywgZnVuY3Rpb24gKCRpc0Zyb3plbikge1xuICByZXR1cm4gZnVuY3Rpb24gaXNGcm96ZW4oaXQpIHtcbiAgICByZXR1cm4gaXNPYmplY3QoaXQpID8gJGlzRnJvemVuID8gJGlzRnJvemVuKGl0KSA6IGZhbHNlIDogdHJ1ZTtcbiAgfTtcbn0pO1xuIiwiLy8gMTkuMS4yLjEzIE9iamVjdC5pc1NlYWxlZChPKVxudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG5cbnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgnaXNTZWFsZWQnLCBmdW5jdGlvbiAoJGlzU2VhbGVkKSB7XG4gIHJldHVybiBmdW5jdGlvbiBpc1NlYWxlZChpdCkge1xuICAgIHJldHVybiBpc09iamVjdChpdCkgPyAkaXNTZWFsZWQgPyAkaXNTZWFsZWQoaXQpIDogZmFsc2UgOiB0cnVlO1xuICB9O1xufSk7XG4iLCIvLyAxOS4xLjMuMTAgT2JqZWN0LmlzKHZhbHVlMSwgdmFsdWUyKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbiRleHBvcnQoJGV4cG9ydC5TLCAnT2JqZWN0JywgeyBpczogcmVxdWlyZSgnLi9fc2FtZS12YWx1ZScpIH0pO1xuIiwiLy8gMTkuMS4yLjE0IE9iamVjdC5rZXlzKE8pXG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciAka2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzJyk7XG5cbnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgna2V5cycsIGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGtleXMoaXQpIHtcbiAgICByZXR1cm4gJGtleXModG9PYmplY3QoaXQpKTtcbiAgfTtcbn0pO1xuIiwiLy8gMTkuMS4yLjE1IE9iamVjdC5wcmV2ZW50RXh0ZW5zaW9ucyhPKVxudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgbWV0YSA9IHJlcXVpcmUoJy4vX21ldGEnKS5vbkZyZWV6ZTtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdwcmV2ZW50RXh0ZW5zaW9ucycsIGZ1bmN0aW9uICgkcHJldmVudEV4dGVuc2lvbnMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHByZXZlbnRFeHRlbnNpb25zKGl0KSB7XG4gICAgcmV0dXJuICRwcmV2ZW50RXh0ZW5zaW9ucyAmJiBpc09iamVjdChpdCkgPyAkcHJldmVudEV4dGVuc2lvbnMobWV0YShpdCkpIDogaXQ7XG4gIH07XG59KTtcbiIsIi8vIDE5LjEuMi4xNyBPYmplY3Quc2VhbChPKVxudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgbWV0YSA9IHJlcXVpcmUoJy4vX21ldGEnKS5vbkZyZWV6ZTtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdzZWFsJywgZnVuY3Rpb24gKCRzZWFsKSB7XG4gIHJldHVybiBmdW5jdGlvbiBzZWFsKGl0KSB7XG4gICAgcmV0dXJuICRzZWFsICYmIGlzT2JqZWN0KGl0KSA/ICRzZWFsKG1ldGEoaXQpKSA6IGl0O1xuICB9O1xufSk7XG4iLCIvLyAxOS4xLjMuMTkgT2JqZWN0LnNldFByb3RvdHlwZU9mKE8sIHByb3RvKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbiRleHBvcnQoJGV4cG9ydC5TLCAnT2JqZWN0JywgeyBzZXRQcm90b3R5cGVPZjogcmVxdWlyZSgnLi9fc2V0LXByb3RvJykuc2V0IH0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gMTkuMS4zLjYgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZygpXG52YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4vX2NsYXNzb2YnKTtcbnZhciB0ZXN0ID0ge307XG50ZXN0W3JlcXVpcmUoJy4vX3drcycpKCd0b1N0cmluZ1RhZycpXSA9ICd6JztcbmlmICh0ZXN0ICsgJycgIT0gJ1tvYmplY3Qgel0nKSB7XG4gIHJlcXVpcmUoJy4vX3JlZGVmaW5lJykoT2JqZWN0LnByb3RvdHlwZSwgJ3RvU3RyaW5nJywgZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuICdbb2JqZWN0ICcgKyBjbGFzc29mKHRoaXMpICsgJ10nO1xuICB9LCB0cnVlKTtcbn1cbiIsInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJHBhcnNlRmxvYXQgPSByZXF1aXJlKCcuL19wYXJzZS1mbG9hdCcpO1xuLy8gMTguMi40IHBhcnNlRmxvYXQoc3RyaW5nKVxuJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LkYgKiAocGFyc2VGbG9hdCAhPSAkcGFyc2VGbG9hdCksIHsgcGFyc2VGbG9hdDogJHBhcnNlRmxvYXQgfSk7XG4iLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRwYXJzZUludCA9IHJlcXVpcmUoJy4vX3BhcnNlLWludCcpO1xuLy8gMTguMi41IHBhcnNlSW50KHN0cmluZywgcmFkaXgpXG4kZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuRiAqIChwYXJzZUludCAhPSAkcGFyc2VJbnQpLCB7IHBhcnNlSW50OiAkcGFyc2VJbnQgfSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgTElCUkFSWSA9IHJlcXVpcmUoJy4vX2xpYnJhcnknKTtcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBjdHggPSByZXF1aXJlKCcuL19jdHgnKTtcbnZhciBjbGFzc29mID0gcmVxdWlyZSgnLi9fY2xhc3NvZicpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcbnZhciBhbkluc3RhbmNlID0gcmVxdWlyZSgnLi9fYW4taW5zdGFuY2UnKTtcbnZhciBmb3JPZiA9IHJlcXVpcmUoJy4vX2Zvci1vZicpO1xudmFyIHNwZWNpZXNDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4vX3NwZWNpZXMtY29uc3RydWN0b3InKTtcbnZhciB0YXNrID0gcmVxdWlyZSgnLi9fdGFzaycpLnNldDtcbnZhciBtaWNyb3Rhc2sgPSByZXF1aXJlKCcuL19taWNyb3Rhc2snKSgpO1xudmFyIG5ld1Byb21pc2VDYXBhYmlsaXR5TW9kdWxlID0gcmVxdWlyZSgnLi9fbmV3LXByb21pc2UtY2FwYWJpbGl0eScpO1xudmFyIHBlcmZvcm0gPSByZXF1aXJlKCcuL19wZXJmb3JtJyk7XG52YXIgdXNlckFnZW50ID0gcmVxdWlyZSgnLi9fdXNlci1hZ2VudCcpO1xudmFyIHByb21pc2VSZXNvbHZlID0gcmVxdWlyZSgnLi9fcHJvbWlzZS1yZXNvbHZlJyk7XG52YXIgUFJPTUlTRSA9ICdQcm9taXNlJztcbnZhciBUeXBlRXJyb3IgPSBnbG9iYWwuVHlwZUVycm9yO1xudmFyIHByb2Nlc3MgPSBnbG9iYWwucHJvY2VzcztcbnZhciB2ZXJzaW9ucyA9IHByb2Nlc3MgJiYgcHJvY2Vzcy52ZXJzaW9ucztcbnZhciB2OCA9IHZlcnNpb25zICYmIHZlcnNpb25zLnY4IHx8ICcnO1xudmFyICRQcm9taXNlID0gZ2xvYmFsW1BST01JU0VdO1xudmFyIGlzTm9kZSA9IGNsYXNzb2YocHJvY2VzcykgPT0gJ3Byb2Nlc3MnO1xudmFyIGVtcHR5ID0gZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9O1xudmFyIEludGVybmFsLCBuZXdHZW5lcmljUHJvbWlzZUNhcGFiaWxpdHksIE93blByb21pc2VDYXBhYmlsaXR5LCBXcmFwcGVyO1xudmFyIG5ld1Byb21pc2VDYXBhYmlsaXR5ID0gbmV3R2VuZXJpY1Byb21pc2VDYXBhYmlsaXR5ID0gbmV3UHJvbWlzZUNhcGFiaWxpdHlNb2R1bGUuZjtcblxudmFyIFVTRV9OQVRJVkUgPSAhIWZ1bmN0aW9uICgpIHtcbiAgdHJ5IHtcbiAgICAvLyBjb3JyZWN0IHN1YmNsYXNzaW5nIHdpdGggQEBzcGVjaWVzIHN1cHBvcnRcbiAgICB2YXIgcHJvbWlzZSA9ICRQcm9taXNlLnJlc29sdmUoMSk7XG4gICAgdmFyIEZha2VQcm9taXNlID0gKHByb21pc2UuY29uc3RydWN0b3IgPSB7fSlbcmVxdWlyZSgnLi9fd2tzJykoJ3NwZWNpZXMnKV0gPSBmdW5jdGlvbiAoZXhlYykge1xuICAgICAgZXhlYyhlbXB0eSwgZW1wdHkpO1xuICAgIH07XG4gICAgLy8gdW5oYW5kbGVkIHJlamVjdGlvbnMgdHJhY2tpbmcgc3VwcG9ydCwgTm9kZUpTIFByb21pc2Ugd2l0aG91dCBpdCBmYWlscyBAQHNwZWNpZXMgdGVzdFxuICAgIHJldHVybiAoaXNOb2RlIHx8IHR5cGVvZiBQcm9taXNlUmVqZWN0aW9uRXZlbnQgPT0gJ2Z1bmN0aW9uJylcbiAgICAgICYmIHByb21pc2UudGhlbihlbXB0eSkgaW5zdGFuY2VvZiBGYWtlUHJvbWlzZVxuICAgICAgLy8gdjggNi42IChOb2RlIDEwIGFuZCBDaHJvbWUgNjYpIGhhdmUgYSBidWcgd2l0aCByZXNvbHZpbmcgY3VzdG9tIHRoZW5hYmxlc1xuICAgICAgLy8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9ODMwNTY1XG4gICAgICAvLyB3ZSBjYW4ndCBkZXRlY3QgaXQgc3luY2hyb25vdXNseSwgc28ganVzdCBjaGVjayB2ZXJzaW9uc1xuICAgICAgJiYgdjguaW5kZXhPZignNi42JykgIT09IDBcbiAgICAgICYmIHVzZXJBZ2VudC5pbmRleE9mKCdDaHJvbWUvNjYnKSA9PT0gLTE7XG4gIH0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxufSgpO1xuXG4vLyBoZWxwZXJzXG52YXIgaXNUaGVuYWJsZSA9IGZ1bmN0aW9uIChpdCkge1xuICB2YXIgdGhlbjtcbiAgcmV0dXJuIGlzT2JqZWN0KGl0KSAmJiB0eXBlb2YgKHRoZW4gPSBpdC50aGVuKSA9PSAnZnVuY3Rpb24nID8gdGhlbiA6IGZhbHNlO1xufTtcbnZhciBub3RpZnkgPSBmdW5jdGlvbiAocHJvbWlzZSwgaXNSZWplY3QpIHtcbiAgaWYgKHByb21pc2UuX24pIHJldHVybjtcbiAgcHJvbWlzZS5fbiA9IHRydWU7XG4gIHZhciBjaGFpbiA9IHByb21pc2UuX2M7XG4gIG1pY3JvdGFzayhmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHZhbHVlID0gcHJvbWlzZS5fdjtcbiAgICB2YXIgb2sgPSBwcm9taXNlLl9zID09IDE7XG4gICAgdmFyIGkgPSAwO1xuICAgIHZhciBydW4gPSBmdW5jdGlvbiAocmVhY3Rpb24pIHtcbiAgICAgIHZhciBoYW5kbGVyID0gb2sgPyByZWFjdGlvbi5vayA6IHJlYWN0aW9uLmZhaWw7XG4gICAgICB2YXIgcmVzb2x2ZSA9IHJlYWN0aW9uLnJlc29sdmU7XG4gICAgICB2YXIgcmVqZWN0ID0gcmVhY3Rpb24ucmVqZWN0O1xuICAgICAgdmFyIGRvbWFpbiA9IHJlYWN0aW9uLmRvbWFpbjtcbiAgICAgIHZhciByZXN1bHQsIHRoZW4sIGV4aXRlZDtcbiAgICAgIHRyeSB7XG4gICAgICAgIGlmIChoYW5kbGVyKSB7XG4gICAgICAgICAgaWYgKCFvaykge1xuICAgICAgICAgICAgaWYgKHByb21pc2UuX2ggPT0gMikgb25IYW5kbGVVbmhhbmRsZWQocHJvbWlzZSk7XG4gICAgICAgICAgICBwcm9taXNlLl9oID0gMTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKGhhbmRsZXIgPT09IHRydWUpIHJlc3VsdCA9IHZhbHVlO1xuICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgaWYgKGRvbWFpbikgZG9tYWluLmVudGVyKCk7XG4gICAgICAgICAgICByZXN1bHQgPSBoYW5kbGVyKHZhbHVlKTsgLy8gbWF5IHRocm93XG4gICAgICAgICAgICBpZiAoZG9tYWluKSB7XG4gICAgICAgICAgICAgIGRvbWFpbi5leGl0KCk7XG4gICAgICAgICAgICAgIGV4aXRlZCA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChyZXN1bHQgPT09IHJlYWN0aW9uLnByb21pc2UpIHtcbiAgICAgICAgICAgIHJlamVjdChUeXBlRXJyb3IoJ1Byb21pc2UtY2hhaW4gY3ljbGUnKSk7XG4gICAgICAgICAgfSBlbHNlIGlmICh0aGVuID0gaXNUaGVuYWJsZShyZXN1bHQpKSB7XG4gICAgICAgICAgICB0aGVuLmNhbGwocmVzdWx0LCByZXNvbHZlLCByZWplY3QpO1xuICAgICAgICAgIH0gZWxzZSByZXNvbHZlKHJlc3VsdCk7XG4gICAgICAgIH0gZWxzZSByZWplY3QodmFsdWUpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBpZiAoZG9tYWluICYmICFleGl0ZWQpIGRvbWFpbi5leGl0KCk7XG4gICAgICAgIHJlamVjdChlKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHdoaWxlIChjaGFpbi5sZW5ndGggPiBpKSBydW4oY2hhaW5baSsrXSk7IC8vIHZhcmlhYmxlIGxlbmd0aCAtIGNhbid0IHVzZSBmb3JFYWNoXG4gICAgcHJvbWlzZS5fYyA9IFtdO1xuICAgIHByb21pc2UuX24gPSBmYWxzZTtcbiAgICBpZiAoaXNSZWplY3QgJiYgIXByb21pc2UuX2gpIG9uVW5oYW5kbGVkKHByb21pc2UpO1xuICB9KTtcbn07XG52YXIgb25VbmhhbmRsZWQgPSBmdW5jdGlvbiAocHJvbWlzZSkge1xuICB0YXNrLmNhbGwoZ2xvYmFsLCBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHZhbHVlID0gcHJvbWlzZS5fdjtcbiAgICB2YXIgdW5oYW5kbGVkID0gaXNVbmhhbmRsZWQocHJvbWlzZSk7XG4gICAgdmFyIHJlc3VsdCwgaGFuZGxlciwgY29uc29sZTtcbiAgICBpZiAodW5oYW5kbGVkKSB7XG4gICAgICByZXN1bHQgPSBwZXJmb3JtKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKGlzTm9kZSkge1xuICAgICAgICAgIHByb2Nlc3MuZW1pdCgndW5oYW5kbGVkUmVqZWN0aW9uJywgdmFsdWUsIHByb21pc2UpO1xuICAgICAgICB9IGVsc2UgaWYgKGhhbmRsZXIgPSBnbG9iYWwub251bmhhbmRsZWRyZWplY3Rpb24pIHtcbiAgICAgICAgICBoYW5kbGVyKHsgcHJvbWlzZTogcHJvbWlzZSwgcmVhc29uOiB2YWx1ZSB9KTtcbiAgICAgICAgfSBlbHNlIGlmICgoY29uc29sZSA9IGdsb2JhbC5jb25zb2xlKSAmJiBjb25zb2xlLmVycm9yKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcignVW5oYW5kbGVkIHByb21pc2UgcmVqZWN0aW9uJywgdmFsdWUpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIC8vIEJyb3dzZXJzIHNob3VsZCBub3QgdHJpZ2dlciBgcmVqZWN0aW9uSGFuZGxlZGAgZXZlbnQgaWYgaXQgd2FzIGhhbmRsZWQgaGVyZSwgTm9kZUpTIC0gc2hvdWxkXG4gICAgICBwcm9taXNlLl9oID0gaXNOb2RlIHx8IGlzVW5oYW5kbGVkKHByb21pc2UpID8gMiA6IDE7XG4gICAgfSBwcm9taXNlLl9hID0gdW5kZWZpbmVkO1xuICAgIGlmICh1bmhhbmRsZWQgJiYgcmVzdWx0LmUpIHRocm93IHJlc3VsdC52O1xuICB9KTtcbn07XG52YXIgaXNVbmhhbmRsZWQgPSBmdW5jdGlvbiAocHJvbWlzZSkge1xuICByZXR1cm4gcHJvbWlzZS5faCAhPT0gMSAmJiAocHJvbWlzZS5fYSB8fCBwcm9taXNlLl9jKS5sZW5ndGggPT09IDA7XG59O1xudmFyIG9uSGFuZGxlVW5oYW5kbGVkID0gZnVuY3Rpb24gKHByb21pc2UpIHtcbiAgdGFzay5jYWxsKGdsb2JhbCwgZnVuY3Rpb24gKCkge1xuICAgIHZhciBoYW5kbGVyO1xuICAgIGlmIChpc05vZGUpIHtcbiAgICAgIHByb2Nlc3MuZW1pdCgncmVqZWN0aW9uSGFuZGxlZCcsIHByb21pc2UpO1xuICAgIH0gZWxzZSBpZiAoaGFuZGxlciA9IGdsb2JhbC5vbnJlamVjdGlvbmhhbmRsZWQpIHtcbiAgICAgIGhhbmRsZXIoeyBwcm9taXNlOiBwcm9taXNlLCByZWFzb246IHByb21pc2UuX3YgfSk7XG4gICAgfVxuICB9KTtcbn07XG52YXIgJHJlamVjdCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICB2YXIgcHJvbWlzZSA9IHRoaXM7XG4gIGlmIChwcm9taXNlLl9kKSByZXR1cm47XG4gIHByb21pc2UuX2QgPSB0cnVlO1xuICBwcm9taXNlID0gcHJvbWlzZS5fdyB8fCBwcm9taXNlOyAvLyB1bndyYXBcbiAgcHJvbWlzZS5fdiA9IHZhbHVlO1xuICBwcm9taXNlLl9zID0gMjtcbiAgaWYgKCFwcm9taXNlLl9hKSBwcm9taXNlLl9hID0gcHJvbWlzZS5fYy5zbGljZSgpO1xuICBub3RpZnkocHJvbWlzZSwgdHJ1ZSk7XG59O1xudmFyICRyZXNvbHZlID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gIHZhciBwcm9taXNlID0gdGhpcztcbiAgdmFyIHRoZW47XG4gIGlmIChwcm9taXNlLl9kKSByZXR1cm47XG4gIHByb21pc2UuX2QgPSB0cnVlO1xuICBwcm9taXNlID0gcHJvbWlzZS5fdyB8fCBwcm9taXNlOyAvLyB1bndyYXBcbiAgdHJ5IHtcbiAgICBpZiAocHJvbWlzZSA9PT0gdmFsdWUpIHRocm93IFR5cGVFcnJvcihcIlByb21pc2UgY2FuJ3QgYmUgcmVzb2x2ZWQgaXRzZWxmXCIpO1xuICAgIGlmICh0aGVuID0gaXNUaGVuYWJsZSh2YWx1ZSkpIHtcbiAgICAgIG1pY3JvdGFzayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB3cmFwcGVyID0geyBfdzogcHJvbWlzZSwgX2Q6IGZhbHNlIH07IC8vIHdyYXBcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICB0aGVuLmNhbGwodmFsdWUsIGN0eCgkcmVzb2x2ZSwgd3JhcHBlciwgMSksIGN0eCgkcmVqZWN0LCB3cmFwcGVyLCAxKSk7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAkcmVqZWN0LmNhbGwod3JhcHBlciwgZSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBwcm9taXNlLl92ID0gdmFsdWU7XG4gICAgICBwcm9taXNlLl9zID0gMTtcbiAgICAgIG5vdGlmeShwcm9taXNlLCBmYWxzZSk7XG4gICAgfVxuICB9IGNhdGNoIChlKSB7XG4gICAgJHJlamVjdC5jYWxsKHsgX3c6IHByb21pc2UsIF9kOiBmYWxzZSB9LCBlKTsgLy8gd3JhcFxuICB9XG59O1xuXG4vLyBjb25zdHJ1Y3RvciBwb2x5ZmlsbFxuaWYgKCFVU0VfTkFUSVZFKSB7XG4gIC8vIDI1LjQuMy4xIFByb21pc2UoZXhlY3V0b3IpXG4gICRQcm9taXNlID0gZnVuY3Rpb24gUHJvbWlzZShleGVjdXRvcikge1xuICAgIGFuSW5zdGFuY2UodGhpcywgJFByb21pc2UsIFBST01JU0UsICdfaCcpO1xuICAgIGFGdW5jdGlvbihleGVjdXRvcik7XG4gICAgSW50ZXJuYWwuY2FsbCh0aGlzKTtcbiAgICB0cnkge1xuICAgICAgZXhlY3V0b3IoY3R4KCRyZXNvbHZlLCB0aGlzLCAxKSwgY3R4KCRyZWplY3QsIHRoaXMsIDEpKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICRyZWplY3QuY2FsbCh0aGlzLCBlcnIpO1xuICAgIH1cbiAgfTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG4gIEludGVybmFsID0gZnVuY3Rpb24gUHJvbWlzZShleGVjdXRvcikge1xuICAgIHRoaXMuX2MgPSBbXTsgICAgICAgICAgICAgLy8gPC0gYXdhaXRpbmcgcmVhY3Rpb25zXG4gICAgdGhpcy5fYSA9IHVuZGVmaW5lZDsgICAgICAvLyA8LSBjaGVja2VkIGluIGlzVW5oYW5kbGVkIHJlYWN0aW9uc1xuICAgIHRoaXMuX3MgPSAwOyAgICAgICAgICAgICAgLy8gPC0gc3RhdGVcbiAgICB0aGlzLl9kID0gZmFsc2U7ICAgICAgICAgIC8vIDwtIGRvbmVcbiAgICB0aGlzLl92ID0gdW5kZWZpbmVkOyAgICAgIC8vIDwtIHZhbHVlXG4gICAgdGhpcy5faCA9IDA7ICAgICAgICAgICAgICAvLyA8LSByZWplY3Rpb24gc3RhdGUsIDAgLSBkZWZhdWx0LCAxIC0gaGFuZGxlZCwgMiAtIHVuaGFuZGxlZFxuICAgIHRoaXMuX24gPSBmYWxzZTsgICAgICAgICAgLy8gPC0gbm90aWZ5XG4gIH07XG4gIEludGVybmFsLnByb3RvdHlwZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lLWFsbCcpKCRQcm9taXNlLnByb3RvdHlwZSwge1xuICAgIC8vIDI1LjQuNS4zIFByb21pc2UucHJvdG90eXBlLnRoZW4ob25GdWxmaWxsZWQsIG9uUmVqZWN0ZWQpXG4gICAgdGhlbjogZnVuY3Rpb24gdGhlbihvbkZ1bGZpbGxlZCwgb25SZWplY3RlZCkge1xuICAgICAgdmFyIHJlYWN0aW9uID0gbmV3UHJvbWlzZUNhcGFiaWxpdHkoc3BlY2llc0NvbnN0cnVjdG9yKHRoaXMsICRQcm9taXNlKSk7XG4gICAgICByZWFjdGlvbi5vayA9IHR5cGVvZiBvbkZ1bGZpbGxlZCA9PSAnZnVuY3Rpb24nID8gb25GdWxmaWxsZWQgOiB0cnVlO1xuICAgICAgcmVhY3Rpb24uZmFpbCA9IHR5cGVvZiBvblJlamVjdGVkID09ICdmdW5jdGlvbicgJiYgb25SZWplY3RlZDtcbiAgICAgIHJlYWN0aW9uLmRvbWFpbiA9IGlzTm9kZSA/IHByb2Nlc3MuZG9tYWluIDogdW5kZWZpbmVkO1xuICAgICAgdGhpcy5fYy5wdXNoKHJlYWN0aW9uKTtcbiAgICAgIGlmICh0aGlzLl9hKSB0aGlzLl9hLnB1c2gocmVhY3Rpb24pO1xuICAgICAgaWYgKHRoaXMuX3MpIG5vdGlmeSh0aGlzLCBmYWxzZSk7XG4gICAgICByZXR1cm4gcmVhY3Rpb24ucHJvbWlzZTtcbiAgICB9LFxuICAgIC8vIDI1LjQuNS4xIFByb21pc2UucHJvdG90eXBlLmNhdGNoKG9uUmVqZWN0ZWQpXG4gICAgJ2NhdGNoJzogZnVuY3Rpb24gKG9uUmVqZWN0ZWQpIHtcbiAgICAgIHJldHVybiB0aGlzLnRoZW4odW5kZWZpbmVkLCBvblJlamVjdGVkKTtcbiAgICB9XG4gIH0pO1xuICBPd25Qcm9taXNlQ2FwYWJpbGl0eSA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgcHJvbWlzZSA9IG5ldyBJbnRlcm5hbCgpO1xuICAgIHRoaXMucHJvbWlzZSA9IHByb21pc2U7XG4gICAgdGhpcy5yZXNvbHZlID0gY3R4KCRyZXNvbHZlLCBwcm9taXNlLCAxKTtcbiAgICB0aGlzLnJlamVjdCA9IGN0eCgkcmVqZWN0LCBwcm9taXNlLCAxKTtcbiAgfTtcbiAgbmV3UHJvbWlzZUNhcGFiaWxpdHlNb2R1bGUuZiA9IG5ld1Byb21pc2VDYXBhYmlsaXR5ID0gZnVuY3Rpb24gKEMpIHtcbiAgICByZXR1cm4gQyA9PT0gJFByb21pc2UgfHwgQyA9PT0gV3JhcHBlclxuICAgICAgPyBuZXcgT3duUHJvbWlzZUNhcGFiaWxpdHkoQylcbiAgICAgIDogbmV3R2VuZXJpY1Byb21pc2VDYXBhYmlsaXR5KEMpO1xuICB9O1xufVxuXG4kZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuVyArICRleHBvcnQuRiAqICFVU0VfTkFUSVZFLCB7IFByb21pc2U6ICRQcm9taXNlIH0pO1xucmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKSgkUHJvbWlzZSwgUFJPTUlTRSk7XG5yZXF1aXJlKCcuL19zZXQtc3BlY2llcycpKFBST01JU0UpO1xuV3JhcHBlciA9IHJlcXVpcmUoJy4vX2NvcmUnKVtQUk9NSVNFXTtcblxuLy8gc3RhdGljc1xuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhVVNFX05BVElWRSwgUFJPTUlTRSwge1xuICAvLyAyNS40LjQuNSBQcm9taXNlLnJlamVjdChyKVxuICByZWplY3Q6IGZ1bmN0aW9uIHJlamVjdChyKSB7XG4gICAgdmFyIGNhcGFiaWxpdHkgPSBuZXdQcm9taXNlQ2FwYWJpbGl0eSh0aGlzKTtcbiAgICB2YXIgJCRyZWplY3QgPSBjYXBhYmlsaXR5LnJlamVjdDtcbiAgICAkJHJlamVjdChyKTtcbiAgICByZXR1cm4gY2FwYWJpbGl0eS5wcm9taXNlO1xuICB9XG59KTtcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogKExJQlJBUlkgfHwgIVVTRV9OQVRJVkUpLCBQUk9NSVNFLCB7XG4gIC8vIDI1LjQuNC42IFByb21pc2UucmVzb2x2ZSh4KVxuICByZXNvbHZlOiBmdW5jdGlvbiByZXNvbHZlKHgpIHtcbiAgICByZXR1cm4gcHJvbWlzZVJlc29sdmUoTElCUkFSWSAmJiB0aGlzID09PSBXcmFwcGVyID8gJFByb21pc2UgOiB0aGlzLCB4KTtcbiAgfVxufSk7XG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICEoVVNFX05BVElWRSAmJiByZXF1aXJlKCcuL19pdGVyLWRldGVjdCcpKGZ1bmN0aW9uIChpdGVyKSB7XG4gICRQcm9taXNlLmFsbChpdGVyKVsnY2F0Y2gnXShlbXB0eSk7XG59KSksIFBST01JU0UsIHtcbiAgLy8gMjUuNC40LjEgUHJvbWlzZS5hbGwoaXRlcmFibGUpXG4gIGFsbDogZnVuY3Rpb24gYWxsKGl0ZXJhYmxlKSB7XG4gICAgdmFyIEMgPSB0aGlzO1xuICAgIHZhciBjYXBhYmlsaXR5ID0gbmV3UHJvbWlzZUNhcGFiaWxpdHkoQyk7XG4gICAgdmFyIHJlc29sdmUgPSBjYXBhYmlsaXR5LnJlc29sdmU7XG4gICAgdmFyIHJlamVjdCA9IGNhcGFiaWxpdHkucmVqZWN0O1xuICAgIHZhciByZXN1bHQgPSBwZXJmb3JtKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciB2YWx1ZXMgPSBbXTtcbiAgICAgIHZhciBpbmRleCA9IDA7XG4gICAgICB2YXIgcmVtYWluaW5nID0gMTtcbiAgICAgIGZvck9mKGl0ZXJhYmxlLCBmYWxzZSwgZnVuY3Rpb24gKHByb21pc2UpIHtcbiAgICAgICAgdmFyICRpbmRleCA9IGluZGV4Kys7XG4gICAgICAgIHZhciBhbHJlYWR5Q2FsbGVkID0gZmFsc2U7XG4gICAgICAgIHZhbHVlcy5wdXNoKHVuZGVmaW5lZCk7XG4gICAgICAgIHJlbWFpbmluZysrO1xuICAgICAgICBDLnJlc29sdmUocHJvbWlzZSkudGhlbihmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICBpZiAoYWxyZWFkeUNhbGxlZCkgcmV0dXJuO1xuICAgICAgICAgIGFscmVhZHlDYWxsZWQgPSB0cnVlO1xuICAgICAgICAgIHZhbHVlc1skaW5kZXhdID0gdmFsdWU7XG4gICAgICAgICAgLS1yZW1haW5pbmcgfHwgcmVzb2x2ZSh2YWx1ZXMpO1xuICAgICAgICB9LCByZWplY3QpO1xuICAgICAgfSk7XG4gICAgICAtLXJlbWFpbmluZyB8fCByZXNvbHZlKHZhbHVlcyk7XG4gICAgfSk7XG4gICAgaWYgKHJlc3VsdC5lKSByZWplY3QocmVzdWx0LnYpO1xuICAgIHJldHVybiBjYXBhYmlsaXR5LnByb21pc2U7XG4gIH0sXG4gIC8vIDI1LjQuNC40IFByb21pc2UucmFjZShpdGVyYWJsZSlcbiAgcmFjZTogZnVuY3Rpb24gcmFjZShpdGVyYWJsZSkge1xuICAgIHZhciBDID0gdGhpcztcbiAgICB2YXIgY2FwYWJpbGl0eSA9IG5ld1Byb21pc2VDYXBhYmlsaXR5KEMpO1xuICAgIHZhciByZWplY3QgPSBjYXBhYmlsaXR5LnJlamVjdDtcbiAgICB2YXIgcmVzdWx0ID0gcGVyZm9ybShmdW5jdGlvbiAoKSB7XG4gICAgICBmb3JPZihpdGVyYWJsZSwgZmFsc2UsIGZ1bmN0aW9uIChwcm9taXNlKSB7XG4gICAgICAgIEMucmVzb2x2ZShwcm9taXNlKS50aGVuKGNhcGFiaWxpdHkucmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIGlmIChyZXN1bHQuZSkgcmVqZWN0KHJlc3VsdC52KTtcbiAgICByZXR1cm4gY2FwYWJpbGl0eS5wcm9taXNlO1xuICB9XG59KTtcbiIsIi8vIDI2LjEuMSBSZWZsZWN0LmFwcGx5KHRhcmdldCwgdGhpc0FyZ3VtZW50LCBhcmd1bWVudHNMaXN0KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciByQXBwbHkgPSAocmVxdWlyZSgnLi9fZ2xvYmFsJykuUmVmbGVjdCB8fCB7fSkuYXBwbHk7XG52YXIgZkFwcGx5ID0gRnVuY3Rpb24uYXBwbHk7XG4vLyBNUyBFZGdlIGFyZ3VtZW50c0xpc3QgYXJndW1lbnQgaXMgb3B0aW9uYWxcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByQXBwbHkoZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9KTtcbn0pLCAnUmVmbGVjdCcsIHtcbiAgYXBwbHk6IGZ1bmN0aW9uIGFwcGx5KHRhcmdldCwgdGhpc0FyZ3VtZW50LCBhcmd1bWVudHNMaXN0KSB7XG4gICAgdmFyIFQgPSBhRnVuY3Rpb24odGFyZ2V0KTtcbiAgICB2YXIgTCA9IGFuT2JqZWN0KGFyZ3VtZW50c0xpc3QpO1xuICAgIHJldHVybiByQXBwbHkgPyByQXBwbHkoVCwgdGhpc0FyZ3VtZW50LCBMKSA6IGZBcHBseS5jYWxsKFQsIHRoaXNBcmd1bWVudCwgTCk7XG4gIH1cbn0pO1xuIiwiLy8gMjYuMS4yIFJlZmxlY3QuY29uc3RydWN0KHRhcmdldCwgYXJndW1lbnRzTGlzdCBbLCBuZXdUYXJnZXRdKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBjcmVhdGUgPSByZXF1aXJlKCcuL19vYmplY3QtY3JlYXRlJyk7XG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG52YXIgYmluZCA9IHJlcXVpcmUoJy4vX2JpbmQnKTtcbnZhciByQ29uc3RydWN0ID0gKHJlcXVpcmUoJy4vX2dsb2JhbCcpLlJlZmxlY3QgfHwge30pLmNvbnN0cnVjdDtcblxuLy8gTVMgRWRnZSBzdXBwb3J0cyBvbmx5IDIgYXJndW1lbnRzIGFuZCBhcmd1bWVudHNMaXN0IGFyZ3VtZW50IGlzIG9wdGlvbmFsXG4vLyBGRiBOaWdodGx5IHNldHMgdGhpcmQgYXJndW1lbnQgYXMgYG5ldy50YXJnZXRgLCBidXQgZG9lcyBub3QgY3JlYXRlIGB0aGlzYCBmcm9tIGl0XG52YXIgTkVXX1RBUkdFVF9CVUcgPSBmYWlscyhmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIEYoKSB7IC8qIGVtcHR5ICovIH1cbiAgcmV0dXJuICEockNvbnN0cnVjdChmdW5jdGlvbiAoKSB7IC8qIGVtcHR5ICovIH0sIFtdLCBGKSBpbnN0YW5jZW9mIEYpO1xufSk7XG52YXIgQVJHU19CVUcgPSAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICByQ29uc3RydWN0KGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfSk7XG59KTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAoTkVXX1RBUkdFVF9CVUcgfHwgQVJHU19CVUcpLCAnUmVmbGVjdCcsIHtcbiAgY29uc3RydWN0OiBmdW5jdGlvbiBjb25zdHJ1Y3QoVGFyZ2V0LCBhcmdzIC8qICwgbmV3VGFyZ2V0ICovKSB7XG4gICAgYUZ1bmN0aW9uKFRhcmdldCk7XG4gICAgYW5PYmplY3QoYXJncyk7XG4gICAgdmFyIG5ld1RhcmdldCA9IGFyZ3VtZW50cy5sZW5ndGggPCAzID8gVGFyZ2V0IDogYUZ1bmN0aW9uKGFyZ3VtZW50c1syXSk7XG4gICAgaWYgKEFSR1NfQlVHICYmICFORVdfVEFSR0VUX0JVRykgcmV0dXJuIHJDb25zdHJ1Y3QoVGFyZ2V0LCBhcmdzLCBuZXdUYXJnZXQpO1xuICAgIGlmIChUYXJnZXQgPT0gbmV3VGFyZ2V0KSB7XG4gICAgICAvLyB3L28gYWx0ZXJlZCBuZXdUYXJnZXQsIG9wdGltaXphdGlvbiBmb3IgMC00IGFyZ3VtZW50c1xuICAgICAgc3dpdGNoIChhcmdzLmxlbmd0aCkge1xuICAgICAgICBjYXNlIDA6IHJldHVybiBuZXcgVGFyZ2V0KCk7XG4gICAgICAgIGNhc2UgMTogcmV0dXJuIG5ldyBUYXJnZXQoYXJnc1swXSk7XG4gICAgICAgIGNhc2UgMjogcmV0dXJuIG5ldyBUYXJnZXQoYXJnc1swXSwgYXJnc1sxXSk7XG4gICAgICAgIGNhc2UgMzogcmV0dXJuIG5ldyBUYXJnZXQoYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSk7XG4gICAgICAgIGNhc2UgNDogcmV0dXJuIG5ldyBUYXJnZXQoYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSwgYXJnc1szXSk7XG4gICAgICB9XG4gICAgICAvLyB3L28gYWx0ZXJlZCBuZXdUYXJnZXQsIGxvdCBvZiBhcmd1bWVudHMgY2FzZVxuICAgICAgdmFyICRhcmdzID0gW251bGxdO1xuICAgICAgJGFyZ3MucHVzaC5hcHBseSgkYXJncywgYXJncyk7XG4gICAgICByZXR1cm4gbmV3IChiaW5kLmFwcGx5KFRhcmdldCwgJGFyZ3MpKSgpO1xuICAgIH1cbiAgICAvLyB3aXRoIGFsdGVyZWQgbmV3VGFyZ2V0LCBub3Qgc3VwcG9ydCBidWlsdC1pbiBjb25zdHJ1Y3RvcnNcbiAgICB2YXIgcHJvdG8gPSBuZXdUYXJnZXQucHJvdG90eXBlO1xuICAgIHZhciBpbnN0YW5jZSA9IGNyZWF0ZShpc09iamVjdChwcm90bykgPyBwcm90byA6IE9iamVjdC5wcm90b3R5cGUpO1xuICAgIHZhciByZXN1bHQgPSBGdW5jdGlvbi5hcHBseS5jYWxsKFRhcmdldCwgaW5zdGFuY2UsIGFyZ3MpO1xuICAgIHJldHVybiBpc09iamVjdChyZXN1bHQpID8gcmVzdWx0IDogaW5zdGFuY2U7XG4gIH1cbn0pO1xuIiwiLy8gMjYuMS4zIFJlZmxlY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBwcm9wZXJ0eUtleSwgYXR0cmlidXRlcylcbnZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIHRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJyk7XG5cbi8vIE1TIEVkZ2UgaGFzIGJyb2tlbiBSZWZsZWN0LmRlZmluZVByb3BlcnR5IC0gdGhyb3dpbmcgaW5zdGVhZCBvZiByZXR1cm5pbmcgZmFsc2VcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICBSZWZsZWN0LmRlZmluZVByb3BlcnR5KGRQLmYoe30sIDEsIHsgdmFsdWU6IDEgfSksIDEsIHsgdmFsdWU6IDIgfSk7XG59KSwgJ1JlZmxlY3QnLCB7XG4gIGRlZmluZVByb3BlcnR5OiBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIHByb3BlcnR5S2V5LCBhdHRyaWJ1dGVzKSB7XG4gICAgYW5PYmplY3QodGFyZ2V0KTtcbiAgICBwcm9wZXJ0eUtleSA9IHRvUHJpbWl0aXZlKHByb3BlcnR5S2V5LCB0cnVlKTtcbiAgICBhbk9iamVjdChhdHRyaWJ1dGVzKTtcbiAgICB0cnkge1xuICAgICAgZFAuZih0YXJnZXQsIHByb3BlcnR5S2V5LCBhdHRyaWJ1dGVzKTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbn0pO1xuIiwiLy8gMjYuMS40IFJlZmxlY3QuZGVsZXRlUHJvcGVydHkodGFyZ2V0LCBwcm9wZXJ0eUtleSlcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgZ09QRCA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJykuZjtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1JlZmxlY3QnLCB7XG4gIGRlbGV0ZVByb3BlcnR5OiBmdW5jdGlvbiBkZWxldGVQcm9wZXJ0eSh0YXJnZXQsIHByb3BlcnR5S2V5KSB7XG4gICAgdmFyIGRlc2MgPSBnT1BEKGFuT2JqZWN0KHRhcmdldCksIHByb3BlcnR5S2V5KTtcbiAgICByZXR1cm4gZGVzYyAmJiAhZGVzYy5jb25maWd1cmFibGUgPyBmYWxzZSA6IGRlbGV0ZSB0YXJnZXRbcHJvcGVydHlLZXldO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIDI2LjEuNSBSZWZsZWN0LmVudW1lcmF0ZSh0YXJnZXQpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgRW51bWVyYXRlID0gZnVuY3Rpb24gKGl0ZXJhdGVkKSB7XG4gIHRoaXMuX3QgPSBhbk9iamVjdChpdGVyYXRlZCk7IC8vIHRhcmdldFxuICB0aGlzLl9pID0gMDsgICAgICAgICAgICAgICAgICAvLyBuZXh0IGluZGV4XG4gIHZhciBrZXlzID0gdGhpcy5fayA9IFtdOyAgICAgIC8vIGtleXNcbiAgdmFyIGtleTtcbiAgZm9yIChrZXkgaW4gaXRlcmF0ZWQpIGtleXMucHVzaChrZXkpO1xufTtcbnJlcXVpcmUoJy4vX2l0ZXItY3JlYXRlJykoRW51bWVyYXRlLCAnT2JqZWN0JywgZnVuY3Rpb24gKCkge1xuICB2YXIgdGhhdCA9IHRoaXM7XG4gIHZhciBrZXlzID0gdGhhdC5faztcbiAgdmFyIGtleTtcbiAgZG8ge1xuICAgIGlmICh0aGF0Ll9pID49IGtleXMubGVuZ3RoKSByZXR1cm4geyB2YWx1ZTogdW5kZWZpbmVkLCBkb25lOiB0cnVlIH07XG4gIH0gd2hpbGUgKCEoKGtleSA9IGtleXNbdGhhdC5faSsrXSkgaW4gdGhhdC5fdCkpO1xuICByZXR1cm4geyB2YWx1ZToga2V5LCBkb25lOiBmYWxzZSB9O1xufSk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIHtcbiAgZW51bWVyYXRlOiBmdW5jdGlvbiBlbnVtZXJhdGUodGFyZ2V0KSB7XG4gICAgcmV0dXJuIG5ldyBFbnVtZXJhdGUodGFyZ2V0KTtcbiAgfVxufSk7XG4iLCIvLyAyNi4xLjcgUmVmbGVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBwcm9wZXJ0eUtleSlcbnZhciBnT1BEID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcGQnKTtcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0Jywge1xuICBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I6IGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIHByb3BlcnR5S2V5KSB7XG4gICAgcmV0dXJuIGdPUEQuZihhbk9iamVjdCh0YXJnZXQpLCBwcm9wZXJ0eUtleSk7XG4gIH1cbn0pO1xuIiwiLy8gMjYuMS44IFJlZmxlY3QuZ2V0UHJvdG90eXBlT2YodGFyZ2V0KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBnZXRQcm90byA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1JlZmxlY3QnLCB7XG4gIGdldFByb3RvdHlwZU9mOiBmdW5jdGlvbiBnZXRQcm90b3R5cGVPZih0YXJnZXQpIHtcbiAgICByZXR1cm4gZ2V0UHJvdG8oYW5PYmplY3QodGFyZ2V0KSk7XG4gIH1cbn0pO1xuIiwiLy8gMjYuMS42IFJlZmxlY3QuZ2V0KHRhcmdldCwgcHJvcGVydHlLZXkgWywgcmVjZWl2ZXJdKVxudmFyIGdPUEQgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpO1xudmFyIGdldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG5cbmZ1bmN0aW9uIGdldCh0YXJnZXQsIHByb3BlcnR5S2V5IC8qICwgcmVjZWl2ZXIgKi8pIHtcbiAgdmFyIHJlY2VpdmVyID0gYXJndW1lbnRzLmxlbmd0aCA8IDMgPyB0YXJnZXQgOiBhcmd1bWVudHNbMl07XG4gIHZhciBkZXNjLCBwcm90bztcbiAgaWYgKGFuT2JqZWN0KHRhcmdldCkgPT09IHJlY2VpdmVyKSByZXR1cm4gdGFyZ2V0W3Byb3BlcnR5S2V5XTtcbiAgaWYgKGRlc2MgPSBnT1BELmYodGFyZ2V0LCBwcm9wZXJ0eUtleSkpIHJldHVybiBoYXMoZGVzYywgJ3ZhbHVlJylcbiAgICA/IGRlc2MudmFsdWVcbiAgICA6IGRlc2MuZ2V0ICE9PSB1bmRlZmluZWRcbiAgICAgID8gZGVzYy5nZXQuY2FsbChyZWNlaXZlcilcbiAgICAgIDogdW5kZWZpbmVkO1xuICBpZiAoaXNPYmplY3QocHJvdG8gPSBnZXRQcm90b3R5cGVPZih0YXJnZXQpKSkgcmV0dXJuIGdldChwcm90bywgcHJvcGVydHlLZXksIHJlY2VpdmVyKTtcbn1cblxuJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0JywgeyBnZXQ6IGdldCB9KTtcbiIsIi8vIDI2LjEuOSBSZWZsZWN0Lmhhcyh0YXJnZXQsIHByb3BlcnR5S2V5KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0Jywge1xuICBoYXM6IGZ1bmN0aW9uIGhhcyh0YXJnZXQsIHByb3BlcnR5S2V5KSB7XG4gICAgcmV0dXJuIHByb3BlcnR5S2V5IGluIHRhcmdldDtcbiAgfVxufSk7XG4iLCIvLyAyNi4xLjEwIFJlZmxlY3QuaXNFeHRlbnNpYmxlKHRhcmdldClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciAkaXNFeHRlbnNpYmxlID0gT2JqZWN0LmlzRXh0ZW5zaWJsZTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0Jywge1xuICBpc0V4dGVuc2libGU6IGZ1bmN0aW9uIGlzRXh0ZW5zaWJsZSh0YXJnZXQpIHtcbiAgICBhbk9iamVjdCh0YXJnZXQpO1xuICAgIHJldHVybiAkaXNFeHRlbnNpYmxlID8gJGlzRXh0ZW5zaWJsZSh0YXJnZXQpIDogdHJ1ZTtcbiAgfVxufSk7XG4iLCIvLyAyNi4xLjExIFJlZmxlY3Qub3duS2V5cyh0YXJnZXQpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1JlZmxlY3QnLCB7IG93bktleXM6IHJlcXVpcmUoJy4vX293bi1rZXlzJykgfSk7XG4iLCIvLyAyNi4xLjEyIFJlZmxlY3QucHJldmVudEV4dGVuc2lvbnModGFyZ2V0KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyICRwcmV2ZW50RXh0ZW5zaW9ucyA9IE9iamVjdC5wcmV2ZW50RXh0ZW5zaW9ucztcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0Jywge1xuICBwcmV2ZW50RXh0ZW5zaW9uczogZnVuY3Rpb24gcHJldmVudEV4dGVuc2lvbnModGFyZ2V0KSB7XG4gICAgYW5PYmplY3QodGFyZ2V0KTtcbiAgICB0cnkge1xuICAgICAgaWYgKCRwcmV2ZW50RXh0ZW5zaW9ucykgJHByZXZlbnRFeHRlbnNpb25zKHRhcmdldCk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG59KTtcbiIsIi8vIDI2LjEuMTQgUmVmbGVjdC5zZXRQcm90b3R5cGVPZih0YXJnZXQsIHByb3RvKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBzZXRQcm90byA9IHJlcXVpcmUoJy4vX3NldC1wcm90bycpO1xuXG5pZiAoc2V0UHJvdG8pICRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIHtcbiAgc2V0UHJvdG90eXBlT2Y6IGZ1bmN0aW9uIHNldFByb3RvdHlwZU9mKHRhcmdldCwgcHJvdG8pIHtcbiAgICBzZXRQcm90by5jaGVjayh0YXJnZXQsIHByb3RvKTtcbiAgICB0cnkge1xuICAgICAgc2V0UHJvdG8uc2V0KHRhcmdldCwgcHJvdG8pO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxufSk7XG4iLCIvLyAyNi4xLjEzIFJlZmxlY3Quc2V0KHRhcmdldCwgcHJvcGVydHlLZXksIFYgWywgcmVjZWl2ZXJdKVxudmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgZ09QRCA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJyk7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuL19vYmplY3QtZ3BvJyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xuXG5mdW5jdGlvbiBzZXQodGFyZ2V0LCBwcm9wZXJ0eUtleSwgViAvKiAsIHJlY2VpdmVyICovKSB7XG4gIHZhciByZWNlaXZlciA9IGFyZ3VtZW50cy5sZW5ndGggPCA0ID8gdGFyZ2V0IDogYXJndW1lbnRzWzNdO1xuICB2YXIgb3duRGVzYyA9IGdPUEQuZihhbk9iamVjdCh0YXJnZXQpLCBwcm9wZXJ0eUtleSk7XG4gIHZhciBleGlzdGluZ0Rlc2NyaXB0b3IsIHByb3RvO1xuICBpZiAoIW93bkRlc2MpIHtcbiAgICBpZiAoaXNPYmplY3QocHJvdG8gPSBnZXRQcm90b3R5cGVPZih0YXJnZXQpKSkge1xuICAgICAgcmV0dXJuIHNldChwcm90bywgcHJvcGVydHlLZXksIFYsIHJlY2VpdmVyKTtcbiAgICB9XG4gICAgb3duRGVzYyA9IGNyZWF0ZURlc2MoMCk7XG4gIH1cbiAgaWYgKGhhcyhvd25EZXNjLCAndmFsdWUnKSkge1xuICAgIGlmIChvd25EZXNjLndyaXRhYmxlID09PSBmYWxzZSB8fCAhaXNPYmplY3QocmVjZWl2ZXIpKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKGV4aXN0aW5nRGVzY3JpcHRvciA9IGdPUEQuZihyZWNlaXZlciwgcHJvcGVydHlLZXkpKSB7XG4gICAgICBpZiAoZXhpc3RpbmdEZXNjcmlwdG9yLmdldCB8fCBleGlzdGluZ0Rlc2NyaXB0b3Iuc2V0IHx8IGV4aXN0aW5nRGVzY3JpcHRvci53cml0YWJsZSA9PT0gZmFsc2UpIHJldHVybiBmYWxzZTtcbiAgICAgIGV4aXN0aW5nRGVzY3JpcHRvci52YWx1ZSA9IFY7XG4gICAgICBkUC5mKHJlY2VpdmVyLCBwcm9wZXJ0eUtleSwgZXhpc3RpbmdEZXNjcmlwdG9yKTtcbiAgICB9IGVsc2UgZFAuZihyZWNlaXZlciwgcHJvcGVydHlLZXksIGNyZWF0ZURlc2MoMCwgVikpO1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHJldHVybiBvd25EZXNjLnNldCA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiAob3duRGVzYy5zZXQuY2FsbChyZWNlaXZlciwgViksIHRydWUpO1xufVxuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1JlZmxlY3QnLCB7IHNldDogc2V0IH0pO1xuIiwidmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGluaGVyaXRJZlJlcXVpcmVkID0gcmVxdWlyZSgnLi9faW5oZXJpdC1pZi1yZXF1aXJlZCcpO1xudmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZjtcbnZhciBnT1BOID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcG4nKS5mO1xudmFyIGlzUmVnRXhwID0gcmVxdWlyZSgnLi9faXMtcmVnZXhwJyk7XG52YXIgJGZsYWdzID0gcmVxdWlyZSgnLi9fZmxhZ3MnKTtcbnZhciAkUmVnRXhwID0gZ2xvYmFsLlJlZ0V4cDtcbnZhciBCYXNlID0gJFJlZ0V4cDtcbnZhciBwcm90byA9ICRSZWdFeHAucHJvdG90eXBlO1xudmFyIHJlMSA9IC9hL2c7XG52YXIgcmUyID0gL2EvZztcbi8vIFwibmV3XCIgY3JlYXRlcyBhIG5ldyBvYmplY3QsIG9sZCB3ZWJraXQgYnVnZ3kgaGVyZVxudmFyIENPUlJFQ1RfTkVXID0gbmV3ICRSZWdFeHAocmUxKSAhPT0gcmUxO1xuXG5pZiAocmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSAmJiAoIUNPUlJFQ1RfTkVXIHx8IHJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZTJbcmVxdWlyZSgnLi9fd2tzJykoJ21hdGNoJyldID0gZmFsc2U7XG4gIC8vIFJlZ0V4cCBjb25zdHJ1Y3RvciBjYW4gYWx0ZXIgZmxhZ3MgYW5kIElzUmVnRXhwIHdvcmtzIGNvcnJlY3Qgd2l0aCBAQG1hdGNoXG4gIHJldHVybiAkUmVnRXhwKHJlMSkgIT0gcmUxIHx8ICRSZWdFeHAocmUyKSA9PSByZTIgfHwgJFJlZ0V4cChyZTEsICdpJykgIT0gJy9hL2knO1xufSkpKSB7XG4gICRSZWdFeHAgPSBmdW5jdGlvbiBSZWdFeHAocCwgZikge1xuICAgIHZhciB0aVJFID0gdGhpcyBpbnN0YW5jZW9mICRSZWdFeHA7XG4gICAgdmFyIHBpUkUgPSBpc1JlZ0V4cChwKTtcbiAgICB2YXIgZmlVID0gZiA9PT0gdW5kZWZpbmVkO1xuICAgIHJldHVybiAhdGlSRSAmJiBwaVJFICYmIHAuY29uc3RydWN0b3IgPT09ICRSZWdFeHAgJiYgZmlVID8gcFxuICAgICAgOiBpbmhlcml0SWZSZXF1aXJlZChDT1JSRUNUX05FV1xuICAgICAgICA/IG5ldyBCYXNlKHBpUkUgJiYgIWZpVSA/IHAuc291cmNlIDogcCwgZilcbiAgICAgICAgOiBCYXNlKChwaVJFID0gcCBpbnN0YW5jZW9mICRSZWdFeHApID8gcC5zb3VyY2UgOiBwLCBwaVJFICYmIGZpVSA/ICRmbGFncy5jYWxsKHApIDogZilcbiAgICAgICwgdGlSRSA/IHRoaXMgOiBwcm90bywgJFJlZ0V4cCk7XG4gIH07XG4gIHZhciBwcm94eSA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgICBrZXkgaW4gJFJlZ0V4cCB8fCBkUCgkUmVnRXhwLCBrZXksIHtcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gQmFzZVtrZXldOyB9LFxuICAgICAgc2V0OiBmdW5jdGlvbiAoaXQpIHsgQmFzZVtrZXldID0gaXQ7IH1cbiAgICB9KTtcbiAgfTtcbiAgZm9yICh2YXIga2V5cyA9IGdPUE4oQmFzZSksIGkgPSAwOyBrZXlzLmxlbmd0aCA+IGk7KSBwcm94eShrZXlzW2krK10pO1xuICBwcm90by5jb25zdHJ1Y3RvciA9ICRSZWdFeHA7XG4gICRSZWdFeHAucHJvdG90eXBlID0gcHJvdG87XG4gIHJlcXVpcmUoJy4vX3JlZGVmaW5lJykoZ2xvYmFsLCAnUmVnRXhwJywgJFJlZ0V4cCk7XG59XG5cbnJlcXVpcmUoJy4vX3NldC1zcGVjaWVzJykoJ1JlZ0V4cCcpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHJlZ2V4cEV4ZWMgPSByZXF1aXJlKCcuL19yZWdleHAtZXhlYycpO1xucmVxdWlyZSgnLi9fZXhwb3J0Jykoe1xuICB0YXJnZXQ6ICdSZWdFeHAnLFxuICBwcm90bzogdHJ1ZSxcbiAgZm9yY2VkOiByZWdleHBFeGVjICE9PSAvLi8uZXhlY1xufSwge1xuICBleGVjOiByZWdleHBFeGVjXG59KTtcbiIsIi8vIDIxLjIuNS4zIGdldCBSZWdFeHAucHJvdG90eXBlLmZsYWdzKClcbmlmIChyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpICYmIC8uL2cuZmxhZ3MgIT0gJ2cnKSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mKFJlZ0V4cC5wcm90b3R5cGUsICdmbGFncycsIHtcbiAgY29uZmlndXJhYmxlOiB0cnVlLFxuICBnZXQ6IHJlcXVpcmUoJy4vX2ZsYWdzJylcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGFkdmFuY2VTdHJpbmdJbmRleCA9IHJlcXVpcmUoJy4vX2FkdmFuY2Utc3RyaW5nLWluZGV4Jyk7XG52YXIgcmVnRXhwRXhlYyA9IHJlcXVpcmUoJy4vX3JlZ2V4cC1leGVjLWFic3RyYWN0Jyk7XG5cbi8vIEBAbWF0Y2ggbG9naWNcbnJlcXVpcmUoJy4vX2ZpeC1yZS13a3MnKSgnbWF0Y2gnLCAxLCBmdW5jdGlvbiAoZGVmaW5lZCwgTUFUQ0gsICRtYXRjaCwgbWF5YmVDYWxsTmF0aXZlKSB7XG4gIHJldHVybiBbXG4gICAgLy8gYFN0cmluZy5wcm90b3R5cGUubWF0Y2hgIG1ldGhvZFxuICAgIC8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUubWF0Y2hcbiAgICBmdW5jdGlvbiBtYXRjaChyZWdleHApIHtcbiAgICAgIHZhciBPID0gZGVmaW5lZCh0aGlzKTtcbiAgICAgIHZhciBmbiA9IHJlZ2V4cCA9PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiByZWdleHBbTUFUQ0hdO1xuICAgICAgcmV0dXJuIGZuICE9PSB1bmRlZmluZWQgPyBmbi5jYWxsKHJlZ2V4cCwgTykgOiBuZXcgUmVnRXhwKHJlZ2V4cClbTUFUQ0hdKFN0cmluZyhPKSk7XG4gICAgfSxcbiAgICAvLyBgUmVnRXhwLnByb3RvdHlwZVtAQG1hdGNoXWAgbWV0aG9kXG4gICAgLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtcmVnZXhwLnByb3RvdHlwZS1AQG1hdGNoXG4gICAgZnVuY3Rpb24gKHJlZ2V4cCkge1xuICAgICAgdmFyIHJlcyA9IG1heWJlQ2FsbE5hdGl2ZSgkbWF0Y2gsIHJlZ2V4cCwgdGhpcyk7XG4gICAgICBpZiAocmVzLmRvbmUpIHJldHVybiByZXMudmFsdWU7XG4gICAgICB2YXIgcnggPSBhbk9iamVjdChyZWdleHApO1xuICAgICAgdmFyIFMgPSBTdHJpbmcodGhpcyk7XG4gICAgICBpZiAoIXJ4Lmdsb2JhbCkgcmV0dXJuIHJlZ0V4cEV4ZWMocngsIFMpO1xuICAgICAgdmFyIGZ1bGxVbmljb2RlID0gcngudW5pY29kZTtcbiAgICAgIHJ4Lmxhc3RJbmRleCA9IDA7XG4gICAgICB2YXIgQSA9IFtdO1xuICAgICAgdmFyIG4gPSAwO1xuICAgICAgdmFyIHJlc3VsdDtcbiAgICAgIHdoaWxlICgocmVzdWx0ID0gcmVnRXhwRXhlYyhyeCwgUykpICE9PSBudWxsKSB7XG4gICAgICAgIHZhciBtYXRjaFN0ciA9IFN0cmluZyhyZXN1bHRbMF0pO1xuICAgICAgICBBW25dID0gbWF0Y2hTdHI7XG4gICAgICAgIGlmIChtYXRjaFN0ciA9PT0gJycpIHJ4Lmxhc3RJbmRleCA9IGFkdmFuY2VTdHJpbmdJbmRleChTLCB0b0xlbmd0aChyeC5sYXN0SW5kZXgpLCBmdWxsVW5pY29kZSk7XG4gICAgICAgIG4rKztcbiAgICAgIH1cbiAgICAgIHJldHVybiBuID09PSAwID8gbnVsbCA6IEE7XG4gICAgfVxuICBdO1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgYWR2YW5jZVN0cmluZ0luZGV4ID0gcmVxdWlyZSgnLi9fYWR2YW5jZS1zdHJpbmctaW5kZXgnKTtcbnZhciByZWdFeHBFeGVjID0gcmVxdWlyZSgnLi9fcmVnZXhwLWV4ZWMtYWJzdHJhY3QnKTtcbnZhciBtYXggPSBNYXRoLm1heDtcbnZhciBtaW4gPSBNYXRoLm1pbjtcbnZhciBmbG9vciA9IE1hdGguZmxvb3I7XG52YXIgU1VCU1RJVFVUSU9OX1NZTUJPTFMgPSAvXFwkKFskJmAnXXxcXGRcXGQ/fDxbXj5dKj4pL2c7XG52YXIgU1VCU1RJVFVUSU9OX1NZTUJPTFNfTk9fTkFNRUQgPSAvXFwkKFskJmAnXXxcXGRcXGQ/KS9nO1xuXG52YXIgbWF5YmVUb1N0cmluZyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXQgPT09IHVuZGVmaW5lZCA/IGl0IDogU3RyaW5nKGl0KTtcbn07XG5cbi8vIEBAcmVwbGFjZSBsb2dpY1xucmVxdWlyZSgnLi9fZml4LXJlLXdrcycpKCdyZXBsYWNlJywgMiwgZnVuY3Rpb24gKGRlZmluZWQsIFJFUExBQ0UsICRyZXBsYWNlLCBtYXliZUNhbGxOYXRpdmUpIHtcbiAgcmV0dXJuIFtcbiAgICAvLyBgU3RyaW5nLnByb3RvdHlwZS5yZXBsYWNlYCBtZXRob2RcbiAgICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1zdHJpbmcucHJvdG90eXBlLnJlcGxhY2VcbiAgICBmdW5jdGlvbiByZXBsYWNlKHNlYXJjaFZhbHVlLCByZXBsYWNlVmFsdWUpIHtcbiAgICAgIHZhciBPID0gZGVmaW5lZCh0aGlzKTtcbiAgICAgIHZhciBmbiA9IHNlYXJjaFZhbHVlID09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IHNlYXJjaFZhbHVlW1JFUExBQ0VdO1xuICAgICAgcmV0dXJuIGZuICE9PSB1bmRlZmluZWRcbiAgICAgICAgPyBmbi5jYWxsKHNlYXJjaFZhbHVlLCBPLCByZXBsYWNlVmFsdWUpXG4gICAgICAgIDogJHJlcGxhY2UuY2FsbChTdHJpbmcoTyksIHNlYXJjaFZhbHVlLCByZXBsYWNlVmFsdWUpO1xuICAgIH0sXG4gICAgLy8gYFJlZ0V4cC5wcm90b3R5cGVbQEByZXBsYWNlXWAgbWV0aG9kXG4gICAgLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtcmVnZXhwLnByb3RvdHlwZS1AQHJlcGxhY2VcbiAgICBmdW5jdGlvbiAocmVnZXhwLCByZXBsYWNlVmFsdWUpIHtcbiAgICAgIHZhciByZXMgPSBtYXliZUNhbGxOYXRpdmUoJHJlcGxhY2UsIHJlZ2V4cCwgdGhpcywgcmVwbGFjZVZhbHVlKTtcbiAgICAgIGlmIChyZXMuZG9uZSkgcmV0dXJuIHJlcy52YWx1ZTtcblxuICAgICAgdmFyIHJ4ID0gYW5PYmplY3QocmVnZXhwKTtcbiAgICAgIHZhciBTID0gU3RyaW5nKHRoaXMpO1xuICAgICAgdmFyIGZ1bmN0aW9uYWxSZXBsYWNlID0gdHlwZW9mIHJlcGxhY2VWYWx1ZSA9PT0gJ2Z1bmN0aW9uJztcbiAgICAgIGlmICghZnVuY3Rpb25hbFJlcGxhY2UpIHJlcGxhY2VWYWx1ZSA9IFN0cmluZyhyZXBsYWNlVmFsdWUpO1xuICAgICAgdmFyIGdsb2JhbCA9IHJ4Lmdsb2JhbDtcbiAgICAgIGlmIChnbG9iYWwpIHtcbiAgICAgICAgdmFyIGZ1bGxVbmljb2RlID0gcngudW5pY29kZTtcbiAgICAgICAgcngubGFzdEluZGV4ID0gMDtcbiAgICAgIH1cbiAgICAgIHZhciByZXN1bHRzID0gW107XG4gICAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICB2YXIgcmVzdWx0ID0gcmVnRXhwRXhlYyhyeCwgUyk7XG4gICAgICAgIGlmIChyZXN1bHQgPT09IG51bGwpIGJyZWFrO1xuICAgICAgICByZXN1bHRzLnB1c2gocmVzdWx0KTtcbiAgICAgICAgaWYgKCFnbG9iYWwpIGJyZWFrO1xuICAgICAgICB2YXIgbWF0Y2hTdHIgPSBTdHJpbmcocmVzdWx0WzBdKTtcbiAgICAgICAgaWYgKG1hdGNoU3RyID09PSAnJykgcngubGFzdEluZGV4ID0gYWR2YW5jZVN0cmluZ0luZGV4KFMsIHRvTGVuZ3RoKHJ4Lmxhc3RJbmRleCksIGZ1bGxVbmljb2RlKTtcbiAgICAgIH1cbiAgICAgIHZhciBhY2N1bXVsYXRlZFJlc3VsdCA9ICcnO1xuICAgICAgdmFyIG5leHRTb3VyY2VQb3NpdGlvbiA9IDA7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJlc3VsdHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgcmVzdWx0ID0gcmVzdWx0c1tpXTtcbiAgICAgICAgdmFyIG1hdGNoZWQgPSBTdHJpbmcocmVzdWx0WzBdKTtcbiAgICAgICAgdmFyIHBvc2l0aW9uID0gbWF4KG1pbih0b0ludGVnZXIocmVzdWx0LmluZGV4KSwgUy5sZW5ndGgpLCAwKTtcbiAgICAgICAgdmFyIGNhcHR1cmVzID0gW107XG4gICAgICAgIC8vIE5PVEU6IFRoaXMgaXMgZXF1aXZhbGVudCB0b1xuICAgICAgICAvLyAgIGNhcHR1cmVzID0gcmVzdWx0LnNsaWNlKDEpLm1hcChtYXliZVRvU3RyaW5nKVxuICAgICAgICAvLyBidXQgZm9yIHNvbWUgcmVhc29uIGBuYXRpdmVTbGljZS5jYWxsKHJlc3VsdCwgMSwgcmVzdWx0Lmxlbmd0aClgIChjYWxsZWQgaW5cbiAgICAgICAgLy8gdGhlIHNsaWNlIHBvbHlmaWxsIHdoZW4gc2xpY2luZyBuYXRpdmUgYXJyYXlzKSBcImRvZXNuJ3Qgd29ya1wiIGluIHNhZmFyaSA5IGFuZFxuICAgICAgICAvLyBjYXVzZXMgYSBjcmFzaCAoaHR0cHM6Ly9wYXN0ZWJpbi5jb20vTjIxUXplUUEpIHdoZW4gdHJ5aW5nIHRvIGRlYnVnIGl0LlxuICAgICAgICBmb3IgKHZhciBqID0gMTsgaiA8IHJlc3VsdC5sZW5ndGg7IGorKykgY2FwdHVyZXMucHVzaChtYXliZVRvU3RyaW5nKHJlc3VsdFtqXSkpO1xuICAgICAgICB2YXIgbmFtZWRDYXB0dXJlcyA9IHJlc3VsdC5ncm91cHM7XG4gICAgICAgIGlmIChmdW5jdGlvbmFsUmVwbGFjZSkge1xuICAgICAgICAgIHZhciByZXBsYWNlckFyZ3MgPSBbbWF0Y2hlZF0uY29uY2F0KGNhcHR1cmVzLCBwb3NpdGlvbiwgUyk7XG4gICAgICAgICAgaWYgKG5hbWVkQ2FwdHVyZXMgIT09IHVuZGVmaW5lZCkgcmVwbGFjZXJBcmdzLnB1c2gobmFtZWRDYXB0dXJlcyk7XG4gICAgICAgICAgdmFyIHJlcGxhY2VtZW50ID0gU3RyaW5nKHJlcGxhY2VWYWx1ZS5hcHBseSh1bmRlZmluZWQsIHJlcGxhY2VyQXJncykpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJlcGxhY2VtZW50ID0gZ2V0U3Vic3RpdHV0aW9uKG1hdGNoZWQsIFMsIHBvc2l0aW9uLCBjYXB0dXJlcywgbmFtZWRDYXB0dXJlcywgcmVwbGFjZVZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocG9zaXRpb24gPj0gbmV4dFNvdXJjZVBvc2l0aW9uKSB7XG4gICAgICAgICAgYWNjdW11bGF0ZWRSZXN1bHQgKz0gUy5zbGljZShuZXh0U291cmNlUG9zaXRpb24sIHBvc2l0aW9uKSArIHJlcGxhY2VtZW50O1xuICAgICAgICAgIG5leHRTb3VyY2VQb3NpdGlvbiA9IHBvc2l0aW9uICsgbWF0Y2hlZC5sZW5ndGg7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBhY2N1bXVsYXRlZFJlc3VsdCArIFMuc2xpY2UobmV4dFNvdXJjZVBvc2l0aW9uKTtcbiAgICB9XG4gIF07XG5cbiAgICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1nZXRzdWJzdGl0dXRpb25cbiAgZnVuY3Rpb24gZ2V0U3Vic3RpdHV0aW9uKG1hdGNoZWQsIHN0ciwgcG9zaXRpb24sIGNhcHR1cmVzLCBuYW1lZENhcHR1cmVzLCByZXBsYWNlbWVudCkge1xuICAgIHZhciB0YWlsUG9zID0gcG9zaXRpb24gKyBtYXRjaGVkLmxlbmd0aDtcbiAgICB2YXIgbSA9IGNhcHR1cmVzLmxlbmd0aDtcbiAgICB2YXIgc3ltYm9scyA9IFNVQlNUSVRVVElPTl9TWU1CT0xTX05PX05BTUVEO1xuICAgIGlmIChuYW1lZENhcHR1cmVzICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIG5hbWVkQ2FwdHVyZXMgPSB0b09iamVjdChuYW1lZENhcHR1cmVzKTtcbiAgICAgIHN5bWJvbHMgPSBTVUJTVElUVVRJT05fU1lNQk9MUztcbiAgICB9XG4gICAgcmV0dXJuICRyZXBsYWNlLmNhbGwocmVwbGFjZW1lbnQsIHN5bWJvbHMsIGZ1bmN0aW9uIChtYXRjaCwgY2gpIHtcbiAgICAgIHZhciBjYXB0dXJlO1xuICAgICAgc3dpdGNoIChjaC5jaGFyQXQoMCkpIHtcbiAgICAgICAgY2FzZSAnJCc6IHJldHVybiAnJCc7XG4gICAgICAgIGNhc2UgJyYnOiByZXR1cm4gbWF0Y2hlZDtcbiAgICAgICAgY2FzZSAnYCc6IHJldHVybiBzdHIuc2xpY2UoMCwgcG9zaXRpb24pO1xuICAgICAgICBjYXNlIFwiJ1wiOiByZXR1cm4gc3RyLnNsaWNlKHRhaWxQb3MpO1xuICAgICAgICBjYXNlICc8JzpcbiAgICAgICAgICBjYXB0dXJlID0gbmFtZWRDYXB0dXJlc1tjaC5zbGljZSgxLCAtMSldO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OiAvLyBcXGRcXGQ/XG4gICAgICAgICAgdmFyIG4gPSArY2g7XG4gICAgICAgICAgaWYgKG4gPT09IDApIHJldHVybiBtYXRjaDtcbiAgICAgICAgICBpZiAobiA+IG0pIHtcbiAgICAgICAgICAgIHZhciBmID0gZmxvb3IobiAvIDEwKTtcbiAgICAgICAgICAgIGlmIChmID09PSAwKSByZXR1cm4gbWF0Y2g7XG4gICAgICAgICAgICBpZiAoZiA8PSBtKSByZXR1cm4gY2FwdHVyZXNbZiAtIDFdID09PSB1bmRlZmluZWQgPyBjaC5jaGFyQXQoMSkgOiBjYXB0dXJlc1tmIC0gMV0gKyBjaC5jaGFyQXQoMSk7XG4gICAgICAgICAgICByZXR1cm4gbWF0Y2g7XG4gICAgICAgICAgfVxuICAgICAgICAgIGNhcHR1cmUgPSBjYXB0dXJlc1tuIC0gMV07XG4gICAgICB9XG4gICAgICByZXR1cm4gY2FwdHVyZSA9PT0gdW5kZWZpbmVkID8gJycgOiBjYXB0dXJlO1xuICAgIH0pO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgc2FtZVZhbHVlID0gcmVxdWlyZSgnLi9fc2FtZS12YWx1ZScpO1xudmFyIHJlZ0V4cEV4ZWMgPSByZXF1aXJlKCcuL19yZWdleHAtZXhlYy1hYnN0cmFjdCcpO1xuXG4vLyBAQHNlYXJjaCBsb2dpY1xucmVxdWlyZSgnLi9fZml4LXJlLXdrcycpKCdzZWFyY2gnLCAxLCBmdW5jdGlvbiAoZGVmaW5lZCwgU0VBUkNILCAkc2VhcmNoLCBtYXliZUNhbGxOYXRpdmUpIHtcbiAgcmV0dXJuIFtcbiAgICAvLyBgU3RyaW5nLnByb3RvdHlwZS5zZWFyY2hgIG1ldGhvZFxuICAgIC8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUuc2VhcmNoXG4gICAgZnVuY3Rpb24gc2VhcmNoKHJlZ2V4cCkge1xuICAgICAgdmFyIE8gPSBkZWZpbmVkKHRoaXMpO1xuICAgICAgdmFyIGZuID0gcmVnZXhwID09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IHJlZ2V4cFtTRUFSQ0hdO1xuICAgICAgcmV0dXJuIGZuICE9PSB1bmRlZmluZWQgPyBmbi5jYWxsKHJlZ2V4cCwgTykgOiBuZXcgUmVnRXhwKHJlZ2V4cClbU0VBUkNIXShTdHJpbmcoTykpO1xuICAgIH0sXG4gICAgLy8gYFJlZ0V4cC5wcm90b3R5cGVbQEBzZWFyY2hdYCBtZXRob2RcbiAgICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1yZWdleHAucHJvdG90eXBlLUBAc2VhcmNoXG4gICAgZnVuY3Rpb24gKHJlZ2V4cCkge1xuICAgICAgdmFyIHJlcyA9IG1heWJlQ2FsbE5hdGl2ZSgkc2VhcmNoLCByZWdleHAsIHRoaXMpO1xuICAgICAgaWYgKHJlcy5kb25lKSByZXR1cm4gcmVzLnZhbHVlO1xuICAgICAgdmFyIHJ4ID0gYW5PYmplY3QocmVnZXhwKTtcbiAgICAgIHZhciBTID0gU3RyaW5nKHRoaXMpO1xuICAgICAgdmFyIHByZXZpb3VzTGFzdEluZGV4ID0gcngubGFzdEluZGV4O1xuICAgICAgaWYgKCFzYW1lVmFsdWUocHJldmlvdXNMYXN0SW5kZXgsIDApKSByeC5sYXN0SW5kZXggPSAwO1xuICAgICAgdmFyIHJlc3VsdCA9IHJlZ0V4cEV4ZWMocngsIFMpO1xuICAgICAgaWYgKCFzYW1lVmFsdWUocngubGFzdEluZGV4LCBwcmV2aW91c0xhc3RJbmRleCkpIHJ4Lmxhc3RJbmRleCA9IHByZXZpb3VzTGFzdEluZGV4O1xuICAgICAgcmV0dXJuIHJlc3VsdCA9PT0gbnVsbCA/IC0xIDogcmVzdWx0LmluZGV4O1xuICAgIH1cbiAgXTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaXNSZWdFeHAgPSByZXF1aXJlKCcuL19pcy1yZWdleHAnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIHNwZWNpZXNDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4vX3NwZWNpZXMtY29uc3RydWN0b3InKTtcbnZhciBhZHZhbmNlU3RyaW5nSW5kZXggPSByZXF1aXJlKCcuL19hZHZhbmNlLXN0cmluZy1pbmRleCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgY2FsbFJlZ0V4cEV4ZWMgPSByZXF1aXJlKCcuL19yZWdleHAtZXhlYy1hYnN0cmFjdCcpO1xudmFyIHJlZ2V4cEV4ZWMgPSByZXF1aXJlKCcuL19yZWdleHAtZXhlYycpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbnZhciAkbWluID0gTWF0aC5taW47XG52YXIgJHB1c2ggPSBbXS5wdXNoO1xudmFyICRTUExJVCA9ICdzcGxpdCc7XG52YXIgTEVOR1RIID0gJ2xlbmd0aCc7XG52YXIgTEFTVF9JTkRFWCA9ICdsYXN0SW5kZXgnO1xudmFyIE1BWF9VSU5UMzIgPSAweGZmZmZmZmZmO1xuXG4vLyBiYWJlbC1taW5pZnkgdHJhbnNwaWxlcyBSZWdFeHAoJ3gnLCAneScpIC0+IC94L3kgYW5kIGl0IGNhdXNlcyBTeW50YXhFcnJvclxudmFyIFNVUFBPUlRTX1kgPSAhZmFpbHMoZnVuY3Rpb24gKCkgeyBSZWdFeHAoTUFYX1VJTlQzMiwgJ3knKTsgfSk7XG5cbi8vIEBAc3BsaXQgbG9naWNcbnJlcXVpcmUoJy4vX2ZpeC1yZS13a3MnKSgnc3BsaXQnLCAyLCBmdW5jdGlvbiAoZGVmaW5lZCwgU1BMSVQsICRzcGxpdCwgbWF5YmVDYWxsTmF0aXZlKSB7XG4gIHZhciBpbnRlcm5hbFNwbGl0O1xuICBpZiAoXG4gICAgJ2FiYmMnWyRTUExJVF0oLyhiKSovKVsxXSA9PSAnYycgfHxcbiAgICAndGVzdCdbJFNQTElUXSgvKD86KS8sIC0xKVtMRU5HVEhdICE9IDQgfHxcbiAgICAnYWInWyRTUExJVF0oLyg/OmFiKSovKVtMRU5HVEhdICE9IDIgfHxcbiAgICAnLidbJFNQTElUXSgvKC4/KSguPykvKVtMRU5HVEhdICE9IDQgfHxcbiAgICAnLidbJFNQTElUXSgvKCkoKS8pW0xFTkdUSF0gPiAxIHx8XG4gICAgJydbJFNQTElUXSgvLj8vKVtMRU5HVEhdXG4gICkge1xuICAgIC8vIGJhc2VkIG9uIGVzNS1zaGltIGltcGxlbWVudGF0aW9uLCBuZWVkIHRvIHJld29yayBpdFxuICAgIGludGVybmFsU3BsaXQgPSBmdW5jdGlvbiAoc2VwYXJhdG9yLCBsaW1pdCkge1xuICAgICAgdmFyIHN0cmluZyA9IFN0cmluZyh0aGlzKTtcbiAgICAgIGlmIChzZXBhcmF0b3IgPT09IHVuZGVmaW5lZCAmJiBsaW1pdCA9PT0gMCkgcmV0dXJuIFtdO1xuICAgICAgLy8gSWYgYHNlcGFyYXRvcmAgaXMgbm90IGEgcmVnZXgsIHVzZSBuYXRpdmUgc3BsaXRcbiAgICAgIGlmICghaXNSZWdFeHAoc2VwYXJhdG9yKSkgcmV0dXJuICRzcGxpdC5jYWxsKHN0cmluZywgc2VwYXJhdG9yLCBsaW1pdCk7XG4gICAgICB2YXIgb3V0cHV0ID0gW107XG4gICAgICB2YXIgZmxhZ3MgPSAoc2VwYXJhdG9yLmlnbm9yZUNhc2UgPyAnaScgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgKHNlcGFyYXRvci5tdWx0aWxpbmUgPyAnbScgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgKHNlcGFyYXRvci51bmljb2RlID8gJ3UnIDogJycpICtcbiAgICAgICAgICAgICAgICAgIChzZXBhcmF0b3Iuc3RpY2t5ID8gJ3knIDogJycpO1xuICAgICAgdmFyIGxhc3RMYXN0SW5kZXggPSAwO1xuICAgICAgdmFyIHNwbGl0TGltaXQgPSBsaW1pdCA9PT0gdW5kZWZpbmVkID8gTUFYX1VJTlQzMiA6IGxpbWl0ID4+PiAwO1xuICAgICAgLy8gTWFrZSBgZ2xvYmFsYCBhbmQgYXZvaWQgYGxhc3RJbmRleGAgaXNzdWVzIGJ5IHdvcmtpbmcgd2l0aCBhIGNvcHlcbiAgICAgIHZhciBzZXBhcmF0b3JDb3B5ID0gbmV3IFJlZ0V4cChzZXBhcmF0b3Iuc291cmNlLCBmbGFncyArICdnJyk7XG4gICAgICB2YXIgbWF0Y2gsIGxhc3RJbmRleCwgbGFzdExlbmd0aDtcbiAgICAgIHdoaWxlIChtYXRjaCA9IHJlZ2V4cEV4ZWMuY2FsbChzZXBhcmF0b3JDb3B5LCBzdHJpbmcpKSB7XG4gICAgICAgIGxhc3RJbmRleCA9IHNlcGFyYXRvckNvcHlbTEFTVF9JTkRFWF07XG4gICAgICAgIGlmIChsYXN0SW5kZXggPiBsYXN0TGFzdEluZGV4KSB7XG4gICAgICAgICAgb3V0cHV0LnB1c2goc3RyaW5nLnNsaWNlKGxhc3RMYXN0SW5kZXgsIG1hdGNoLmluZGV4KSk7XG4gICAgICAgICAgaWYgKG1hdGNoW0xFTkdUSF0gPiAxICYmIG1hdGNoLmluZGV4IDwgc3RyaW5nW0xFTkdUSF0pICRwdXNoLmFwcGx5KG91dHB1dCwgbWF0Y2guc2xpY2UoMSkpO1xuICAgICAgICAgIGxhc3RMZW5ndGggPSBtYXRjaFswXVtMRU5HVEhdO1xuICAgICAgICAgIGxhc3RMYXN0SW5kZXggPSBsYXN0SW5kZXg7XG4gICAgICAgICAgaWYgKG91dHB1dFtMRU5HVEhdID49IHNwbGl0TGltaXQpIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzZXBhcmF0b3JDb3B5W0xBU1RfSU5ERVhdID09PSBtYXRjaC5pbmRleCkgc2VwYXJhdG9yQ29weVtMQVNUX0lOREVYXSsrOyAvLyBBdm9pZCBhbiBpbmZpbml0ZSBsb29wXG4gICAgICB9XG4gICAgICBpZiAobGFzdExhc3RJbmRleCA9PT0gc3RyaW5nW0xFTkdUSF0pIHtcbiAgICAgICAgaWYgKGxhc3RMZW5ndGggfHwgIXNlcGFyYXRvckNvcHkudGVzdCgnJykpIG91dHB1dC5wdXNoKCcnKTtcbiAgICAgIH0gZWxzZSBvdXRwdXQucHVzaChzdHJpbmcuc2xpY2UobGFzdExhc3RJbmRleCkpO1xuICAgICAgcmV0dXJuIG91dHB1dFtMRU5HVEhdID4gc3BsaXRMaW1pdCA/IG91dHB1dC5zbGljZSgwLCBzcGxpdExpbWl0KSA6IG91dHB1dDtcbiAgICB9O1xuICAvLyBDaGFrcmEsIFY4XG4gIH0gZWxzZSBpZiAoJzAnWyRTUExJVF0odW5kZWZpbmVkLCAwKVtMRU5HVEhdKSB7XG4gICAgaW50ZXJuYWxTcGxpdCA9IGZ1bmN0aW9uIChzZXBhcmF0b3IsIGxpbWl0KSB7XG4gICAgICByZXR1cm4gc2VwYXJhdG9yID09PSB1bmRlZmluZWQgJiYgbGltaXQgPT09IDAgPyBbXSA6ICRzcGxpdC5jYWxsKHRoaXMsIHNlcGFyYXRvciwgbGltaXQpO1xuICAgIH07XG4gIH0gZWxzZSB7XG4gICAgaW50ZXJuYWxTcGxpdCA9ICRzcGxpdDtcbiAgfVxuXG4gIHJldHVybiBbXG4gICAgLy8gYFN0cmluZy5wcm90b3R5cGUuc3BsaXRgIG1ldGhvZFxuICAgIC8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUuc3BsaXRcbiAgICBmdW5jdGlvbiBzcGxpdChzZXBhcmF0b3IsIGxpbWl0KSB7XG4gICAgICB2YXIgTyA9IGRlZmluZWQodGhpcyk7XG4gICAgICB2YXIgc3BsaXR0ZXIgPSBzZXBhcmF0b3IgPT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkIDogc2VwYXJhdG9yW1NQTElUXTtcbiAgICAgIHJldHVybiBzcGxpdHRlciAhPT0gdW5kZWZpbmVkXG4gICAgICAgID8gc3BsaXR0ZXIuY2FsbChzZXBhcmF0b3IsIE8sIGxpbWl0KVxuICAgICAgICA6IGludGVybmFsU3BsaXQuY2FsbChTdHJpbmcoTyksIHNlcGFyYXRvciwgbGltaXQpO1xuICAgIH0sXG4gICAgLy8gYFJlZ0V4cC5wcm90b3R5cGVbQEBzcGxpdF1gIG1ldGhvZFxuICAgIC8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXJlZ2V4cC5wcm90b3R5cGUtQEBzcGxpdFxuICAgIC8vXG4gICAgLy8gTk9URTogVGhpcyBjYW5ub3QgYmUgcHJvcGVybHkgcG9seWZpbGxlZCBpbiBlbmdpbmVzIHRoYXQgZG9uJ3Qgc3VwcG9ydFxuICAgIC8vIHRoZSAneScgZmxhZy5cbiAgICBmdW5jdGlvbiAocmVnZXhwLCBsaW1pdCkge1xuICAgICAgdmFyIHJlcyA9IG1heWJlQ2FsbE5hdGl2ZShpbnRlcm5hbFNwbGl0LCByZWdleHAsIHRoaXMsIGxpbWl0LCBpbnRlcm5hbFNwbGl0ICE9PSAkc3BsaXQpO1xuICAgICAgaWYgKHJlcy5kb25lKSByZXR1cm4gcmVzLnZhbHVlO1xuXG4gICAgICB2YXIgcnggPSBhbk9iamVjdChyZWdleHApO1xuICAgICAgdmFyIFMgPSBTdHJpbmcodGhpcyk7XG4gICAgICB2YXIgQyA9IHNwZWNpZXNDb25zdHJ1Y3RvcihyeCwgUmVnRXhwKTtcblxuICAgICAgdmFyIHVuaWNvZGVNYXRjaGluZyA9IHJ4LnVuaWNvZGU7XG4gICAgICB2YXIgZmxhZ3MgPSAocnguaWdub3JlQ2FzZSA/ICdpJyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAocngubXVsdGlsaW5lID8gJ20nIDogJycpICtcbiAgICAgICAgICAgICAgICAgIChyeC51bmljb2RlID8gJ3UnIDogJycpICtcbiAgICAgICAgICAgICAgICAgIChTVVBQT1JUU19ZID8gJ3knIDogJ2cnKTtcblxuICAgICAgLy8gXig/ICsgcnggKyApIGlzIG5lZWRlZCwgaW4gY29tYmluYXRpb24gd2l0aCBzb21lIFMgc2xpY2luZywgdG9cbiAgICAgIC8vIHNpbXVsYXRlIHRoZSAneScgZmxhZy5cbiAgICAgIHZhciBzcGxpdHRlciA9IG5ldyBDKFNVUFBPUlRTX1kgPyByeCA6ICdeKD86JyArIHJ4LnNvdXJjZSArICcpJywgZmxhZ3MpO1xuICAgICAgdmFyIGxpbSA9IGxpbWl0ID09PSB1bmRlZmluZWQgPyBNQVhfVUlOVDMyIDogbGltaXQgPj4+IDA7XG4gICAgICBpZiAobGltID09PSAwKSByZXR1cm4gW107XG4gICAgICBpZiAoUy5sZW5ndGggPT09IDApIHJldHVybiBjYWxsUmVnRXhwRXhlYyhzcGxpdHRlciwgUykgPT09IG51bGwgPyBbU10gOiBbXTtcbiAgICAgIHZhciBwID0gMDtcbiAgICAgIHZhciBxID0gMDtcbiAgICAgIHZhciBBID0gW107XG4gICAgICB3aGlsZSAocSA8IFMubGVuZ3RoKSB7XG4gICAgICAgIHNwbGl0dGVyLmxhc3RJbmRleCA9IFNVUFBPUlRTX1kgPyBxIDogMDtcbiAgICAgICAgdmFyIHogPSBjYWxsUmVnRXhwRXhlYyhzcGxpdHRlciwgU1VQUE9SVFNfWSA/IFMgOiBTLnNsaWNlKHEpKTtcbiAgICAgICAgdmFyIGU7XG4gICAgICAgIGlmIChcbiAgICAgICAgICB6ID09PSBudWxsIHx8XG4gICAgICAgICAgKGUgPSAkbWluKHRvTGVuZ3RoKHNwbGl0dGVyLmxhc3RJbmRleCArIChTVVBQT1JUU19ZID8gMCA6IHEpKSwgUy5sZW5ndGgpKSA9PT0gcFxuICAgICAgICApIHtcbiAgICAgICAgICBxID0gYWR2YW5jZVN0cmluZ0luZGV4KFMsIHEsIHVuaWNvZGVNYXRjaGluZyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgQS5wdXNoKFMuc2xpY2UocCwgcSkpO1xuICAgICAgICAgIGlmIChBLmxlbmd0aCA9PT0gbGltKSByZXR1cm4gQTtcbiAgICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8PSB6Lmxlbmd0aCAtIDE7IGkrKykge1xuICAgICAgICAgICAgQS5wdXNoKHpbaV0pO1xuICAgICAgICAgICAgaWYgKEEubGVuZ3RoID09PSBsaW0pIHJldHVybiBBO1xuICAgICAgICAgIH1cbiAgICAgICAgICBxID0gcCA9IGU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIEEucHVzaChTLnNsaWNlKHApKTtcbiAgICAgIHJldHVybiBBO1xuICAgIH1cbiAgXTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xucmVxdWlyZSgnLi9lczYucmVnZXhwLmZsYWdzJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciAkZmxhZ3MgPSByZXF1aXJlKCcuL19mbGFncycpO1xudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKTtcbnZhciBUT19TVFJJTkcgPSAndG9TdHJpbmcnO1xudmFyICR0b1N0cmluZyA9IC8uL1tUT19TVFJJTkddO1xuXG52YXIgZGVmaW5lID0gZnVuY3Rpb24gKGZuKSB7XG4gIHJlcXVpcmUoJy4vX3JlZGVmaW5lJykoUmVnRXhwLnByb3RvdHlwZSwgVE9fU1RSSU5HLCBmbiwgdHJ1ZSk7XG59O1xuXG4vLyAyMS4yLjUuMTQgUmVnRXhwLnByb3RvdHlwZS50b1N0cmluZygpXG5pZiAocmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7IHJldHVybiAkdG9TdHJpbmcuY2FsbCh7IHNvdXJjZTogJ2EnLCBmbGFnczogJ2InIH0pICE9ICcvYS9iJzsgfSkpIHtcbiAgZGVmaW5lKGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHZhciBSID0gYW5PYmplY3QodGhpcyk7XG4gICAgcmV0dXJuICcvJy5jb25jYXQoUi5zb3VyY2UsICcvJyxcbiAgICAgICdmbGFncycgaW4gUiA/IFIuZmxhZ3MgOiAhREVTQ1JJUFRPUlMgJiYgUiBpbnN0YW5jZW9mIFJlZ0V4cCA/ICRmbGFncy5jYWxsKFIpIDogdW5kZWZpbmVkKTtcbiAgfSk7XG4vLyBGRjQ0LSBSZWdFeHAjdG9TdHJpbmcgaGFzIGEgd3JvbmcgbmFtZVxufSBlbHNlIGlmICgkdG9TdHJpbmcubmFtZSAhPSBUT19TVFJJTkcpIHtcbiAgZGVmaW5lKGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiAkdG9TdHJpbmcuY2FsbCh0aGlzKTtcbiAgfSk7XG59XG4iLCIndXNlIHN0cmljdCc7XG52YXIgc3Ryb25nID0gcmVxdWlyZSgnLi9fY29sbGVjdGlvbi1zdHJvbmcnKTtcbnZhciB2YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlLWNvbGxlY3Rpb24nKTtcbnZhciBTRVQgPSAnU2V0JztcblxuLy8gMjMuMiBTZXQgT2JqZWN0c1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19jb2xsZWN0aW9uJykoU0VULCBmdW5jdGlvbiAoZ2V0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBTZXQoKSB7IHJldHVybiBnZXQodGhpcywgYXJndW1lbnRzLmxlbmd0aCA+IDAgPyBhcmd1bWVudHNbMF0gOiB1bmRlZmluZWQpOyB9O1xufSwge1xuICAvLyAyMy4yLjMuMSBTZXQucHJvdG90eXBlLmFkZCh2YWx1ZSlcbiAgYWRkOiBmdW5jdGlvbiBhZGQodmFsdWUpIHtcbiAgICByZXR1cm4gc3Ryb25nLmRlZih2YWxpZGF0ZSh0aGlzLCBTRVQpLCB2YWx1ZSA9IHZhbHVlID09PSAwID8gMCA6IHZhbHVlLCB2YWx1ZSk7XG4gIH1cbn0sIHN0cm9uZyk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBCLjIuMy4yIFN0cmluZy5wcm90b3R5cGUuYW5jaG9yKG5hbWUpXG5yZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdhbmNob3InLCBmdW5jdGlvbiAoY3JlYXRlSFRNTCkge1xuICByZXR1cm4gZnVuY3Rpb24gYW5jaG9yKG5hbWUpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnYScsICduYW1lJywgbmFtZSk7XG4gIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjMgU3RyaW5nLnByb3RvdHlwZS5iaWcoKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnYmlnJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGJpZygpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnYmlnJywgJycsICcnKTtcbiAgfTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuNCBTdHJpbmcucHJvdG90eXBlLmJsaW5rKClcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ2JsaW5rJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGJsaW5rKCkge1xuICAgIHJldHVybiBjcmVhdGVIVE1MKHRoaXMsICdibGluaycsICcnLCAnJyk7XG4gIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjUgU3RyaW5nLnByb3RvdHlwZS5ib2xkKClcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ2JvbGQnLCBmdW5jdGlvbiAoY3JlYXRlSFRNTCkge1xuICByZXR1cm4gZnVuY3Rpb24gYm9sZCgpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnYicsICcnLCAnJyk7XG4gIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGF0ID0gcmVxdWlyZSgnLi9fc3RyaW5nLWF0JykoZmFsc2UpO1xuJGV4cG9ydCgkZXhwb3J0LlAsICdTdHJpbmcnLCB7XG4gIC8vIDIxLjEuMy4zIFN0cmluZy5wcm90b3R5cGUuY29kZVBvaW50QXQocG9zKVxuICBjb2RlUG9pbnRBdDogZnVuY3Rpb24gY29kZVBvaW50QXQocG9zKSB7XG4gICAgcmV0dXJuICRhdCh0aGlzLCBwb3MpO1xuICB9XG59KTtcbiIsIi8vIDIxLjEuMy42IFN0cmluZy5wcm90b3R5cGUuZW5kc1dpdGgoc2VhcmNoU3RyaW5nIFssIGVuZFBvc2l0aW9uXSlcbid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciBjb250ZXh0ID0gcmVxdWlyZSgnLi9fc3RyaW5nLWNvbnRleHQnKTtcbnZhciBFTkRTX1dJVEggPSAnZW5kc1dpdGgnO1xudmFyICRlbmRzV2l0aCA9ICcnW0VORFNfV0lUSF07XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMtaXMtcmVnZXhwJykoRU5EU19XSVRIKSwgJ1N0cmluZycsIHtcbiAgZW5kc1dpdGg6IGZ1bmN0aW9uIGVuZHNXaXRoKHNlYXJjaFN0cmluZyAvKiAsIGVuZFBvc2l0aW9uID0gQGxlbmd0aCAqLykge1xuICAgIHZhciB0aGF0ID0gY29udGV4dCh0aGlzLCBzZWFyY2hTdHJpbmcsIEVORFNfV0lUSCk7XG4gICAgdmFyIGVuZFBvc2l0aW9uID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQ7XG4gICAgdmFyIGxlbiA9IHRvTGVuZ3RoKHRoYXQubGVuZ3RoKTtcbiAgICB2YXIgZW5kID0gZW5kUG9zaXRpb24gPT09IHVuZGVmaW5lZCA/IGxlbiA6IE1hdGgubWluKHRvTGVuZ3RoKGVuZFBvc2l0aW9uKSwgbGVuKTtcbiAgICB2YXIgc2VhcmNoID0gU3RyaW5nKHNlYXJjaFN0cmluZyk7XG4gICAgcmV0dXJuICRlbmRzV2l0aFxuICAgICAgPyAkZW5kc1dpdGguY2FsbCh0aGF0LCBzZWFyY2gsIGVuZClcbiAgICAgIDogdGhhdC5zbGljZShlbmQgLSBzZWFyY2gubGVuZ3RoLCBlbmQpID09PSBzZWFyY2g7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuNiBTdHJpbmcucHJvdG90eXBlLmZpeGVkKClcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ2ZpeGVkJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGZpeGVkKCkge1xuICAgIHJldHVybiBjcmVhdGVIVE1MKHRoaXMsICd0dCcsICcnLCAnJyk7XG4gIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjcgU3RyaW5nLnByb3RvdHlwZS5mb250Y29sb3IoY29sb3IpXG5yZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdmb250Y29sb3InLCBmdW5jdGlvbiAoY3JlYXRlSFRNTCkge1xuICByZXR1cm4gZnVuY3Rpb24gZm9udGNvbG9yKGNvbG9yKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ2ZvbnQnLCAnY29sb3InLCBjb2xvcik7XG4gIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjggU3RyaW5nLnByb3RvdHlwZS5mb250c2l6ZShzaXplKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnZm9udHNpemUnLCBmdW5jdGlvbiAoY3JlYXRlSFRNTCkge1xuICByZXR1cm4gZnVuY3Rpb24gZm9udHNpemUoc2l6ZSkge1xuICAgIHJldHVybiBjcmVhdGVIVE1MKHRoaXMsICdmb250JywgJ3NpemUnLCBzaXplKTtcbiAgfTtcbn0pO1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciB0b0Fic29sdXRlSW5kZXggPSByZXF1aXJlKCcuL190by1hYnNvbHV0ZS1pbmRleCcpO1xudmFyIGZyb21DaGFyQ29kZSA9IFN0cmluZy5mcm9tQ2hhckNvZGU7XG52YXIgJGZyb21Db2RlUG9pbnQgPSBTdHJpbmcuZnJvbUNvZGVQb2ludDtcblxuLy8gbGVuZ3RoIHNob3VsZCBiZSAxLCBvbGQgRkYgcHJvYmxlbVxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAoISEkZnJvbUNvZGVQb2ludCAmJiAkZnJvbUNvZGVQb2ludC5sZW5ndGggIT0gMSksICdTdHJpbmcnLCB7XG4gIC8vIDIxLjEuMi4yIFN0cmluZy5mcm9tQ29kZVBvaW50KC4uLmNvZGVQb2ludHMpXG4gIGZyb21Db2RlUG9pbnQ6IGZ1bmN0aW9uIGZyb21Db2RlUG9pbnQoeCkgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gICAgdmFyIHJlcyA9IFtdO1xuICAgIHZhciBhTGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICB2YXIgaSA9IDA7XG4gICAgdmFyIGNvZGU7XG4gICAgd2hpbGUgKGFMZW4gPiBpKSB7XG4gICAgICBjb2RlID0gK2FyZ3VtZW50c1tpKytdO1xuICAgICAgaWYgKHRvQWJzb2x1dGVJbmRleChjb2RlLCAweDEwZmZmZikgIT09IGNvZGUpIHRocm93IFJhbmdlRXJyb3IoY29kZSArICcgaXMgbm90IGEgdmFsaWQgY29kZSBwb2ludCcpO1xuICAgICAgcmVzLnB1c2goY29kZSA8IDB4MTAwMDBcbiAgICAgICAgPyBmcm9tQ2hhckNvZGUoY29kZSlcbiAgICAgICAgOiBmcm9tQ2hhckNvZGUoKChjb2RlIC09IDB4MTAwMDApID4+IDEwKSArIDB4ZDgwMCwgY29kZSAlIDB4NDAwICsgMHhkYzAwKVxuICAgICAgKTtcbiAgICB9IHJldHVybiByZXMuam9pbignJyk7XG4gIH1cbn0pO1xuIiwiLy8gMjEuMS4zLjcgU3RyaW5nLnByb3RvdHlwZS5pbmNsdWRlcyhzZWFyY2hTdHJpbmcsIHBvc2l0aW9uID0gMClcbid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgY29udGV4dCA9IHJlcXVpcmUoJy4vX3N0cmluZy1jb250ZXh0Jyk7XG52YXIgSU5DTFVERVMgPSAnaW5jbHVkZXMnO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIHJlcXVpcmUoJy4vX2ZhaWxzLWlzLXJlZ2V4cCcpKElOQ0xVREVTKSwgJ1N0cmluZycsIHtcbiAgaW5jbHVkZXM6IGZ1bmN0aW9uIGluY2x1ZGVzKHNlYXJjaFN0cmluZyAvKiAsIHBvc2l0aW9uID0gMCAqLykge1xuICAgIHJldHVybiAhIX5jb250ZXh0KHRoaXMsIHNlYXJjaFN0cmluZywgSU5DTFVERVMpXG4gICAgICAuaW5kZXhPZihzZWFyY2hTdHJpbmcsIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBCLjIuMy45IFN0cmluZy5wcm90b3R5cGUuaXRhbGljcygpXG5yZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdpdGFsaWNzJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGl0YWxpY3MoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ2knLCAnJywgJycpO1xuICB9O1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGF0ID0gcmVxdWlyZSgnLi9fc3RyaW5nLWF0JykodHJ1ZSk7XG5cbi8vIDIxLjEuMy4yNyBTdHJpbmcucHJvdG90eXBlW0BAaXRlcmF0b3JdKClcbnJlcXVpcmUoJy4vX2l0ZXItZGVmaW5lJykoU3RyaW5nLCAnU3RyaW5nJywgZnVuY3Rpb24gKGl0ZXJhdGVkKSB7XG4gIHRoaXMuX3QgPSBTdHJpbmcoaXRlcmF0ZWQpOyAvLyB0YXJnZXRcbiAgdGhpcy5faSA9IDA7ICAgICAgICAgICAgICAgIC8vIG5leHQgaW5kZXhcbi8vIDIxLjEuNS4yLjEgJVN0cmluZ0l0ZXJhdG9yUHJvdG90eXBlJS5uZXh0KClcbn0sIGZ1bmN0aW9uICgpIHtcbiAgdmFyIE8gPSB0aGlzLl90O1xuICB2YXIgaW5kZXggPSB0aGlzLl9pO1xuICB2YXIgcG9pbnQ7XG4gIGlmIChpbmRleCA+PSBPLmxlbmd0aCkgcmV0dXJuIHsgdmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZSB9O1xuICBwb2ludCA9ICRhdChPLCBpbmRleCk7XG4gIHRoaXMuX2kgKz0gcG9pbnQubGVuZ3RoO1xuICByZXR1cm4geyB2YWx1ZTogcG9pbnQsIGRvbmU6IGZhbHNlIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjEwIFN0cmluZy5wcm90b3R5cGUubGluayh1cmwpXG5yZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdsaW5rJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGxpbmsodXJsKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ2EnLCAnaHJlZicsIHVybCk7XG4gIH07XG59KTtcbiIsInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnU3RyaW5nJywge1xuICAvLyAyMS4xLjIuNCBTdHJpbmcucmF3KGNhbGxTaXRlLCAuLi5zdWJzdGl0dXRpb25zKVxuICByYXc6IGZ1bmN0aW9uIHJhdyhjYWxsU2l0ZSkge1xuICAgIHZhciB0cGwgPSB0b0lPYmplY3QoY2FsbFNpdGUucmF3KTtcbiAgICB2YXIgbGVuID0gdG9MZW5ndGgodHBsLmxlbmd0aCk7XG4gICAgdmFyIGFMZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIHZhciByZXMgPSBbXTtcbiAgICB2YXIgaSA9IDA7XG4gICAgd2hpbGUgKGxlbiA+IGkpIHtcbiAgICAgIHJlcy5wdXNoKFN0cmluZyh0cGxbaSsrXSkpO1xuICAgICAgaWYgKGkgPCBhTGVuKSByZXMucHVzaChTdHJpbmcoYXJndW1lbnRzW2ldKSk7XG4gICAgfSByZXR1cm4gcmVzLmpvaW4oJycpO1xuICB9XG59KTtcbiIsInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QLCAnU3RyaW5nJywge1xuICAvLyAyMS4xLjMuMTMgU3RyaW5nLnByb3RvdHlwZS5yZXBlYXQoY291bnQpXG4gIHJlcGVhdDogcmVxdWlyZSgnLi9fc3RyaW5nLXJlcGVhdCcpXG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjExIFN0cmluZy5wcm90b3R5cGUuc21hbGwoKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnc21hbGwnLCBmdW5jdGlvbiAoY3JlYXRlSFRNTCkge1xuICByZXR1cm4gZnVuY3Rpb24gc21hbGwoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ3NtYWxsJywgJycsICcnKTtcbiAgfTtcbn0pO1xuIiwiLy8gMjEuMS4zLjE4IFN0cmluZy5wcm90b3R5cGUuc3RhcnRzV2l0aChzZWFyY2hTdHJpbmcgWywgcG9zaXRpb24gXSlcbid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciBjb250ZXh0ID0gcmVxdWlyZSgnLi9fc3RyaW5nLWNvbnRleHQnKTtcbnZhciBTVEFSVFNfV0lUSCA9ICdzdGFydHNXaXRoJztcbnZhciAkc3RhcnRzV2l0aCA9ICcnW1NUQVJUU19XSVRIXTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiByZXF1aXJlKCcuL19mYWlscy1pcy1yZWdleHAnKShTVEFSVFNfV0lUSCksICdTdHJpbmcnLCB7XG4gIHN0YXJ0c1dpdGg6IGZ1bmN0aW9uIHN0YXJ0c1dpdGgoc2VhcmNoU3RyaW5nIC8qICwgcG9zaXRpb24gPSAwICovKSB7XG4gICAgdmFyIHRoYXQgPSBjb250ZXh0KHRoaXMsIHNlYXJjaFN0cmluZywgU1RBUlRTX1dJVEgpO1xuICAgIHZhciBpbmRleCA9IHRvTGVuZ3RoKE1hdGgubWluKGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkLCB0aGF0Lmxlbmd0aCkpO1xuICAgIHZhciBzZWFyY2ggPSBTdHJpbmcoc2VhcmNoU3RyaW5nKTtcbiAgICByZXR1cm4gJHN0YXJ0c1dpdGhcbiAgICAgID8gJHN0YXJ0c1dpdGguY2FsbCh0aGF0LCBzZWFyY2gsIGluZGV4KVxuICAgICAgOiB0aGF0LnNsaWNlKGluZGV4LCBpbmRleCArIHNlYXJjaC5sZW5ndGgpID09PSBzZWFyY2g7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuMTIgU3RyaW5nLnByb3RvdHlwZS5zdHJpa2UoKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnc3RyaWtlJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHN0cmlrZSgpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnc3RyaWtlJywgJycsICcnKTtcbiAgfTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuMTMgU3RyaW5nLnByb3RvdHlwZS5zdWIoKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnc3ViJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHN1YigpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnc3ViJywgJycsICcnKTtcbiAgfTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuMTQgU3RyaW5nLnByb3RvdHlwZS5zdXAoKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnc3VwJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHN1cCgpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnc3VwJywgJycsICcnKTtcbiAgfTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gMjEuMS4zLjI1IFN0cmluZy5wcm90b3R5cGUudHJpbSgpXG5yZXF1aXJlKCcuL19zdHJpbmctdHJpbScpKCd0cmltJywgZnVuY3Rpb24gKCR0cmltKSB7XG4gIHJldHVybiBmdW5jdGlvbiB0cmltKCkge1xuICAgIHJldHVybiAkdHJpbSh0aGlzLCAzKTtcbiAgfTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gRUNNQVNjcmlwdCA2IHN5bWJvbHMgc2hpbVxudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKTtcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgcmVkZWZpbmUgPSByZXF1aXJlKCcuL19yZWRlZmluZScpO1xudmFyIE1FVEEgPSByZXF1aXJlKCcuL19tZXRhJykuS0VZO1xudmFyICRmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG52YXIgc2hhcmVkID0gcmVxdWlyZSgnLi9fc2hhcmVkJyk7XG52YXIgc2V0VG9TdHJpbmdUYWcgPSByZXF1aXJlKCcuL19zZXQtdG8tc3RyaW5nLXRhZycpO1xudmFyIHVpZCA9IHJlcXVpcmUoJy4vX3VpZCcpO1xudmFyIHdrcyA9IHJlcXVpcmUoJy4vX3drcycpO1xudmFyIHdrc0V4dCA9IHJlcXVpcmUoJy4vX3drcy1leHQnKTtcbnZhciB3a3NEZWZpbmUgPSByZXF1aXJlKCcuL193a3MtZGVmaW5lJyk7XG52YXIgZW51bUtleXMgPSByZXF1aXJlKCcuL19lbnVtLWtleXMnKTtcbnZhciBpc0FycmF5ID0gcmVxdWlyZSgnLi9faXMtYXJyYXknKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgdG9QcmltaXRpdmUgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKTtcbnZhciBjcmVhdGVEZXNjID0gcmVxdWlyZSgnLi9fcHJvcGVydHktZGVzYycpO1xudmFyIF9jcmVhdGUgPSByZXF1aXJlKCcuL19vYmplY3QtY3JlYXRlJyk7XG52YXIgZ09QTkV4dCA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BuLWV4dCcpO1xudmFyICRHT1BEID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcGQnKTtcbnZhciAkR09QUyA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BzJyk7XG52YXIgJERQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgJGtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpO1xudmFyIGdPUEQgPSAkR09QRC5mO1xudmFyIGRQID0gJERQLmY7XG52YXIgZ09QTiA9IGdPUE5FeHQuZjtcbnZhciAkU3ltYm9sID0gZ2xvYmFsLlN5bWJvbDtcbnZhciAkSlNPTiA9IGdsb2JhbC5KU09OO1xudmFyIF9zdHJpbmdpZnkgPSAkSlNPTiAmJiAkSlNPTi5zdHJpbmdpZnk7XG52YXIgUFJPVE9UWVBFID0gJ3Byb3RvdHlwZSc7XG52YXIgSElEREVOID0gd2tzKCdfaGlkZGVuJyk7XG52YXIgVE9fUFJJTUlUSVZFID0gd2tzKCd0b1ByaW1pdGl2ZScpO1xudmFyIGlzRW51bSA9IHt9LnByb3BlcnR5SXNFbnVtZXJhYmxlO1xudmFyIFN5bWJvbFJlZ2lzdHJ5ID0gc2hhcmVkKCdzeW1ib2wtcmVnaXN0cnknKTtcbnZhciBBbGxTeW1ib2xzID0gc2hhcmVkKCdzeW1ib2xzJyk7XG52YXIgT1BTeW1ib2xzID0gc2hhcmVkKCdvcC1zeW1ib2xzJyk7XG52YXIgT2JqZWN0UHJvdG8gPSBPYmplY3RbUFJPVE9UWVBFXTtcbnZhciBVU0VfTkFUSVZFID0gdHlwZW9mICRTeW1ib2wgPT0gJ2Z1bmN0aW9uJyAmJiAhISRHT1BTLmY7XG52YXIgUU9iamVjdCA9IGdsb2JhbC5RT2JqZWN0O1xuLy8gRG9uJ3QgdXNlIHNldHRlcnMgaW4gUXQgU2NyaXB0LCBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvMTczXG52YXIgc2V0dGVyID0gIVFPYmplY3QgfHwgIVFPYmplY3RbUFJPVE9UWVBFXSB8fCAhUU9iamVjdFtQUk9UT1RZUEVdLmZpbmRDaGlsZDtcblxuLy8gZmFsbGJhY2sgZm9yIG9sZCBBbmRyb2lkLCBodHRwczovL2NvZGUuZ29vZ2xlLmNvbS9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9Njg3XG52YXIgc2V0U3ltYm9sRGVzYyA9IERFU0NSSVBUT1JTICYmICRmYWlscyhmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBfY3JlYXRlKGRQKHt9LCAnYScsIHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRQKHRoaXMsICdhJywgeyB2YWx1ZTogNyB9KS5hOyB9XG4gIH0pKS5hICE9IDc7XG59KSA/IGZ1bmN0aW9uIChpdCwga2V5LCBEKSB7XG4gIHZhciBwcm90b0Rlc2MgPSBnT1BEKE9iamVjdFByb3RvLCBrZXkpO1xuICBpZiAocHJvdG9EZXNjKSBkZWxldGUgT2JqZWN0UHJvdG9ba2V5XTtcbiAgZFAoaXQsIGtleSwgRCk7XG4gIGlmIChwcm90b0Rlc2MgJiYgaXQgIT09IE9iamVjdFByb3RvKSBkUChPYmplY3RQcm90bywga2V5LCBwcm90b0Rlc2MpO1xufSA6IGRQO1xuXG52YXIgd3JhcCA9IGZ1bmN0aW9uICh0YWcpIHtcbiAgdmFyIHN5bSA9IEFsbFN5bWJvbHNbdGFnXSA9IF9jcmVhdGUoJFN5bWJvbFtQUk9UT1RZUEVdKTtcbiAgc3ltLl9rID0gdGFnO1xuICByZXR1cm4gc3ltO1xufTtcblxudmFyIGlzU3ltYm9sID0gVVNFX05BVElWRSAmJiB0eXBlb2YgJFN5bWJvbC5pdGVyYXRvciA9PSAnc3ltYm9sJyA/IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gdHlwZW9mIGl0ID09ICdzeW1ib2wnO1xufSA6IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXQgaW5zdGFuY2VvZiAkU3ltYm9sO1xufTtcblxudmFyICRkZWZpbmVQcm9wZXJ0eSA9IGZ1bmN0aW9uIGRlZmluZVByb3BlcnR5KGl0LCBrZXksIEQpIHtcbiAgaWYgKGl0ID09PSBPYmplY3RQcm90bykgJGRlZmluZVByb3BlcnR5KE9QU3ltYm9scywga2V5LCBEKTtcbiAgYW5PYmplY3QoaXQpO1xuICBrZXkgPSB0b1ByaW1pdGl2ZShrZXksIHRydWUpO1xuICBhbk9iamVjdChEKTtcbiAgaWYgKGhhcyhBbGxTeW1ib2xzLCBrZXkpKSB7XG4gICAgaWYgKCFELmVudW1lcmFibGUpIHtcbiAgICAgIGlmICghaGFzKGl0LCBISURERU4pKSBkUChpdCwgSElEREVOLCBjcmVhdGVEZXNjKDEsIHt9KSk7XG4gICAgICBpdFtISURERU5dW2tleV0gPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoaGFzKGl0LCBISURERU4pICYmIGl0W0hJRERFTl1ba2V5XSkgaXRbSElEREVOXVtrZXldID0gZmFsc2U7XG4gICAgICBEID0gX2NyZWF0ZShELCB7IGVudW1lcmFibGU6IGNyZWF0ZURlc2MoMCwgZmFsc2UpIH0pO1xuICAgIH0gcmV0dXJuIHNldFN5bWJvbERlc2MoaXQsIGtleSwgRCk7XG4gIH0gcmV0dXJuIGRQKGl0LCBrZXksIEQpO1xufTtcbnZhciAkZGVmaW5lUHJvcGVydGllcyA9IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXMoaXQsIFApIHtcbiAgYW5PYmplY3QoaXQpO1xuICB2YXIga2V5cyA9IGVudW1LZXlzKFAgPSB0b0lPYmplY3QoUCkpO1xuICB2YXIgaSA9IDA7XG4gIHZhciBsID0ga2V5cy5sZW5ndGg7XG4gIHZhciBrZXk7XG4gIHdoaWxlIChsID4gaSkgJGRlZmluZVByb3BlcnR5KGl0LCBrZXkgPSBrZXlzW2krK10sIFBba2V5XSk7XG4gIHJldHVybiBpdDtcbn07XG52YXIgJGNyZWF0ZSA9IGZ1bmN0aW9uIGNyZWF0ZShpdCwgUCkge1xuICByZXR1cm4gUCA9PT0gdW5kZWZpbmVkID8gX2NyZWF0ZShpdCkgOiAkZGVmaW5lUHJvcGVydGllcyhfY3JlYXRlKGl0KSwgUCk7XG59O1xudmFyICRwcm9wZXJ0eUlzRW51bWVyYWJsZSA9IGZ1bmN0aW9uIHByb3BlcnR5SXNFbnVtZXJhYmxlKGtleSkge1xuICB2YXIgRSA9IGlzRW51bS5jYWxsKHRoaXMsIGtleSA9IHRvUHJpbWl0aXZlKGtleSwgdHJ1ZSkpO1xuICBpZiAodGhpcyA9PT0gT2JqZWN0UHJvdG8gJiYgaGFzKEFsbFN5bWJvbHMsIGtleSkgJiYgIWhhcyhPUFN5bWJvbHMsIGtleSkpIHJldHVybiBmYWxzZTtcbiAgcmV0dXJuIEUgfHwgIWhhcyh0aGlzLCBrZXkpIHx8ICFoYXMoQWxsU3ltYm9scywga2V5KSB8fCBoYXModGhpcywgSElEREVOKSAmJiB0aGlzW0hJRERFTl1ba2V5XSA/IEUgOiB0cnVlO1xufTtcbnZhciAkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGl0LCBrZXkpIHtcbiAgaXQgPSB0b0lPYmplY3QoaXQpO1xuICBrZXkgPSB0b1ByaW1pdGl2ZShrZXksIHRydWUpO1xuICBpZiAoaXQgPT09IE9iamVjdFByb3RvICYmIGhhcyhBbGxTeW1ib2xzLCBrZXkpICYmICFoYXMoT1BTeW1ib2xzLCBrZXkpKSByZXR1cm47XG4gIHZhciBEID0gZ09QRChpdCwga2V5KTtcbiAgaWYgKEQgJiYgaGFzKEFsbFN5bWJvbHMsIGtleSkgJiYgIShoYXMoaXQsIEhJRERFTikgJiYgaXRbSElEREVOXVtrZXldKSkgRC5lbnVtZXJhYmxlID0gdHJ1ZTtcbiAgcmV0dXJuIEQ7XG59O1xudmFyICRnZXRPd25Qcm9wZXJ0eU5hbWVzID0gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlOYW1lcyhpdCkge1xuICB2YXIgbmFtZXMgPSBnT1BOKHRvSU9iamVjdChpdCkpO1xuICB2YXIgcmVzdWx0ID0gW107XG4gIHZhciBpID0gMDtcbiAgdmFyIGtleTtcbiAgd2hpbGUgKG5hbWVzLmxlbmd0aCA+IGkpIHtcbiAgICBpZiAoIWhhcyhBbGxTeW1ib2xzLCBrZXkgPSBuYW1lc1tpKytdKSAmJiBrZXkgIT0gSElEREVOICYmIGtleSAhPSBNRVRBKSByZXN1bHQucHVzaChrZXkpO1xuICB9IHJldHVybiByZXN1bHQ7XG59O1xudmFyICRnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoaXQpIHtcbiAgdmFyIElTX09QID0gaXQgPT09IE9iamVjdFByb3RvO1xuICB2YXIgbmFtZXMgPSBnT1BOKElTX09QID8gT1BTeW1ib2xzIDogdG9JT2JqZWN0KGl0KSk7XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgdmFyIGkgPSAwO1xuICB2YXIga2V5O1xuICB3aGlsZSAobmFtZXMubGVuZ3RoID4gaSkge1xuICAgIGlmIChoYXMoQWxsU3ltYm9scywga2V5ID0gbmFtZXNbaSsrXSkgJiYgKElTX09QID8gaGFzKE9iamVjdFByb3RvLCBrZXkpIDogdHJ1ZSkpIHJlc3VsdC5wdXNoKEFsbFN5bWJvbHNba2V5XSk7XG4gIH0gcmV0dXJuIHJlc3VsdDtcbn07XG5cbi8vIDE5LjQuMS4xIFN5bWJvbChbZGVzY3JpcHRpb25dKVxuaWYgKCFVU0VfTkFUSVZFKSB7XG4gICRTeW1ib2wgPSBmdW5jdGlvbiBTeW1ib2woKSB7XG4gICAgaWYgKHRoaXMgaW5zdGFuY2VvZiAkU3ltYm9sKSB0aHJvdyBUeXBlRXJyb3IoJ1N5bWJvbCBpcyBub3QgYSBjb25zdHJ1Y3RvciEnKTtcbiAgICB2YXIgdGFnID0gdWlkKGFyZ3VtZW50cy5sZW5ndGggPiAwID8gYXJndW1lbnRzWzBdIDogdW5kZWZpbmVkKTtcbiAgICB2YXIgJHNldCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgaWYgKHRoaXMgPT09IE9iamVjdFByb3RvKSAkc2V0LmNhbGwoT1BTeW1ib2xzLCB2YWx1ZSk7XG4gICAgICBpZiAoaGFzKHRoaXMsIEhJRERFTikgJiYgaGFzKHRoaXNbSElEREVOXSwgdGFnKSkgdGhpc1tISURERU5dW3RhZ10gPSBmYWxzZTtcbiAgICAgIHNldFN5bWJvbERlc2ModGhpcywgdGFnLCBjcmVhdGVEZXNjKDEsIHZhbHVlKSk7XG4gICAgfTtcbiAgICBpZiAoREVTQ1JJUFRPUlMgJiYgc2V0dGVyKSBzZXRTeW1ib2xEZXNjKE9iamVjdFByb3RvLCB0YWcsIHsgY29uZmlndXJhYmxlOiB0cnVlLCBzZXQ6ICRzZXQgfSk7XG4gICAgcmV0dXJuIHdyYXAodGFnKTtcbiAgfTtcbiAgcmVkZWZpbmUoJFN5bWJvbFtQUk9UT1RZUEVdLCAndG9TdHJpbmcnLCBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5faztcbiAgfSk7XG5cbiAgJEdPUEQuZiA9ICRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG4gICREUC5mID0gJGRlZmluZVByb3BlcnR5O1xuICByZXF1aXJlKCcuL19vYmplY3QtZ29wbicpLmYgPSBnT1BORXh0LmYgPSAkZ2V0T3duUHJvcGVydHlOYW1lcztcbiAgcmVxdWlyZSgnLi9fb2JqZWN0LXBpZScpLmYgPSAkcHJvcGVydHlJc0VudW1lcmFibGU7XG4gICRHT1BTLmYgPSAkZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xuXG4gIGlmIChERVNDUklQVE9SUyAmJiAhcmVxdWlyZSgnLi9fbGlicmFyeScpKSB7XG4gICAgcmVkZWZpbmUoT2JqZWN0UHJvdG8sICdwcm9wZXJ0eUlzRW51bWVyYWJsZScsICRwcm9wZXJ0eUlzRW51bWVyYWJsZSwgdHJ1ZSk7XG4gIH1cblxuICB3a3NFeHQuZiA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgcmV0dXJuIHdyYXAod2tzKG5hbWUpKTtcbiAgfTtcbn1cblxuJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LlcgKyAkZXhwb3J0LkYgKiAhVVNFX05BVElWRSwgeyBTeW1ib2w6ICRTeW1ib2wgfSk7XG5cbmZvciAodmFyIGVzNlN5bWJvbHMgPSAoXG4gIC8vIDE5LjQuMi4yLCAxOS40LjIuMywgMTkuNC4yLjQsIDE5LjQuMi42LCAxOS40LjIuOCwgMTkuNC4yLjksIDE5LjQuMi4xMCwgMTkuNC4yLjExLCAxOS40LjIuMTIsIDE5LjQuMi4xMywgMTkuNC4yLjE0XG4gICdoYXNJbnN0YW5jZSxpc0NvbmNhdFNwcmVhZGFibGUsaXRlcmF0b3IsbWF0Y2gscmVwbGFjZSxzZWFyY2gsc3BlY2llcyxzcGxpdCx0b1ByaW1pdGl2ZSx0b1N0cmluZ1RhZyx1bnNjb3BhYmxlcydcbikuc3BsaXQoJywnKSwgaiA9IDA7IGVzNlN5bWJvbHMubGVuZ3RoID4gajspd2tzKGVzNlN5bWJvbHNbaisrXSk7XG5cbmZvciAodmFyIHdlbGxLbm93blN5bWJvbHMgPSAka2V5cyh3a3Muc3RvcmUpLCBrID0gMDsgd2VsbEtub3duU3ltYm9scy5sZW5ndGggPiBrOykgd2tzRGVmaW5lKHdlbGxLbm93blN5bWJvbHNbaysrXSk7XG5cbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogIVVTRV9OQVRJVkUsICdTeW1ib2wnLCB7XG4gIC8vIDE5LjQuMi4xIFN5bWJvbC5mb3Ioa2V5KVxuICAnZm9yJzogZnVuY3Rpb24gKGtleSkge1xuICAgIHJldHVybiBoYXMoU3ltYm9sUmVnaXN0cnksIGtleSArPSAnJylcbiAgICAgID8gU3ltYm9sUmVnaXN0cnlba2V5XVxuICAgICAgOiBTeW1ib2xSZWdpc3RyeVtrZXldID0gJFN5bWJvbChrZXkpO1xuICB9LFxuICAvLyAxOS40LjIuNSBTeW1ib2wua2V5Rm9yKHN5bSlcbiAga2V5Rm9yOiBmdW5jdGlvbiBrZXlGb3Ioc3ltKSB7XG4gICAgaWYgKCFpc1N5bWJvbChzeW0pKSB0aHJvdyBUeXBlRXJyb3Ioc3ltICsgJyBpcyBub3QgYSBzeW1ib2whJyk7XG4gICAgZm9yICh2YXIga2V5IGluIFN5bWJvbFJlZ2lzdHJ5KSBpZiAoU3ltYm9sUmVnaXN0cnlba2V5XSA9PT0gc3ltKSByZXR1cm4ga2V5O1xuICB9LFxuICB1c2VTZXR0ZXI6IGZ1bmN0aW9uICgpIHsgc2V0dGVyID0gdHJ1ZTsgfSxcbiAgdXNlU2ltcGxlOiBmdW5jdGlvbiAoKSB7IHNldHRlciA9IGZhbHNlOyB9XG59KTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhVVNFX05BVElWRSwgJ09iamVjdCcsIHtcbiAgLy8gMTkuMS4yLjIgT2JqZWN0LmNyZWF0ZShPIFssIFByb3BlcnRpZXNdKVxuICBjcmVhdGU6ICRjcmVhdGUsXG4gIC8vIDE5LjEuMi40IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShPLCBQLCBBdHRyaWJ1dGVzKVxuICBkZWZpbmVQcm9wZXJ0eTogJGRlZmluZVByb3BlcnR5LFxuICAvLyAxOS4xLjIuMyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhPLCBQcm9wZXJ0aWVzKVxuICBkZWZpbmVQcm9wZXJ0aWVzOiAkZGVmaW5lUHJvcGVydGllcyxcbiAgLy8gMTkuMS4yLjYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihPLCBQKVxuICBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I6ICRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IsXG4gIC8vIDE5LjEuMi43IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKE8pXG4gIGdldE93blByb3BlcnR5TmFtZXM6ICRnZXRPd25Qcm9wZXJ0eU5hbWVzLFxuICAvLyAxOS4xLjIuOCBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKE8pXG4gIGdldE93blByb3BlcnR5U3ltYm9sczogJGdldE93blByb3BlcnR5U3ltYm9sc1xufSk7XG5cbi8vIENocm9tZSAzOCBhbmQgMzkgYE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHNgIGZhaWxzIG9uIHByaW1pdGl2ZXNcbi8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTM0NDNcbnZhciBGQUlMU19PTl9QUklNSVRJVkVTID0gJGZhaWxzKGZ1bmN0aW9uICgpIHsgJEdPUFMuZigxKTsgfSk7XG5cbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogRkFJTFNfT05fUFJJTUlUSVZFUywgJ09iamVjdCcsIHtcbiAgZ2V0T3duUHJvcGVydHlTeW1ib2xzOiBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoaXQpIHtcbiAgICByZXR1cm4gJEdPUFMuZih0b09iamVjdChpdCkpO1xuICB9XG59KTtcblxuLy8gMjQuMy4yIEpTT04uc3RyaW5naWZ5KHZhbHVlIFssIHJlcGxhY2VyIFssIHNwYWNlXV0pXG4kSlNPTiAmJiAkZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICghVVNFX05BVElWRSB8fCAkZmFpbHMoZnVuY3Rpb24gKCkge1xuICB2YXIgUyA9ICRTeW1ib2woKTtcbiAgLy8gTVMgRWRnZSBjb252ZXJ0cyBzeW1ib2wgdmFsdWVzIHRvIEpTT04gYXMge31cbiAgLy8gV2ViS2l0IGNvbnZlcnRzIHN5bWJvbCB2YWx1ZXMgdG8gSlNPTiBhcyBudWxsXG4gIC8vIFY4IHRocm93cyBvbiBib3hlZCBzeW1ib2xzXG4gIHJldHVybiBfc3RyaW5naWZ5KFtTXSkgIT0gJ1tudWxsXScgfHwgX3N0cmluZ2lmeSh7IGE6IFMgfSkgIT0gJ3t9JyB8fCBfc3RyaW5naWZ5KE9iamVjdChTKSkgIT0gJ3t9Jztcbn0pKSwgJ0pTT04nLCB7XG4gIHN0cmluZ2lmeTogZnVuY3Rpb24gc3RyaW5naWZ5KGl0KSB7XG4gICAgdmFyIGFyZ3MgPSBbaXRdO1xuICAgIHZhciBpID0gMTtcbiAgICB2YXIgcmVwbGFjZXIsICRyZXBsYWNlcjtcbiAgICB3aGlsZSAoYXJndW1lbnRzLmxlbmd0aCA+IGkpIGFyZ3MucHVzaChhcmd1bWVudHNbaSsrXSk7XG4gICAgJHJlcGxhY2VyID0gcmVwbGFjZXIgPSBhcmdzWzFdO1xuICAgIGlmICghaXNPYmplY3QocmVwbGFjZXIpICYmIGl0ID09PSB1bmRlZmluZWQgfHwgaXNTeW1ib2woaXQpKSByZXR1cm47IC8vIElFOCByZXR1cm5zIHN0cmluZyBvbiB1bmRlZmluZWRcbiAgICBpZiAoIWlzQXJyYXkocmVwbGFjZXIpKSByZXBsYWNlciA9IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG4gICAgICBpZiAodHlwZW9mICRyZXBsYWNlciA9PSAnZnVuY3Rpb24nKSB2YWx1ZSA9ICRyZXBsYWNlci5jYWxsKHRoaXMsIGtleSwgdmFsdWUpO1xuICAgICAgaWYgKCFpc1N5bWJvbCh2YWx1ZSkpIHJldHVybiB2YWx1ZTtcbiAgICB9O1xuICAgIGFyZ3NbMV0gPSByZXBsYWNlcjtcbiAgICByZXR1cm4gX3N0cmluZ2lmeS5hcHBseSgkSlNPTiwgYXJncyk7XG4gIH1cbn0pO1xuXG4vLyAxOS40LjMuNCBTeW1ib2wucHJvdG90eXBlW0BAdG9QcmltaXRpdmVdKGhpbnQpXG4kU3ltYm9sW1BST1RPVFlQRV1bVE9fUFJJTUlUSVZFXSB8fCByZXF1aXJlKCcuL19oaWRlJykoJFN5bWJvbFtQUk9UT1RZUEVdLCBUT19QUklNSVRJVkUsICRTeW1ib2xbUFJPVE9UWVBFXS52YWx1ZU9mKTtcbi8vIDE5LjQuMy41IFN5bWJvbC5wcm90b3R5cGVbQEB0b1N0cmluZ1RhZ11cbnNldFRvU3RyaW5nVGFnKCRTeW1ib2wsICdTeW1ib2wnKTtcbi8vIDIwLjIuMS45IE1hdGhbQEB0b1N0cmluZ1RhZ11cbnNldFRvU3RyaW5nVGFnKE1hdGgsICdNYXRoJywgdHJ1ZSk7XG4vLyAyNC4zLjMgSlNPTltAQHRvU3RyaW5nVGFnXVxuc2V0VG9TdHJpbmdUYWcoZ2xvYmFsLkpTT04sICdKU09OJywgdHJ1ZSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICR0eXBlZCA9IHJlcXVpcmUoJy4vX3R5cGVkJyk7XG52YXIgYnVmZmVyID0gcmVxdWlyZSgnLi9fdHlwZWQtYnVmZmVyJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciB0b0Fic29sdXRlSW5kZXggPSByZXF1aXJlKCcuL190by1hYnNvbHV0ZS1pbmRleCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBBcnJheUJ1ZmZlciA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLkFycmF5QnVmZmVyO1xudmFyIHNwZWNpZXNDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4vX3NwZWNpZXMtY29uc3RydWN0b3InKTtcbnZhciAkQXJyYXlCdWZmZXIgPSBidWZmZXIuQXJyYXlCdWZmZXI7XG52YXIgJERhdGFWaWV3ID0gYnVmZmVyLkRhdGFWaWV3O1xudmFyICRpc1ZpZXcgPSAkdHlwZWQuQUJWICYmIEFycmF5QnVmZmVyLmlzVmlldztcbnZhciAkc2xpY2UgPSAkQXJyYXlCdWZmZXIucHJvdG90eXBlLnNsaWNlO1xudmFyIFZJRVcgPSAkdHlwZWQuVklFVztcbnZhciBBUlJBWV9CVUZGRVIgPSAnQXJyYXlCdWZmZXInO1xuXG4kZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuVyArICRleHBvcnQuRiAqIChBcnJheUJ1ZmZlciAhPT0gJEFycmF5QnVmZmVyKSwgeyBBcnJheUJ1ZmZlcjogJEFycmF5QnVmZmVyIH0pO1xuXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICEkdHlwZWQuQ09OU1RSLCBBUlJBWV9CVUZGRVIsIHtcbiAgLy8gMjQuMS4zLjEgQXJyYXlCdWZmZXIuaXNWaWV3KGFyZylcbiAgaXNWaWV3OiBmdW5jdGlvbiBpc1ZpZXcoaXQpIHtcbiAgICByZXR1cm4gJGlzVmlldyAmJiAkaXNWaWV3KGl0KSB8fCBpc09iamVjdChpdCkgJiYgVklFVyBpbiBpdDtcbiAgfVxufSk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5VICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIHJldHVybiAhbmV3ICRBcnJheUJ1ZmZlcigyKS5zbGljZSgxLCB1bmRlZmluZWQpLmJ5dGVMZW5ndGg7XG59KSwgQVJSQVlfQlVGRkVSLCB7XG4gIC8vIDI0LjEuNC4zIEFycmF5QnVmZmVyLnByb3RvdHlwZS5zbGljZShzdGFydCwgZW5kKVxuICBzbGljZTogZnVuY3Rpb24gc2xpY2Uoc3RhcnQsIGVuZCkge1xuICAgIGlmICgkc2xpY2UgIT09IHVuZGVmaW5lZCAmJiBlbmQgPT09IHVuZGVmaW5lZCkgcmV0dXJuICRzbGljZS5jYWxsKGFuT2JqZWN0KHRoaXMpLCBzdGFydCk7IC8vIEZGIGZpeFxuICAgIHZhciBsZW4gPSBhbk9iamVjdCh0aGlzKS5ieXRlTGVuZ3RoO1xuICAgIHZhciBmaXJzdCA9IHRvQWJzb2x1dGVJbmRleChzdGFydCwgbGVuKTtcbiAgICB2YXIgZmluID0gdG9BYnNvbHV0ZUluZGV4KGVuZCA9PT0gdW5kZWZpbmVkID8gbGVuIDogZW5kLCBsZW4pO1xuICAgIHZhciByZXN1bHQgPSBuZXcgKHNwZWNpZXNDb25zdHJ1Y3Rvcih0aGlzLCAkQXJyYXlCdWZmZXIpKSh0b0xlbmd0aChmaW4gLSBmaXJzdCkpO1xuICAgIHZhciB2aWV3UyA9IG5ldyAkRGF0YVZpZXcodGhpcyk7XG4gICAgdmFyIHZpZXdUID0gbmV3ICREYXRhVmlldyhyZXN1bHQpO1xuICAgIHZhciBpbmRleCA9IDA7XG4gICAgd2hpbGUgKGZpcnN0IDwgZmluKSB7XG4gICAgICB2aWV3VC5zZXRVaW50OChpbmRleCsrLCB2aWV3Uy5nZXRVaW50OChmaXJzdCsrKSk7XG4gICAgfSByZXR1cm4gcmVzdWx0O1xuICB9XG59KTtcblxucmVxdWlyZSgnLi9fc2V0LXNwZWNpZXMnKShBUlJBWV9CVUZGRVIpO1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbiRleHBvcnQoJGV4cG9ydC5HICsgJGV4cG9ydC5XICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX3R5cGVkJykuQUJWLCB7XG4gIERhdGFWaWV3OiByZXF1aXJlKCcuL190eXBlZC1idWZmZXInKS5EYXRhVmlld1xufSk7XG4iLCJyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdGbG9hdDMyJywgNCwgZnVuY3Rpb24gKGluaXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIEZsb2F0MzJBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpIHtcbiAgICByZXR1cm4gaW5pdCh0aGlzLCBkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpO1xuICB9O1xufSk7XG4iLCJyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdGbG9hdDY0JywgOCwgZnVuY3Rpb24gKGluaXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIEZsb2F0NjRBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpIHtcbiAgICByZXR1cm4gaW5pdCh0aGlzLCBkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpO1xuICB9O1xufSk7XG4iLCJyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdJbnQxNicsIDIsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBJbnQxNkFycmF5KGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCkge1xuICAgIHJldHVybiBpbml0KHRoaXMsIGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCk7XG4gIH07XG59KTtcbiIsInJlcXVpcmUoJy4vX3R5cGVkLWFycmF5JykoJ0ludDMyJywgNCwgZnVuY3Rpb24gKGluaXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIEludDMyQXJyYXkoZGF0YSwgYnl0ZU9mZnNldCwgbGVuZ3RoKSB7XG4gICAgcmV0dXJuIGluaXQodGhpcywgZGF0YSwgYnl0ZU9mZnNldCwgbGVuZ3RoKTtcbiAgfTtcbn0pO1xuIiwicmVxdWlyZSgnLi9fdHlwZWQtYXJyYXknKSgnSW50OCcsIDEsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBJbnQ4QXJyYXkoZGF0YSwgYnl0ZU9mZnNldCwgbGVuZ3RoKSB7XG4gICAgcmV0dXJuIGluaXQodGhpcywgZGF0YSwgYnl0ZU9mZnNldCwgbGVuZ3RoKTtcbiAgfTtcbn0pO1xuIiwicmVxdWlyZSgnLi9fdHlwZWQtYXJyYXknKSgnVWludDE2JywgMiwgZnVuY3Rpb24gKGluaXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIFVpbnQxNkFycmF5KGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCkge1xuICAgIHJldHVybiBpbml0KHRoaXMsIGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCk7XG4gIH07XG59KTtcbiIsInJlcXVpcmUoJy4vX3R5cGVkLWFycmF5JykoJ1VpbnQzMicsIDQsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBVaW50MzJBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpIHtcbiAgICByZXR1cm4gaW5pdCh0aGlzLCBkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpO1xuICB9O1xufSk7XG4iLCJyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdVaW50OCcsIDEsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBVaW50OEFycmF5KGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCkge1xuICAgIHJldHVybiBpbml0KHRoaXMsIGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCk7XG4gIH07XG59KTtcbiIsInJlcXVpcmUoJy4vX3R5cGVkLWFycmF5JykoJ1VpbnQ4JywgMSwgZnVuY3Rpb24gKGluaXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIFVpbnQ4Q2xhbXBlZEFycmF5KGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCkge1xuICAgIHJldHVybiBpbml0KHRoaXMsIGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCk7XG4gIH07XG59LCB0cnVlKTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBlYWNoID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpKDApO1xudmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKTtcbnZhciBtZXRhID0gcmVxdWlyZSgnLi9fbWV0YScpO1xudmFyIGFzc2lnbiA9IHJlcXVpcmUoJy4vX29iamVjdC1hc3NpZ24nKTtcbnZhciB3ZWFrID0gcmVxdWlyZSgnLi9fY29sbGVjdGlvbi13ZWFrJyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciB2YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlLWNvbGxlY3Rpb24nKTtcbnZhciBOQVRJVkVfV0VBS19NQVAgPSByZXF1aXJlKCcuL192YWxpZGF0ZS1jb2xsZWN0aW9uJyk7XG52YXIgSVNfSUUxMSA9ICFnbG9iYWwuQWN0aXZlWE9iamVjdCAmJiAnQWN0aXZlWE9iamVjdCcgaW4gZ2xvYmFsO1xudmFyIFdFQUtfTUFQID0gJ1dlYWtNYXAnO1xudmFyIGdldFdlYWsgPSBtZXRhLmdldFdlYWs7XG52YXIgaXNFeHRlbnNpYmxlID0gT2JqZWN0LmlzRXh0ZW5zaWJsZTtcbnZhciB1bmNhdWdodEZyb3plblN0b3JlID0gd2Vhay51ZnN0b3JlO1xudmFyIEludGVybmFsTWFwO1xuXG52YXIgd3JhcHBlciA9IGZ1bmN0aW9uIChnZXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIFdlYWtNYXAoKSB7XG4gICAgcmV0dXJuIGdldCh0aGlzLCBhcmd1bWVudHMubGVuZ3RoID4gMCA/IGFyZ3VtZW50c1swXSA6IHVuZGVmaW5lZCk7XG4gIH07XG59O1xuXG52YXIgbWV0aG9kcyA9IHtcbiAgLy8gMjMuMy4zLjMgV2Vha01hcC5wcm90b3R5cGUuZ2V0KGtleSlcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoa2V5KSB7XG4gICAgaWYgKGlzT2JqZWN0KGtleSkpIHtcbiAgICAgIHZhciBkYXRhID0gZ2V0V2VhayhrZXkpO1xuICAgICAgaWYgKGRhdGEgPT09IHRydWUpIHJldHVybiB1bmNhdWdodEZyb3plblN0b3JlKHZhbGlkYXRlKHRoaXMsIFdFQUtfTUFQKSkuZ2V0KGtleSk7XG4gICAgICByZXR1cm4gZGF0YSA/IGRhdGFbdGhpcy5faV0gOiB1bmRlZmluZWQ7XG4gICAgfVxuICB9LFxuICAvLyAyMy4zLjMuNSBXZWFrTWFwLnByb3RvdHlwZS5zZXQoa2V5LCB2YWx1ZSlcbiAgc2V0OiBmdW5jdGlvbiBzZXQoa2V5LCB2YWx1ZSkge1xuICAgIHJldHVybiB3ZWFrLmRlZih2YWxpZGF0ZSh0aGlzLCBXRUFLX01BUCksIGtleSwgdmFsdWUpO1xuICB9XG59O1xuXG4vLyAyMy4zIFdlYWtNYXAgT2JqZWN0c1xudmFyICRXZWFrTWFwID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19jb2xsZWN0aW9uJykoV0VBS19NQVAsIHdyYXBwZXIsIG1ldGhvZHMsIHdlYWssIHRydWUsIHRydWUpO1xuXG4vLyBJRTExIFdlYWtNYXAgZnJvemVuIGtleXMgZml4XG5pZiAoTkFUSVZFX1dFQUtfTUFQICYmIElTX0lFMTEpIHtcbiAgSW50ZXJuYWxNYXAgPSB3ZWFrLmdldENvbnN0cnVjdG9yKHdyYXBwZXIsIFdFQUtfTUFQKTtcbiAgYXNzaWduKEludGVybmFsTWFwLnByb3RvdHlwZSwgbWV0aG9kcyk7XG4gIG1ldGEuTkVFRCA9IHRydWU7XG4gIGVhY2goWydkZWxldGUnLCAnaGFzJywgJ2dldCcsICdzZXQnXSwgZnVuY3Rpb24gKGtleSkge1xuICAgIHZhciBwcm90byA9ICRXZWFrTWFwLnByb3RvdHlwZTtcbiAgICB2YXIgbWV0aG9kID0gcHJvdG9ba2V5XTtcbiAgICByZWRlZmluZShwcm90bywga2V5LCBmdW5jdGlvbiAoYSwgYikge1xuICAgICAgLy8gc3RvcmUgZnJvemVuIG9iamVjdHMgb24gaW50ZXJuYWwgd2Vha21hcCBzaGltXG4gICAgICBpZiAoaXNPYmplY3QoYSkgJiYgIWlzRXh0ZW5zaWJsZShhKSkge1xuICAgICAgICBpZiAoIXRoaXMuX2YpIHRoaXMuX2YgPSBuZXcgSW50ZXJuYWxNYXAoKTtcbiAgICAgICAgdmFyIHJlc3VsdCA9IHRoaXMuX2Zba2V5XShhLCBiKTtcbiAgICAgICAgcmV0dXJuIGtleSA9PSAnc2V0JyA/IHRoaXMgOiByZXN1bHQ7XG4gICAgICAvLyBzdG9yZSBhbGwgdGhlIHJlc3Qgb24gbmF0aXZlIHdlYWttYXBcbiAgICAgIH0gcmV0dXJuIG1ldGhvZC5jYWxsKHRoaXMsIGEsIGIpO1xuICAgIH0pO1xuICB9KTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcbnZhciB3ZWFrID0gcmVxdWlyZSgnLi9fY29sbGVjdGlvbi13ZWFrJyk7XG52YXIgdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZS1jb2xsZWN0aW9uJyk7XG52YXIgV0VBS19TRVQgPSAnV2Vha1NldCc7XG5cbi8vIDIzLjQgV2Vha1NldCBPYmplY3RzXG5yZXF1aXJlKCcuL19jb2xsZWN0aW9uJykoV0VBS19TRVQsIGZ1bmN0aW9uIChnZXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIFdlYWtTZXQoKSB7IHJldHVybiBnZXQodGhpcywgYXJndW1lbnRzLmxlbmd0aCA+IDAgPyBhcmd1bWVudHNbMF0gOiB1bmRlZmluZWQpOyB9O1xufSwge1xuICAvLyAyMy40LjMuMSBXZWFrU2V0LnByb3RvdHlwZS5hZGQodmFsdWUpXG4gIGFkZDogZnVuY3Rpb24gYWRkKHZhbHVlKSB7XG4gICAgcmV0dXJuIHdlYWsuZGVmKHZhbGlkYXRlKHRoaXMsIFdFQUtfU0VUKSwgdmFsdWUsIHRydWUpO1xuICB9XG59LCB3ZWFrLCBmYWxzZSwgdHJ1ZSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL3Byb3Bvc2FsLWZsYXRNYXAvI3NlYy1BcnJheS5wcm90b3R5cGUuZmxhdE1hcFxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBmbGF0dGVuSW50b0FycmF5ID0gcmVxdWlyZSgnLi9fZmxhdHRlbi1pbnRvLWFycmF5Jyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcbnZhciBhcnJheVNwZWNpZXNDcmVhdGUgPSByZXF1aXJlKCcuL19hcnJheS1zcGVjaWVzLWNyZWF0ZScpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCwgJ0FycmF5Jywge1xuICBmbGF0TWFwOiBmdW5jdGlvbiBmbGF0TWFwKGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKSB7XG4gICAgdmFyIE8gPSB0b09iamVjdCh0aGlzKTtcbiAgICB2YXIgc291cmNlTGVuLCBBO1xuICAgIGFGdW5jdGlvbihjYWxsYmFja2ZuKTtcbiAgICBzb3VyY2VMZW4gPSB0b0xlbmd0aChPLmxlbmd0aCk7XG4gICAgQSA9IGFycmF5U3BlY2llc0NyZWF0ZShPLCAwKTtcbiAgICBmbGF0dGVuSW50b0FycmF5KEEsIE8sIE8sIHNvdXJjZUxlbiwgMCwgMSwgY2FsbGJhY2tmbiwgYXJndW1lbnRzWzFdKTtcbiAgICByZXR1cm4gQTtcbiAgfVxufSk7XG5cbnJlcXVpcmUoJy4vX2FkZC10by11bnNjb3BhYmxlcycpKCdmbGF0TWFwJyk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9BcnJheS5wcm90b3R5cGUuaW5jbHVkZXNcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGluY2x1ZGVzID0gcmVxdWlyZSgnLi9fYXJyYXktaW5jbHVkZXMnKSh0cnVlKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAsICdBcnJheScsIHtcbiAgaW5jbHVkZXM6IGZ1bmN0aW9uIGluY2x1ZGVzKGVsIC8qICwgZnJvbUluZGV4ID0gMCAqLykge1xuICAgIHJldHVybiAkaW5jbHVkZXModGhpcywgZWwsIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgfVxufSk7XG5cbnJlcXVpcmUoJy4vX2FkZC10by11bnNjb3BhYmxlcycpKCdpbmNsdWRlcycpO1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtb2JqZWN0LXZhbHVlcy1lbnRyaWVzXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRlbnRyaWVzID0gcmVxdWlyZSgnLi9fb2JqZWN0LXRvLWFycmF5JykodHJ1ZSk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnT2JqZWN0Jywge1xuICBlbnRyaWVzOiBmdW5jdGlvbiBlbnRyaWVzKGl0KSB7XG4gICAgcmV0dXJuICRlbnRyaWVzKGl0KTtcbiAgfVxufSk7XG4iLCIvLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1vYmplY3QtZ2V0b3ducHJvcGVydHlkZXNjcmlwdG9yc1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBvd25LZXlzID0gcmVxdWlyZSgnLi9fb3duLWtleXMnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgZ09QRCA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJyk7XG52YXIgY3JlYXRlUHJvcGVydHkgPSByZXF1aXJlKCcuL19jcmVhdGUtcHJvcGVydHknKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdPYmplY3QnLCB7XG4gIGdldE93blByb3BlcnR5RGVzY3JpcHRvcnM6IGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcnMob2JqZWN0KSB7XG4gICAgdmFyIE8gPSB0b0lPYmplY3Qob2JqZWN0KTtcbiAgICB2YXIgZ2V0RGVzYyA9IGdPUEQuZjtcbiAgICB2YXIga2V5cyA9IG93bktleXMoTyk7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIHZhciBpID0gMDtcbiAgICB2YXIga2V5LCBkZXNjO1xuICAgIHdoaWxlIChrZXlzLmxlbmd0aCA+IGkpIHtcbiAgICAgIGRlc2MgPSBnZXREZXNjKE8sIGtleSA9IGtleXNbaSsrXSk7XG4gICAgICBpZiAoZGVzYyAhPT0gdW5kZWZpbmVkKSBjcmVhdGVQcm9wZXJ0eShyZXN1bHQsIGtleSwgZGVzYyk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbn0pO1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtb2JqZWN0LXZhbHVlcy1lbnRyaWVzXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICR2YWx1ZXMgPSByZXF1aXJlKCcuL19vYmplY3QtdG8tYXJyYXknKShmYWxzZSk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnT2JqZWN0Jywge1xuICB2YWx1ZXM6IGZ1bmN0aW9uIHZhbHVlcyhpdCkge1xuICAgIHJldHVybiAkdmFsdWVzKGl0KTtcbiAgfVxufSk7XG4iLCIvLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1wcm9taXNlLWZpbmFsbHlcbid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgY29yZSA9IHJlcXVpcmUoJy4vX2NvcmUnKTtcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBzcGVjaWVzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuL19zcGVjaWVzLWNvbnN0cnVjdG9yJyk7XG52YXIgcHJvbWlzZVJlc29sdmUgPSByZXF1aXJlKCcuL19wcm9taXNlLXJlc29sdmUnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LlIsICdQcm9taXNlJywgeyAnZmluYWxseSc6IGZ1bmN0aW9uIChvbkZpbmFsbHkpIHtcbiAgdmFyIEMgPSBzcGVjaWVzQ29uc3RydWN0b3IodGhpcywgY29yZS5Qcm9taXNlIHx8IGdsb2JhbC5Qcm9taXNlKTtcbiAgdmFyIGlzRnVuY3Rpb24gPSB0eXBlb2Ygb25GaW5hbGx5ID09ICdmdW5jdGlvbic7XG4gIHJldHVybiB0aGlzLnRoZW4oXG4gICAgaXNGdW5jdGlvbiA/IGZ1bmN0aW9uICh4KSB7XG4gICAgICByZXR1cm4gcHJvbWlzZVJlc29sdmUoQywgb25GaW5hbGx5KCkpLnRoZW4oZnVuY3Rpb24gKCkgeyByZXR1cm4geDsgfSk7XG4gICAgfSA6IG9uRmluYWxseSxcbiAgICBpc0Z1bmN0aW9uID8gZnVuY3Rpb24gKGUpIHtcbiAgICAgIHJldHVybiBwcm9taXNlUmVzb2x2ZShDLCBvbkZpbmFsbHkoKSkudGhlbihmdW5jdGlvbiAoKSB7IHRocm93IGU7IH0pO1xuICAgIH0gOiBvbkZpbmFsbHlcbiAgKTtcbn0gfSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1zdHJpbmctcGFkLXN0YXJ0LWVuZFxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkcGFkID0gcmVxdWlyZSgnLi9fc3RyaW5nLXBhZCcpO1xudmFyIHVzZXJBZ2VudCA9IHJlcXVpcmUoJy4vX3VzZXItYWdlbnQnKTtcblxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzI4MFxudmFyIFdFQktJVF9CVUcgPSAvVmVyc2lvblxcLzEwXFwuXFxkKyhcXC5cXGQrKT8oIE1vYmlsZVxcL1xcdyspPyBTYWZhcmlcXC8vLnRlc3QodXNlckFnZW50KTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiBXRUJLSVRfQlVHLCAnU3RyaW5nJywge1xuICBwYWRFbmQ6IGZ1bmN0aW9uIHBhZEVuZChtYXhMZW5ndGggLyogLCBmaWxsU3RyaW5nID0gJyAnICovKSB7XG4gICAgcmV0dXJuICRwYWQodGhpcywgbWF4TGVuZ3RoLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCwgZmFsc2UpO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L3Byb3Bvc2FsLXN0cmluZy1wYWQtc3RhcnQtZW5kXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRwYWQgPSByZXF1aXJlKCcuL19zdHJpbmctcGFkJyk7XG52YXIgdXNlckFnZW50ID0gcmVxdWlyZSgnLi9fdXNlci1hZ2VudCcpO1xuXG4vLyBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvMjgwXG52YXIgV0VCS0lUX0JVRyA9IC9WZXJzaW9uXFwvMTBcXC5cXGQrKFxcLlxcZCspPyggTW9iaWxlXFwvXFx3Kyk/IFNhZmFyaVxcLy8udGVzdCh1c2VyQWdlbnQpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIFdFQktJVF9CVUcsICdTdHJpbmcnLCB7XG4gIHBhZFN0YXJ0OiBmdW5jdGlvbiBwYWRTdGFydChtYXhMZW5ndGggLyogLCBmaWxsU3RyaW5nID0gJyAnICovKSB7XG4gICAgcmV0dXJuICRwYWQodGhpcywgbWF4TGVuZ3RoLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCwgdHJ1ZSk7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL3NlYm1hcmtiYWdlL2VjbWFzY3JpcHQtc3RyaW5nLWxlZnQtcmlnaHQtdHJpbVxucmVxdWlyZSgnLi9fc3RyaW5nLXRyaW0nKSgndHJpbUxlZnQnLCBmdW5jdGlvbiAoJHRyaW0pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHRyaW1MZWZ0KCkge1xuICAgIHJldHVybiAkdHJpbSh0aGlzLCAxKTtcbiAgfTtcbn0sICd0cmltU3RhcnQnKTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9zZWJtYXJrYmFnZS9lY21hc2NyaXB0LXN0cmluZy1sZWZ0LXJpZ2h0LXRyaW1cbnJlcXVpcmUoJy4vX3N0cmluZy10cmltJykoJ3RyaW1SaWdodCcsIGZ1bmN0aW9uICgkdHJpbSkge1xuICByZXR1cm4gZnVuY3Rpb24gdHJpbVJpZ2h0KCkge1xuICAgIHJldHVybiAkdHJpbSh0aGlzLCAyKTtcbiAgfTtcbn0sICd0cmltRW5kJyk7XG4iLCJyZXF1aXJlKCcuL193a3MtZGVmaW5lJykoJ2FzeW5jSXRlcmF0b3InKTtcbiIsInZhciAkaXRlcmF0b3JzID0gcmVxdWlyZSgnLi9lczYuYXJyYXkuaXRlcmF0b3InKTtcbnZhciBnZXRLZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lJyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKTtcbnZhciB3a3MgPSByZXF1aXJlKCcuL193a3MnKTtcbnZhciBJVEVSQVRPUiA9IHdrcygnaXRlcmF0b3InKTtcbnZhciBUT19TVFJJTkdfVEFHID0gd2tzKCd0b1N0cmluZ1RhZycpO1xudmFyIEFycmF5VmFsdWVzID0gSXRlcmF0b3JzLkFycmF5O1xuXG52YXIgRE9NSXRlcmFibGVzID0ge1xuICBDU1NSdWxlTGlzdDogdHJ1ZSwgLy8gVE9ETzogTm90IHNwZWMgY29tcGxpYW50LCBzaG91bGQgYmUgZmFsc2UuXG4gIENTU1N0eWxlRGVjbGFyYXRpb246IGZhbHNlLFxuICBDU1NWYWx1ZUxpc3Q6IGZhbHNlLFxuICBDbGllbnRSZWN0TGlzdDogZmFsc2UsXG4gIERPTVJlY3RMaXN0OiBmYWxzZSxcbiAgRE9NU3RyaW5nTGlzdDogZmFsc2UsXG4gIERPTVRva2VuTGlzdDogdHJ1ZSxcbiAgRGF0YVRyYW5zZmVySXRlbUxpc3Q6IGZhbHNlLFxuICBGaWxlTGlzdDogZmFsc2UsXG4gIEhUTUxBbGxDb2xsZWN0aW9uOiBmYWxzZSxcbiAgSFRNTENvbGxlY3Rpb246IGZhbHNlLFxuICBIVE1MRm9ybUVsZW1lbnQ6IGZhbHNlLFxuICBIVE1MU2VsZWN0RWxlbWVudDogZmFsc2UsXG4gIE1lZGlhTGlzdDogdHJ1ZSwgLy8gVE9ETzogTm90IHNwZWMgY29tcGxpYW50LCBzaG91bGQgYmUgZmFsc2UuXG4gIE1pbWVUeXBlQXJyYXk6IGZhbHNlLFxuICBOYW1lZE5vZGVNYXA6IGZhbHNlLFxuICBOb2RlTGlzdDogdHJ1ZSxcbiAgUGFpbnRSZXF1ZXN0TGlzdDogZmFsc2UsXG4gIFBsdWdpbjogZmFsc2UsXG4gIFBsdWdpbkFycmF5OiBmYWxzZSxcbiAgU1ZHTGVuZ3RoTGlzdDogZmFsc2UsXG4gIFNWR051bWJlckxpc3Q6IGZhbHNlLFxuICBTVkdQYXRoU2VnTGlzdDogZmFsc2UsXG4gIFNWR1BvaW50TGlzdDogZmFsc2UsXG4gIFNWR1N0cmluZ0xpc3Q6IGZhbHNlLFxuICBTVkdUcmFuc2Zvcm1MaXN0OiBmYWxzZSxcbiAgU291cmNlQnVmZmVyTGlzdDogZmFsc2UsXG4gIFN0eWxlU2hlZXRMaXN0OiB0cnVlLCAvLyBUT0RPOiBOb3Qgc3BlYyBjb21wbGlhbnQsIHNob3VsZCBiZSBmYWxzZS5cbiAgVGV4dFRyYWNrQ3VlTGlzdDogZmFsc2UsXG4gIFRleHRUcmFja0xpc3Q6IGZhbHNlLFxuICBUb3VjaExpc3Q6IGZhbHNlXG59O1xuXG5mb3IgKHZhciBjb2xsZWN0aW9ucyA9IGdldEtleXMoRE9NSXRlcmFibGVzKSwgaSA9IDA7IGkgPCBjb2xsZWN0aW9ucy5sZW5ndGg7IGkrKykge1xuICB2YXIgTkFNRSA9IGNvbGxlY3Rpb25zW2ldO1xuICB2YXIgZXhwbGljaXQgPSBET01JdGVyYWJsZXNbTkFNRV07XG4gIHZhciBDb2xsZWN0aW9uID0gZ2xvYmFsW05BTUVdO1xuICB2YXIgcHJvdG8gPSBDb2xsZWN0aW9uICYmIENvbGxlY3Rpb24ucHJvdG90eXBlO1xuICB2YXIga2V5O1xuICBpZiAocHJvdG8pIHtcbiAgICBpZiAoIXByb3RvW0lURVJBVE9SXSkgaGlkZShwcm90bywgSVRFUkFUT1IsIEFycmF5VmFsdWVzKTtcbiAgICBpZiAoIXByb3RvW1RPX1NUUklOR19UQUddKSBoaWRlKHByb3RvLCBUT19TVFJJTkdfVEFHLCBOQU1FKTtcbiAgICBJdGVyYXRvcnNbTkFNRV0gPSBBcnJheVZhbHVlcztcbiAgICBpZiAoZXhwbGljaXQpIGZvciAoa2V5IGluICRpdGVyYXRvcnMpIGlmICghcHJvdG9ba2V5XSkgcmVkZWZpbmUocHJvdG8sIGtleSwgJGl0ZXJhdG9yc1trZXldLCB0cnVlKTtcbiAgfVxufVxuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkdGFzayA9IHJlcXVpcmUoJy4vX3Rhc2snKTtcbiRleHBvcnQoJGV4cG9ydC5HICsgJGV4cG9ydC5CLCB7XG4gIHNldEltbWVkaWF0ZTogJHRhc2suc2V0LFxuICBjbGVhckltbWVkaWF0ZTogJHRhc2suY2xlYXJcbn0pO1xuIiwiLy8gaWU5LSBzZXRUaW1lb3V0ICYgc2V0SW50ZXJ2YWwgYWRkaXRpb25hbCBwYXJhbWV0ZXJzIGZpeFxudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciB1c2VyQWdlbnQgPSByZXF1aXJlKCcuL191c2VyLWFnZW50Jyk7XG52YXIgc2xpY2UgPSBbXS5zbGljZTtcbnZhciBNU0lFID0gL01TSUUgLlxcLi8udGVzdCh1c2VyQWdlbnQpOyAvLyA8LSBkaXJ0eSBpZTktIGNoZWNrXG52YXIgd3JhcCA9IGZ1bmN0aW9uIChzZXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChmbiwgdGltZSAvKiAsIC4uLmFyZ3MgKi8pIHtcbiAgICB2YXIgYm91bmRBcmdzID0gYXJndW1lbnRzLmxlbmd0aCA+IDI7XG4gICAgdmFyIGFyZ3MgPSBib3VuZEFyZ3MgPyBzbGljZS5jYWxsKGFyZ3VtZW50cywgMikgOiBmYWxzZTtcbiAgICByZXR1cm4gc2V0KGJvdW5kQXJncyA/IGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1uZXctZnVuY1xuICAgICAgKHR5cGVvZiBmbiA9PSAnZnVuY3Rpb24nID8gZm4gOiBGdW5jdGlvbihmbikpLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgIH0gOiBmbiwgdGltZSk7XG4gIH07XG59O1xuJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LkIgKyAkZXhwb3J0LkYgKiBNU0lFLCB7XG4gIHNldFRpbWVvdXQ6IHdyYXAoZ2xvYmFsLnNldFRpbWVvdXQpLFxuICBzZXRJbnRlcnZhbDogd3JhcChnbG9iYWwuc2V0SW50ZXJ2YWwpXG59KTtcbiIsInJlcXVpcmUoJy4uL21vZHVsZXMvd2ViLnRpbWVycycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy93ZWIuaW1tZWRpYXRlJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vbW9kdWxlcy9fY29yZScpO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9jc3NXaXRoTWFwcGluZ1RvU3RyaW5nLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fIGZyb20gXCIuLi9wdWJsaWMvZXhwYW5kLnBuZ1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xX19fIGZyb20gXCIuLi9wdWJsaWMvem9vbUluLnBuZ1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yX19fIGZyb20gXCIuLi9wdWJsaWMvem9vbU91dC5wbmdcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzFfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzJfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi8qIEltYWdlIHN0eWxlICovXFxuLmltYWdlLXRodW1iLCAuaW1hZ2UtdGh1bWJNYWluIHtcXG4gIHdpZHRoOiA2MHB4O1xcbiAgaGVpZ2h0OiA2MHB4O1xcbiAgYm9yZGVyLXJhZGl1czogN3B4O1xcbn1cXG4uaW1hZ2UtdGh1bWIge1xcbiAgb3BhY2l0eTogMC44O1xcbiAgYm9yZGVyOiAycHggc29saWQgd2hpdGU7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcbi5pbWFnZS10aHVtYk1haW4ge1xcbiAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7XFxufVxcbi5pbWFnZS1tYWluIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgYm9yZGVyLXJhZGl1czogN3B4O1xcblxcdGN1cnNvcjogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyArIFwiKSwgZGVmYXVsdDtcXG4gIHotaW5kZXg6IDQ7XFxufVxcbi5pbWFnZS1tb2RhbE1haW4ge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICBib3JkZXItcmFkaXVzOiA3cHg7XFxuXFx0Y3Vyc29yOiB1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19fICsgXCIpLCBkZWZhdWx0O1xcbn1cXG4uaW1hZ2UtbW9kYWxUaHVtYiB7XFxuICB3aWR0aDogMTAwcHg7XFxuICBoZWlnaHQ6IDEwMHB4O1xcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XFxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xcbiAgYm9yZGVyLXJhZGl1czogN3B4O1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG4uaW1hZ2UtbW9kYWxUaHVtYk1haW4ge1xcbiAgd2lkdGg6IDIxMHB4O1xcbiAgaGVpZ2h0OiAyMTBweDtcXG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcXG4gIGJvcmRlci1yYWRpdXM6IDdweDtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLyogQnV0dG9uIHN0eWxlICovXFxuLmltYWdlLWxlZnQsIC5pbWFnZS1yaWdodCwgLmltYWdlLWZhdiwgLmltYWdlLW5vdEZhdiwgLmltYWdlLW1vZGFsTGVmdCwgLmltYWdlLW1vZGFsUmlnaHQsIC5pbWFnZS1tb2RhbENsb3NlIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgYm94LXNoYWRvdzogMCA0cHggMjBweCByZ2JhKDM0LCAzNCwgMzQsIDAuMTUpO1xcbiAgYm9yZGVyOiBub25lO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgb3V0bGluZTogbm9uZTtcXG4gIGJvcmRlci1yYWRpdXM6IDI0cHg7XFxuICBsaW5lLWhlaWdodDogMTtcXG4gIHBhZGRpbmc6IDEycHg7XFxufVxcbi5pbWFnZS1sZWZ0IHtcXG4gIHRvcDogNDUlOyBsZWZ0OiAzLjUlO1xcbiAgd2lkdGg6IDQ4cHg7XFxuICBoZWlnaHQ6IDQ4cHg7XFxuICB6LWluZGV4OiAyO1xcbn1cXG4uaW1hZ2UtcmlnaHQge1xcbiAgdG9wOiA0NSU7IHJpZ2h0OiAzLjUlO1xcbiAgd2lkdGg6IDQ4cHg7XFxuICBoZWlnaHQ6IDQ4cHg7XFxuICB6LWluZGV4OiAzO1xcbn1cXG4uaW1hZ2UtZmF2LCAuaW1hZ2Utbm90RmF2IHtcXG4gIHRvcDogNSU7IHJpZ2h0OiAyLjUlO1xcbiAgd2lkdGg6IDQ2cHg7XFxuICBoZWlnaHQ6IDQ2cHg7XFxuICB6LWluZGV4OiAxO1xcbn1cXG4uaW1hZ2UtZmF2IHtcXG4gIGZpbGw6ICNBNjFBMkU7XFxufVxcbi5pbWFnZS1tb2RhbENsb3NlIHtcXG4gIHRvcDogMTBweDsgcmlnaHQ6IDEwcHg7XFxuICB3aWR0aDogNTBweDtcXG4gIGhlaWdodDogNTBweDtcXG4gIG1hcmdpbjogMXB4O1xcbn1cXG4uaW1hZ2UtbW9kYWxMZWZ0IHtcXG4gIHRvcDogNDUlOyBsZWZ0OiA0JTtcXG4gIHdpZHRoOiA1MHB4O1xcbiAgaGVpZ2h0OiA1MHB4O1xcbiAgbWFyZ2luOiAxcHg7XFxufVxcbi5pbWFnZS1tb2RhbFJpZ2h0IHtcXG4gIHRvcDogNDUlOyByaWdodDogNCU7XFxuICB3aWR0aDogNTBweDtcXG4gIGhlaWdodDogNTBweDtcXG4gIG1hcmdpbjogMXB4O1xcbn1cXG5cXG4vKiBSZW1vdmUgZm9jdXMgYm9yZGVyICovXFxuc3Bhbjpmb2N1cywgZGl2OmZvY3VzIHtcXG4gIG91dGxpbmU6IG5vbmU7XFxufVxcblxcbi8qIEhvdmVyIHN0eWxlICovXFxuLmltYWdlLXRodW1iOmhvdmVyLCAuaW1hZ2UtbW9kYWxUaHVtYjpob3ZlciwgLmltYWdlLW1vZGFsVGh1bWJNYWluOmhvdmVyLCAuaW1hZ2UtbGVmdDpob3ZlciwgLmltYWdlLXJpZ2h0OmhvdmVyLCAuaW1hZ2UtZmF2OmhvdmVyLCAuaW1hZ2Utbm90RmF2OmhvdmVyIHtcXG4gIGZpbHRlcjogYnJpZ2h0bmVzcyg5NyUpO1xcbn1cXG4uaW1hZ2UtbW9kYWxMZWZ0OmhvdmVyLCAuaW1hZ2UtbW9kYWxSaWdodDpob3ZlciwgLmltYWdlLW1vZGFsQ2xvc2U6aG92ZXIge1xcbiAgd2lkdGg6IDUycHg7XFxuICBoZWlnaHQ6IDUycHg7XFxuICBtYXJnaW46IDBweDtcXG4gIGJvcmRlci1yYWRpdXM6IDI2cHg7XFxufVxcblxcbi8qIExheW91dCAqL1xcbi5pbWFnZS1ncmlkIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBtYXgtaGVpZ2h0OiAxMDAwcHg7XFxuICBtYXgtd2lkdGg6IDEwMDBweDtcXG4gIHBhZGRpbmc6IDI1cHg7XFxufVxcbi5pbWFnZS1jb2wxIHtcXG4gIGdyaWQtY29sdW1uOiAxIC8gMjtcXG59XFxuLmltYWdlLWNvbDIge1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgZ3JpZC1jb2x1bW46IDIgLyAyO1xcbiAgcGFkZGluZzogMCUgMTAlO1xcbiAgbWluLXdpZHRoOiAzMDBweDtcXG4gIG1pbi1oZWlnaHQ6IDMwMHB4O1xcbiAgbWF4LXdpZHRoOiA4MDBweDtcXG4gIG1heC1oZWlnaHQ6IDgwMHB4O1xcbn1cXG5cXG4vKiBGYWRlLWluICovXFxuLmltYWdlLWZhZGVJbiB7XFxuICBhbmltYXRpb246IGZhZGVJbiBlYXNlIDFzO1xcbiAgLXdlYmtpdC1hbmltYXRpb246IGZhZGVJbiBlYXNlIDFzO1xcbiAgLW1vei1hbmltYXRpb246IGZhZGVJbiBlYXNlIDFzO1xcbiAgLW8tYW5pbWF0aW9uOiBmYWRlSW4gZWFzZSAxcztcXG4gIC1tcy1hbmltYXRpb246IGZhZGVJbiBlYXNlIDFzO1xcbn1cXG5Aa2V5ZnJhbWVzIGZhZGVJbiB7XFxuMCUge29wYWNpdHk6MDt9XFxuMTAwJSB7b3BhY2l0eToxO31cXG59XFxuQC13ZWJraXQta2V5ZnJhbWVzIGZhZGVJbiB7XFxuMCUge29wYWNpdHk6MDt9XFxuMTAwJSB7b3BhY2l0eToxO31cXG59XFxuQC1tb3ota2V5ZnJhbWVzIGZhZGVJbiB7XFxuMCUge29wYWNpdHk6MDt9XFxuMTAwJSB7b3BhY2l0eToxO31cXG59XFxuQC1vLWtleWZyYW1lcyBmYWRlSW4ge1xcbjAlIHtvcGFjaXR5OjA7fVxcbjEwMCUge29wYWNpdHk6MTt9XFxufVxcbkAtbXMta2V5ZnJhbWVzIGZhZGVJbiB7XFxuMCUge29wYWNpdHk6MDt9XFxuMTAwJSB7b3BhY2l0eToxO31cXG59XFxuXFxuLyogTW9kYWwgTGF5b3V0Ki9cXG4uaW1hZ2UtYmFja0dyb3VuZCB7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICB0b3A6IDA7IGJvdHRvbTogMDsgbGVmdDogMDsgcmlnaHQ6IDA7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsMCwwLDAuNyk7XFxuICB6LWluZGV4OiAxMDAxO1xcbn1cXG4uaW1hZ2UtbW9kYWxIZWFkZXIge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwJTtcXG59XFxuLmltYWdlLW1vZGFsR3JpZCB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBtYXJnaW4tdG9wOiBhdXRvO1xcbiAgbWFyZ2luLWJvdHRvbTogYXV0bztcXG4gIG1hcmdpbi1sZWZ0OiA1JTtcXG4gIG1hcmdpbi1yaWdodDogNSU7XFxuICBoZWlnaHQ6IDg1JTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBwYWRkaW5nOiAyNXB4O1xcbn1cXG4uaW1hZ2UtbW9kZWxDYXJvdXNlbCB7XFxuICBncmlkLWNvbHVtbjogMSAvIDI7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBwYWRkaW5nOiAwJSAxMCU7XFxuICBtYXgtaGVpZ2h0OiA4MDBweDtcXG4gIG1heC13aWR0aDogNTAlO1xcbiAgbWluLXdpZHRoOiA0MDBweDtcXG4gIG1pbi1oZWlnaHQ6IDQwMHB4O1xcbiAgbWFyZ2luLXRvcDogYXV0bztcXG4gIG1hcmdpbi1ib3R0b206IGF1dG87XFxuICBib3JkZXItcmFkaXVzOiA3cHg7XFxufVxcbi5pbWFnZS1tb2RhbENvbDIge1xcbiAgZ3JpZC1jb2x1bW46IDIgLyAyO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIG1hcmdpbi10b3A6IGF1dG87XFxuICBtYXJnaW4tYm90dG9tOiBhdXRvO1xcbiAgaGVpZ2h0OiA4NSU7XFxuICBvdmVyZmxvdzogc2Nyb2xsO1xcbiAgLW1zLW92ZXJmbG93LXN0eWxlOiBub25lOyAgLyogSGlkZSBzY3JvbGwgYmFyIGluIHpvb20gSUUgYW5kIEVkZ2UgKi9cXG4gIHNjcm9sbGJhci13aWR0aDogbm9uZTsgIC8qIEhpZGUgc2Nyb2xsIGJhciBpbiB6b29tIEZpcmVmb3ggKi9cXG59XFxuLmltYWdlLW1vZGFsQ29sMjo6LXdlYmtpdC1zY3JvbGxiYXIge1xcbiAgZGlzcGxheTogbm9uZTsgLyogSGlkZSBzY3JvbGwgYmFyIGluIHpvb20gKi9cXG59XFxuLyogLmltYWdlLW1vZGFsVGh1bWJCb3gge1xcbiAgbWFyZ2luLXRvcDogYXV0bztcXG4gIG1hcmdpbi1ib3R0b206IGF1dG87XFxufSAqL1xcbi5pbWFnZS10aHVtYkNvdXBsZSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgbWF4LWhlaWdodDogMTAwJTtcXG4gIHdpZHRoOiAyNTBweDtcXG59XFxuXFxuLyogTW9kYWwgVGh1bWJzIExheW91dCBDb25kaXRpb25hbCAqL1xcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk1MHB4KSB7XFxuICAuaW1hZ2UtbW9kYWxUaHVtYk1haW4ge1xcbiAgICB3aWR0aDogMTAwcHg7XFxuICAgIGhlaWdodDogMTAwcHg7XFxuICB9XFxuICAuaW1hZ2UtdGh1bWJDb3VwbGUge1xcbiAgICBkaXNwbGF5OiBibG9jaztcXG4gIH1cXG59XFxuXFxuLyogWm9vbSBMYXlvdXQgKi9cXG4uaW1hZ2UtbW9kYWxab29tQm94IHtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHBhZGRpbmc6IDAlIDEwJTtcXG4gIGhlaWdodDogOTUlO1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIG92ZXJmbG93OiBzY3JvbGw7XFxuICAtbXMtb3ZlcmZsb3ctc3R5bGU6IG5vbmU7ICAvKiBIaWRlIHNjcm9sbCBiYXIgaW4gem9vbSBJRSBhbmQgRWRnZSAqL1xcbiAgc2Nyb2xsYmFyLXdpZHRoOiBub25lOyAgLyogSGlkZSBzY3JvbGwgYmFyIGluIHpvb20gRmlyZWZveCAqL1xcbiAgYm9yZGVyLXJhZGl1czogN3B4O1xcbn1cXG4uaW1hZ2UtbW9kYWxab29tQm94Ojotd2Via2l0LXNjcm9sbGJhciB7XFxuICBkaXNwbGF5OiBub25lOyAvKiBIaWRlIHNjcm9sbCBiYXIgaW4gem9vbSAqL1xcbn1cXG4uaW1hZ2UtbW9kYWxab29tTWFpbiB7XFxuICBtYXgtd2lkdGg6IDEwMCU7XFxuICBtYXgtaGVpZ2h0OiAxMDAlO1xcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xcblxcdGN1cnNvcjogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMl9fXyArIFwiKSwgZGVmYXVsdDtcXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vY2xpZW50L3N0eWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQSxnQkFBZ0I7QUFDaEI7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0UsWUFBWTtFQUNaLHVCQUF1QjtFQUN2QixlQUFlO0FBQ2pCO0FBQ0E7RUFDRSx1QkFBdUI7QUFDekI7QUFDQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1osa0JBQWtCO0NBQ25CLHdEQUE0QztFQUMzQyxVQUFVO0FBQ1o7QUFDQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1osa0JBQWtCO0NBQ25CLHdEQUE0QztBQUM3QztBQUNBO0VBQ0UsWUFBWTtFQUNaLGFBQWE7RUFDYixpQkFBaUI7RUFDakIsbUJBQW1CO0VBQ25CLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCO0FBQ0E7RUFDRSxZQUFZO0VBQ1osYUFBYTtFQUNiLGlCQUFpQjtFQUNqQixtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLGVBQWU7QUFDakI7O0FBRUEsaUJBQWlCO0FBQ2pCO0VBQ0Usa0JBQWtCO0VBQ2xCLHVCQUF1QjtFQUN2Qiw2Q0FBNkM7RUFDN0MsWUFBWTtFQUNaLGVBQWU7RUFDZixhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLGNBQWM7RUFDZCxhQUFhO0FBQ2Y7QUFDQTtFQUNFLFFBQVEsRUFBRSxVQUFVO0VBQ3BCLFdBQVc7RUFDWCxZQUFZO0VBQ1osVUFBVTtBQUNaO0FBQ0E7RUFDRSxRQUFRLEVBQUUsV0FBVztFQUNyQixXQUFXO0VBQ1gsWUFBWTtFQUNaLFVBQVU7QUFDWjtBQUNBO0VBQ0UsT0FBTyxFQUFFLFdBQVc7RUFDcEIsV0FBVztFQUNYLFlBQVk7RUFDWixVQUFVO0FBQ1o7QUFDQTtFQUNFLGFBQWE7QUFDZjtBQUNBO0VBQ0UsU0FBUyxFQUFFLFdBQVc7RUFDdEIsV0FBVztFQUNYLFlBQVk7RUFDWixXQUFXO0FBQ2I7QUFDQTtFQUNFLFFBQVEsRUFBRSxRQUFRO0VBQ2xCLFdBQVc7RUFDWCxZQUFZO0VBQ1osV0FBVztBQUNiO0FBQ0E7RUFDRSxRQUFRLEVBQUUsU0FBUztFQUNuQixXQUFXO0VBQ1gsWUFBWTtFQUNaLFdBQVc7QUFDYjs7QUFFQSx3QkFBd0I7QUFDeEI7RUFDRSxhQUFhO0FBQ2Y7O0FBRUEsZ0JBQWdCO0FBQ2hCO0VBQ0UsdUJBQXVCO0FBQ3pCO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLFdBQVc7RUFDWCxtQkFBbUI7QUFDckI7O0FBRUEsV0FBVztBQUNYO0VBQ0UsYUFBYTtFQUNiLGtCQUFrQjtFQUNsQixpQkFBaUI7RUFDakIsYUFBYTtBQUNmO0FBQ0E7RUFDRSxrQkFBa0I7QUFDcEI7QUFDQTtFQUNFLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQixpQkFBaUI7RUFDakIsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtBQUNuQjs7QUFFQSxZQUFZO0FBQ1o7RUFDRSx5QkFBeUI7RUFDekIsaUNBQWlDO0VBQ2pDLDhCQUE4QjtFQUM5Qiw0QkFBNEI7RUFDNUIsNkJBQTZCO0FBQy9CO0FBQ0E7QUFDQSxJQUFJLFNBQVMsQ0FBQztBQUNkLE1BQU0sU0FBUyxDQUFDO0FBQ2hCO0FBQ0E7QUFDQSxJQUFJLFNBQVMsQ0FBQztBQUNkLE1BQU0sU0FBUyxDQUFDO0FBQ2hCO0FBQ0E7QUFDQSxJQUFJLFNBQVMsQ0FBQztBQUNkLE1BQU0sU0FBUyxDQUFDO0FBQ2hCO0FBQ0E7QUFDQSxJQUFJLFNBQVMsQ0FBQztBQUNkLE1BQU0sU0FBUyxDQUFDO0FBQ2hCO0FBQ0E7QUFDQSxJQUFJLFNBQVMsQ0FBQztBQUNkLE1BQU0sU0FBUyxDQUFDO0FBQ2hCOztBQUVBLGdCQUFnQjtBQUNoQjtFQUNFLGVBQWU7RUFDZixNQUFNLEVBQUUsU0FBUyxFQUFFLE9BQU8sRUFBRSxRQUFRO0VBQ3BDLGlDQUFpQztFQUNqQyxhQUFhO0FBQ2Y7QUFDQTtFQUNFLFdBQVc7RUFDWCxXQUFXO0FBQ2I7QUFDQTtFQUNFLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsV0FBVztFQUNYLGFBQWE7RUFDYixhQUFhO0FBQ2Y7QUFDQTtFQUNFLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLGlCQUFpQjtFQUNqQixjQUFjO0VBQ2QsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0Usa0JBQWtCO0VBQ2xCLGFBQWE7RUFDYixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLFdBQVc7RUFDWCxnQkFBZ0I7RUFDaEIsd0JBQXdCLEdBQUcsd0NBQXdDO0VBQ25FLHFCQUFxQixHQUFHLG9DQUFvQztBQUM5RDtBQUNBO0VBQ0UsYUFBYSxFQUFFLDRCQUE0QjtBQUM3QztBQUNBOzs7R0FHRztBQUNIO0VBQ0UsYUFBYTtFQUNiLGdCQUFnQjtFQUNoQixZQUFZO0FBQ2Q7O0FBRUEsb0NBQW9DO0FBQ3BDO0VBQ0U7SUFDRSxZQUFZO0lBQ1osYUFBYTtFQUNmO0VBQ0E7SUFDRSxjQUFjO0VBQ2hCO0FBQ0Y7O0FBRUEsZ0JBQWdCO0FBQ2hCO0VBQ0Usa0JBQWtCO0VBQ2xCLGVBQWU7RUFDZixXQUFXO0VBQ1gsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQix3QkFBd0IsR0FBRyx3Q0FBd0M7RUFDbkUscUJBQXFCLEdBQUcsb0NBQW9DO0VBQzVELGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0UsYUFBYSxFQUFFLDRCQUE0QjtBQUM3QztBQUNBO0VBQ0UsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQixrQkFBa0I7Q0FDbkIsd0RBQTZDO0FBQzlDXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi8qIEltYWdlIHN0eWxlICovXFxuLmltYWdlLXRodW1iLCAuaW1hZ2UtdGh1bWJNYWluIHtcXG4gIHdpZHRoOiA2MHB4O1xcbiAgaGVpZ2h0OiA2MHB4O1xcbiAgYm9yZGVyLXJhZGl1czogN3B4O1xcbn1cXG4uaW1hZ2UtdGh1bWIge1xcbiAgb3BhY2l0eTogMC44O1xcbiAgYm9yZGVyOiAycHggc29saWQgd2hpdGU7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcbi5pbWFnZS10aHVtYk1haW4ge1xcbiAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7XFxufVxcbi5pbWFnZS1tYWluIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgYm9yZGVyLXJhZGl1czogN3B4O1xcblxcdGN1cnNvcjogdXJsKCcuLi9wdWJsaWMvZXhwYW5kLnBuZycpLCBkZWZhdWx0O1xcbiAgei1pbmRleDogNDtcXG59XFxuLmltYWdlLW1vZGFsTWFpbiB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIGJvcmRlci1yYWRpdXM6IDdweDtcXG5cXHRjdXJzb3I6IHVybCgnLi4vcHVibGljL3pvb21Jbi5wbmcnKSwgZGVmYXVsdDtcXG59XFxuLmltYWdlLW1vZGFsVGh1bWIge1xcbiAgd2lkdGg6IDEwMHB4O1xcbiAgaGVpZ2h0OiAxMDBweDtcXG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcXG4gIGJvcmRlci1yYWRpdXM6IDdweDtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuLmltYWdlLW1vZGFsVGh1bWJNYWluIHtcXG4gIHdpZHRoOiAyMTBweDtcXG4gIGhlaWdodDogMjEwcHg7XFxuICBtYXJnaW4tbGVmdDogMTBweDtcXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XFxuICBib3JkZXItcmFkaXVzOiA3cHg7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi8qIEJ1dHRvbiBzdHlsZSAqL1xcbi5pbWFnZS1sZWZ0LCAuaW1hZ2UtcmlnaHQsIC5pbWFnZS1mYXYsIC5pbWFnZS1ub3RGYXYsIC5pbWFnZS1tb2RhbExlZnQsIC5pbWFnZS1tb2RhbFJpZ2h0LCAuaW1hZ2UtbW9kYWxDbG9zZSB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gIGJveC1zaGFkb3c6IDAgNHB4IDIwcHggcmdiYSgzNCwgMzQsIDM0LCAwLjE1KTtcXG4gIGJvcmRlcjogbm9uZTtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIG91dGxpbmU6IG5vbmU7XFxuICBib3JkZXItcmFkaXVzOiAyNHB4O1xcbiAgbGluZS1oZWlnaHQ6IDE7XFxuICBwYWRkaW5nOiAxMnB4O1xcbn1cXG4uaW1hZ2UtbGVmdCB7XFxuICB0b3A6IDQ1JTsgbGVmdDogMy41JTtcXG4gIHdpZHRoOiA0OHB4O1xcbiAgaGVpZ2h0OiA0OHB4O1xcbiAgei1pbmRleDogMjtcXG59XFxuLmltYWdlLXJpZ2h0IHtcXG4gIHRvcDogNDUlOyByaWdodDogMy41JTtcXG4gIHdpZHRoOiA0OHB4O1xcbiAgaGVpZ2h0OiA0OHB4O1xcbiAgei1pbmRleDogMztcXG59XFxuLmltYWdlLWZhdiwgLmltYWdlLW5vdEZhdiB7XFxuICB0b3A6IDUlOyByaWdodDogMi41JTtcXG4gIHdpZHRoOiA0NnB4O1xcbiAgaGVpZ2h0OiA0NnB4O1xcbiAgei1pbmRleDogMTtcXG59XFxuLmltYWdlLWZhdiB7XFxuICBmaWxsOiAjQTYxQTJFO1xcbn1cXG4uaW1hZ2UtbW9kYWxDbG9zZSB7XFxuICB0b3A6IDEwcHg7IHJpZ2h0OiAxMHB4O1xcbiAgd2lkdGg6IDUwcHg7XFxuICBoZWlnaHQ6IDUwcHg7XFxuICBtYXJnaW46IDFweDtcXG59XFxuLmltYWdlLW1vZGFsTGVmdCB7XFxuICB0b3A6IDQ1JTsgbGVmdDogNCU7XFxuICB3aWR0aDogNTBweDtcXG4gIGhlaWdodDogNTBweDtcXG4gIG1hcmdpbjogMXB4O1xcbn1cXG4uaW1hZ2UtbW9kYWxSaWdodCB7XFxuICB0b3A6IDQ1JTsgcmlnaHQ6IDQlO1xcbiAgd2lkdGg6IDUwcHg7XFxuICBoZWlnaHQ6IDUwcHg7XFxuICBtYXJnaW46IDFweDtcXG59XFxuXFxuLyogUmVtb3ZlIGZvY3VzIGJvcmRlciAqL1xcbnNwYW46Zm9jdXMsIGRpdjpmb2N1cyB7XFxuICBvdXRsaW5lOiBub25lO1xcbn1cXG5cXG4vKiBIb3ZlciBzdHlsZSAqL1xcbi5pbWFnZS10aHVtYjpob3ZlciwgLmltYWdlLW1vZGFsVGh1bWI6aG92ZXIsIC5pbWFnZS1tb2RhbFRodW1iTWFpbjpob3ZlciwgLmltYWdlLWxlZnQ6aG92ZXIsIC5pbWFnZS1yaWdodDpob3ZlciwgLmltYWdlLWZhdjpob3ZlciwgLmltYWdlLW5vdEZhdjpob3ZlciB7XFxuICBmaWx0ZXI6IGJyaWdodG5lc3MoOTclKTtcXG59XFxuLmltYWdlLW1vZGFsTGVmdDpob3ZlciwgLmltYWdlLW1vZGFsUmlnaHQ6aG92ZXIsIC5pbWFnZS1tb2RhbENsb3NlOmhvdmVyIHtcXG4gIHdpZHRoOiA1MnB4O1xcbiAgaGVpZ2h0OiA1MnB4O1xcbiAgbWFyZ2luOiAwcHg7XFxuICBib3JkZXItcmFkaXVzOiAyNnB4O1xcbn1cXG5cXG4vKiBMYXlvdXQgKi9cXG4uaW1hZ2UtZ3JpZCB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgbWF4LWhlaWdodDogMTAwMHB4O1xcbiAgbWF4LXdpZHRoOiAxMDAwcHg7XFxuICBwYWRkaW5nOiAyNXB4O1xcbn1cXG4uaW1hZ2UtY29sMSB7XFxuICBncmlkLWNvbHVtbjogMSAvIDI7XFxufVxcbi5pbWFnZS1jb2wyIHtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIGdyaWQtY29sdW1uOiAyIC8gMjtcXG4gIHBhZGRpbmc6IDAlIDEwJTtcXG4gIG1pbi13aWR0aDogMzAwcHg7XFxuICBtaW4taGVpZ2h0OiAzMDBweDtcXG4gIG1heC13aWR0aDogODAwcHg7XFxuICBtYXgtaGVpZ2h0OiA4MDBweDtcXG59XFxuXFxuLyogRmFkZS1pbiAqL1xcbi5pbWFnZS1mYWRlSW4ge1xcbiAgYW5pbWF0aW9uOiBmYWRlSW4gZWFzZSAxcztcXG4gIC13ZWJraXQtYW5pbWF0aW9uOiBmYWRlSW4gZWFzZSAxcztcXG4gIC1tb3otYW5pbWF0aW9uOiBmYWRlSW4gZWFzZSAxcztcXG4gIC1vLWFuaW1hdGlvbjogZmFkZUluIGVhc2UgMXM7XFxuICAtbXMtYW5pbWF0aW9uOiBmYWRlSW4gZWFzZSAxcztcXG59XFxuQGtleWZyYW1lcyBmYWRlSW4ge1xcbjAlIHtvcGFjaXR5OjA7fVxcbjEwMCUge29wYWNpdHk6MTt9XFxufVxcbkAtd2Via2l0LWtleWZyYW1lcyBmYWRlSW4ge1xcbjAlIHtvcGFjaXR5OjA7fVxcbjEwMCUge29wYWNpdHk6MTt9XFxufVxcbkAtbW96LWtleWZyYW1lcyBmYWRlSW4ge1xcbjAlIHtvcGFjaXR5OjA7fVxcbjEwMCUge29wYWNpdHk6MTt9XFxufVxcbkAtby1rZXlmcmFtZXMgZmFkZUluIHtcXG4wJSB7b3BhY2l0eTowO31cXG4xMDAlIHtvcGFjaXR5OjE7fVxcbn1cXG5ALW1zLWtleWZyYW1lcyBmYWRlSW4ge1xcbjAlIHtvcGFjaXR5OjA7fVxcbjEwMCUge29wYWNpdHk6MTt9XFxufVxcblxcbi8qIE1vZGFsIExheW91dCovXFxuLmltYWdlLWJhY2tHcm91bmQge1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgdG9wOiAwOyBib3R0b206IDA7IGxlZnQ6IDA7IHJpZ2h0OiAwO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwwLjcpO1xcbiAgei1pbmRleDogMTAwMTtcXG59XFxuLmltYWdlLW1vZGFsSGVhZGVyIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMCU7XFxufVxcbi5pbWFnZS1tb2RhbEdyaWQge1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgbWFyZ2luLXRvcDogYXV0bztcXG4gIG1hcmdpbi1ib3R0b206IGF1dG87XFxuICBtYXJnaW4tbGVmdDogNSU7XFxuICBtYXJnaW4tcmlnaHQ6IDUlO1xcbiAgaGVpZ2h0OiA4NSU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgcGFkZGluZzogMjVweDtcXG59XFxuLmltYWdlLW1vZGVsQ2Fyb3VzZWwge1xcbiAgZ3JpZC1jb2x1bW46IDEgLyAyO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgcGFkZGluZzogMCUgMTAlO1xcbiAgbWF4LWhlaWdodDogODAwcHg7XFxuICBtYXgtd2lkdGg6IDUwJTtcXG4gIG1pbi13aWR0aDogNDAwcHg7XFxuICBtaW4taGVpZ2h0OiA0MDBweDtcXG4gIG1hcmdpbi10b3A6IGF1dG87XFxuICBtYXJnaW4tYm90dG9tOiBhdXRvO1xcbiAgYm9yZGVyLXJhZGl1czogN3B4O1xcbn1cXG4uaW1hZ2UtbW9kYWxDb2wyIHtcXG4gIGdyaWQtY29sdW1uOiAyIC8gMjtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBtYXJnaW4tdG9wOiBhdXRvO1xcbiAgbWFyZ2luLWJvdHRvbTogYXV0bztcXG4gIGhlaWdodDogODUlO1xcbiAgb3ZlcmZsb3c6IHNjcm9sbDtcXG4gIC1tcy1vdmVyZmxvdy1zdHlsZTogbm9uZTsgIC8qIEhpZGUgc2Nyb2xsIGJhciBpbiB6b29tIElFIGFuZCBFZGdlICovXFxuICBzY3JvbGxiYXItd2lkdGg6IG5vbmU7ICAvKiBIaWRlIHNjcm9sbCBiYXIgaW4gem9vbSBGaXJlZm94ICovXFxufVxcbi5pbWFnZS1tb2RhbENvbDI6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcXG4gIGRpc3BsYXk6IG5vbmU7IC8qIEhpZGUgc2Nyb2xsIGJhciBpbiB6b29tICovXFxufVxcbi8qIC5pbWFnZS1tb2RhbFRodW1iQm94IHtcXG4gIG1hcmdpbi10b3A6IGF1dG87XFxuICBtYXJnaW4tYm90dG9tOiBhdXRvO1xcbn0gKi9cXG4uaW1hZ2UtdGh1bWJDb3VwbGUge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIG1heC1oZWlnaHQ6IDEwMCU7XFxuICB3aWR0aDogMjUwcHg7XFxufVxcblxcbi8qIE1vZGFsIFRodW1icyBMYXlvdXQgQ29uZGl0aW9uYWwgKi9cXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5NTBweCkge1xcbiAgLmltYWdlLW1vZGFsVGh1bWJNYWluIHtcXG4gICAgd2lkdGg6IDEwMHB4O1xcbiAgICBoZWlnaHQ6IDEwMHB4O1xcbiAgfVxcbiAgLmltYWdlLXRodW1iQ291cGxlIHtcXG4gICAgZGlzcGxheTogYmxvY2s7XFxuICB9XFxufVxcblxcbi8qIFpvb20gTGF5b3V0ICovXFxuLmltYWdlLW1vZGFsWm9vbUJveCB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBwYWRkaW5nOiAwJSAxMCU7XFxuICBoZWlnaHQ6IDk1JTtcXG4gIG92ZXJmbG93OiBoaWRkZW47XFxuICBvdmVyZmxvdzogc2Nyb2xsO1xcbiAgLW1zLW92ZXJmbG93LXN0eWxlOiBub25lOyAgLyogSGlkZSBzY3JvbGwgYmFyIGluIHpvb20gSUUgYW5kIEVkZ2UgKi9cXG4gIHNjcm9sbGJhci13aWR0aDogbm9uZTsgIC8qIEhpZGUgc2Nyb2xsIGJhciBpbiB6b29tIEZpcmVmb3ggKi9cXG4gIGJvcmRlci1yYWRpdXM6IDdweDtcXG59XFxuLmltYWdlLW1vZGFsWm9vbUJveDo6LXdlYmtpdC1zY3JvbGxiYXIge1xcbiAgZGlzcGxheTogbm9uZTsgLyogSGlkZSBzY3JvbGwgYmFyIGluIHpvb20gKi9cXG59XFxuLmltYWdlLW1vZGFsWm9vbU1haW4ge1xcbiAgbWF4LXdpZHRoOiAxMDAlO1xcbiAgbWF4LWhlaWdodDogMTAwJTtcXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcXG5cXHRjdXJzb3I6IHVybCgnLi4vcHVibGljL3pvb21PdXQucG5nJyksIGRlZmF1bHQ7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICByZXR1cm4gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGNvbnRlbnQsIFwifVwiKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbignJyk7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiAobW9kdWxlcywgbWVkaWFRdWVyeSwgZGVkdXBlKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSAnc3RyaW5nJykge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCAnJ11dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICAgIHZhciBpZCA9IHRoaXNbaV1bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbW9kdWxlcy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2ldKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb250aW51ZVxuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhUXVlcnkpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsyXSA9IFwiXCIuY29uY2F0KG1lZGlhUXVlcnksIFwiIGFuZCBcIikuY29uY2F0KGl0ZW1bMl0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBfc2xpY2VkVG9BcnJheShhcnIsIGkpIHsgcmV0dXJuIF9hcnJheVdpdGhIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHx8IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIsIGkpIHx8IF9ub25JdGVyYWJsZVJlc3QoKTsgfVxuXG5mdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpOyB9XG5cbmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHsgaWYgKCFvKSByZXR1cm47IGlmICh0eXBlb2YgbyA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTsgaWYgKG4gPT09IFwiT2JqZWN0XCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTsgaWYgKG4gPT09IFwiTWFwXCIgfHwgbiA9PT0gXCJTZXRcIikgcmV0dXJuIEFycmF5LmZyb20obyk7IGlmIChuID09PSBcIkFyZ3VtZW50c1wiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgfVxuXG5mdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikgeyBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH1cblxuZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgeyBpZiAodHlwZW9mIFN5bWJvbCA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoYXJyKSkpIHJldHVybjsgdmFyIF9hcnIgPSBbXTsgdmFyIF9uID0gdHJ1ZTsgdmFyIF9kID0gZmFsc2U7IHZhciBfZSA9IHVuZGVmaW5lZDsgdHJ5IHsgZm9yICh2YXIgX2kgPSBhcnJbU3ltYm9sLml0ZXJhdG9yXSgpLCBfczsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkgeyBfYXJyLnB1c2goX3MudmFsdWUpOyBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7IH0gfSBjYXRjaCAoZXJyKSB7IF9kID0gdHJ1ZTsgX2UgPSBlcnI7IH0gZmluYWxseSB7IHRyeSB7IGlmICghX24gJiYgX2lbXCJyZXR1cm5cIl0gIT0gbnVsbCkgX2lbXCJyZXR1cm5cIl0oKTsgfSBmaW5hbGx5IHsgaWYgKF9kKSB0aHJvdyBfZTsgfSB9IHJldHVybiBfYXJyOyB9XG5cbmZ1bmN0aW9uIF9hcnJheVdpdGhIb2xlcyhhcnIpIHsgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycjsgfVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSkge1xuICB2YXIgX2l0ZW0gPSBfc2xpY2VkVG9BcnJheShpdGVtLCA0KSxcbiAgICAgIGNvbnRlbnQgPSBfaXRlbVsxXSxcbiAgICAgIGNzc01hcHBpbmcgPSBfaXRlbVszXTtcblxuICBpZiAodHlwZW9mIGJ0b2EgPT09ICdmdW5jdGlvbicpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgJycpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oJ1xcbicpO1xuICB9XG5cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKCdcXG4nKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHVybCwgb3B0aW9ucykge1xuICBpZiAoIW9wdGlvbnMpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICBvcHRpb25zID0ge307XG4gIH0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVyc2NvcmUtZGFuZ2xlLCBuby1wYXJhbS1yZWFzc2lnblxuXG5cbiAgdXJsID0gdXJsICYmIHVybC5fX2VzTW9kdWxlID8gdXJsLmRlZmF1bHQgOiB1cmw7XG5cbiAgaWYgKHR5cGVvZiB1cmwgIT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfSAvLyBJZiB1cmwgaXMgYWxyZWFkeSB3cmFwcGVkIGluIHF1b3RlcywgcmVtb3ZlIHRoZW1cblxuXG4gIGlmICgvXlsnXCJdLipbJ1wiXSQvLnRlc3QodXJsKSkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgIHVybCA9IHVybC5zbGljZSgxLCAtMSk7XG4gIH1cblxuICBpZiAob3B0aW9ucy5oYXNoKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgdXJsICs9IG9wdGlvbnMuaGFzaDtcbiAgfSAvLyBTaG91bGQgdXJsIGJlIHdyYXBwZWQ/XG4gIC8vIFNlZSBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3NzLXZhbHVlcy0zLyN1cmxzXG5cblxuICBpZiAoL1tcIicoKSBcXHRcXG5dLy50ZXN0KHVybCkgfHwgb3B0aW9ucy5uZWVkUXVvdGVzKSB7XG4gICAgcmV0dXJuIFwiXFxcIlwiLmNvbmNhdCh1cmwucmVwbGFjZSgvXCIvZywgJ1xcXFxcIicpLnJlcGxhY2UoL1xcbi9nLCAnXFxcXG4nKSwgXCJcXFwiXCIpO1xuICB9XG5cbiAgcmV0dXJuIHVybDtcbn07IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcInB1YmxpYy9leHBhbmQtMDVmNDExZWUucG5nXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcInB1YmxpYy96b29tSW4tODUwZDllNGEucG5nXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcInB1YmxpYy96b29tT3V0LWU3NDQ4MWMxLnBuZ1wiOyIsIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcblxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpIHt9XG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0KCkge31cbmVtcHR5RnVuY3Rpb25XaXRoUmVzZXQucmVzZXRXYXJuaW5nQ2FjaGUgPSBlbXB0eUZ1bmN0aW9uO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICBmdW5jdGlvbiBzaGltKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgaWYgKHNlY3JldCA9PT0gUmVhY3RQcm9wVHlwZXNTZWNyZXQpIHtcbiAgICAgIC8vIEl0IGlzIHN0aWxsIHNhZmUgd2hlbiBjYWxsZWQgZnJvbSBSZWFjdC5cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcihcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcbiAgICAgICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJ1xuICAgICk7XG4gICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgdGhyb3cgZXJyO1xuICB9O1xuICBzaGltLmlzUmVxdWlyZWQgPSBzaGltO1xuICBmdW5jdGlvbiBnZXRTaGltKCkge1xuICAgIHJldHVybiBzaGltO1xuICB9O1xuICAvLyBJbXBvcnRhbnQhXG4gIC8vIEtlZXAgdGhpcyBsaXN0IGluIHN5bmMgd2l0aCBwcm9kdWN0aW9uIHZlcnNpb24gaW4gYC4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMuanNgLlxuICB2YXIgUmVhY3RQcm9wVHlwZXMgPSB7XG4gICAgYXJyYXk6IHNoaW0sXG4gICAgYm9vbDogc2hpbSxcbiAgICBmdW5jOiBzaGltLFxuICAgIG51bWJlcjogc2hpbSxcbiAgICBvYmplY3Q6IHNoaW0sXG4gICAgc3RyaW5nOiBzaGltLFxuICAgIHN5bWJvbDogc2hpbSxcblxuICAgIGFueTogc2hpbSxcbiAgICBhcnJheU9mOiBnZXRTaGltLFxuICAgIGVsZW1lbnQ6IHNoaW0sXG4gICAgZWxlbWVudFR5cGU6IHNoaW0sXG4gICAgaW5zdGFuY2VPZjogZ2V0U2hpbSxcbiAgICBub2RlOiBzaGltLFxuICAgIG9iamVjdE9mOiBnZXRTaGltLFxuICAgIG9uZU9mOiBnZXRTaGltLFxuICAgIG9uZU9mVHlwZTogZ2V0U2hpbSxcbiAgICBzaGFwZTogZ2V0U2hpbSxcbiAgICBleGFjdDogZ2V0U2hpbSxcblxuICAgIGNoZWNrUHJvcFR5cGVzOiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LFxuICAgIHJlc2V0V2FybmluZ0NhY2hlOiBlbXB0eUZ1bmN0aW9uXG4gIH07XG5cbiAgUmVhY3RQcm9wVHlwZXMuUHJvcFR5cGVzID0gUmVhY3RQcm9wVHlwZXM7XG5cbiAgcmV0dXJuIFJlYWN0UHJvcFR5cGVzO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xuXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIHZhciB0aHJvd09uRGlyZWN0QWNjZXNzID0gdHJ1ZTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoUmVhY3RJcy5pc0VsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xufSBlbHNlIHtcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zJykoKTtcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi4xNC4wXG4gKiByZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4vKlxuIE1vZGVybml6ciAzLjAuMHByZSAoQ3VzdG9tIEJ1aWxkKSB8IE1JVFxuKi9cbid1c2Ugc3RyaWN0Jzt2YXIgYWE9cmVxdWlyZShcInJlYWN0XCIpLG49cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIikscj1yZXF1aXJlKFwic2NoZWR1bGVyXCIpO2Z1bmN0aW9uIHUoYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9aWYoIWFhKXRocm93IEVycm9yKHUoMjI3KSk7XG5mdW5jdGlvbiBiYShhLGIsYyxkLGUsZixnLGgsayl7dmFyIGw9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDMpO3RyeXtiLmFwcGx5KGMsbCl9Y2F0Y2gobSl7dGhpcy5vbkVycm9yKG0pfX12YXIgZGE9ITEsZWE9bnVsbCxmYT0hMSxoYT1udWxsLGlhPXtvbkVycm9yOmZ1bmN0aW9uKGEpe2RhPSEwO2VhPWF9fTtmdW5jdGlvbiBqYShhLGIsYyxkLGUsZixnLGgsayl7ZGE9ITE7ZWE9bnVsbDtiYS5hcHBseShpYSxhcmd1bWVudHMpfWZ1bmN0aW9uIGthKGEsYixjLGQsZSxmLGcsaCxrKXtqYS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYoZGEpe2lmKGRhKXt2YXIgbD1lYTtkYT0hMTtlYT1udWxsfWVsc2UgdGhyb3cgRXJyb3IodSgxOTgpKTtmYXx8KGZhPSEwLGhhPWwpfX12YXIgbGE9bnVsbCxtYT1udWxsLG5hPW51bGw7XG5mdW5jdGlvbiBvYShhLGIsYyl7dmFyIGQ9YS50eXBlfHxcInVua25vd24tZXZlbnRcIjthLmN1cnJlbnRUYXJnZXQ9bmEoYyk7a2EoZCxiLHZvaWQgMCxhKTthLmN1cnJlbnRUYXJnZXQ9bnVsbH12YXIgcGE9bnVsbCxxYT17fTtcbmZ1bmN0aW9uIHJhKCl7aWYocGEpZm9yKHZhciBhIGluIHFhKXt2YXIgYj1xYVthXSxjPXBhLmluZGV4T2YoYSk7aWYoISgtMTxjKSl0aHJvdyBFcnJvcih1KDk2LGEpKTtpZighc2FbY10pe2lmKCFiLmV4dHJhY3RFdmVudHMpdGhyb3cgRXJyb3IodSg5NyxhKSk7c2FbY109YjtjPWIuZXZlbnRUeXBlcztmb3IodmFyIGQgaW4gYyl7dmFyIGU9dm9pZCAwO3ZhciBmPWNbZF0sZz1iLGg9ZDtpZih0YS5oYXNPd25Qcm9wZXJ0eShoKSl0aHJvdyBFcnJvcih1KDk5LGgpKTt0YVtoXT1mO3ZhciBrPWYucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM7aWYoayl7Zm9yKGUgaW4gaylrLmhhc093blByb3BlcnR5KGUpJiZ1YShrW2VdLGcsaCk7ZT0hMH1lbHNlIGYucmVnaXN0cmF0aW9uTmFtZT8odWEoZi5yZWdpc3RyYXRpb25OYW1lLGcsaCksZT0hMCk6ZT0hMTtpZighZSl0aHJvdyBFcnJvcih1KDk4LGQsYSkpO319fX1cbmZ1bmN0aW9uIHVhKGEsYixjKXtpZih2YVthXSl0aHJvdyBFcnJvcih1KDEwMCxhKSk7dmFbYV09Yjt3YVthXT1iLmV2ZW50VHlwZXNbY10uZGVwZW5kZW5jaWVzfXZhciBzYT1bXSx0YT17fSx2YT17fSx3YT17fTtmdW5jdGlvbiB4YShhKXt2YXIgYj0hMSxjO2ZvcihjIGluIGEpaWYoYS5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9YVtjXTtpZighcWEuaGFzT3duUHJvcGVydHkoYyl8fHFhW2NdIT09ZCl7aWYocWFbY10pdGhyb3cgRXJyb3IodSgxMDIsYykpO3FhW2NdPWQ7Yj0hMH19YiYmcmEoKX12YXIgeWE9IShcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3cuZG9jdW1lbnR8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpLHphPW51bGwsQWE9bnVsbCxCYT1udWxsO1xuZnVuY3Rpb24gQ2EoYSl7aWYoYT1tYShhKSl7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIHphKXRocm93IEVycm9yKHUoMjgwKSk7dmFyIGI9YS5zdGF0ZU5vZGU7YiYmKGI9bGEoYiksemEoYS5zdGF0ZU5vZGUsYS50eXBlLGIpKX19ZnVuY3Rpb24gRGEoYSl7QWE/QmE/QmEucHVzaChhKTpCYT1bYV06QWE9YX1mdW5jdGlvbiBFYSgpe2lmKEFhKXt2YXIgYT1BYSxiPUJhO0JhPUFhPW51bGw7Q2EoYSk7aWYoYilmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKUNhKGJbYV0pfX1mdW5jdGlvbiBGYShhLGIpe3JldHVybiBhKGIpfWZ1bmN0aW9uIEdhKGEsYixjLGQsZSl7cmV0dXJuIGEoYixjLGQsZSl9ZnVuY3Rpb24gSGEoKXt9dmFyIElhPUZhLEphPSExLEthPSExO2Z1bmN0aW9uIExhKCl7aWYobnVsbCE9PUFhfHxudWxsIT09QmEpSGEoKSxFYSgpfVxuZnVuY3Rpb24gTWEoYSxiLGMpe2lmKEthKXJldHVybiBhKGIsYyk7S2E9ITA7dHJ5e3JldHVybiBJYShhLGIsYyl9ZmluYWxseXtLYT0hMSxMYSgpfX12YXIgTmE9L15bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRdWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFwtLjAtOVxcdTAwQjdcXHUwMzAwLVxcdTAzNkZcXHUyMDNGLVxcdTIwNDBdKiQvLE9hPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksUGE9e30sUWE9e307XG5mdW5jdGlvbiBSYShhKXtpZihPYS5jYWxsKFFhLGEpKXJldHVybiEwO2lmKE9hLmNhbGwoUGEsYSkpcmV0dXJuITE7aWYoTmEudGVzdChhKSlyZXR1cm4gUWFbYV09ITA7UGFbYV09ITA7cmV0dXJuITF9ZnVuY3Rpb24gU2EoYSxiLGMsZCl7aWYobnVsbCE9PWMmJjA9PT1jLnR5cGUpcmV0dXJuITE7c3dpdGNoKHR5cGVvZiBiKXtjYXNlIFwiZnVuY3Rpb25cIjpjYXNlIFwic3ltYm9sXCI6cmV0dXJuITA7Y2FzZSBcImJvb2xlYW5cIjppZihkKXJldHVybiExO2lmKG51bGwhPT1jKXJldHVybiFjLmFjY2VwdHNCb29sZWFuczthPWEudG9Mb3dlckNhc2UoKS5zbGljZSgwLDUpO3JldHVyblwiZGF0YS1cIiE9PWEmJlwiYXJpYS1cIiE9PWE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBUYShhLGIsYyxkKXtpZihudWxsPT09Ynx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBifHxTYShhLGIsYyxkKSlyZXR1cm4hMDtpZihkKXJldHVybiExO2lmKG51bGwhPT1jKXN3aXRjaChjLnR5cGUpe2Nhc2UgMzpyZXR1cm4hYjtjYXNlIDQ6cmV0dXJuITE9PT1iO2Nhc2UgNTpyZXR1cm4gaXNOYU4oYik7Y2FzZSA2OnJldHVybiBpc05hTihiKXx8MT5ifXJldHVybiExfWZ1bmN0aW9uIHYoYSxiLGMsZCxlLGYpe3RoaXMuYWNjZXB0c0Jvb2xlYW5zPTI9PT1ifHwzPT09Ynx8ND09PWI7dGhpcy5hdHRyaWJ1dGVOYW1lPWQ7dGhpcy5hdHRyaWJ1dGVOYW1lc3BhY2U9ZTt0aGlzLm11c3RVc2VQcm9wZXJ0eT1jO3RoaXMucHJvcGVydHlOYW1lPWE7dGhpcy50eXBlPWI7dGhpcy5zYW5pdGl6ZVVSTD1mfXZhciBDPXt9O1xuXCJjaGlsZHJlbiBkYW5nZXJvdXNseVNldElubmVySFRNTCBkZWZhdWx0VmFsdWUgZGVmYXVsdENoZWNrZWQgaW5uZXJIVE1MIHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZyBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcgc3R5bGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMCwhMSxhLG51bGwsITEpfSk7W1tcImFjY2VwdENoYXJzZXRcIixcImFjY2VwdC1jaGFyc2V0XCJdLFtcImNsYXNzTmFtZVwiLFwiY2xhc3NcIl0sW1wiaHRtbEZvclwiLFwiZm9yXCJdLFtcImh0dHBFcXVpdlwiLFwiaHR0cC1lcXVpdlwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hWzBdO0NbYl09bmV3IHYoYiwxLCExLGFbMV0sbnVsbCwhMSl9KTtbXCJjb250ZW50RWRpdGFibGVcIixcImRyYWdnYWJsZVwiLFwic3BlbGxDaGVja1wiLFwidmFsdWVcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMiwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSl9KTtcbltcImF1dG9SZXZlcnNlXCIsXCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkXCIsXCJmb2N1c2FibGVcIixcInByZXNlcnZlQWxwaGFcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMiwhMSxhLG51bGwsITEpfSk7XCJhbGxvd0Z1bGxTY3JlZW4gYXN5bmMgYXV0b0ZvY3VzIGF1dG9QbGF5IGNvbnRyb2xzIGRlZmF1bHQgZGVmZXIgZGlzYWJsZWQgZGlzYWJsZVBpY3R1cmVJblBpY3R1cmUgZm9ybU5vVmFsaWRhdGUgaGlkZGVuIGxvb3Agbm9Nb2R1bGUgbm9WYWxpZGF0ZSBvcGVuIHBsYXlzSW5saW5lIHJlYWRPbmx5IHJlcXVpcmVkIHJldmVyc2VkIHNjb3BlZCBzZWFtbGVzcyBpdGVtU2NvcGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMywhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSl9KTtcbltcImNoZWNrZWRcIixcIm11bHRpcGxlXCIsXCJtdXRlZFwiLFwic2VsZWN0ZWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMywhMCxhLG51bGwsITEpfSk7W1wiY2FwdHVyZVwiLFwiZG93bmxvYWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsNCwhMSxhLG51bGwsITEpfSk7W1wiY29sc1wiLFwicm93c1wiLFwic2l6ZVwiLFwic3BhblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSw2LCExLGEsbnVsbCwhMSl9KTtbXCJyb3dTcGFuXCIsXCJzdGFydFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSw1LCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExKX0pO3ZhciBVYT0vW1xcLTpdKFthLXpdKS9nO2Z1bmN0aW9uIFZhKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHhtbG5zOnhsaW5rIHgtaGVpZ2h0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKFVhLFxuVmEpO0NbYl09bmV3IHYoYiwxLCExLGEsbnVsbCwhMSl9KTtcInhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpyb2xlIHhsaW5rOnNob3cgeGxpbms6dGl0bGUgeGxpbms6dHlwZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShVYSxWYSk7Q1tiXT1uZXcgdihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMSl9KTtbXCJ4bWw6YmFzZVwiLFwieG1sOmxhbmdcIixcInhtbDpzcGFjZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShVYSxWYSk7Q1tiXT1uZXcgdihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiLCExKX0pO1tcInRhYkluZGV4XCIsXCJjcm9zc09yaWdpblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExKX0pO1xuQy54bGlua0hyZWY9bmV3IHYoXCJ4bGlua0hyZWZcIiwxLCExLFwieGxpbms6aHJlZlwiLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCEwKTtbXCJzcmNcIixcImhyZWZcIixcImFjdGlvblwiLFwiZm9ybUFjdGlvblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCEwKX0pO3ZhciBXYT1hYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDtXYS5oYXNPd25Qcm9wZXJ0eShcIlJlYWN0Q3VycmVudERpc3BhdGNoZXJcIil8fChXYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyPXtjdXJyZW50Om51bGx9KTtXYS5oYXNPd25Qcm9wZXJ0eShcIlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnXCIpfHwoV2EuUmVhY3RDdXJyZW50QmF0Y2hDb25maWc9e3N1c3BlbnNlOm51bGx9KTtcbmZ1bmN0aW9uIFhhKGEsYixjLGQpe3ZhciBlPUMuaGFzT3duUHJvcGVydHkoYik/Q1tiXTpudWxsO3ZhciBmPW51bGwhPT1lPzA9PT1lLnR5cGU6ZD8hMTohKDI8Yi5sZW5ndGgpfHxcIm9cIiE9PWJbMF0mJlwiT1wiIT09YlswXXx8XCJuXCIhPT1iWzFdJiZcIk5cIiE9PWJbMV0/ITE6ITA7Znx8KFRhKGIsYyxlLGQpJiYoYz1udWxsKSxkfHxudWxsPT09ZT9SYShiKSYmKG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOmEuc2V0QXR0cmlidXRlKGIsXCJcIitjKSk6ZS5tdXN0VXNlUHJvcGVydHk/YVtlLnByb3BlcnR5TmFtZV09bnVsbD09PWM/Mz09PWUudHlwZT8hMTpcIlwiOmM6KGI9ZS5hdHRyaWJ1dGVOYW1lLGQ9ZS5hdHRyaWJ1dGVOYW1lc3BhY2UsbnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6KGU9ZS50eXBlLGM9Mz09PWV8fDQ9PT1lJiYhMD09PWM/XCJcIjpcIlwiK2MsZD9hLnNldEF0dHJpYnV0ZU5TKGQsYixjKTphLnNldEF0dHJpYnV0ZShiLGMpKSkpfVxudmFyIFlhPS9eKC4qKVtcXFxcXFwvXS8sRT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLFphPUU/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsJGE9RT9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LGFiPUU/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LGJiPUU/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LGNiPUU/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LGRiPUU/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LGViPUU/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAsZmI9RT9TeW1ib2wuZm9yKFwicmVhY3QuY29uY3VycmVudF9tb2RlXCIpOjYwMTExLGdiPUU/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLGhiPUU/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLGliPUU/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlX2xpc3RcIik6XG42MDEyMCxqYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LGtiPUU/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsbGI9RT9TeW1ib2wuZm9yKFwicmVhY3QuYmxvY2tcIik6NjAxMjEsbWI9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIG5iKGEpe2lmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT1tYiYmYVttYl18fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH1mdW5jdGlvbiBvYihhKXtpZigtMT09PWEuX3N0YXR1cyl7YS5fc3RhdHVzPTA7dmFyIGI9YS5fY3RvcjtiPWIoKTthLl9yZXN1bHQ9YjtiLnRoZW4oZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGI9Yi5kZWZhdWx0LGEuX3N0YXR1cz0xLGEuX3Jlc3VsdD1iKX0sZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGEuX3N0YXR1cz0yLGEuX3Jlc3VsdD1iKX0pfX1cbmZ1bmN0aW9uIHBiKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGEuZGlzcGxheU5hbWV8fGEubmFtZXx8bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpcmV0dXJuIGE7c3dpdGNoKGEpe2Nhc2UgYWI6cmV0dXJuXCJGcmFnbWVudFwiO2Nhc2UgJGE6cmV0dXJuXCJQb3J0YWxcIjtjYXNlIGNiOnJldHVyblwiUHJvZmlsZXJcIjtjYXNlIGJiOnJldHVyblwiU3RyaWN0TW9kZVwiO2Nhc2UgaGI6cmV0dXJuXCJTdXNwZW5zZVwiO2Nhc2UgaWI6cmV0dXJuXCJTdXNwZW5zZUxpc3RcIn1pZihcIm9iamVjdFwiPT09dHlwZW9mIGEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgZWI6cmV0dXJuXCJDb250ZXh0LkNvbnN1bWVyXCI7Y2FzZSBkYjpyZXR1cm5cIkNvbnRleHQuUHJvdmlkZXJcIjtjYXNlIGdiOnZhciBiPWEucmVuZGVyO2I9Yi5kaXNwbGF5TmFtZXx8Yi5uYW1lfHxcIlwiO3JldHVybiBhLmRpc3BsYXlOYW1lfHwoXCJcIiE9PWI/XCJGb3J3YXJkUmVmKFwiK2IrXCIpXCI6XG5cIkZvcndhcmRSZWZcIik7Y2FzZSBqYjpyZXR1cm4gcGIoYS50eXBlKTtjYXNlIGxiOnJldHVybiBwYihhLnJlbmRlcik7Y2FzZSBrYjppZihhPTE9PT1hLl9zdGF0dXM/YS5fcmVzdWx0Om51bGwpcmV0dXJuIHBiKGEpfXJldHVybiBudWxsfWZ1bmN0aW9uIHFiKGEpe3ZhciBiPVwiXCI7ZG97YTpzd2l0Y2goYS50YWcpe2Nhc2UgMzpjYXNlIDQ6Y2FzZSA2OmNhc2UgNzpjYXNlIDEwOmNhc2UgOTp2YXIgYz1cIlwiO2JyZWFrIGE7ZGVmYXVsdDp2YXIgZD1hLl9kZWJ1Z093bmVyLGU9YS5fZGVidWdTb3VyY2UsZj1wYihhLnR5cGUpO2M9bnVsbDtkJiYoYz1wYihkLnR5cGUpKTtkPWY7Zj1cIlwiO2U/Zj1cIiAoYXQgXCIrZS5maWxlTmFtZS5yZXBsYWNlKFlhLFwiXCIpK1wiOlwiK2UubGluZU51bWJlcitcIilcIjpjJiYoZj1cIiAoY3JlYXRlZCBieSBcIitjK1wiKVwiKTtjPVwiXFxuICAgIGluIFwiKyhkfHxcIlVua25vd25cIikrZn1iKz1jO2E9YS5yZXR1cm59d2hpbGUoYSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiByYihhKXtzd2l0Y2godHlwZW9mIGEpe2Nhc2UgXCJib29sZWFuXCI6Y2FzZSBcIm51bWJlclwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwic3RyaW5nXCI6Y2FzZSBcInVuZGVmaW5lZFwiOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuXCJcIn19ZnVuY3Rpb24gc2IoYSl7dmFyIGI9YS50eXBlO3JldHVybihhPWEubm9kZU5hbWUpJiZcImlucHV0XCI9PT1hLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1ifHxcInJhZGlvXCI9PT1iKX1cbmZ1bmN0aW9uIHRiKGEpe3ZhciBiPXNiKGEpP1wiY2hlY2tlZFwiOlwidmFsdWVcIixjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsYiksZD1cIlwiK2FbYl07aWYoIWEuaGFzT3duUHJvcGVydHkoYikmJlwidW5kZWZpbmVkXCIhPT10eXBlb2YgYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5zZXQpe3ZhciBlPWMuZ2V0LGY9Yy5zZXQ7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBlLmNhbGwodGhpcyl9LHNldDpmdW5jdGlvbihhKXtkPVwiXCIrYTtmLmNhbGwodGhpcyxhKX19KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtlbnVtZXJhYmxlOmMuZW51bWVyYWJsZX0pO3JldHVybntnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBkfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXtkPVwiXCIrYX0sc3RvcFRyYWNraW5nOmZ1bmN0aW9uKCl7YS5fdmFsdWVUcmFja2VyPVxubnVsbDtkZWxldGUgYVtiXX19fX1mdW5jdGlvbiB4YihhKXthLl92YWx1ZVRyYWNrZXJ8fChhLl92YWx1ZVRyYWNrZXI9dGIoYSkpfWZ1bmN0aW9uIHliKGEpe2lmKCFhKXJldHVybiExO3ZhciBiPWEuX3ZhbHVlVHJhY2tlcjtpZighYilyZXR1cm4hMDt2YXIgYz1iLmdldFZhbHVlKCk7dmFyIGQ9XCJcIjthJiYoZD1zYihhKT9hLmNoZWNrZWQ/XCJ0cnVlXCI6XCJmYWxzZVwiOmEudmFsdWUpO2E9ZDtyZXR1cm4gYSE9PWM/KGIuc2V0VmFsdWUoYSksITApOiExfWZ1bmN0aW9uIHpiKGEsYil7dmFyIGM9Yi5jaGVja2VkO3JldHVybiBuKHt9LGIse2RlZmF1bHRDaGVja2VkOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLHZhbHVlOnZvaWQgMCxjaGVja2VkOm51bGwhPWM/YzphLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWR9KX1cbmZ1bmN0aW9uIEFiKGEsYil7dmFyIGM9bnVsbD09Yi5kZWZhdWx0VmFsdWU/XCJcIjpiLmRlZmF1bHRWYWx1ZSxkPW51bGwhPWIuY2hlY2tlZD9iLmNoZWNrZWQ6Yi5kZWZhdWx0Q2hlY2tlZDtjPXJiKG51bGwhPWIudmFsdWU/Yi52YWx1ZTpjKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxDaGVja2VkOmQsaW5pdGlhbFZhbHVlOmMsY29udHJvbGxlZDpcImNoZWNrYm94XCI9PT1iLnR5cGV8fFwicmFkaW9cIj09PWIudHlwZT9udWxsIT1iLmNoZWNrZWQ6bnVsbCE9Yi52YWx1ZX19ZnVuY3Rpb24gQmIoYSxiKXtiPWIuY2hlY2tlZDtudWxsIT1iJiZYYShhLFwiY2hlY2tlZFwiLGIsITEpfVxuZnVuY3Rpb24gQ2IoYSxiKXtCYihhLGIpO3ZhciBjPXJiKGIudmFsdWUpLGQ9Yi50eXBlO2lmKG51bGwhPWMpaWYoXCJudW1iZXJcIj09PWQpe2lmKDA9PT1jJiZcIlwiPT09YS52YWx1ZXx8YS52YWx1ZSE9YylhLnZhbHVlPVwiXCIrY31lbHNlIGEudmFsdWUhPT1cIlwiK2MmJihhLnZhbHVlPVwiXCIrYyk7ZWxzZSBpZihcInN1Ym1pdFwiPT09ZHx8XCJyZXNldFwiPT09ZCl7YS5yZW1vdmVBdHRyaWJ1dGUoXCJ2YWx1ZVwiKTtyZXR1cm59Yi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpP0RiKGEsYi50eXBlLGMpOmIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikmJkRiKGEsYi50eXBlLHJiKGIuZGVmYXVsdFZhbHVlKSk7bnVsbD09Yi5jaGVja2VkJiZudWxsIT1iLmRlZmF1bHRDaGVja2VkJiYoYS5kZWZhdWx0Q2hlY2tlZD0hIWIuZGVmYXVsdENoZWNrZWQpfVxuZnVuY3Rpb24gRWIoYSxiLGMpe2lmKGIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKXx8Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSl7dmFyIGQ9Yi50eXBlO2lmKCEoXCJzdWJtaXRcIiE9PWQmJlwicmVzZXRcIiE9PWR8fHZvaWQgMCE9PWIudmFsdWUmJm51bGwhPT1iLnZhbHVlKSlyZXR1cm47Yj1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU7Y3x8Yj09PWEudmFsdWV8fChhLnZhbHVlPWIpO2EuZGVmYXVsdFZhbHVlPWJ9Yz1hLm5hbWU7XCJcIiE9PWMmJihhLm5hbWU9XCJcIik7YS5kZWZhdWx0Q2hlY2tlZD0hIWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZDtcIlwiIT09YyYmKGEubmFtZT1jKX1cbmZ1bmN0aW9uIERiKGEsYixjKXtpZihcIm51bWJlclwiIT09Ynx8YS5vd25lckRvY3VtZW50LmFjdGl2ZUVsZW1lbnQhPT1hKW51bGw9PWM/YS5kZWZhdWx0VmFsdWU9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlOmEuZGVmYXVsdFZhbHVlIT09XCJcIitjJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitjKX1mdW5jdGlvbiBGYihhKXt2YXIgYj1cIlwiO2FhLkNoaWxkcmVuLmZvckVhY2goYSxmdW5jdGlvbihhKXtudWxsIT1hJiYoYis9YSl9KTtyZXR1cm4gYn1mdW5jdGlvbiBHYihhLGIpe2E9bih7Y2hpbGRyZW46dm9pZCAwfSxiKTtpZihiPUZiKGIuY2hpbGRyZW4pKWEuY2hpbGRyZW49YjtyZXR1cm4gYX1cbmZ1bmN0aW9uIEhiKGEsYixjLGQpe2E9YS5vcHRpb25zO2lmKGIpe2I9e307Zm9yKHZhciBlPTA7ZTxjLmxlbmd0aDtlKyspYltcIiRcIitjW2VdXT0hMDtmb3IoYz0wO2M8YS5sZW5ndGg7YysrKWU9Yi5oYXNPd25Qcm9wZXJ0eShcIiRcIithW2NdLnZhbHVlKSxhW2NdLnNlbGVjdGVkIT09ZSYmKGFbY10uc2VsZWN0ZWQ9ZSksZSYmZCYmKGFbY10uZGVmYXVsdFNlbGVjdGVkPSEwKX1lbHNle2M9XCJcIityYihjKTtiPW51bGw7Zm9yKGU9MDtlPGEubGVuZ3RoO2UrKyl7aWYoYVtlXS52YWx1ZT09PWMpe2FbZV0uc2VsZWN0ZWQ9ITA7ZCYmKGFbZV0uZGVmYXVsdFNlbGVjdGVkPSEwKTtyZXR1cm59bnVsbCE9PWJ8fGFbZV0uZGlzYWJsZWR8fChiPWFbZV0pfW51bGwhPT1iJiYoYi5zZWxlY3RlZD0hMCl9fVxuZnVuY3Rpb24gSWIoYSxiKXtpZihudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKXRocm93IEVycm9yKHUoOTEpKTtyZXR1cm4gbih7fSxiLHt2YWx1ZTp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCxjaGlsZHJlbjpcIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWV9KX1mdW5jdGlvbiBKYihhLGIpe3ZhciBjPWIudmFsdWU7aWYobnVsbD09Yyl7Yz1iLmNoaWxkcmVuO2I9Yi5kZWZhdWx0VmFsdWU7aWYobnVsbCE9Yyl7aWYobnVsbCE9Yil0aHJvdyBFcnJvcih1KDkyKSk7aWYoQXJyYXkuaXNBcnJheShjKSl7aWYoISgxPj1jLmxlbmd0aCkpdGhyb3cgRXJyb3IodSg5MykpO2M9Y1swXX1iPWN9bnVsbD09YiYmKGI9XCJcIik7Yz1ifWEuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbFZhbHVlOnJiKGMpfX1cbmZ1bmN0aW9uIEtiKGEsYil7dmFyIGM9cmIoYi52YWx1ZSksZD1yYihiLmRlZmF1bHRWYWx1ZSk7bnVsbCE9YyYmKGM9XCJcIitjLGMhPT1hLnZhbHVlJiYoYS52YWx1ZT1jKSxudWxsPT1iLmRlZmF1bHRWYWx1ZSYmYS5kZWZhdWx0VmFsdWUhPT1jJiYoYS5kZWZhdWx0VmFsdWU9YykpO251bGwhPWQmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2QpfWZ1bmN0aW9uIExiKGEpe3ZhciBiPWEudGV4dENvbnRlbnQ7Yj09PWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWUmJlwiXCIhPT1iJiZudWxsIT09YiYmKGEudmFsdWU9Yil9dmFyIE1iPXtodG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiLG1hdGhtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIixzdmc6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wifTtcbmZ1bmN0aW9uIE5iKGEpe3N3aXRjaChhKXtjYXNlIFwic3ZnXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiO2Nhc2UgXCJtYXRoXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCI7ZGVmYXVsdDpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIn19ZnVuY3Rpb24gT2IoYSxiKXtyZXR1cm4gbnVsbD09YXx8XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP05iKGIpOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj09PWEmJlwiZm9yZWlnbk9iamVjdFwiPT09Yj9cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjphfVxudmFyIFBiLFFiPWZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgTVNBcHAmJk1TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uP2Z1bmN0aW9uKGIsYyxkLGUpe01TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uKGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX06YX0oZnVuY3Rpb24oYSxiKXtpZihhLm5hbWVzcGFjZVVSSSE9PU1iLnN2Z3x8XCJpbm5lckhUTUxcImluIGEpYS5pbm5lckhUTUw9YjtlbHNle1BiPVBifHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1BiLmlubmVySFRNTD1cIjxzdmc+XCIrYi52YWx1ZU9mKCkudG9TdHJpbmcoKStcIjwvc3ZnPlwiO2ZvcihiPVBiLmZpcnN0Q2hpbGQ7YS5maXJzdENoaWxkOylhLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCk7Zm9yKDtiLmZpcnN0Q2hpbGQ7KWEuYXBwZW5kQ2hpbGQoYi5maXJzdENoaWxkKX19KTtcbmZ1bmN0aW9uIFJiKGEsYil7aWYoYil7dmFyIGM9YS5maXJzdENoaWxkO2lmKGMmJmM9PT1hLmxhc3RDaGlsZCYmMz09PWMubm9kZVR5cGUpe2Mubm9kZVZhbHVlPWI7cmV0dXJufX1hLnRleHRDb250ZW50PWJ9ZnVuY3Rpb24gU2IoYSxiKXt2YXIgYz17fTtjW2EudG9Mb3dlckNhc2UoKV09Yi50b0xvd2VyQ2FzZSgpO2NbXCJXZWJraXRcIithXT1cIndlYmtpdFwiK2I7Y1tcIk1velwiK2FdPVwibW96XCIrYjtyZXR1cm4gY312YXIgVGI9e2FuaW1hdGlvbmVuZDpTYihcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uRW5kXCIpLGFuaW1hdGlvbml0ZXJhdGlvbjpTYihcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uSXRlcmF0aW9uXCIpLGFuaW1hdGlvbnN0YXJ0OlNiKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25TdGFydFwiKSx0cmFuc2l0aW9uZW5kOlNiKFwiVHJhbnNpdGlvblwiLFwiVHJhbnNpdGlvbkVuZFwiKX0sVWI9e30sVmI9e307XG55YSYmKFZiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikuc3R5bGUsXCJBbmltYXRpb25FdmVudFwiaW4gd2luZG93fHwoZGVsZXRlIFRiLmFuaW1hdGlvbmVuZC5hbmltYXRpb24sZGVsZXRlIFRiLmFuaW1hdGlvbml0ZXJhdGlvbi5hbmltYXRpb24sZGVsZXRlIFRiLmFuaW1hdGlvbnN0YXJ0LmFuaW1hdGlvbiksXCJUcmFuc2l0aW9uRXZlbnRcImluIHdpbmRvd3x8ZGVsZXRlIFRiLnRyYW5zaXRpb25lbmQudHJhbnNpdGlvbik7ZnVuY3Rpb24gV2IoYSl7aWYoVWJbYV0pcmV0dXJuIFViW2FdO2lmKCFUYlthXSlyZXR1cm4gYTt2YXIgYj1UYlthXSxjO2ZvcihjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSYmYyBpbiBWYilyZXR1cm4gVWJbYV09YltjXTtyZXR1cm4gYX1cbnZhciBYYj1XYihcImFuaW1hdGlvbmVuZFwiKSxZYj1XYihcImFuaW1hdGlvbml0ZXJhdGlvblwiKSxaYj1XYihcImFuaW1hdGlvbnN0YXJ0XCIpLCRiPVdiKFwidHJhbnNpdGlvbmVuZFwiKSxhYz1cImFib3J0IGNhbnBsYXkgY2FucGxheXRocm91Z2ggZHVyYXRpb25jaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgbG9hZGVkZGF0YSBsb2FkZWRtZXRhZGF0YSBsb2Fkc3RhcnQgcGF1c2UgcGxheSBwbGF5aW5nIHByb2dyZXNzIHJhdGVjaGFuZ2Ugc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdXNwZW5kIHRpbWV1cGRhdGUgdm9sdW1lY2hhbmdlIHdhaXRpbmdcIi5zcGxpdChcIiBcIiksYmM9bmV3IChcImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha01hcD9XZWFrTWFwOk1hcCk7ZnVuY3Rpb24gY2MoYSl7dmFyIGI9YmMuZ2V0KGEpO3ZvaWQgMD09PWImJihiPW5ldyBNYXAsYmMuc2V0KGEsYikpO3JldHVybiBifVxuZnVuY3Rpb24gZGMoYSl7dmFyIGI9YSxjPWE7aWYoYS5hbHRlcm5hdGUpZm9yKDtiLnJldHVybjspYj1iLnJldHVybjtlbHNle2E9YjtkbyBiPWEsMCE9PShiLmVmZmVjdFRhZyYxMDI2KSYmKGM9Yi5yZXR1cm4pLGE9Yi5yZXR1cm47d2hpbGUoYSl9cmV0dXJuIDM9PT1iLnRhZz9jOm51bGx9ZnVuY3Rpb24gZWMoYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9YS5tZW1vaXplZFN0YXRlO251bGw9PT1iJiYoYT1hLmFsdGVybmF0ZSxudWxsIT09YSYmKGI9YS5tZW1vaXplZFN0YXRlKSk7aWYobnVsbCE9PWIpcmV0dXJuIGIuZGVoeWRyYXRlZH1yZXR1cm4gbnVsbH1mdW5jdGlvbiBmYyhhKXtpZihkYyhhKSE9PWEpdGhyb3cgRXJyb3IodSgxODgpKTt9XG5mdW5jdGlvbiBnYyhhKXt2YXIgYj1hLmFsdGVybmF0ZTtpZighYil7Yj1kYyhhKTtpZihudWxsPT09Yil0aHJvdyBFcnJvcih1KDE4OCkpO3JldHVybiBiIT09YT9udWxsOmF9Zm9yKHZhciBjPWEsZD1iOzspe3ZhciBlPWMucmV0dXJuO2lmKG51bGw9PT1lKWJyZWFrO3ZhciBmPWUuYWx0ZXJuYXRlO2lmKG51bGw9PT1mKXtkPWUucmV0dXJuO2lmKG51bGwhPT1kKXtjPWQ7Y29udGludWV9YnJlYWt9aWYoZS5jaGlsZD09PWYuY2hpbGQpe2ZvcihmPWUuY2hpbGQ7Zjspe2lmKGY9PT1jKXJldHVybiBmYyhlKSxhO2lmKGY9PT1kKXJldHVybiBmYyhlKSxiO2Y9Zi5zaWJsaW5nfXRocm93IEVycm9yKHUoMTg4KSk7fWlmKGMucmV0dXJuIT09ZC5yZXR1cm4pYz1lLGQ9ZjtlbHNle2Zvcih2YXIgZz0hMSxoPWUuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZTtkPWY7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1lO2M9ZjticmVha31oPWguc2libGluZ31pZighZyl7Zm9yKGg9Zi5jaGlsZDtoOyl7aWYoaD09PVxuYyl7Zz0hMDtjPWY7ZD1lO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZjtjPWU7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpdGhyb3cgRXJyb3IodSgxODkpKTt9fWlmKGMuYWx0ZXJuYXRlIT09ZCl0aHJvdyBFcnJvcih1KDE5MCkpO31pZigzIT09Yy50YWcpdGhyb3cgRXJyb3IodSgxODgpKTtyZXR1cm4gYy5zdGF0ZU5vZGUuY3VycmVudD09PWM/YTpifWZ1bmN0aW9uIGhjKGEpe2E9Z2MoYSk7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKHZhciBiPWE7Oyl7aWYoNT09PWIudGFnfHw2PT09Yi50YWcpcmV0dXJuIGI7aWYoYi5jaGlsZCliLmNoaWxkLnJldHVybj1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBpYyhhLGIpe2lmKG51bGw9PWIpdGhyb3cgRXJyb3IodSgzMCkpO2lmKG51bGw9PWEpcmV0dXJuIGI7aWYoQXJyYXkuaXNBcnJheShhKSl7aWYoQXJyYXkuaXNBcnJheShiKSlyZXR1cm4gYS5wdXNoLmFwcGx5KGEsYiksYTthLnB1c2goYik7cmV0dXJuIGF9cmV0dXJuIEFycmF5LmlzQXJyYXkoYik/W2FdLmNvbmNhdChiKTpbYSxiXX1mdW5jdGlvbiBqYyhhLGIsYyl7QXJyYXkuaXNBcnJheShhKT9hLmZvckVhY2goYixjKTphJiZiLmNhbGwoYyxhKX12YXIga2M9bnVsbDtcbmZ1bmN0aW9uIGxjKGEpe2lmKGEpe3ZhciBiPWEuX2Rpc3BhdGNoTGlzdGVuZXJzLGM9YS5fZGlzcGF0Y2hJbnN0YW5jZXM7aWYoQXJyYXkuaXNBcnJheShiKSlmb3IodmFyIGQ9MDtkPGIubGVuZ3RoJiYhYS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpO2QrKylvYShhLGJbZF0sY1tkXSk7ZWxzZSBiJiZvYShhLGIsYyk7YS5fZGlzcGF0Y2hMaXN0ZW5lcnM9bnVsbDthLl9kaXNwYXRjaEluc3RhbmNlcz1udWxsO2EuaXNQZXJzaXN0ZW50KCl8fGEuY29uc3RydWN0b3IucmVsZWFzZShhKX19ZnVuY3Rpb24gbWMoYSl7bnVsbCE9PWEmJihrYz1pYyhrYyxhKSk7YT1rYztrYz1udWxsO2lmKGEpe2pjKGEsbGMpO2lmKGtjKXRocm93IEVycm9yKHUoOTUpKTtpZihmYSl0aHJvdyBhPWhhLGZhPSExLGhhPW51bGwsYTt9fVxuZnVuY3Rpb24gbmMoYSl7YT1hLnRhcmdldHx8YS5zcmNFbGVtZW50fHx3aW5kb3c7YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCYmKGE9YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCk7cmV0dXJuIDM9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphfWZ1bmN0aW9uIG9jKGEpe2lmKCF5YSlyZXR1cm4hMTthPVwib25cIithO3ZhciBiPWEgaW4gZG9jdW1lbnQ7Ynx8KGI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxiLnNldEF0dHJpYnV0ZShhLFwicmV0dXJuO1wiKSxiPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBiW2FdKTtyZXR1cm4gYn12YXIgcGM9W107ZnVuY3Rpb24gcWMoYSl7YS50b3BMZXZlbFR5cGU9bnVsbDthLm5hdGl2ZUV2ZW50PW51bGw7YS50YXJnZXRJbnN0PW51bGw7YS5hbmNlc3RvcnMubGVuZ3RoPTA7MTA+cGMubGVuZ3RoJiZwYy5wdXNoKGEpfVxuZnVuY3Rpb24gcmMoYSxiLGMsZCl7aWYocGMubGVuZ3RoKXt2YXIgZT1wYy5wb3AoKTtlLnRvcExldmVsVHlwZT1hO2UuZXZlbnRTeXN0ZW1GbGFncz1kO2UubmF0aXZlRXZlbnQ9YjtlLnRhcmdldEluc3Q9YztyZXR1cm4gZX1yZXR1cm57dG9wTGV2ZWxUeXBlOmEsZXZlbnRTeXN0ZW1GbGFnczpkLG5hdGl2ZUV2ZW50OmIsdGFyZ2V0SW5zdDpjLGFuY2VzdG9yczpbXX19XG5mdW5jdGlvbiBzYyhhKXt2YXIgYj1hLnRhcmdldEluc3QsYz1iO2Rve2lmKCFjKXthLmFuY2VzdG9ycy5wdXNoKGMpO2JyZWFrfXZhciBkPWM7aWYoMz09PWQudGFnKWQ9ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztlbHNle2Zvcig7ZC5yZXR1cm47KWQ9ZC5yZXR1cm47ZD0zIT09ZC50YWc/bnVsbDpkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvfWlmKCFkKWJyZWFrO2I9Yy50YWc7NSE9PWImJjYhPT1ifHxhLmFuY2VzdG9ycy5wdXNoKGMpO2M9dGMoZCl9d2hpbGUoYyk7Zm9yKGM9MDtjPGEuYW5jZXN0b3JzLmxlbmd0aDtjKyspe2I9YS5hbmNlc3RvcnNbY107dmFyIGU9bmMoYS5uYXRpdmVFdmVudCk7ZD1hLnRvcExldmVsVHlwZTt2YXIgZj1hLm5hdGl2ZUV2ZW50LGc9YS5ldmVudFN5c3RlbUZsYWdzOzA9PT1jJiYoZ3w9NjQpO2Zvcih2YXIgaD1udWxsLGs9MDtrPHNhLmxlbmd0aDtrKyspe3ZhciBsPXNhW2tdO2wmJihsPWwuZXh0cmFjdEV2ZW50cyhkLGIsZixlLGcpKSYmKGg9XG5pYyhoLGwpKX1tYyhoKX19ZnVuY3Rpb24gdWMoYSxiLGMpe2lmKCFjLmhhcyhhKSl7c3dpdGNoKGEpe2Nhc2UgXCJzY3JvbGxcIjp2YyhiLFwic2Nyb2xsXCIsITApO2JyZWFrO2Nhc2UgXCJmb2N1c1wiOmNhc2UgXCJibHVyXCI6dmMoYixcImZvY3VzXCIsITApO3ZjKGIsXCJibHVyXCIsITApO2Muc2V0KFwiYmx1clwiLG51bGwpO2Muc2V0KFwiZm9jdXNcIixudWxsKTticmVhaztjYXNlIFwiY2FuY2VsXCI6Y2FzZSBcImNsb3NlXCI6b2MoYSkmJnZjKGIsYSwhMCk7YnJlYWs7Y2FzZSBcImludmFsaWRcIjpjYXNlIFwic3VibWl0XCI6Y2FzZSBcInJlc2V0XCI6YnJlYWs7ZGVmYXVsdDotMT09PWFjLmluZGV4T2YoYSkmJkYoYSxiKX1jLnNldChhLG51bGwpfX1cbnZhciB3Yyx4Yyx5Yyx6Yz0hMSxBYz1bXSxCYz1udWxsLENjPW51bGwsRGM9bnVsbCxFYz1uZXcgTWFwLEZjPW5ldyBNYXAsR2M9W10sSGM9XCJtb3VzZWRvd24gbW91c2V1cCB0b3VjaGNhbmNlbCB0b3VjaGVuZCB0b3VjaHN0YXJ0IGF1eGNsaWNrIGRibGNsaWNrIHBvaW50ZXJjYW5jZWwgcG9pbnRlcmRvd24gcG9pbnRlcnVwIGRyYWdlbmQgZHJhZ3N0YXJ0IGRyb3AgY29tcG9zaXRpb25lbmQgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIGlucHV0IHRleHRJbnB1dCBjbG9zZSBjYW5jZWwgY29weSBjdXQgcGFzdGUgY2xpY2sgY2hhbmdlIGNvbnRleHRtZW51IHJlc2V0IHN1Ym1pdFwiLnNwbGl0KFwiIFwiKSxJYz1cImZvY3VzIGJsdXIgZHJhZ2VudGVyIGRyYWdsZWF2ZSBtb3VzZW92ZXIgbW91c2VvdXQgcG9pbnRlcm92ZXIgcG9pbnRlcm91dCBnb3Rwb2ludGVyY2FwdHVyZSBsb3N0cG9pbnRlcmNhcHR1cmVcIi5zcGxpdChcIiBcIik7XG5mdW5jdGlvbiBKYyhhLGIpe3ZhciBjPWNjKGIpO0hjLmZvckVhY2goZnVuY3Rpb24oYSl7dWMoYSxiLGMpfSk7SWMuZm9yRWFjaChmdW5jdGlvbihhKXt1YyhhLGIsYyl9KX1mdW5jdGlvbiBLYyhhLGIsYyxkLGUpe3JldHVybntibG9ja2VkT246YSx0b3BMZXZlbFR5cGU6YixldmVudFN5c3RlbUZsYWdzOmN8MzIsbmF0aXZlRXZlbnQ6ZSxjb250YWluZXI6ZH19XG5mdW5jdGlvbiBMYyhhLGIpe3N3aXRjaChhKXtjYXNlIFwiZm9jdXNcIjpjYXNlIFwiYmx1clwiOkJjPW51bGw7YnJlYWs7Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnbGVhdmVcIjpDYz1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwibW91c2VvdXRcIjpEYz1udWxsO2JyZWFrO2Nhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVyb3V0XCI6RWMuZGVsZXRlKGIucG9pbnRlcklkKTticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6RmMuZGVsZXRlKGIucG9pbnRlcklkKX19ZnVuY3Rpb24gTWMoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hfHxhLm5hdGl2ZUV2ZW50IT09ZilyZXR1cm4gYT1LYyhiLGMsZCxlLGYpLG51bGwhPT1iJiYoYj1OYyhiKSxudWxsIT09YiYmeGMoYikpLGE7YS5ldmVudFN5c3RlbUZsYWdzfD1kO3JldHVybiBhfVxuZnVuY3Rpb24gT2MoYSxiLGMsZCxlKXtzd2l0Y2goYil7Y2FzZSBcImZvY3VzXCI6cmV0dXJuIEJjPU1jKEJjLGEsYixjLGQsZSksITA7Y2FzZSBcImRyYWdlbnRlclwiOnJldHVybiBDYz1NYyhDYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJtb3VzZW92ZXJcIjpyZXR1cm4gRGM9TWMoRGMsYSxiLGMsZCxlKSwhMDtjYXNlIFwicG9pbnRlcm92ZXJcIjp2YXIgZj1lLnBvaW50ZXJJZDtFYy5zZXQoZixNYyhFYy5nZXQoZil8fG51bGwsYSxiLGMsZCxlKSk7cmV0dXJuITA7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6cmV0dXJuIGY9ZS5wb2ludGVySWQsRmMuc2V0KGYsTWMoRmMuZ2V0KGYpfHxudWxsLGEsYixjLGQsZSkpLCEwfXJldHVybiExfVxuZnVuY3Rpb24gUGMoYSl7dmFyIGI9dGMoYS50YXJnZXQpO2lmKG51bGwhPT1iKXt2YXIgYz1kYyhiKTtpZihudWxsIT09YylpZihiPWMudGFnLDEzPT09Yil7aWYoYj1lYyhjKSxudWxsIT09Yil7YS5ibG9ja2VkT249YjtyLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShhLnByaW9yaXR5LGZ1bmN0aW9uKCl7eWMoYyl9KTtyZXR1cm59fWVsc2UgaWYoMz09PWImJmMuc3RhdGVOb2RlLmh5ZHJhdGUpe2EuYmxvY2tlZE9uPTM9PT1jLnRhZz9jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOm51bGw7cmV0dXJufX1hLmJsb2NrZWRPbj1udWxsfWZ1bmN0aW9uIFFjKGEpe2lmKG51bGwhPT1hLmJsb2NrZWRPbilyZXR1cm4hMTt2YXIgYj1SYyhhLnRvcExldmVsVHlwZSxhLmV2ZW50U3lzdGVtRmxhZ3MsYS5jb250YWluZXIsYS5uYXRpdmVFdmVudCk7aWYobnVsbCE9PWIpe3ZhciBjPU5jKGIpO251bGwhPT1jJiZ4YyhjKTthLmJsb2NrZWRPbj1iO3JldHVybiExfXJldHVybiEwfVxuZnVuY3Rpb24gU2MoYSxiLGMpe1FjKGEpJiZjLmRlbGV0ZShiKX1mdW5jdGlvbiBUYygpe2Zvcih6Yz0hMTswPEFjLmxlbmd0aDspe3ZhciBhPUFjWzBdO2lmKG51bGwhPT1hLmJsb2NrZWRPbil7YT1OYyhhLmJsb2NrZWRPbik7bnVsbCE9PWEmJndjKGEpO2JyZWFrfXZhciBiPVJjKGEudG9wTGV2ZWxUeXBlLGEuZXZlbnRTeXN0ZW1GbGFncyxhLmNvbnRhaW5lcixhLm5hdGl2ZUV2ZW50KTtudWxsIT09Yj9hLmJsb2NrZWRPbj1iOkFjLnNoaWZ0KCl9bnVsbCE9PUJjJiZRYyhCYykmJihCYz1udWxsKTtudWxsIT09Q2MmJlFjKENjKSYmKENjPW51bGwpO251bGwhPT1EYyYmUWMoRGMpJiYoRGM9bnVsbCk7RWMuZm9yRWFjaChTYyk7RmMuZm9yRWFjaChTYyl9ZnVuY3Rpb24gVWMoYSxiKXthLmJsb2NrZWRPbj09PWImJihhLmJsb2NrZWRPbj1udWxsLHpjfHwoemM9ITAsci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrKHIudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksVGMpKSl9XG5mdW5jdGlvbiBWYyhhKXtmdW5jdGlvbiBiKGIpe3JldHVybiBVYyhiLGEpfWlmKDA8QWMubGVuZ3RoKXtVYyhBY1swXSxhKTtmb3IodmFyIGM9MTtjPEFjLmxlbmd0aDtjKyspe3ZhciBkPUFjW2NdO2QuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpfX1udWxsIT09QmMmJlVjKEJjLGEpO251bGwhPT1DYyYmVWMoQ2MsYSk7bnVsbCE9PURjJiZVYyhEYyxhKTtFYy5mb3JFYWNoKGIpO0ZjLmZvckVhY2goYik7Zm9yKGM9MDtjPEdjLmxlbmd0aDtjKyspZD1HY1tjXSxkLmJsb2NrZWRPbj09PWEmJihkLmJsb2NrZWRPbj1udWxsKTtmb3IoOzA8R2MubGVuZ3RoJiYoYz1HY1swXSxudWxsPT09Yy5ibG9ja2VkT24pOylQYyhjKSxudWxsPT09Yy5ibG9ja2VkT24mJkdjLnNoaWZ0KCl9XG52YXIgV2M9e30sWWM9bmV3IE1hcCxaYz1uZXcgTWFwLCRjPVtcImFib3J0XCIsXCJhYm9ydFwiLFhiLFwiYW5pbWF0aW9uRW5kXCIsWWIsXCJhbmltYXRpb25JdGVyYXRpb25cIixaYixcImFuaW1hdGlvblN0YXJ0XCIsXCJjYW5wbGF5XCIsXCJjYW5QbGF5XCIsXCJjYW5wbGF5dGhyb3VnaFwiLFwiY2FuUGxheVRocm91Z2hcIixcImR1cmF0aW9uY2hhbmdlXCIsXCJkdXJhdGlvbkNoYW5nZVwiLFwiZW1wdGllZFwiLFwiZW1wdGllZFwiLFwiZW5jcnlwdGVkXCIsXCJlbmNyeXB0ZWRcIixcImVuZGVkXCIsXCJlbmRlZFwiLFwiZXJyb3JcIixcImVycm9yXCIsXCJnb3Rwb2ludGVyY2FwdHVyZVwiLFwiZ290UG9pbnRlckNhcHR1cmVcIixcImxvYWRcIixcImxvYWRcIixcImxvYWRlZGRhdGFcIixcImxvYWRlZERhdGFcIixcImxvYWRlZG1ldGFkYXRhXCIsXCJsb2FkZWRNZXRhZGF0YVwiLFwibG9hZHN0YXJ0XCIsXCJsb2FkU3RhcnRcIixcImxvc3Rwb2ludGVyY2FwdHVyZVwiLFwibG9zdFBvaW50ZXJDYXB0dXJlXCIsXCJwbGF5aW5nXCIsXCJwbGF5aW5nXCIsXCJwcm9ncmVzc1wiLFwicHJvZ3Jlc3NcIixcInNlZWtpbmdcIixcblwic2Vla2luZ1wiLFwic3RhbGxlZFwiLFwic3RhbGxlZFwiLFwic3VzcGVuZFwiLFwic3VzcGVuZFwiLFwidGltZXVwZGF0ZVwiLFwidGltZVVwZGF0ZVwiLCRiLFwidHJhbnNpdGlvbkVuZFwiLFwid2FpdGluZ1wiLFwid2FpdGluZ1wiXTtmdW5jdGlvbiBhZChhLGIpe2Zvcih2YXIgYz0wO2M8YS5sZW5ndGg7Yys9Mil7dmFyIGQ9YVtjXSxlPWFbYysxXSxmPVwib25cIisoZVswXS50b1VwcGVyQ2FzZSgpK2Uuc2xpY2UoMSkpO2Y9e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOmYsY2FwdHVyZWQ6ZitcIkNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltkXSxldmVudFByaW9yaXR5OmJ9O1pjLnNldChkLGIpO1ljLnNldChkLGYpO1djW2VdPWZ9fVxuYWQoXCJibHVyIGJsdXIgY2FuY2VsIGNhbmNlbCBjbGljayBjbGljayBjbG9zZSBjbG9zZSBjb250ZXh0bWVudSBjb250ZXh0TWVudSBjb3B5IGNvcHkgY3V0IGN1dCBhdXhjbGljayBhdXhDbGljayBkYmxjbGljayBkb3VibGVDbGljayBkcmFnZW5kIGRyYWdFbmQgZHJhZ3N0YXJ0IGRyYWdTdGFydCBkcm9wIGRyb3AgZm9jdXMgZm9jdXMgaW5wdXQgaW5wdXQgaW52YWxpZCBpbnZhbGlkIGtleWRvd24ga2V5RG93biBrZXlwcmVzcyBrZXlQcmVzcyBrZXl1cCBrZXlVcCBtb3VzZWRvd24gbW91c2VEb3duIG1vdXNldXAgbW91c2VVcCBwYXN0ZSBwYXN0ZSBwYXVzZSBwYXVzZSBwbGF5IHBsYXkgcG9pbnRlcmNhbmNlbCBwb2ludGVyQ2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJEb3duIHBvaW50ZXJ1cCBwb2ludGVyVXAgcmF0ZWNoYW5nZSByYXRlQ2hhbmdlIHJlc2V0IHJlc2V0IHNlZWtlZCBzZWVrZWQgc3VibWl0IHN1Ym1pdCB0b3VjaGNhbmNlbCB0b3VjaENhbmNlbCB0b3VjaGVuZCB0b3VjaEVuZCB0b3VjaHN0YXJ0IHRvdWNoU3RhcnQgdm9sdW1lY2hhbmdlIHZvbHVtZUNoYW5nZVwiLnNwbGl0KFwiIFwiKSwwKTtcbmFkKFwiZHJhZyBkcmFnIGRyYWdlbnRlciBkcmFnRW50ZXIgZHJhZ2V4aXQgZHJhZ0V4aXQgZHJhZ2xlYXZlIGRyYWdMZWF2ZSBkcmFnb3ZlciBkcmFnT3ZlciBtb3VzZW1vdmUgbW91c2VNb3ZlIG1vdXNlb3V0IG1vdXNlT3V0IG1vdXNlb3ZlciBtb3VzZU92ZXIgcG9pbnRlcm1vdmUgcG9pbnRlck1vdmUgcG9pbnRlcm91dCBwb2ludGVyT3V0IHBvaW50ZXJvdmVyIHBvaW50ZXJPdmVyIHNjcm9sbCBzY3JvbGwgdG9nZ2xlIHRvZ2dsZSB0b3VjaG1vdmUgdG91Y2hNb3ZlIHdoZWVsIHdoZWVsXCIuc3BsaXQoXCIgXCIpLDEpO2FkKCRjLDIpO2Zvcih2YXIgYmQ9XCJjaGFuZ2Ugc2VsZWN0aW9uY2hhbmdlIHRleHRJbnB1dCBjb21wb3NpdGlvbnN0YXJ0IGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9udXBkYXRlXCIuc3BsaXQoXCIgXCIpLGNkPTA7Y2Q8YmQubGVuZ3RoO2NkKyspWmMuc2V0KGJkW2NkXSwwKTtcbnZhciBkZD1yLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LGVkPXIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5LGZkPSEwO2Z1bmN0aW9uIEYoYSxiKXt2YyhiLGEsITEpfWZ1bmN0aW9uIHZjKGEsYixjKXt2YXIgZD1aYy5nZXQoYik7c3dpdGNoKHZvaWQgMD09PWQ/MjpkKXtjYXNlIDA6ZD1nZC5iaW5kKG51bGwsYiwxLGEpO2JyZWFrO2Nhc2UgMTpkPWhkLmJpbmQobnVsbCxiLDEsYSk7YnJlYWs7ZGVmYXVsdDpkPWlkLmJpbmQobnVsbCxiLDEsYSl9Yz9hLmFkZEV2ZW50TGlzdGVuZXIoYixkLCEwKTphLmFkZEV2ZW50TGlzdGVuZXIoYixkLCExKX1mdW5jdGlvbiBnZChhLGIsYyxkKXtKYXx8SGEoKTt2YXIgZT1pZCxmPUphO0phPSEwO3RyeXtHYShlLGEsYixjLGQpfWZpbmFsbHl7KEphPWYpfHxMYSgpfX1mdW5jdGlvbiBoZChhLGIsYyxkKXtlZChkZCxpZC5iaW5kKG51bGwsYSxiLGMsZCkpfVxuZnVuY3Rpb24gaWQoYSxiLGMsZCl7aWYoZmQpaWYoMDxBYy5sZW5ndGgmJi0xPEhjLmluZGV4T2YoYSkpYT1LYyhudWxsLGEsYixjLGQpLEFjLnB1c2goYSk7ZWxzZXt2YXIgZT1SYyhhLGIsYyxkKTtpZihudWxsPT09ZSlMYyhhLGQpO2Vsc2UgaWYoLTE8SGMuaW5kZXhPZihhKSlhPUtjKGUsYSxiLGMsZCksQWMucHVzaChhKTtlbHNlIGlmKCFPYyhlLGEsYixjLGQpKXtMYyhhLGQpO2E9cmMoYSxkLG51bGwsYik7dHJ5e01hKHNjLGEpfWZpbmFsbHl7cWMoYSl9fX19XG5mdW5jdGlvbiBSYyhhLGIsYyxkKXtjPW5jKGQpO2M9dGMoYyk7aWYobnVsbCE9PWMpe3ZhciBlPWRjKGMpO2lmKG51bGw9PT1lKWM9bnVsbDtlbHNle3ZhciBmPWUudGFnO2lmKDEzPT09Zil7Yz1lYyhlKTtpZihudWxsIT09YylyZXR1cm4gYztjPW51bGx9ZWxzZSBpZigzPT09Zil7aWYoZS5zdGF0ZU5vZGUuaHlkcmF0ZSlyZXR1cm4gMz09PWUudGFnP2Uuc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtjPW51bGx9ZWxzZSBlIT09YyYmKGM9bnVsbCl9fWE9cmMoYSxkLGMsYik7dHJ5e01hKHNjLGEpfWZpbmFsbHl7cWMoYSl9cmV0dXJuIG51bGx9XG52YXIgamQ9e2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiEwLGJvcmRlckltYWdlT3V0c2V0OiEwLGJvcmRlckltYWdlU2xpY2U6ITAsYm9yZGVySW1hZ2VXaWR0aDohMCxib3hGbGV4OiEwLGJveEZsZXhHcm91cDohMCxib3hPcmRpbmFsR3JvdXA6ITAsY29sdW1uQ291bnQ6ITAsY29sdW1uczohMCxmbGV4OiEwLGZsZXhHcm93OiEwLGZsZXhQb3NpdGl2ZTohMCxmbGV4U2hyaW5rOiEwLGZsZXhOZWdhdGl2ZTohMCxmbGV4T3JkZXI6ITAsZ3JpZEFyZWE6ITAsZ3JpZFJvdzohMCxncmlkUm93RW5kOiEwLGdyaWRSb3dTcGFuOiEwLGdyaWRSb3dTdGFydDohMCxncmlkQ29sdW1uOiEwLGdyaWRDb2x1bW5FbmQ6ITAsZ3JpZENvbHVtblNwYW46ITAsZ3JpZENvbHVtblN0YXJ0OiEwLGZvbnRXZWlnaHQ6ITAsbGluZUNsYW1wOiEwLGxpbmVIZWlnaHQ6ITAsb3BhY2l0eTohMCxvcmRlcjohMCxvcnBoYW5zOiEwLHRhYlNpemU6ITAsd2lkb3dzOiEwLHpJbmRleDohMCx6b29tOiEwLGZpbGxPcGFjaXR5OiEwLFxuZmxvb2RPcGFjaXR5OiEwLHN0b3BPcGFjaXR5OiEwLHN0cm9rZURhc2hhcnJheTohMCxzdHJva2VEYXNob2Zmc2V0OiEwLHN0cm9rZU1pdGVybGltaXQ6ITAsc3Ryb2tlT3BhY2l0eTohMCxzdHJva2VXaWR0aDohMH0sa2Q9W1wiV2Via2l0XCIsXCJtc1wiLFwiTW96XCIsXCJPXCJdO09iamVjdC5rZXlzKGpkKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe2tkLmZvckVhY2goZnVuY3Rpb24oYil7Yj1iK2EuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYS5zdWJzdHJpbmcoMSk7amRbYl09amRbYV19KX0pO2Z1bmN0aW9uIGxkKGEsYixjKXtyZXR1cm4gbnVsbD09Ynx8XCJib29sZWFuXCI9PT10eXBlb2YgYnx8XCJcIj09PWI/XCJcIjpjfHxcIm51bWJlclwiIT09dHlwZW9mIGJ8fDA9PT1ifHxqZC5oYXNPd25Qcm9wZXJ0eShhKSYmamRbYV0/KFwiXCIrYikudHJpbSgpOmIrXCJweFwifVxuZnVuY3Rpb24gbWQoYSxiKXthPWEuc3R5bGU7Zm9yKHZhciBjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9MD09PWMuaW5kZXhPZihcIi0tXCIpLGU9bGQoYyxiW2NdLGQpO1wiZmxvYXRcIj09PWMmJihjPVwiY3NzRmxvYXRcIik7ZD9hLnNldFByb3BlcnR5KGMsZSk6YVtjXT1lfX12YXIgbmQ9bih7bWVudWl0ZW06ITB9LHthcmVhOiEwLGJhc2U6ITAsYnI6ITAsY29sOiEwLGVtYmVkOiEwLGhyOiEwLGltZzohMCxpbnB1dDohMCxrZXlnZW46ITAsbGluazohMCxtZXRhOiEwLHBhcmFtOiEwLHNvdXJjZTohMCx0cmFjazohMCx3YnI6ITB9KTtcbmZ1bmN0aW9uIG9kKGEsYil7aWYoYil7aWYobmRbYV0mJihudWxsIT1iLmNoaWxkcmVufHxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcih1KDEzNyxhLFwiXCIpKTtpZihudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKXtpZihudWxsIT1iLmNoaWxkcmVuKXRocm93IEVycm9yKHUoNjApKTtpZighKFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmXCJfX2h0bWxcImluIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpKXRocm93IEVycm9yKHUoNjEpKTt9aWYobnVsbCE9Yi5zdHlsZSYmXCJvYmplY3RcIiE9PXR5cGVvZiBiLnN0eWxlKXRocm93IEVycm9yKHUoNjIsXCJcIikpO319XG5mdW5jdGlvbiBwZChhLGIpe2lmKC0xPT09YS5pbmRleE9mKFwiLVwiKSlyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGIuaXM7c3dpdGNoKGEpe2Nhc2UgXCJhbm5vdGF0aW9uLXhtbFwiOmNhc2UgXCJjb2xvci1wcm9maWxlXCI6Y2FzZSBcImZvbnQtZmFjZVwiOmNhc2UgXCJmb250LWZhY2Utc3JjXCI6Y2FzZSBcImZvbnQtZmFjZS11cmlcIjpjYXNlIFwiZm9udC1mYWNlLWZvcm1hdFwiOmNhc2UgXCJmb250LWZhY2UtbmFtZVwiOmNhc2UgXCJtaXNzaW5nLWdseXBoXCI6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMH19dmFyIHFkPU1iLmh0bWw7ZnVuY3Rpb24gcmQoYSxiKXthPTk9PT1hLm5vZGVUeXBlfHwxMT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQ7dmFyIGM9Y2MoYSk7Yj13YVtiXTtmb3IodmFyIGQ9MDtkPGIubGVuZ3RoO2QrKyl1YyhiW2RdLGEsYyl9ZnVuY3Rpb24gc2QoKXt9XG5mdW5jdGlvbiB0ZChhKXthPWF8fChcInVuZGVmaW5lZFwiIT09dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50OnZvaWQgMCk7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhKXJldHVybiBudWxsO3RyeXtyZXR1cm4gYS5hY3RpdmVFbGVtZW50fHxhLmJvZHl9Y2F0Y2goYil7cmV0dXJuIGEuYm9keX19ZnVuY3Rpb24gdWQoYSl7Zm9yKDthJiZhLmZpcnN0Q2hpbGQ7KWE9YS5maXJzdENoaWxkO3JldHVybiBhfWZ1bmN0aW9uIHZkKGEsYil7dmFyIGM9dWQoYSk7YT0wO2Zvcih2YXIgZDtjOyl7aWYoMz09PWMubm9kZVR5cGUpe2Q9YStjLnRleHRDb250ZW50Lmxlbmd0aDtpZihhPD1iJiZkPj1iKXJldHVybntub2RlOmMsb2Zmc2V0OmItYX07YT1kfWE6e2Zvcig7Yzspe2lmKGMubmV4dFNpYmxpbmcpe2M9Yy5uZXh0U2libGluZzticmVhayBhfWM9Yy5wYXJlbnROb2RlfWM9dm9pZCAwfWM9dWQoYyl9fVxuZnVuY3Rpb24gd2QoYSxiKXtyZXR1cm4gYSYmYj9hPT09Yj8hMDphJiYzPT09YS5ub2RlVHlwZT8hMTpiJiYzPT09Yi5ub2RlVHlwZT93ZChhLGIucGFyZW50Tm9kZSk6XCJjb250YWluc1wiaW4gYT9hLmNvbnRhaW5zKGIpOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24/ISEoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSYxNik6ITE6ITF9ZnVuY3Rpb24geGQoKXtmb3IodmFyIGE9d2luZG93LGI9dGQoKTtiIGluc3RhbmNlb2YgYS5IVE1MSUZyYW1lRWxlbWVudDspe3RyeXt2YXIgYz1cInN0cmluZ1wiPT09dHlwZW9mIGIuY29udGVudFdpbmRvdy5sb2NhdGlvbi5ocmVmfWNhdGNoKGQpe2M9ITF9aWYoYylhPWIuY29udGVudFdpbmRvdztlbHNlIGJyZWFrO2I9dGQoYS5kb2N1bWVudCl9cmV0dXJuIGJ9XG5mdW5jdGlvbiB5ZChhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiYoXCJ0ZXh0XCI9PT1hLnR5cGV8fFwic2VhcmNoXCI9PT1hLnR5cGV8fFwidGVsXCI9PT1hLnR5cGV8fFwidXJsXCI9PT1hLnR5cGV8fFwicGFzc3dvcmRcIj09PWEudHlwZSl8fFwidGV4dGFyZWFcIj09PWJ8fFwidHJ1ZVwiPT09YS5jb250ZW50RWRpdGFibGUpfXZhciB6ZD1cIiRcIixBZD1cIi8kXCIsQmQ9XCIkP1wiLENkPVwiJCFcIixEZD1udWxsLEVkPW51bGw7ZnVuY3Rpb24gRmQoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImJ1dHRvblwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJzZWxlY3RcIjpjYXNlIFwidGV4dGFyZWFcIjpyZXR1cm4hIWIuYXV0b0ZvY3VzfXJldHVybiExfVxuZnVuY3Rpb24gR2QoYSxiKXtyZXR1cm5cInRleHRhcmVhXCI9PT1hfHxcIm9wdGlvblwiPT09YXx8XCJub3NjcmlwdFwiPT09YXx8XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm51bWJlclwiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9PWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwuX19odG1sfXZhciBIZD1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0OnZvaWQgMCxJZD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDp2b2lkIDA7ZnVuY3Rpb24gSmQoYSl7Zm9yKDtudWxsIT1hO2E9YS5uZXh0U2libGluZyl7dmFyIGI9YS5ub2RlVHlwZTtpZigxPT09Ynx8Mz09PWIpYnJlYWt9cmV0dXJuIGF9XG5mdW5jdGlvbiBLZChhKXthPWEucHJldmlvdXNTaWJsaW5nO2Zvcih2YXIgYj0wO2E7KXtpZig4PT09YS5ub2RlVHlwZSl7dmFyIGM9YS5kYXRhO2lmKGM9PT16ZHx8Yz09PUNkfHxjPT09QmQpe2lmKDA9PT1iKXJldHVybiBhO2ItLX1lbHNlIGM9PT1BZCYmYisrfWE9YS5wcmV2aW91c1NpYmxpbmd9cmV0dXJuIG51bGx9dmFyIExkPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLE1kPVwiX19yZWFjdEludGVybmFsSW5zdGFuY2UkXCIrTGQsTmQ9XCJfX3JlYWN0RXZlbnRIYW5kbGVycyRcIitMZCxPZD1cIl9fcmVhY3RDb250YWluZXJlJFwiK0xkO1xuZnVuY3Rpb24gdGMoYSl7dmFyIGI9YVtNZF07aWYoYilyZXR1cm4gYjtmb3IodmFyIGM9YS5wYXJlbnROb2RlO2M7KXtpZihiPWNbT2RdfHxjW01kXSl7Yz1iLmFsdGVybmF0ZTtpZihudWxsIT09Yi5jaGlsZHx8bnVsbCE9PWMmJm51bGwhPT1jLmNoaWxkKWZvcihhPUtkKGEpO251bGwhPT1hOyl7aWYoYz1hW01kXSlyZXR1cm4gYzthPUtkKGEpfXJldHVybiBifWE9YztjPWEucGFyZW50Tm9kZX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBOYyhhKXthPWFbTWRdfHxhW09kXTtyZXR1cm4hYXx8NSE9PWEudGFnJiY2IT09YS50YWcmJjEzIT09YS50YWcmJjMhPT1hLnRhZz9udWxsOmF9ZnVuY3Rpb24gUGQoYSl7aWYoNT09PWEudGFnfHw2PT09YS50YWcpcmV0dXJuIGEuc3RhdGVOb2RlO3Rocm93IEVycm9yKHUoMzMpKTt9ZnVuY3Rpb24gUWQoYSl7cmV0dXJuIGFbTmRdfHxudWxsfVxuZnVuY3Rpb24gUmQoYSl7ZG8gYT1hLnJldHVybjt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1cbmZ1bmN0aW9uIFNkKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7aWYoIWMpcmV0dXJuIG51bGw7dmFyIGQ9bGEoYyk7aWYoIWQpcmV0dXJuIG51bGw7Yz1kW2JdO2E6c3dpdGNoKGIpe2Nhc2UgXCJvbkNsaWNrXCI6Y2FzZSBcIm9uQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tcIjpjYXNlIFwib25Eb3VibGVDbGlja0NhcHR1cmVcIjpjYXNlIFwib25Nb3VzZURvd25cIjpjYXNlIFwib25Nb3VzZURvd25DYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlVXBcIjpjYXNlIFwib25Nb3VzZVVwQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRW50ZXJcIjooZD0hZC5kaXNhYmxlZCl8fChhPWEudHlwZSxkPSEoXCJidXR0b25cIj09PWF8fFwiaW5wdXRcIj09PWF8fFwic2VsZWN0XCI9PT1hfHxcInRleHRhcmVhXCI9PT1hKSk7YT0hZDticmVhayBhO2RlZmF1bHQ6YT0hMX1pZihhKXJldHVybiBudWxsO2lmKGMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjKXRocm93IEVycm9yKHUoMjMxLFxuYix0eXBlb2YgYykpO3JldHVybiBjfWZ1bmN0aW9uIFRkKGEsYixjKXtpZihiPVNkKGEsYy5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lc1tiXSkpYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9aWMoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9aWMoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSl9ZnVuY3Rpb24gVWQoYSl7aWYoYSYmYS5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lcyl7Zm9yKHZhciBiPWEuX3RhcmdldEluc3QsYz1bXTtiOyljLnB1c2goYiksYj1SZChiKTtmb3IoYj1jLmxlbmd0aDswPGItLTspVGQoY1tiXSxcImNhcHR1cmVkXCIsYSk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKylUZChjW2JdLFwiYnViYmxlZFwiLGEpfX1cbmZ1bmN0aW9uIFZkKGEsYixjKXthJiZjJiZjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJihiPVNkKGEsYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lKSkmJihjLl9kaXNwYXRjaExpc3RlbmVycz1pYyhjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz1pYyhjLl9kaXNwYXRjaEluc3RhbmNlcyxhKSl9ZnVuY3Rpb24gV2QoYSl7YSYmYS5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiZWZChhLl90YXJnZXRJbnN0LG51bGwsYSl9ZnVuY3Rpb24gWGQoYSl7amMoYSxVZCl9dmFyIFlkPW51bGwsWmQ9bnVsbCwkZD1udWxsO1xuZnVuY3Rpb24gYWUoKXtpZigkZClyZXR1cm4gJGQ7dmFyIGEsYj1aZCxjPWIubGVuZ3RoLGQsZT1cInZhbHVlXCJpbiBZZD9ZZC52YWx1ZTpZZC50ZXh0Q29udGVudCxmPWUubGVuZ3RoO2ZvcihhPTA7YTxjJiZiW2FdPT09ZVthXTthKyspO3ZhciBnPWMtYTtmb3IoZD0xO2Q8PWcmJmJbYy1kXT09PWVbZi1kXTtkKyspO3JldHVybiAkZD1lLnNsaWNlKGEsMTxkPzEtZDp2b2lkIDApfWZ1bmN0aW9uIGJlKCl7cmV0dXJuITB9ZnVuY3Rpb24gY2UoKXtyZXR1cm4hMX1cbmZ1bmN0aW9uIEcoYSxiLGMsZCl7dGhpcy5kaXNwYXRjaENvbmZpZz1hO3RoaXMuX3RhcmdldEluc3Q9Yjt0aGlzLm5hdGl2ZUV2ZW50PWM7YT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZTtmb3IodmFyIGUgaW4gYSlhLmhhc093blByb3BlcnR5KGUpJiYoKGI9YVtlXSk/dGhpc1tlXT1iKGMpOlwidGFyZ2V0XCI9PT1lP3RoaXMudGFyZ2V0PWQ6dGhpc1tlXT1jW2VdKTt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD0obnVsbCE9Yy5kZWZhdWx0UHJldmVudGVkP2MuZGVmYXVsdFByZXZlbnRlZDohMT09PWMucmV0dXJuVmFsdWUpP2JlOmNlO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9Y2U7cmV0dXJuIHRoaXN9XG5uKEcucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiYoYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9YmUpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnN0b3BQcm9wYWdhdGlvbj9hLnN0b3BQcm9wYWdhdGlvbigpOlwidW5rbm93blwiIT09dHlwZW9mIGEuY2FuY2VsQnViYmxlJiYoYS5jYW5jZWxCdWJibGU9ITApLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9YmUpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7dGhpcy5pc1BlcnNpc3RlbnQ9YmV9LGlzUGVyc2lzdGVudDpjZSxkZXN0cnVjdG9yOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2UsXG5iO2ZvcihiIGluIGEpdGhpc1tiXT1udWxsO3RoaXMubmF0aXZlRXZlbnQ9dGhpcy5fdGFyZ2V0SW5zdD10aGlzLmRpc3BhdGNoQ29uZmlnPW51bGw7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD10aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1jZTt0aGlzLl9kaXNwYXRjaEluc3RhbmNlcz10aGlzLl9kaXNwYXRjaExpc3RlbmVycz1udWxsfX0pO0cuSW50ZXJmYWNlPXt0eXBlOm51bGwsdGFyZ2V0Om51bGwsY3VycmVudFRhcmdldDpmdW5jdGlvbigpe3JldHVybiBudWxsfSxldmVudFBoYXNlOm51bGwsYnViYmxlczpudWxsLGNhbmNlbGFibGU6bnVsbCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOm51bGwsaXNUcnVzdGVkOm51bGx9O1xuRy5leHRlbmQ9ZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYigpe31mdW5jdGlvbiBjKCl7cmV0dXJuIGQuYXBwbHkodGhpcyxhcmd1bWVudHMpfXZhciBkPXRoaXM7Yi5wcm90b3R5cGU9ZC5wcm90b3R5cGU7dmFyIGU9bmV3IGI7bihlLGMucHJvdG90eXBlKTtjLnByb3RvdHlwZT1lO2MucHJvdG90eXBlLmNvbnN0cnVjdG9yPWM7Yy5JbnRlcmZhY2U9bih7fSxkLkludGVyZmFjZSxhKTtjLmV4dGVuZD1kLmV4dGVuZDtkZShjKTtyZXR1cm4gY307ZGUoRyk7ZnVuY3Rpb24gZWUoYSxiLGMsZCl7aWYodGhpcy5ldmVudFBvb2wubGVuZ3RoKXt2YXIgZT10aGlzLmV2ZW50UG9vbC5wb3AoKTt0aGlzLmNhbGwoZSxhLGIsYyxkKTtyZXR1cm4gZX1yZXR1cm4gbmV3IHRoaXMoYSxiLGMsZCl9XG5mdW5jdGlvbiBmZShhKXtpZighKGEgaW5zdGFuY2VvZiB0aGlzKSl0aHJvdyBFcnJvcih1KDI3OSkpO2EuZGVzdHJ1Y3RvcigpOzEwPnRoaXMuZXZlbnRQb29sLmxlbmd0aCYmdGhpcy5ldmVudFBvb2wucHVzaChhKX1mdW5jdGlvbiBkZShhKXthLmV2ZW50UG9vbD1bXTthLmdldFBvb2xlZD1lZTthLnJlbGVhc2U9ZmV9dmFyIGdlPUcuZXh0ZW5kKHtkYXRhOm51bGx9KSxoZT1HLmV4dGVuZCh7ZGF0YTpudWxsfSksaWU9WzksMTMsMjcsMzJdLGplPXlhJiZcIkNvbXBvc2l0aW9uRXZlbnRcImluIHdpbmRvdyxrZT1udWxsO3lhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJihrZT1kb2N1bWVudC5kb2N1bWVudE1vZGUpO1xudmFyIGxlPXlhJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYha2UsbWU9eWEmJighamV8fGtlJiY4PGtlJiYxMT49a2UpLG5lPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLG9lPXtiZWZvcmVJbnB1dDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkJlZm9yZUlucHV0XCIsY2FwdHVyZWQ6XCJvbkJlZm9yZUlucHV0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdfSxjb21wb3NpdGlvbkVuZDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uRW5kXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uRW5kQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uZW5kIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblN0YXJ0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25TdGFydFwiLFxuY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25VcGRhdGU6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblVwZGF0ZVwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvblVwZGF0ZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnVwZGF0ZSBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX19LHBlPSExO1xuZnVuY3Rpb24gcWUoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImtleXVwXCI6cmV0dXJuLTEhPT1pZS5pbmRleE9mKGIua2V5Q29kZSk7Y2FzZSBcImtleWRvd25cIjpyZXR1cm4gMjI5IT09Yi5rZXlDb2RlO2Nhc2UgXCJrZXlwcmVzc1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwiYmx1clwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIHJlKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIHNlPSExO2Z1bmN0aW9uIHRlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiByZShiKTtjYXNlIFwia2V5cHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7cGU9ITA7cmV0dXJuIG5lO2Nhc2UgXCJ0ZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PW5lJiZwZT9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiB1ZShhLGIpe2lmKHNlKXJldHVyblwiY29tcG9zaXRpb25lbmRcIj09PWF8fCFqZSYmcWUoYSxiKT8oYT1hZSgpLCRkPVpkPVlkPW51bGwsc2U9ITEsYSk6bnVsbDtzd2l0Y2goYSl7Y2FzZSBcInBhc3RlXCI6cmV0dXJuIG51bGw7Y2FzZSBcImtleXByZXNzXCI6aWYoIShiLmN0cmxLZXl8fGIuYWx0S2V5fHxiLm1ldGFLZXkpfHxiLmN0cmxLZXkmJmIuYWx0S2V5KXtpZihiLmNoYXImJjE8Yi5jaGFyLmxlbmd0aClyZXR1cm4gYi5jaGFyO2lmKGIud2hpY2gpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoYi53aGljaCl9cmV0dXJuIG51bGw7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIG1lJiZcImtvXCIhPT1iLmxvY2FsZT9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciB2ZT17ZXZlbnRUeXBlczpvZSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlO2lmKGplKWI6e3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOnZhciBmPW9lLmNvbXBvc2l0aW9uU3RhcnQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpmPW9lLmNvbXBvc2l0aW9uRW5kO2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9udXBkYXRlXCI6Zj1vZS5jb21wb3NpdGlvblVwZGF0ZTticmVhayBifWY9dm9pZCAwfWVsc2Ugc2U/cWUoYSxjKSYmKGY9b2UuY29tcG9zaXRpb25FbmQpOlwia2V5ZG93blwiPT09YSYmMjI5PT09Yy5rZXlDb2RlJiYoZj1vZS5jb21wb3NpdGlvblN0YXJ0KTtmPyhtZSYmXCJrb1wiIT09Yy5sb2NhbGUmJihzZXx8ZiE9PW9lLmNvbXBvc2l0aW9uU3RhcnQ/Zj09PW9lLmNvbXBvc2l0aW9uRW5kJiZzZSYmKGU9YWUoKSk6KFlkPWQsWmQ9XCJ2YWx1ZVwiaW4gWWQ/WWQudmFsdWU6WWQudGV4dENvbnRlbnQsc2U9ITApKSxmPWdlLmdldFBvb2xlZChmLFxuYixjLGQpLGU/Zi5kYXRhPWU6KGU9cmUoYyksbnVsbCE9PWUmJihmLmRhdGE9ZSkpLFhkKGYpLGU9Zik6ZT1udWxsOyhhPWxlP3RlKGEsYyk6dWUoYSxjKSk/KGI9aGUuZ2V0UG9vbGVkKG9lLmJlZm9yZUlucHV0LGIsYyxkKSxiLmRhdGE9YSxYZChiKSk6Yj1udWxsO3JldHVybiBudWxsPT09ZT9iOm51bGw9PT1iP2U6W2UsYl19fSx3ZT17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtmdW5jdGlvbiB4ZShhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIXdlW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1cbnZhciB5ZT17Y2hhbmdlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ2hhbmdlXCIsY2FwdHVyZWQ6XCJvbkNoYW5nZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjaGFuZ2UgY2xpY2sgZm9jdXMgaW5wdXQga2V5ZG93biBrZXl1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fTtmdW5jdGlvbiB6ZShhLGIsYyl7YT1HLmdldFBvb2xlZCh5ZS5jaGFuZ2UsYSxiLGMpO2EudHlwZT1cImNoYW5nZVwiO0RhKGMpO1hkKGEpO3JldHVybiBhfXZhciBBZT1udWxsLEJlPW51bGw7ZnVuY3Rpb24gQ2UoYSl7bWMoYSl9ZnVuY3Rpb24gRGUoYSl7dmFyIGI9UGQoYSk7aWYoeWIoYikpcmV0dXJuIGF9ZnVuY3Rpb24gRWUoYSxiKXtpZihcImNoYW5nZVwiPT09YSlyZXR1cm4gYn12YXIgRmU9ITE7eWEmJihGZT1vYyhcImlucHV0XCIpJiYoIWRvY3VtZW50LmRvY3VtZW50TW9kZXx8OTxkb2N1bWVudC5kb2N1bWVudE1vZGUpKTtcbmZ1bmN0aW9uIEdlKCl7QWUmJihBZS5kZXRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixIZSksQmU9QWU9bnVsbCl9ZnVuY3Rpb24gSGUoYSl7aWYoXCJ2YWx1ZVwiPT09YS5wcm9wZXJ0eU5hbWUmJkRlKEJlKSlpZihhPXplKEJlLGEsbmMoYSkpLEphKW1jKGEpO2Vsc2V7SmE9ITA7dHJ5e0ZhKENlLGEpfWZpbmFsbHl7SmE9ITEsTGEoKX19fWZ1bmN0aW9uIEllKGEsYixjKXtcImZvY3VzXCI9PT1hPyhHZSgpLEFlPWIsQmU9YyxBZS5hdHRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixIZSkpOlwiYmx1clwiPT09YSYmR2UoKX1mdW5jdGlvbiBKZShhKXtpZihcInNlbGVjdGlvbmNoYW5nZVwiPT09YXx8XCJrZXl1cFwiPT09YXx8XCJrZXlkb3duXCI9PT1hKXJldHVybiBEZShCZSl9ZnVuY3Rpb24gS2UoYSxiKXtpZihcImNsaWNrXCI9PT1hKXJldHVybiBEZShiKX1mdW5jdGlvbiBMZShhLGIpe2lmKFwiaW5wdXRcIj09PWF8fFwiY2hhbmdlXCI9PT1hKXJldHVybiBEZShiKX1cbnZhciBNZT17ZXZlbnRUeXBlczp5ZSxfaXNJbnB1dEV2ZW50U3VwcG9ydGVkOkZlLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9Yj9QZChiKTp3aW5kb3csZj1lLm5vZGVOYW1lJiZlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7aWYoXCJzZWxlY3RcIj09PWZ8fFwiaW5wdXRcIj09PWYmJlwiZmlsZVwiPT09ZS50eXBlKXZhciBnPUVlO2Vsc2UgaWYoeGUoZSkpaWYoRmUpZz1MZTtlbHNle2c9SmU7dmFyIGg9SWV9ZWxzZShmPWUubm9kZU5hbWUpJiZcImlucHV0XCI9PT1mLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1lLnR5cGV8fFwicmFkaW9cIj09PWUudHlwZSkmJihnPUtlKTtpZihnJiYoZz1nKGEsYikpKXJldHVybiB6ZShnLGMsZCk7aCYmaChhLGUsYik7XCJibHVyXCI9PT1hJiYoYT1lLl93cmFwcGVyU3RhdGUpJiZhLmNvbnRyb2xsZWQmJlwibnVtYmVyXCI9PT1lLnR5cGUmJkRiKGUsXCJudW1iZXJcIixlLnZhbHVlKX19LE5lPUcuZXh0ZW5kKHt2aWV3Om51bGwsZGV0YWlsOm51bGx9KSxcbk9lPXtBbHQ6XCJhbHRLZXlcIixDb250cm9sOlwiY3RybEtleVwiLE1ldGE6XCJtZXRhS2V5XCIsU2hpZnQ6XCJzaGlmdEtleVwifTtmdW5jdGlvbiBQZShhKXt2YXIgYj10aGlzLm5hdGl2ZUV2ZW50O3JldHVybiBiLmdldE1vZGlmaWVyU3RhdGU/Yi5nZXRNb2RpZmllclN0YXRlKGEpOihhPU9lW2FdKT8hIWJbYV06ITF9ZnVuY3Rpb24gUWUoKXtyZXR1cm4gUGV9XG52YXIgUmU9MCxTZT0wLFRlPSExLFVlPSExLFZlPU5lLmV4dGVuZCh7c2NyZWVuWDpudWxsLHNjcmVlblk6bnVsbCxjbGllbnRYOm51bGwsY2xpZW50WTpudWxsLHBhZ2VYOm51bGwscGFnZVk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpRZSxidXR0b246bnVsbCxidXR0b25zOm51bGwscmVsYXRlZFRhcmdldDpmdW5jdGlvbihhKXtyZXR1cm4gYS5yZWxhdGVkVGFyZ2V0fHwoYS5mcm9tRWxlbWVudD09PWEuc3JjRWxlbWVudD9hLnRvRWxlbWVudDphLmZyb21FbGVtZW50KX0sbW92ZW1lbnRYOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRYXCJpbiBhKXJldHVybiBhLm1vdmVtZW50WDt2YXIgYj1SZTtSZT1hLnNjcmVlblg7cmV0dXJuIFRlP1wibW91c2Vtb3ZlXCI9PT1hLnR5cGU/YS5zY3JlZW5YLWI6MDooVGU9ITAsMCl9LG1vdmVtZW50WTpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WVwiaW4gYSlyZXR1cm4gYS5tb3ZlbWVudFk7XG52YXIgYj1TZTtTZT1hLnNjcmVlblk7cmV0dXJuIFVlP1wibW91c2Vtb3ZlXCI9PT1hLnR5cGU/YS5zY3JlZW5ZLWI6MDooVWU9ITAsMCl9fSksV2U9VmUuZXh0ZW5kKHtwb2ludGVySWQ6bnVsbCx3aWR0aDpudWxsLGhlaWdodDpudWxsLHByZXNzdXJlOm51bGwsdGFuZ2VudGlhbFByZXNzdXJlOm51bGwsdGlsdFg6bnVsbCx0aWx0WTpudWxsLHR3aXN0Om51bGwscG9pbnRlclR5cGU6bnVsbCxpc1ByaW1hcnk6bnVsbH0pLFhlPXttb3VzZUVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUVudGVyXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LG1vdXNlTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlTGVhdmVcIixkZXBlbmRlbmNpZXM6W1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXX0scG9pbnRlckVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Qb2ludGVyRW50ZXJcIixkZXBlbmRlbmNpZXM6W1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl19LHBvaW50ZXJMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uUG9pbnRlckxlYXZlXCIsXG5kZXBlbmRlbmNpZXM6W1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl19fSxZZT17ZXZlbnRUeXBlczpYZSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9XCJtb3VzZW92ZXJcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEsZz1cIm1vdXNlb3V0XCI9PT1hfHxcInBvaW50ZXJvdXRcIj09PWE7aWYoZiYmMD09PShlJjMyKSYmKGMucmVsYXRlZFRhcmdldHx8Yy5mcm9tRWxlbWVudCl8fCFnJiYhZilyZXR1cm4gbnVsbDtmPWQud2luZG93PT09ZD9kOihmPWQub3duZXJEb2N1bWVudCk/Zi5kZWZhdWx0Vmlld3x8Zi5wYXJlbnRXaW5kb3c6d2luZG93O2lmKGcpe2lmKGc9YixiPShiPWMucmVsYXRlZFRhcmdldHx8Yy50b0VsZW1lbnQpP3RjKGIpOm51bGwsbnVsbCE9PWIpe3ZhciBoPWRjKGIpO2lmKGIhPT1ofHw1IT09Yi50YWcmJjYhPT1iLnRhZyliPW51bGx9fWVsc2UgZz1udWxsO2lmKGc9PT1iKXJldHVybiBudWxsO2lmKFwibW91c2VvdXRcIj09PWF8fFwibW91c2VvdmVyXCI9PT1cbmEpe3ZhciBrPVZlO3ZhciBsPVhlLm1vdXNlTGVhdmU7dmFyIG09WGUubW91c2VFbnRlcjt2YXIgcD1cIm1vdXNlXCJ9ZWxzZSBpZihcInBvaW50ZXJvdXRcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEpaz1XZSxsPVhlLnBvaW50ZXJMZWF2ZSxtPVhlLnBvaW50ZXJFbnRlcixwPVwicG9pbnRlclwiO2E9bnVsbD09Zz9mOlBkKGcpO2Y9bnVsbD09Yj9mOlBkKGIpO2w9ay5nZXRQb29sZWQobCxnLGMsZCk7bC50eXBlPXArXCJsZWF2ZVwiO2wudGFyZ2V0PWE7bC5yZWxhdGVkVGFyZ2V0PWY7Yz1rLmdldFBvb2xlZChtLGIsYyxkKTtjLnR5cGU9cCtcImVudGVyXCI7Yy50YXJnZXQ9ZjtjLnJlbGF0ZWRUYXJnZXQ9YTtkPWc7cD1iO2lmKGQmJnApYTp7az1kO209cDtnPTA7Zm9yKGE9azthO2E9UmQoYSkpZysrO2E9MDtmb3IoYj1tO2I7Yj1SZChiKSlhKys7Zm9yKDswPGctYTspaz1SZChrKSxnLS07Zm9yKDswPGEtZzspbT1SZChtKSxhLS07Zm9yKDtnLS07KXtpZihrPT09bXx8az09PW0uYWx0ZXJuYXRlKWJyZWFrIGE7XG5rPVJkKGspO209UmQobSl9az1udWxsfWVsc2Ugaz1udWxsO209aztmb3Ioaz1bXTtkJiZkIT09bTspe2c9ZC5hbHRlcm5hdGU7aWYobnVsbCE9PWcmJmc9PT1tKWJyZWFrO2sucHVzaChkKTtkPVJkKGQpfWZvcihkPVtdO3AmJnAhPT1tOyl7Zz1wLmFsdGVybmF0ZTtpZihudWxsIT09ZyYmZz09PW0pYnJlYWs7ZC5wdXNoKHApO3A9UmQocCl9Zm9yKHA9MDtwPGsubGVuZ3RoO3ArKylWZChrW3BdLFwiYnViYmxlZFwiLGwpO2ZvcihwPWQubGVuZ3RoOzA8cC0tOylWZChkW3BdLFwiY2FwdHVyZWRcIixjKTtyZXR1cm4gMD09PShlJjY0KT9bbF06W2wsY119fTtmdW5jdGlvbiBaZShhLGIpe3JldHVybiBhPT09YiYmKDAhPT1hfHwxL2E9PT0xL2IpfHxhIT09YSYmYiE9PWJ9dmFyICRlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBPYmplY3QuaXM/T2JqZWN0LmlzOlplLGFmPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5mdW5jdGlvbiBiZihhLGIpe2lmKCRlKGEsYikpcmV0dXJuITA7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhfHxudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBifHxudWxsPT09YilyZXR1cm4hMTt2YXIgYz1PYmplY3Qua2V5cyhhKSxkPU9iamVjdC5rZXlzKGIpO2lmKGMubGVuZ3RoIT09ZC5sZW5ndGgpcmV0dXJuITE7Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrKylpZighYWYuY2FsbChiLGNbZF0pfHwhJGUoYVtjW2RdXSxiW2NbZF1dKSlyZXR1cm4hMTtyZXR1cm4hMH1cbnZhciBjZj15YSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLGRmPXtzZWxlY3Q6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25TZWxlY3RcIixjYXB0dXJlZDpcIm9uU2VsZWN0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXMga2V5ZG93biBrZXl1cCBtb3VzZWRvd24gbW91c2V1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fSxlZj1udWxsLGZmPW51bGwsZ2Y9bnVsbCxoZj0hMTtcbmZ1bmN0aW9uIGpmKGEsYil7dmFyIGM9Yi53aW5kb3c9PT1iP2IuZG9jdW1lbnQ6OT09PWIubm9kZVR5cGU/YjpiLm93bmVyRG9jdW1lbnQ7aWYoaGZ8fG51bGw9PWVmfHxlZiE9PXRkKGMpKXJldHVybiBudWxsO2M9ZWY7XCJzZWxlY3Rpb25TdGFydFwiaW4gYyYmeWQoYyk/Yz17c3RhcnQ6Yy5zZWxlY3Rpb25TdGFydCxlbmQ6Yy5zZWxlY3Rpb25FbmR9OihjPShjLm93bmVyRG9jdW1lbnQmJmMub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlld3x8d2luZG93KS5nZXRTZWxlY3Rpb24oKSxjPXthbmNob3JOb2RlOmMuYW5jaG9yTm9kZSxhbmNob3JPZmZzZXQ6Yy5hbmNob3JPZmZzZXQsZm9jdXNOb2RlOmMuZm9jdXNOb2RlLGZvY3VzT2Zmc2V0OmMuZm9jdXNPZmZzZXR9KTtyZXR1cm4gZ2YmJmJmKGdmLGMpP251bGw6KGdmPWMsYT1HLmdldFBvb2xlZChkZi5zZWxlY3QsZmYsYSxiKSxhLnR5cGU9XCJzZWxlY3RcIixhLnRhcmdldD1lZixYZChhKSxhKX1cbnZhciBrZj17ZXZlbnRUeXBlczpkZixleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQsZSxmKXtlPWZ8fChkLndpbmRvdz09PWQ/ZC5kb2N1bWVudDo5PT09ZC5ub2RlVHlwZT9kOmQub3duZXJEb2N1bWVudCk7aWYoIShmPSFlKSl7YTp7ZT1jYyhlKTtmPXdhLm9uU2VsZWN0O2Zvcih2YXIgZz0wO2c8Zi5sZW5ndGg7ZysrKWlmKCFlLmhhcyhmW2ddKSl7ZT0hMTticmVhayBhfWU9ITB9Zj0hZX1pZihmKXJldHVybiBudWxsO2U9Yj9QZChiKTp3aW5kb3c7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c1wiOmlmKHhlKGUpfHxcInRydWVcIj09PWUuY29udGVudEVkaXRhYmxlKWVmPWUsZmY9YixnZj1udWxsO2JyZWFrO2Nhc2UgXCJibHVyXCI6Z2Y9ZmY9ZWY9bnVsbDticmVhaztjYXNlIFwibW91c2Vkb3duXCI6aGY9ITA7YnJlYWs7Y2FzZSBcImNvbnRleHRtZW51XCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwiZHJhZ2VuZFwiOnJldHVybiBoZj0hMSxqZihjLGQpO2Nhc2UgXCJzZWxlY3Rpb25jaGFuZ2VcIjppZihjZilicmVhaztcbmNhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6cmV0dXJuIGpmKGMsZCl9cmV0dXJuIG51bGx9fSxsZj1HLmV4dGVuZCh7YW5pbWF0aW9uTmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSksbWY9Ry5leHRlbmQoe2NsaXBib2FyZERhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuXCJjbGlwYm9hcmREYXRhXCJpbiBhP2EuY2xpcGJvYXJkRGF0YTp3aW5kb3cuY2xpcGJvYXJkRGF0YX19KSxuZj1OZS5leHRlbmQoe3JlbGF0ZWRUYXJnZXQ6bnVsbH0pO2Z1bmN0aW9uIG9mKGEpe3ZhciBiPWEua2V5Q29kZTtcImNoYXJDb2RlXCJpbiBhPyhhPWEuY2hhckNvZGUsMD09PWEmJjEzPT09YiYmKGE9MTMpKTphPWI7MTA9PT1hJiYoYT0xMyk7cmV0dXJuIDMyPD1hfHwxMz09PWE/YTowfVxudmFyIHBmPXtFc2M6XCJFc2NhcGVcIixTcGFjZWJhcjpcIiBcIixMZWZ0OlwiQXJyb3dMZWZ0XCIsVXA6XCJBcnJvd1VwXCIsUmlnaHQ6XCJBcnJvd1JpZ2h0XCIsRG93bjpcIkFycm93RG93blwiLERlbDpcIkRlbGV0ZVwiLFdpbjpcIk9TXCIsTWVudTpcIkNvbnRleHRNZW51XCIsQXBwczpcIkNvbnRleHRNZW51XCIsU2Nyb2xsOlwiU2Nyb2xsTG9ja1wiLE1velByaW50YWJsZUtleTpcIlVuaWRlbnRpZmllZFwifSxxZj17ODpcIkJhY2tzcGFjZVwiLDk6XCJUYWJcIiwxMjpcIkNsZWFyXCIsMTM6XCJFbnRlclwiLDE2OlwiU2hpZnRcIiwxNzpcIkNvbnRyb2xcIiwxODpcIkFsdFwiLDE5OlwiUGF1c2VcIiwyMDpcIkNhcHNMb2NrXCIsMjc6XCJFc2NhcGVcIiwzMjpcIiBcIiwzMzpcIlBhZ2VVcFwiLDM0OlwiUGFnZURvd25cIiwzNTpcIkVuZFwiLDM2OlwiSG9tZVwiLDM3OlwiQXJyb3dMZWZ0XCIsMzg6XCJBcnJvd1VwXCIsMzk6XCJBcnJvd1JpZ2h0XCIsNDA6XCJBcnJvd0Rvd25cIiw0NTpcIkluc2VydFwiLDQ2OlwiRGVsZXRlXCIsMTEyOlwiRjFcIiwxMTM6XCJGMlwiLDExNDpcIkYzXCIsMTE1OlwiRjRcIixcbjExNjpcIkY1XCIsMTE3OlwiRjZcIiwxMTg6XCJGN1wiLDExOTpcIkY4XCIsMTIwOlwiRjlcIiwxMjE6XCJGMTBcIiwxMjI6XCJGMTFcIiwxMjM6XCJGMTJcIiwxNDQ6XCJOdW1Mb2NrXCIsMTQ1OlwiU2Nyb2xsTG9ja1wiLDIyNDpcIk1ldGFcIn0scmY9TmUuZXh0ZW5kKHtrZXk6ZnVuY3Rpb24oYSl7aWYoYS5rZXkpe3ZhciBiPXBmW2Eua2V5XXx8YS5rZXk7aWYoXCJVbmlkZW50aWZpZWRcIiE9PWIpcmV0dXJuIGJ9cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlPyhhPW9mKGEpLDEzPT09YT9cIkVudGVyXCI6U3RyaW5nLmZyb21DaGFyQ29kZShhKSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9xZlthLmtleUNvZGVdfHxcIlVuaWRlbnRpZmllZFwiOlwiXCJ9LGxvY2F0aW9uOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLHJlcGVhdDpudWxsLGxvY2FsZTpudWxsLGdldE1vZGlmaWVyU3RhdGU6UWUsY2hhckNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09XG5hLnR5cGU/b2YoYSk6MH0sa2V5Q29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfSx3aGljaDpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/b2YoYSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH19KSxzZj1WZS5leHRlbmQoe2RhdGFUcmFuc2ZlcjpudWxsfSksdGY9TmUuZXh0ZW5kKHt0b3VjaGVzOm51bGwsdGFyZ2V0VG91Y2hlczpudWxsLGNoYW5nZWRUb3VjaGVzOm51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6UWV9KSx1Zj1HLmV4dGVuZCh7cHJvcGVydHlOYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KSx2Zj1WZS5leHRlbmQoe2RlbHRhWDpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWFwiaW4gYT9hLmRlbHRhWDpcIndoZWVsRGVsdGFYXCJpblxuYT8tYS53aGVlbERlbHRhWDowfSxkZWx0YVk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVlcImluIGE/YS5kZWx0YVk6XCJ3aGVlbERlbHRhWVwiaW4gYT8tYS53aGVlbERlbHRhWTpcIndoZWVsRGVsdGFcImluIGE/LWEud2hlZWxEZWx0YTowfSxkZWx0YVo6bnVsbCxkZWx0YU1vZGU6bnVsbH0pLHdmPXtldmVudFR5cGVzOldjLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9WWMuZ2V0KGEpO2lmKCFlKXJldHVybiBudWxsO3N3aXRjaChhKXtjYXNlIFwia2V5cHJlc3NcIjppZigwPT09b2YoYykpcmV0dXJuIG51bGw7Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjphPXJmO2JyZWFrO2Nhc2UgXCJibHVyXCI6Y2FzZSBcImZvY3VzXCI6YT1uZjticmVhaztjYXNlIFwiY2xpY2tcIjppZigyPT09Yy5idXR0b24pcmV0dXJuIG51bGw7Y2FzZSBcImF1eGNsaWNrXCI6Y2FzZSBcImRibGNsaWNrXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJtb3VzZW1vdmVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJtb3VzZW91dFwiOmNhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwiY29udGV4dG1lbnVcIjphPVxuVmU7YnJlYWs7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6YT1zZjticmVhaztjYXNlIFwidG91Y2hjYW5jZWxcIjpjYXNlIFwidG91Y2hlbmRcIjpjYXNlIFwidG91Y2htb3ZlXCI6Y2FzZSBcInRvdWNoc3RhcnRcIjphPXRmO2JyZWFrO2Nhc2UgWGI6Y2FzZSBZYjpjYXNlIFpiOmE9bGY7YnJlYWs7Y2FzZSAkYjphPXVmO2JyZWFrO2Nhc2UgXCJzY3JvbGxcIjphPU5lO2JyZWFrO2Nhc2UgXCJ3aGVlbFwiOmE9dmY7YnJlYWs7Y2FzZSBcImNvcHlcIjpjYXNlIFwiY3V0XCI6Y2FzZSBcInBhc3RlXCI6YT1tZjticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcInBvaW50ZXJjYW5jZWxcIjpjYXNlIFwicG9pbnRlcmRvd25cIjpjYXNlIFwicG9pbnRlcm1vdmVcIjpjYXNlIFwicG9pbnRlcm91dFwiOmNhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVydXBcIjphPVxuV2U7YnJlYWs7ZGVmYXVsdDphPUd9Yj1hLmdldFBvb2xlZChlLGIsYyxkKTtYZChiKTtyZXR1cm4gYn19O2lmKHBhKXRocm93IEVycm9yKHUoMTAxKSk7cGE9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoXCJSZXNwb25kZXJFdmVudFBsdWdpbiBTaW1wbGVFdmVudFBsdWdpbiBFbnRlckxlYXZlRXZlbnRQbHVnaW4gQ2hhbmdlRXZlbnRQbHVnaW4gU2VsZWN0RXZlbnRQbHVnaW4gQmVmb3JlSW5wdXRFdmVudFBsdWdpblwiLnNwbGl0KFwiIFwiKSk7cmEoKTt2YXIgeGY9TmM7bGE9UWQ7bWE9eGY7bmE9UGQ7eGEoe1NpbXBsZUV2ZW50UGx1Z2luOndmLEVudGVyTGVhdmVFdmVudFBsdWdpbjpZZSxDaGFuZ2VFdmVudFBsdWdpbjpNZSxTZWxlY3RFdmVudFBsdWdpbjprZixCZWZvcmVJbnB1dEV2ZW50UGx1Z2luOnZlfSk7dmFyIHlmPVtdLHpmPS0xO2Z1bmN0aW9uIEgoYSl7MD56Znx8KGEuY3VycmVudD15Zlt6Zl0seWZbemZdPW51bGwsemYtLSl9XG5mdW5jdGlvbiBJKGEsYil7emYrKzt5Zlt6Zl09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBBZj17fSxKPXtjdXJyZW50OkFmfSxLPXtjdXJyZW50OiExfSxCZj1BZjtmdW5jdGlvbiBDZihhLGIpe3ZhciBjPWEudHlwZS5jb250ZXh0VHlwZXM7aWYoIWMpcmV0dXJuIEFmO3ZhciBkPWEuc3RhdGVOb2RlO2lmKGQmJmQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD09PWIpcmV0dXJuIGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ7dmFyIGU9e30sZjtmb3IoZiBpbiBjKWVbZl09YltmXTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9YixhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWUpO3JldHVybiBlfWZ1bmN0aW9uIEwoYSl7YT1hLmNoaWxkQ29udGV4dFR5cGVzO3JldHVybiBudWxsIT09YSYmdm9pZCAwIT09YX1cbmZ1bmN0aW9uIERmKCl7SChLKTtIKEopfWZ1bmN0aW9uIEVmKGEsYixjKXtpZihKLmN1cnJlbnQhPT1BZil0aHJvdyBFcnJvcih1KDE2OCkpO0koSixiKTtJKEssYyl9ZnVuY3Rpb24gRmYoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2E9Yi5jaGlsZENvbnRleHRUeXBlcztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5nZXRDaGlsZENvbnRleHQpcmV0dXJuIGM7ZD1kLmdldENoaWxkQ29udGV4dCgpO2Zvcih2YXIgZSBpbiBkKWlmKCEoZSBpbiBhKSl0aHJvdyBFcnJvcih1KDEwOCxwYihiKXx8XCJVbmtub3duXCIsZSkpO3JldHVybiBuKHt9LGMse30sZCl9ZnVuY3Rpb24gR2YoYSl7YT0oYT1hLnN0YXRlTm9kZSkmJmEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fEFmO0JmPUouY3VycmVudDtJKEosYSk7SShLLEsuY3VycmVudCk7cmV0dXJuITB9XG5mdW5jdGlvbiBIZihhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoIWQpdGhyb3cgRXJyb3IodSgxNjkpKTtjPyhhPUZmKGEsYixCZiksZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dD1hLEgoSyksSChKKSxJKEosYSkpOkgoSyk7SShLLGMpfVxudmFyIElmPXIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5LEpmPXIudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayxLZj1yLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrLExmPXIudW5zdGFibGVfcmVxdWVzdFBhaW50LE1mPXIudW5zdGFibGVfbm93LE5mPXIudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwsT2Y9ci51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSxQZj1yLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LFFmPXIudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksUmY9ci51bnN0YWJsZV9Mb3dQcmlvcml0eSxTZj1yLnVuc3RhYmxlX0lkbGVQcmlvcml0eSxUZj17fSxVZj1yLnVuc3RhYmxlX3Nob3VsZFlpZWxkLFZmPXZvaWQgMCE9PUxmP0xmOmZ1bmN0aW9uKCl7fSxXZj1udWxsLFhmPW51bGwsWWY9ITEsWmY9TWYoKSwkZj0xRTQ+WmY/TWY6ZnVuY3Rpb24oKXtyZXR1cm4gTWYoKS1aZn07XG5mdW5jdGlvbiBhZygpe3N3aXRjaChOZigpKXtjYXNlIE9mOnJldHVybiA5OTtjYXNlIFBmOnJldHVybiA5ODtjYXNlIFFmOnJldHVybiA5NztjYXNlIFJmOnJldHVybiA5NjtjYXNlIFNmOnJldHVybiA5NTtkZWZhdWx0OnRocm93IEVycm9yKHUoMzMyKSk7fX1mdW5jdGlvbiBiZyhhKXtzd2l0Y2goYSl7Y2FzZSA5OTpyZXR1cm4gT2Y7Y2FzZSA5ODpyZXR1cm4gUGY7Y2FzZSA5NzpyZXR1cm4gUWY7Y2FzZSA5NjpyZXR1cm4gUmY7Y2FzZSA5NTpyZXR1cm4gU2Y7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDMzMikpO319ZnVuY3Rpb24gY2coYSxiKXthPWJnKGEpO3JldHVybiBJZihhLGIpfWZ1bmN0aW9uIGRnKGEsYixjKXthPWJnKGEpO3JldHVybiBKZihhLGIsYyl9ZnVuY3Rpb24gZWcoYSl7bnVsbD09PVdmPyhXZj1bYV0sWGY9SmYoT2YsZmcpKTpXZi5wdXNoKGEpO3JldHVybiBUZn1mdW5jdGlvbiBnZygpe2lmKG51bGwhPT1YZil7dmFyIGE9WGY7WGY9bnVsbDtLZihhKX1mZygpfVxuZnVuY3Rpb24gZmcoKXtpZighWWYmJm51bGwhPT1XZil7WWY9ITA7dmFyIGE9MDt0cnl7dmFyIGI9V2Y7Y2coOTksZnVuY3Rpb24oKXtmb3IoO2E8Yi5sZW5ndGg7YSsrKXt2YXIgYz1iW2FdO2RvIGM9YyghMCk7d2hpbGUobnVsbCE9PWMpfX0pO1dmPW51bGx9Y2F0Y2goYyl7dGhyb3cgbnVsbCE9PVdmJiYoV2Y9V2Yuc2xpY2UoYSsxKSksSmYoT2YsZ2cpLGM7fWZpbmFsbHl7WWY9ITF9fX1mdW5jdGlvbiBoZyhhLGIsYyl7Yy89MTA7cmV0dXJuIDEwNzM3NDE4MjEtKCgoMTA3Mzc0MTgyMS1hK2IvMTApL2N8MCkrMSkqY31mdW5jdGlvbiBpZyhhLGIpe2lmKGEmJmEuZGVmYXVsdFByb3BzKXtiPW4oe30sYik7YT1hLmRlZmF1bHRQcm9wcztmb3IodmFyIGMgaW4gYSl2b2lkIDA9PT1iW2NdJiYoYltjXT1hW2NdKX1yZXR1cm4gYn12YXIgamc9e2N1cnJlbnQ6bnVsbH0sa2c9bnVsbCxsZz1udWxsLG1nPW51bGw7ZnVuY3Rpb24gbmcoKXttZz1sZz1rZz1udWxsfVxuZnVuY3Rpb24gb2coYSl7dmFyIGI9amcuY3VycmVudDtIKGpnKTthLnR5cGUuX2NvbnRleHQuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIHBnKGEsYil7Zm9yKDtudWxsIT09YTspe3ZhciBjPWEuYWx0ZXJuYXRlO2lmKGEuY2hpbGRFeHBpcmF0aW9uVGltZTxiKWEuY2hpbGRFeHBpcmF0aW9uVGltZT1iLG51bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGMuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtlbHNlIGlmKG51bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiljLmNoaWxkRXhwaXJhdGlvblRpbWU9YjtlbHNlIGJyZWFrO2E9YS5yZXR1cm59fWZ1bmN0aW9uIHFnKGEsYil7a2c9YTttZz1sZz1udWxsO2E9YS5kZXBlbmRlbmNpZXM7bnVsbCE9PWEmJm51bGwhPT1hLmZpcnN0Q29udGV4dCYmKGEuZXhwaXJhdGlvblRpbWU+PWImJihyZz0hMCksYS5maXJzdENvbnRleHQ9bnVsbCl9XG5mdW5jdGlvbiBzZyhhLGIpe2lmKG1nIT09YSYmITEhPT1iJiYwIT09Yil7aWYoXCJudW1iZXJcIiE9PXR5cGVvZiBifHwxMDczNzQxODIzPT09YiltZz1hLGI9MTA3Mzc0MTgyMztiPXtjb250ZXh0OmEsb2JzZXJ2ZWRCaXRzOmIsbmV4dDpudWxsfTtpZihudWxsPT09bGcpe2lmKG51bGw9PT1rZyl0aHJvdyBFcnJvcih1KDMwOCkpO2xnPWI7a2cuZGVwZW5kZW5jaWVzPXtleHBpcmF0aW9uVGltZTowLGZpcnN0Q29udGV4dDpiLHJlc3BvbmRlcnM6bnVsbH19ZWxzZSBsZz1sZy5uZXh0PWJ9cmV0dXJuIGEuX2N1cnJlbnRWYWx1ZX12YXIgdGc9ITE7ZnVuY3Rpb24gdWcoYSl7YS51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEubWVtb2l6ZWRTdGF0ZSxiYXNlUXVldWU6bnVsbCxzaGFyZWQ6e3BlbmRpbmc6bnVsbH0sZWZmZWN0czpudWxsfX1cbmZ1bmN0aW9uIHZnKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9PT1hJiYoYi51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEuYmFzZVN0YXRlLGJhc2VRdWV1ZTphLmJhc2VRdWV1ZSxzaGFyZWQ6YS5zaGFyZWQsZWZmZWN0czphLmVmZmVjdHN9KX1mdW5jdGlvbiB3ZyhhLGIpe2E9e2V4cGlyYXRpb25UaW1lOmEsc3VzcGVuc2VDb25maWc6Yix0YWc6MCxwYXlsb2FkOm51bGwsY2FsbGJhY2s6bnVsbCxuZXh0Om51bGx9O3JldHVybiBhLm5leHQ9YX1mdW5jdGlvbiB4ZyhhLGIpe2E9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09YSl7YT1hLnNoYXJlZDt2YXIgYz1hLnBlbmRpbmc7bnVsbD09PWM/Yi5uZXh0PWI6KGIubmV4dD1jLm5leHQsYy5uZXh0PWIpO2EucGVuZGluZz1ifX1cbmZ1bmN0aW9uIHlnKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJnZnKGMsYSk7YT1hLnVwZGF0ZVF1ZXVlO2M9YS5iYXNlUXVldWU7bnVsbD09PWM/KGEuYmFzZVF1ZXVlPWIubmV4dD1iLGIubmV4dD1iKTooYi5uZXh0PWMubmV4dCxjLm5leHQ9Yil9XG5mdW5jdGlvbiB6ZyhhLGIsYyxkKXt2YXIgZT1hLnVwZGF0ZVF1ZXVlO3RnPSExO3ZhciBmPWUuYmFzZVF1ZXVlLGc9ZS5zaGFyZWQucGVuZGluZztpZihudWxsIT09Zyl7aWYobnVsbCE9PWYpe3ZhciBoPWYubmV4dDtmLm5leHQ9Zy5uZXh0O2cubmV4dD1ofWY9ZztlLnNoYXJlZC5wZW5kaW5nPW51bGw7aD1hLmFsdGVybmF0ZTtudWxsIT09aCYmKGg9aC51cGRhdGVRdWV1ZSxudWxsIT09aCYmKGguYmFzZVF1ZXVlPWcpKX1pZihudWxsIT09Zil7aD1mLm5leHQ7dmFyIGs9ZS5iYXNlU3RhdGUsbD0wLG09bnVsbCxwPW51bGwseD1udWxsO2lmKG51bGwhPT1oKXt2YXIgej1oO2Rve2c9ei5leHBpcmF0aW9uVGltZTtpZihnPGQpe3ZhciBjYT17ZXhwaXJhdGlvblRpbWU6ei5leHBpcmF0aW9uVGltZSxzdXNwZW5zZUNvbmZpZzp6LnN1c3BlbnNlQ29uZmlnLHRhZzp6LnRhZyxwYXlsb2FkOnoucGF5bG9hZCxjYWxsYmFjazp6LmNhbGxiYWNrLG5leHQ6bnVsbH07bnVsbD09PXg/KHA9eD1cbmNhLG09ayk6eD14Lm5leHQ9Y2E7Zz5sJiYobD1nKX1lbHNle251bGwhPT14JiYoeD14Lm5leHQ9e2V4cGlyYXRpb25UaW1lOjEwNzM3NDE4MjMsc3VzcGVuc2VDb25maWc6ei5zdXNwZW5zZUNvbmZpZyx0YWc6ei50YWcscGF5bG9hZDp6LnBheWxvYWQsY2FsbGJhY2s6ei5jYWxsYmFjayxuZXh0Om51bGx9KTtBZyhnLHouc3VzcGVuc2VDb25maWcpO2E6e3ZhciBEPWEsdD16O2c9YjtjYT1jO3N3aXRjaCh0LnRhZyl7Y2FzZSAxOkQ9dC5wYXlsb2FkO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBEKXtrPUQuY2FsbChjYSxrLGcpO2JyZWFrIGF9az1EO2JyZWFrIGE7Y2FzZSAzOkQuZWZmZWN0VGFnPUQuZWZmZWN0VGFnJi00MDk3fDY0O2Nhc2UgMDpEPXQucGF5bG9hZDtnPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBEP0QuY2FsbChjYSxrLGcpOkQ7aWYobnVsbD09PWd8fHZvaWQgMD09PWcpYnJlYWsgYTtrPW4oe30sayxnKTticmVhayBhO2Nhc2UgMjp0Zz0hMH19bnVsbCE9PXouY2FsbGJhY2smJlxuKGEuZWZmZWN0VGFnfD0zMixnPWUuZWZmZWN0cyxudWxsPT09Zz9lLmVmZmVjdHM9W3pdOmcucHVzaCh6KSl9ej16Lm5leHQ7aWYobnVsbD09PXp8fHo9PT1oKWlmKGc9ZS5zaGFyZWQucGVuZGluZyxudWxsPT09ZylicmVhaztlbHNlIHo9Zi5uZXh0PWcubmV4dCxnLm5leHQ9aCxlLmJhc2VRdWV1ZT1mPWcsZS5zaGFyZWQucGVuZGluZz1udWxsfXdoaWxlKDEpfW51bGw9PT14P209azp4Lm5leHQ9cDtlLmJhc2VTdGF0ZT1tO2UuYmFzZVF1ZXVlPXg7QmcobCk7YS5leHBpcmF0aW9uVGltZT1sO2EubWVtb2l6ZWRTdGF0ZT1rfX1cbmZ1bmN0aW9uIENnKGEsYixjKXthPWIuZWZmZWN0cztiLmVmZmVjdHM9bnVsbDtpZihudWxsIT09YSlmb3IoYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgZD1hW2JdLGU9ZC5jYWxsYmFjaztpZihudWxsIT09ZSl7ZC5jYWxsYmFjaz1udWxsO2Q9ZTtlPWM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQpdGhyb3cgRXJyb3IodSgxOTEsZCkpO2QuY2FsbChlKX19fXZhciBEZz1XYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZyxFZz0obmV3IGFhLkNvbXBvbmVudCkucmVmcztmdW5jdGlvbiBGZyhhLGIsYyxkKXtiPWEubWVtb2l6ZWRTdGF0ZTtjPWMoZCxiKTtjPW51bGw9PT1jfHx2b2lkIDA9PT1jP2I6bih7fSxiLGMpO2EubWVtb2l6ZWRTdGF0ZT1jOzA9PT1hLmV4cGlyYXRpb25UaW1lJiYoYS51cGRhdGVRdWV1ZS5iYXNlU3RhdGU9Yyl9XG52YXIgSmc9e2lzTW91bnRlZDpmdW5jdGlvbihhKXtyZXR1cm4oYT1hLl9yZWFjdEludGVybmFsRmliZXIpP2RjKGEpPT09YTohMX0sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1HZygpLGU9RGcuc3VzcGVuc2U7ZD1IZyhkLGEsZSk7ZT13ZyhkLGUpO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTt4ZyhhLGUpO0lnKGEsZCl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPUdnKCksZT1EZy5zdXNwZW5zZTtkPUhnKGQsYSxlKTtlPXdnKGQsZSk7ZS50YWc9MTtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7eGcoYSxlKTtJZyhhLGQpfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oYSxiKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgYz1HZygpLGQ9RGcuc3VzcGVuc2U7XG5jPUhnKGMsYSxkKTtkPXdnKGMsZCk7ZC50YWc9Mjt2b2lkIDAhPT1iJiZudWxsIT09YiYmKGQuY2FsbGJhY2s9Yik7eGcoYSxkKTtJZyhhLGMpfX07ZnVuY3Rpb24gS2coYSxiLGMsZCxlLGYsZyl7YT1hLnN0YXRlTm9kZTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5zaG91bGRDb21wb25lbnRVcGRhdGU/YS5zaG91bGRDb21wb25lbnRVcGRhdGUoZCxmLGcpOmIucHJvdG90eXBlJiZiLnByb3RvdHlwZS5pc1B1cmVSZWFjdENvbXBvbmVudD8hYmYoYyxkKXx8IWJmKGUsZik6ITB9XG5mdW5jdGlvbiBMZyhhLGIsYyl7dmFyIGQ9ITEsZT1BZjt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/Zj1zZyhmKTooZT1MKGIpP0JmOkouY3VycmVudCxkPWIuY29udGV4dFR5cGVzLGY9KGQ9bnVsbCE9PWQmJnZvaWQgMCE9PWQpP0NmKGEsZSk6QWYpO2I9bmV3IGIoYyxmKTthLm1lbW9pemVkU3RhdGU9bnVsbCE9PWIuc3RhdGUmJnZvaWQgMCE9PWIuc3RhdGU/Yi5zdGF0ZTpudWxsO2IudXBkYXRlcj1KZzthLnN0YXRlTm9kZT1iO2IuX3JlYWN0SW50ZXJuYWxGaWJlcj1hO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1lLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9Zik7cmV0dXJuIGJ9XG5mdW5jdGlvbiBNZyhhLGIsYyxkKXthPWIuc3RhdGU7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtiLnN0YXRlIT09YSYmSmcuZW5xdWV1ZVJlcGxhY2VTdGF0ZShiLGIuc3RhdGUsbnVsbCl9XG5mdW5jdGlvbiBOZyhhLGIsYyxkKXt2YXIgZT1hLnN0YXRlTm9kZTtlLnByb3BzPWM7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7ZS5yZWZzPUVnO3VnKGEpO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9lLmNvbnRleHQ9c2coZik6KGY9TChiKT9CZjpKLmN1cnJlbnQsZS5jb250ZXh0PUNmKGEsZikpO3pnKGEsYyxlLGQpO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2Y9Yi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGYmJihGZyhhLGIsZixjKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50fHxcbihiPWUuc3RhdGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50JiZlLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpLGIhPT1lLnN0YXRlJiZKZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGUsZS5zdGF0ZSxudWxsKSx6ZyhhLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50RGlkTW91bnQmJihhLmVmZmVjdFRhZ3w9NCl9dmFyIE9nPUFycmF5LmlzQXJyYXk7XG5mdW5jdGlvbiBQZyhhLGIsYyl7YT1jLnJlZjtpZihudWxsIT09YSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJlwib2JqZWN0XCIhPT10eXBlb2YgYSl7aWYoYy5fb3duZXIpe2M9Yy5fb3duZXI7aWYoYyl7aWYoMSE9PWMudGFnKXRocm93IEVycm9yKHUoMzA5KSk7dmFyIGQ9Yy5zdGF0ZU5vZGV9aWYoIWQpdGhyb3cgRXJyb3IodSgxNDcsYSkpO3ZhciBlPVwiXCIrYTtpZihudWxsIT09YiYmbnVsbCE9PWIucmVmJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5yZWYmJmIucmVmLl9zdHJpbmdSZWY9PT1lKXJldHVybiBiLnJlZjtiPWZ1bmN0aW9uKGEpe3ZhciBiPWQucmVmcztiPT09RWcmJihiPWQucmVmcz17fSk7bnVsbD09PWE/ZGVsZXRlIGJbZV06YltlXT1hfTtiLl9zdHJpbmdSZWY9ZTtyZXR1cm4gYn1pZihcInN0cmluZ1wiIT09dHlwZW9mIGEpdGhyb3cgRXJyb3IodSgyODQpKTtpZighYy5fb3duZXIpdGhyb3cgRXJyb3IodSgyOTAsYSkpO31yZXR1cm4gYX1cbmZ1bmN0aW9uIFFnKGEsYil7aWYoXCJ0ZXh0YXJlYVwiIT09YS50eXBlKXRocm93IEVycm9yKHUoMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChiKT9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGIpLmpvaW4oXCIsIFwiKStcIn1cIjpiLFwiXCIpKTt9XG5mdW5jdGlvbiBSZyhhKXtmdW5jdGlvbiBiKGIsYyl7aWYoYSl7dmFyIGQ9Yi5sYXN0RWZmZWN0O251bGwhPT1kPyhkLm5leHRFZmZlY3Q9YyxiLmxhc3RFZmZlY3Q9Yyk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YztjLm5leHRFZmZlY3Q9bnVsbDtjLmVmZmVjdFRhZz04fX1mdW5jdGlvbiBjKGMsZCl7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKDtudWxsIT09ZDspYihjLGQpLGQ9ZC5zaWJsaW5nO3JldHVybiBudWxsfWZ1bmN0aW9uIGQoYSxiKXtmb3IoYT1uZXcgTWFwO251bGwhPT1iOyludWxsIT09Yi5rZXk/YS5zZXQoYi5rZXksYik6YS5zZXQoYi5pbmRleCxiKSxiPWIuc2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBlKGEsYil7YT1TZyhhLGIpO2EuaW5kZXg9MDthLnNpYmxpbmc9bnVsbDtyZXR1cm4gYX1mdW5jdGlvbiBmKGIsYyxkKXtiLmluZGV4PWQ7aWYoIWEpcmV0dXJuIGM7ZD1iLmFsdGVybmF0ZTtpZihudWxsIT09ZClyZXR1cm4gZD1kLmluZGV4LGQ8Yz8oYi5lZmZlY3RUYWc9XG4yLGMpOmQ7Yi5lZmZlY3RUYWc9MjtyZXR1cm4gY31mdW5jdGlvbiBnKGIpe2EmJm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZWZmZWN0VGFnPTIpO3JldHVybiBifWZ1bmN0aW9uIGgoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDYhPT1iLnRhZylyZXR1cm4gYj1UZyhjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYyk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBrKGEsYixjLGQpe2lmKG51bGwhPT1iJiZiLmVsZW1lbnRUeXBlPT09Yy50eXBlKXJldHVybiBkPWUoYixjLnByb3BzKSxkLnJlZj1QZyhhLGIsYyksZC5yZXR1cm49YSxkO2Q9VWcoYy50eXBlLGMua2V5LGMucHJvcHMsbnVsbCxhLm1vZGUsZCk7ZC5yZWY9UGcoYSxiLGMpO2QucmV0dXJuPWE7cmV0dXJuIGR9ZnVuY3Rpb24gbChhLGIsYyxkKXtpZihudWxsPT09Ynx8NCE9PWIudGFnfHxiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvIT09Yy5jb250YWluZXJJbmZvfHxiLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbiE9PVxuYy5pbXBsZW1lbnRhdGlvbilyZXR1cm4gYj1WZyhjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYy5jaGlsZHJlbnx8W10pO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gbShhLGIsYyxkLGYpe2lmKG51bGw9PT1ifHw3IT09Yi50YWcpcmV0dXJuIGI9V2coYyxhLm1vZGUsZCxmKSxiLnJldHVybj1hLGI7Yj1lKGIsYyk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBwKGEsYixjKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGJ8fFwibnVtYmVyXCI9PT10eXBlb2YgYilyZXR1cm4gYj1UZyhcIlwiK2IsYS5tb2RlLGMpLGIucmV0dXJuPWEsYjtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXtzd2l0Y2goYi4kJHR5cGVvZil7Y2FzZSBaYTpyZXR1cm4gYz1VZyhiLnR5cGUsYi5rZXksYi5wcm9wcyxudWxsLGEubW9kZSxjKSxjLnJlZj1QZyhhLG51bGwsYiksYy5yZXR1cm49YSxjO2Nhc2UgJGE6cmV0dXJuIGI9VmcoYixhLm1vZGUsYyksYi5yZXR1cm49YSxifWlmKE9nKGIpfHxcbm5iKGIpKXJldHVybiBiPVdnKGIsYS5tb2RlLGMsbnVsbCksYi5yZXR1cm49YSxiO1FnKGEsYil9cmV0dXJuIG51bGx9ZnVuY3Rpb24geChhLGIsYyxkKXt2YXIgZT1udWxsIT09Yj9iLmtleTpudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgY3x8XCJudW1iZXJcIj09PXR5cGVvZiBjKXJldHVybiBudWxsIT09ZT9udWxsOmgoYSxiLFwiXCIrYyxkKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXtzd2l0Y2goYy4kJHR5cGVvZil7Y2FzZSBaYTpyZXR1cm4gYy5rZXk9PT1lP2MudHlwZT09PWFiP20oYSxiLGMucHJvcHMuY2hpbGRyZW4sZCxlKTprKGEsYixjLGQpOm51bGw7Y2FzZSAkYTpyZXR1cm4gYy5rZXk9PT1lP2woYSxiLGMsZCk6bnVsbH1pZihPZyhjKXx8bmIoYykpcmV0dXJuIG51bGwhPT1lP251bGw6bShhLGIsYyxkLG51bGwpO1FnKGEsYyl9cmV0dXJuIG51bGx9ZnVuY3Rpb24geihhLGIsYyxkLGUpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgZHx8XCJudW1iZXJcIj09PXR5cGVvZiBkKXJldHVybiBhPVxuYS5nZXQoYyl8fG51bGwsaChiLGEsXCJcIitkLGUpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQpe3N3aXRjaChkLiQkdHlwZW9mKXtjYXNlIFphOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxkLnR5cGU9PT1hYj9tKGIsYSxkLnByb3BzLmNoaWxkcmVuLGUsZC5rZXkpOmsoYixhLGQsZSk7Y2FzZSAkYTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsbChiLGEsZCxlKX1pZihPZyhkKXx8bmIoZCkpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsbShiLGEsZCxlLG51bGwpO1FnKGIsZCl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gY2EoZSxnLGgsayl7Zm9yKHZhciBsPW51bGwsdD1udWxsLG09Zyx5PWc9MCxBPW51bGw7bnVsbCE9PW0mJnk8aC5sZW5ndGg7eSsrKXttLmluZGV4Pnk/KEE9bSxtPW51bGwpOkE9bS5zaWJsaW5nO3ZhciBxPXgoZSxtLGhbeV0sayk7aWYobnVsbD09PXEpe251bGw9PT1tJiYobT1BKTticmVha31hJiZcbm0mJm51bGw9PT1xLmFsdGVybmF0ZSYmYihlLG0pO2c9ZihxLGcseSk7bnVsbD09PXQ/bD1xOnQuc2libGluZz1xO3Q9cTttPUF9aWYoeT09PWgubGVuZ3RoKXJldHVybiBjKGUsbSksbDtpZihudWxsPT09bSl7Zm9yKDt5PGgubGVuZ3RoO3krKyltPXAoZSxoW3ldLGspLG51bGwhPT1tJiYoZz1mKG0sZyx5KSxudWxsPT09dD9sPW06dC5zaWJsaW5nPW0sdD1tKTtyZXR1cm4gbH1mb3IobT1kKGUsbSk7eTxoLmxlbmd0aDt5KyspQT16KG0sZSx5LGhbeV0sayksbnVsbCE9PUEmJihhJiZudWxsIT09QS5hbHRlcm5hdGUmJm0uZGVsZXRlKG51bGw9PT1BLmtleT95OkEua2V5KSxnPWYoQSxnLHkpLG51bGw9PT10P2w9QTp0LnNpYmxpbmc9QSx0PUEpO2EmJm0uZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9ZnVuY3Rpb24gRChlLGcsaCxsKXt2YXIgaz1uYihoKTtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2Ygayl0aHJvdyBFcnJvcih1KDE1MCkpO2g9ay5jYWxsKGgpO1xuaWYobnVsbD09aCl0aHJvdyBFcnJvcih1KDE1MSkpO2Zvcih2YXIgbT1rPW51bGwsdD1nLHk9Zz0wLEE9bnVsbCxxPWgubmV4dCgpO251bGwhPT10JiYhcS5kb25lO3krKyxxPWgubmV4dCgpKXt0LmluZGV4Pnk/KEE9dCx0PW51bGwpOkE9dC5zaWJsaW5nO3ZhciBEPXgoZSx0LHEudmFsdWUsbCk7aWYobnVsbD09PUQpe251bGw9PT10JiYodD1BKTticmVha31hJiZ0JiZudWxsPT09RC5hbHRlcm5hdGUmJmIoZSx0KTtnPWYoRCxnLHkpO251bGw9PT1tP2s9RDptLnNpYmxpbmc9RDttPUQ7dD1BfWlmKHEuZG9uZSlyZXR1cm4gYyhlLHQpLGs7aWYobnVsbD09PXQpe2Zvcig7IXEuZG9uZTt5KysscT1oLm5leHQoKSlxPXAoZSxxLnZhbHVlLGwpLG51bGwhPT1xJiYoZz1mKHEsZyx5KSxudWxsPT09bT9rPXE6bS5zaWJsaW5nPXEsbT1xKTtyZXR1cm4ga31mb3IodD1kKGUsdCk7IXEuZG9uZTt5KysscT1oLm5leHQoKSlxPXoodCxlLHkscS52YWx1ZSxsKSxudWxsIT09cSYmKGEmJm51bGwhPT1cbnEuYWx0ZXJuYXRlJiZ0LmRlbGV0ZShudWxsPT09cS5rZXk/eTpxLmtleSksZz1mKHEsZyx5KSxudWxsPT09bT9rPXE6bS5zaWJsaW5nPXEsbT1xKTthJiZ0LmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBrfXJldHVybiBmdW5jdGlvbihhLGQsZixoKXt2YXIgaz1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mJiZmLnR5cGU9PT1hYiYmbnVsbD09PWYua2V5O2smJihmPWYucHJvcHMuY2hpbGRyZW4pO3ZhciBsPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY7aWYobClzd2l0Y2goZi4kJHR5cGVvZil7Y2FzZSBaYTphOntsPWYua2V5O2ZvcihrPWQ7bnVsbCE9PWs7KXtpZihrLmtleT09PWwpe3N3aXRjaChrLnRhZyl7Y2FzZSA3OmlmKGYudHlwZT09PWFiKXtjKGEsay5zaWJsaW5nKTtkPWUoayxmLnByb3BzLmNoaWxkcmVuKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWJyZWFrO2RlZmF1bHQ6aWYoay5lbGVtZW50VHlwZT09PWYudHlwZSl7YyhhLFxuay5zaWJsaW5nKTtkPWUoayxmLnByb3BzKTtkLnJlZj1QZyhhLGssZik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX19YyhhLGspO2JyZWFrfWVsc2UgYihhLGspO2s9ay5zaWJsaW5nfWYudHlwZT09PWFiPyhkPVdnKGYucHJvcHMuY2hpbGRyZW4sYS5tb2RlLGgsZi5rZXkpLGQucmV0dXJuPWEsYT1kKTooaD1VZyhmLnR5cGUsZi5rZXksZi5wcm9wcyxudWxsLGEubW9kZSxoKSxoLnJlZj1QZyhhLGQsZiksaC5yZXR1cm49YSxhPWgpfXJldHVybiBnKGEpO2Nhc2UgJGE6YTp7Zm9yKGs9Zi5rZXk7bnVsbCE9PWQ7KXtpZihkLmtleT09PWspaWYoND09PWQudGFnJiZkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvPT09Zi5jb250YWluZXJJbmZvJiZkLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbj09PWYuaW1wbGVtZW50YXRpb24pe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLGYuY2hpbGRyZW58fFtdKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGQpO2JyZWFrfWVsc2UgYihhLGQpO2Q9XG5kLnNpYmxpbmd9ZD1WZyhmLGEubW9kZSxoKTtkLnJldHVybj1hO2E9ZH1yZXR1cm4gZyhhKX1pZihcInN0cmluZ1wiPT09dHlwZW9mIGZ8fFwibnVtYmVyXCI9PT10eXBlb2YgZilyZXR1cm4gZj1cIlwiK2YsbnVsbCE9PWQmJjY9PT1kLnRhZz8oYyhhLGQuc2libGluZyksZD1lKGQsZiksZC5yZXR1cm49YSxhPWQpOihjKGEsZCksZD1UZyhmLGEubW9kZSxoKSxkLnJldHVybj1hLGE9ZCksZyhhKTtpZihPZyhmKSlyZXR1cm4gY2EoYSxkLGYsaCk7aWYobmIoZikpcmV0dXJuIEQoYSxkLGYsaCk7bCYmUWcoYSxmKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYmJiFrKXN3aXRjaChhLnRhZyl7Y2FzZSAxOmNhc2UgMDp0aHJvdyBhPWEudHlwZSxFcnJvcih1KDE1MixhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fFwiQ29tcG9uZW50XCIpKTt9cmV0dXJuIGMoYSxkKX19dmFyIFhnPVJnKCEwKSxZZz1SZyghMSksWmc9e30sJGc9e2N1cnJlbnQ6Wmd9LGFoPXtjdXJyZW50OlpnfSxiaD17Y3VycmVudDpaZ307XG5mdW5jdGlvbiBjaChhKXtpZihhPT09WmcpdGhyb3cgRXJyb3IodSgxNzQpKTtyZXR1cm4gYX1mdW5jdGlvbiBkaChhLGIpe0koYmgsYik7SShhaCxhKTtJKCRnLFpnKTthPWIubm9kZVR5cGU7c3dpdGNoKGEpe2Nhc2UgOTpjYXNlIDExOmI9KGI9Yi5kb2N1bWVudEVsZW1lbnQpP2IubmFtZXNwYWNlVVJJOk9iKG51bGwsXCJcIik7YnJlYWs7ZGVmYXVsdDphPTg9PT1hP2IucGFyZW50Tm9kZTpiLGI9YS5uYW1lc3BhY2VVUkl8fG51bGwsYT1hLnRhZ05hbWUsYj1PYihiLGEpfUgoJGcpO0koJGcsYil9ZnVuY3Rpb24gZWgoKXtIKCRnKTtIKGFoKTtIKGJoKX1mdW5jdGlvbiBmaChhKXtjaChiaC5jdXJyZW50KTt2YXIgYj1jaCgkZy5jdXJyZW50KTt2YXIgYz1PYihiLGEudHlwZSk7YiE9PWMmJihJKGFoLGEpLEkoJGcsYykpfWZ1bmN0aW9uIGdoKGEpe2FoLmN1cnJlbnQ9PT1hJiYoSCgkZyksSChhaCkpfXZhciBNPXtjdXJyZW50OjB9O1xuZnVuY3Rpb24gaGgoYSl7Zm9yKHZhciBiPWE7bnVsbCE9PWI7KXtpZigxMz09PWIudGFnKXt2YXIgYz1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWMmJihjPWMuZGVoeWRyYXRlZCxudWxsPT09Y3x8Yy5kYXRhPT09QmR8fGMuZGF0YT09PUNkKSlyZXR1cm4gYn1lbHNlIGlmKDE5PT09Yi50YWcmJnZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5yZXZlYWxPcmRlcil7aWYoMCE9PShiLmVmZmVjdFRhZyY2NCkpcmV0dXJuIGJ9ZWxzZSBpZihudWxsIT09Yi5jaGlsZCl7Yi5jaGlsZC5yZXR1cm49YjtiPWIuY2hpbGQ7Y29udGludWV9aWYoYj09PWEpYnJlYWs7Zm9yKDtudWxsPT09Yi5zaWJsaW5nOyl7aWYobnVsbD09PWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfXJldHVybiBudWxsfWZ1bmN0aW9uIGloKGEsYil7cmV0dXJue3Jlc3BvbmRlcjphLHByb3BzOmJ9fVxudmFyIGpoPVdhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsa2g9V2EuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcsbGg9MCxOPW51bGwsTz1udWxsLFA9bnVsbCxtaD0hMTtmdW5jdGlvbiBRKCl7dGhyb3cgRXJyb3IodSgzMjEpKTt9ZnVuY3Rpb24gbmgoYSxiKXtpZihudWxsPT09YilyZXR1cm4hMTtmb3IodmFyIGM9MDtjPGIubGVuZ3RoJiZjPGEubGVuZ3RoO2MrKylpZighJGUoYVtjXSxiW2NdKSlyZXR1cm4hMTtyZXR1cm4hMH1cbmZ1bmN0aW9uIG9oKGEsYixjLGQsZSxmKXtsaD1mO049YjtiLm1lbW9pemVkU3RhdGU9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7Yi5leHBpcmF0aW9uVGltZT0wO2poLmN1cnJlbnQ9bnVsbD09PWF8fG51bGw9PT1hLm1lbW9pemVkU3RhdGU/cGg6cWg7YT1jKGQsZSk7aWYoYi5leHBpcmF0aW9uVGltZT09PWxoKXtmPTA7ZG97Yi5leHBpcmF0aW9uVGltZT0wO2lmKCEoMjU+ZikpdGhyb3cgRXJyb3IodSgzMDEpKTtmKz0xO1A9Tz1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtqaC5jdXJyZW50PXJoO2E9YyhkLGUpfXdoaWxlKGIuZXhwaXJhdGlvblRpbWU9PT1saCl9amguY3VycmVudD1zaDtiPW51bGwhPT1PJiZudWxsIT09Ty5uZXh0O2xoPTA7UD1PPU49bnVsbDttaD0hMTtpZihiKXRocm93IEVycm9yKHUoMzAwKSk7cmV0dXJuIGF9XG5mdW5jdGlvbiB0aCgpe3ZhciBhPXttZW1vaXplZFN0YXRlOm51bGwsYmFzZVN0YXRlOm51bGwsYmFzZVF1ZXVlOm51bGwscXVldWU6bnVsbCxuZXh0Om51bGx9O251bGw9PT1QP04ubWVtb2l6ZWRTdGF0ZT1QPWE6UD1QLm5leHQ9YTtyZXR1cm4gUH1mdW5jdGlvbiB1aCgpe2lmKG51bGw9PT1PKXt2YXIgYT1OLmFsdGVybmF0ZTthPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsfWVsc2UgYT1PLm5leHQ7dmFyIGI9bnVsbD09PVA/Ti5tZW1vaXplZFN0YXRlOlAubmV4dDtpZihudWxsIT09YilQPWIsTz1hO2Vsc2V7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IodSgzMTApKTtPPWE7YT17bWVtb2l6ZWRTdGF0ZTpPLm1lbW9pemVkU3RhdGUsYmFzZVN0YXRlOk8uYmFzZVN0YXRlLGJhc2VRdWV1ZTpPLmJhc2VRdWV1ZSxxdWV1ZTpPLnF1ZXVlLG5leHQ6bnVsbH07bnVsbD09PVA/Ti5tZW1vaXplZFN0YXRlPVA9YTpQPVAubmV4dD1hfXJldHVybiBQfVxuZnVuY3Rpb24gdmgoYSxiKXtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKGEpOmJ9XG5mdW5jdGlvbiB3aChhKXt2YXIgYj11aCgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcih1KDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPU8sZT1kLmJhc2VRdWV1ZSxmPWMucGVuZGluZztpZihudWxsIT09Zil7aWYobnVsbCE9PWUpe3ZhciBnPWUubmV4dDtlLm5leHQ9Zi5uZXh0O2YubmV4dD1nfWQuYmFzZVF1ZXVlPWU9ZjtjLnBlbmRpbmc9bnVsbH1pZihudWxsIT09ZSl7ZT1lLm5leHQ7ZD1kLmJhc2VTdGF0ZTt2YXIgaD1nPWY9bnVsbCxrPWU7ZG97dmFyIGw9ay5leHBpcmF0aW9uVGltZTtpZihsPGxoKXt2YXIgbT17ZXhwaXJhdGlvblRpbWU6ay5leHBpcmF0aW9uVGltZSxzdXNwZW5zZUNvbmZpZzprLnN1c3BlbnNlQ29uZmlnLGFjdGlvbjprLmFjdGlvbixlYWdlclJlZHVjZXI6ay5lYWdlclJlZHVjZXIsZWFnZXJTdGF0ZTprLmVhZ2VyU3RhdGUsbmV4dDpudWxsfTtudWxsPT09aD8oZz1oPW0sZj1kKTpoPWgubmV4dD1tO2w+Ti5leHBpcmF0aW9uVGltZSYmXG4oTi5leHBpcmF0aW9uVGltZT1sLEJnKGwpKX1lbHNlIG51bGwhPT1oJiYoaD1oLm5leHQ9e2V4cGlyYXRpb25UaW1lOjEwNzM3NDE4MjMsc3VzcGVuc2VDb25maWc6ay5zdXNwZW5zZUNvbmZpZyxhY3Rpb246ay5hY3Rpb24sZWFnZXJSZWR1Y2VyOmsuZWFnZXJSZWR1Y2VyLGVhZ2VyU3RhdGU6ay5lYWdlclN0YXRlLG5leHQ6bnVsbH0pLEFnKGwsay5zdXNwZW5zZUNvbmZpZyksZD1rLmVhZ2VyUmVkdWNlcj09PWE/ay5lYWdlclN0YXRlOmEoZCxrLmFjdGlvbik7az1rLm5leHR9d2hpbGUobnVsbCE9PWsmJmshPT1lKTtudWxsPT09aD9mPWQ6aC5uZXh0PWc7JGUoZCxiLm1lbW9pemVkU3RhdGUpfHwocmc9ITApO2IubWVtb2l6ZWRTdGF0ZT1kO2IuYmFzZVN0YXRlPWY7Yi5iYXNlUXVldWU9aDtjLmxhc3RSZW5kZXJlZFN0YXRlPWR9cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxjLmRpc3BhdGNoXX1cbmZ1bmN0aW9uIHhoKGEpe3ZhciBiPXVoKCksYz1iLnF1ZXVlO2lmKG51bGw9PT1jKXRocm93IEVycm9yKHUoMzExKSk7Yy5sYXN0UmVuZGVyZWRSZWR1Y2VyPWE7dmFyIGQ9Yy5kaXNwYXRjaCxlPWMucGVuZGluZyxmPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZSl7Yy5wZW5kaW5nPW51bGw7dmFyIGc9ZT1lLm5leHQ7ZG8gZj1hKGYsZy5hY3Rpb24pLGc9Zy5uZXh0O3doaWxlKGchPT1lKTskZShmLGIubWVtb2l6ZWRTdGF0ZSl8fChyZz0hMCk7Yi5tZW1vaXplZFN0YXRlPWY7bnVsbD09PWIuYmFzZVF1ZXVlJiYoYi5iYXNlU3RhdGU9Zik7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1mfXJldHVybltmLGRdfVxuZnVuY3Rpb24geWgoYSl7dmFyIGI9dGgoKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSYmKGE9YSgpKTtiLm1lbW9pemVkU3RhdGU9Yi5iYXNlU3RhdGU9YTthPWIucXVldWU9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6dmgsbGFzdFJlbmRlcmVkU3RhdGU6YX07YT1hLmRpc3BhdGNoPXpoLmJpbmQobnVsbCxOLGEpO3JldHVybltiLm1lbW9pemVkU3RhdGUsYV19ZnVuY3Rpb24gQWgoYSxiLGMsZCl7YT17dGFnOmEsY3JlYXRlOmIsZGVzdHJveTpjLGRlcHM6ZCxuZXh0Om51bGx9O2I9Ti51cGRhdGVRdWV1ZTtudWxsPT09Yj8oYj17bGFzdEVmZmVjdDpudWxsfSxOLnVwZGF0ZVF1ZXVlPWIsYi5sYXN0RWZmZWN0PWEubmV4dD1hKTooYz1iLmxhc3RFZmZlY3QsbnVsbD09PWM/Yi5sYXN0RWZmZWN0PWEubmV4dD1hOihkPWMubmV4dCxjLm5leHQ9YSxhLm5leHQ9ZCxiLmxhc3RFZmZlY3Q9YSkpO3JldHVybiBhfVxuZnVuY3Rpb24gQmgoKXtyZXR1cm4gdWgoKS5tZW1vaXplZFN0YXRlfWZ1bmN0aW9uIENoKGEsYixjLGQpe3ZhciBlPXRoKCk7Ti5lZmZlY3RUYWd8PWE7ZS5tZW1vaXplZFN0YXRlPUFoKDF8YixjLHZvaWQgMCx2b2lkIDA9PT1kP251bGw6ZCl9ZnVuY3Rpb24gRGgoYSxiLGMsZCl7dmFyIGU9dWgoKTtkPXZvaWQgMD09PWQ/bnVsbDpkO3ZhciBmPXZvaWQgMDtpZihudWxsIT09Tyl7dmFyIGc9Ty5tZW1vaXplZFN0YXRlO2Y9Zy5kZXN0cm95O2lmKG51bGwhPT1kJiZuaChkLGcuZGVwcykpe0FoKGIsYyxmLGQpO3JldHVybn19Ti5lZmZlY3RUYWd8PWE7ZS5tZW1vaXplZFN0YXRlPUFoKDF8YixjLGYsZCl9ZnVuY3Rpb24gRWgoYSxiKXtyZXR1cm4gQ2goNTE2LDQsYSxiKX1mdW5jdGlvbiBGaChhLGIpe3JldHVybiBEaCg1MTYsNCxhLGIpfWZ1bmN0aW9uIEdoKGEsYil7cmV0dXJuIERoKDQsMixhLGIpfVxuZnVuY3Rpb24gSGgoYSxiKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYilyZXR1cm4gYT1hKCksYihhKSxmdW5jdGlvbigpe2IobnVsbCl9O2lmKG51bGwhPT1iJiZ2b2lkIDAhPT1iKXJldHVybiBhPWEoKSxiLmN1cnJlbnQ9YSxmdW5jdGlvbigpe2IuY3VycmVudD1udWxsfX1mdW5jdGlvbiBJaChhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIERoKDQsMixIaC5iaW5kKG51bGwsYixhKSxjKX1mdW5jdGlvbiBKaCgpe31mdW5jdGlvbiBLaChhLGIpe3RoKCkubWVtb2l6ZWRTdGF0ZT1bYSx2b2lkIDA9PT1iP251bGw6Yl07cmV0dXJuIGF9ZnVuY3Rpb24gTGgoYSxiKXt2YXIgYz11aCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmbmgoYixkWzFdKSlyZXR1cm4gZFswXTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9XG5mdW5jdGlvbiBNaChhLGIpe3ZhciBjPXVoKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZuaChiLGRbMV0pKXJldHVybiBkWzBdO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX1mdW5jdGlvbiBOaChhLGIsYyl7dmFyIGQ9YWcoKTtjZyg5OD5kPzk4OmQsZnVuY3Rpb24oKXthKCEwKX0pO2NnKDk3PGQ/OTc6ZCxmdW5jdGlvbigpe3ZhciBkPWtoLnN1c3BlbnNlO2toLnN1c3BlbnNlPXZvaWQgMD09PWI/bnVsbDpiO3RyeXthKCExKSxjKCl9ZmluYWxseXtraC5zdXNwZW5zZT1kfX0pfVxuZnVuY3Rpb24gemgoYSxiLGMpe3ZhciBkPUdnKCksZT1EZy5zdXNwZW5zZTtkPUhnKGQsYSxlKTtlPXtleHBpcmF0aW9uVGltZTpkLHN1c3BlbnNlQ29uZmlnOmUsYWN0aW9uOmMsZWFnZXJSZWR1Y2VyOm51bGwsZWFnZXJTdGF0ZTpudWxsLG5leHQ6bnVsbH07dmFyIGY9Yi5wZW5kaW5nO251bGw9PT1mP2UubmV4dD1lOihlLm5leHQ9Zi5uZXh0LGYubmV4dD1lKTtiLnBlbmRpbmc9ZTtmPWEuYWx0ZXJuYXRlO2lmKGE9PT1OfHxudWxsIT09ZiYmZj09PU4pbWg9ITAsZS5leHBpcmF0aW9uVGltZT1saCxOLmV4cGlyYXRpb25UaW1lPWxoO2Vsc2V7aWYoMD09PWEuZXhwaXJhdGlvblRpbWUmJihudWxsPT09Znx8MD09PWYuZXhwaXJhdGlvblRpbWUpJiYoZj1iLmxhc3RSZW5kZXJlZFJlZHVjZXIsbnVsbCE9PWYpKXRyeXt2YXIgZz1iLmxhc3RSZW5kZXJlZFN0YXRlLGg9ZihnLGMpO2UuZWFnZXJSZWR1Y2VyPWY7ZS5lYWdlclN0YXRlPWg7aWYoJGUoaCxnKSlyZXR1cm59Y2F0Y2goayl7fWZpbmFsbHl7fUlnKGEsXG5kKX19XG52YXIgc2g9e3JlYWRDb250ZXh0OnNnLHVzZUNhbGxiYWNrOlEsdXNlQ29udGV4dDpRLHVzZUVmZmVjdDpRLHVzZUltcGVyYXRpdmVIYW5kbGU6USx1c2VMYXlvdXRFZmZlY3Q6USx1c2VNZW1vOlEsdXNlUmVkdWNlcjpRLHVzZVJlZjpRLHVzZVN0YXRlOlEsdXNlRGVidWdWYWx1ZTpRLHVzZVJlc3BvbmRlcjpRLHVzZURlZmVycmVkVmFsdWU6USx1c2VUcmFuc2l0aW9uOlF9LHBoPXtyZWFkQ29udGV4dDpzZyx1c2VDYWxsYmFjazpLaCx1c2VDb250ZXh0OnNnLHVzZUVmZmVjdDpFaCx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gQ2goNCwyLEhoLmJpbmQobnVsbCxiLGEpLGMpfSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gQ2goNCwyLGEsYil9LHVzZU1lbW86ZnVuY3Rpb24oYSxiKXt2YXIgYz10aCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLFxuYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPXRoKCk7Yj12b2lkIDAhPT1jP2MoYik6YjtkLm1lbW9pemVkU3RhdGU9ZC5iYXNlU3RhdGU9YjthPWQucXVldWU9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6YSxsYXN0UmVuZGVyZWRTdGF0ZTpifTthPWEuZGlzcGF0Y2g9emguYmluZChudWxsLE4sYSk7cmV0dXJuW2QubWVtb2l6ZWRTdGF0ZSxhXX0sdXNlUmVmOmZ1bmN0aW9uKGEpe3ZhciBiPXRoKCk7YT17Y3VycmVudDphfTtyZXR1cm4gYi5tZW1vaXplZFN0YXRlPWF9LHVzZVN0YXRlOnloLHVzZURlYnVnVmFsdWU6SmgsdXNlUmVzcG9uZGVyOmloLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSxiKXt2YXIgYz15aChhKSxkPWNbMF0sZT1jWzFdO0VoKGZ1bmN0aW9uKCl7dmFyIGM9a2guc3VzcGVuc2U7a2guc3VzcGVuc2U9dm9pZCAwPT09Yj9udWxsOmI7dHJ5e2UoYSl9ZmluYWxseXtraC5zdXNwZW5zZT1cbmN9fSxbYSxiXSk7cmV0dXJuIGR9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oYSl7dmFyIGI9eWgoITEpLGM9YlswXTtiPWJbMV07cmV0dXJuW0toKE5oLmJpbmQobnVsbCxiLGEpLFtiLGFdKSxjXX19LHFoPXtyZWFkQ29udGV4dDpzZyx1c2VDYWxsYmFjazpMaCx1c2VDb250ZXh0OnNnLHVzZUVmZmVjdDpGaCx1c2VJbXBlcmF0aXZlSGFuZGxlOkloLHVzZUxheW91dEVmZmVjdDpHaCx1c2VNZW1vOk1oLHVzZVJlZHVjZXI6d2gsdXNlUmVmOkJoLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIHdoKHZoKX0sdXNlRGVidWdWYWx1ZTpKaCx1c2VSZXNwb25kZXI6aWgsdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhLGIpe3ZhciBjPXdoKHZoKSxkPWNbMF0sZT1jWzFdO0ZoKGZ1bmN0aW9uKCl7dmFyIGM9a2guc3VzcGVuc2U7a2guc3VzcGVuc2U9dm9pZCAwPT09Yj9udWxsOmI7dHJ5e2UoYSl9ZmluYWxseXtraC5zdXNwZW5zZT1jfX0sW2EsYl0pO3JldHVybiBkfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKGEpe3ZhciBiPVxud2godmgpLGM9YlswXTtiPWJbMV07cmV0dXJuW0xoKE5oLmJpbmQobnVsbCxiLGEpLFtiLGFdKSxjXX19LHJoPXtyZWFkQ29udGV4dDpzZyx1c2VDYWxsYmFjazpMaCx1c2VDb250ZXh0OnNnLHVzZUVmZmVjdDpGaCx1c2VJbXBlcmF0aXZlSGFuZGxlOkloLHVzZUxheW91dEVmZmVjdDpHaCx1c2VNZW1vOk1oLHVzZVJlZHVjZXI6eGgsdXNlUmVmOkJoLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIHhoKHZoKX0sdXNlRGVidWdWYWx1ZTpKaCx1c2VSZXNwb25kZXI6aWgsdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhLGIpe3ZhciBjPXhoKHZoKSxkPWNbMF0sZT1jWzFdO0ZoKGZ1bmN0aW9uKCl7dmFyIGM9a2guc3VzcGVuc2U7a2guc3VzcGVuc2U9dm9pZCAwPT09Yj9udWxsOmI7dHJ5e2UoYSl9ZmluYWxseXtraC5zdXNwZW5zZT1jfX0sW2EsYl0pO3JldHVybiBkfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKGEpe3ZhciBiPXhoKHZoKSxjPWJbMF07Yj1iWzFdO3JldHVybltMaChOaC5iaW5kKG51bGwsXG5iLGEpLFtiLGFdKSxjXX19LE9oPW51bGwsUGg9bnVsbCxRaD0hMTtmdW5jdGlvbiBSaChhLGIpe3ZhciBjPVNoKDUsbnVsbCxudWxsLDApO2MuZWxlbWVudFR5cGU9XCJERUxFVEVEXCI7Yy50eXBlPVwiREVMRVRFRFwiO2Muc3RhdGVOb2RlPWI7Yy5yZXR1cm49YTtjLmVmZmVjdFRhZz04O251bGwhPT1hLmxhc3RFZmZlY3Q/KGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsYS5sYXN0RWZmZWN0PWMpOmEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PWN9XG5mdW5jdGlvbiBUaChhLGIpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnZhciBjPWEudHlwZTtiPTEhPT1iLm5vZGVUeXBlfHxjLnRvTG93ZXJDYXNlKCkhPT1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk/bnVsbDpiO3JldHVybiBudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSA2OnJldHVybiBiPVwiXCI9PT1hLnBlbmRpbmdQcm9wc3x8MyE9PWIubm9kZVR5cGU/bnVsbDpiLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDEzOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gVWgoYSl7aWYoUWgpe3ZhciBiPVBoO2lmKGIpe3ZhciBjPWI7aWYoIVRoKGEsYikpe2I9SmQoYy5uZXh0U2libGluZyk7aWYoIWJ8fCFUaChhLGIpKXthLmVmZmVjdFRhZz1hLmVmZmVjdFRhZyYtMTAyNXwyO1FoPSExO09oPWE7cmV0dXJufVJoKE9oLGMpfU9oPWE7UGg9SmQoYi5maXJzdENoaWxkKX1lbHNlIGEuZWZmZWN0VGFnPWEuZWZmZWN0VGFnJi0xMDI1fDIsUWg9ITEsT2g9YX19ZnVuY3Rpb24gVmgoYSl7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWEmJjUhPT1hLnRhZyYmMyE9PWEudGFnJiYxMyE9PWEudGFnOylhPWEucmV0dXJuO09oPWF9XG5mdW5jdGlvbiBXaChhKXtpZihhIT09T2gpcmV0dXJuITE7aWYoIVFoKXJldHVybiBWaChhKSxRaD0hMCwhMTt2YXIgYj1hLnR5cGU7aWYoNSE9PWEudGFnfHxcImhlYWRcIiE9PWImJlwiYm9keVwiIT09YiYmIUdkKGIsYS5tZW1vaXplZFByb3BzKSlmb3IoYj1QaDtiOylSaChhLGIpLGI9SmQoYi5uZXh0U2libGluZyk7VmgoYSk7aWYoMTM9PT1hLnRhZyl7YT1hLm1lbW9pemVkU3RhdGU7YT1udWxsIT09YT9hLmRlaHlkcmF0ZWQ6bnVsbDtpZighYSl0aHJvdyBFcnJvcih1KDMxNykpO2E6e2E9YS5uZXh0U2libGluZztmb3IoYj0wO2E7KXtpZig4PT09YS5ub2RlVHlwZSl7dmFyIGM9YS5kYXRhO2lmKGM9PT1BZCl7aWYoMD09PWIpe1BoPUpkKGEubmV4dFNpYmxpbmcpO2JyZWFrIGF9Yi0tfWVsc2UgYyE9PXpkJiZjIT09Q2QmJmMhPT1CZHx8YisrfWE9YS5uZXh0U2libGluZ31QaD1udWxsfX1lbHNlIFBoPU9oP0pkKGEuc3RhdGVOb2RlLm5leHRTaWJsaW5nKTpudWxsO3JldHVybiEwfVxuZnVuY3Rpb24gWGgoKXtQaD1PaD1udWxsO1FoPSExfXZhciBZaD1XYS5SZWFjdEN1cnJlbnRPd25lcixyZz0hMTtmdW5jdGlvbiBSKGEsYixjLGQpe2IuY2hpbGQ9bnVsbD09PWE/WWcoYixudWxsLGMsZCk6WGcoYixhLmNoaWxkLGMsZCl9ZnVuY3Rpb24gWmgoYSxiLGMsZCxlKXtjPWMucmVuZGVyO3ZhciBmPWIucmVmO3FnKGIsZSk7ZD1vaChhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiFyZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZWZmZWN0VGFnJj0tNTE3LGEuZXhwaXJhdGlvblRpbWU8PWUmJihhLmV4cGlyYXRpb25UaW1lPTApLCRoKGEsYixlKTtiLmVmZmVjdFRhZ3w9MTtSKGEsYixkLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gYWkoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hKXt2YXIgZz1jLnR5cGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJiFiaShnKSYmdm9pZCAwPT09Zy5kZWZhdWx0UHJvcHMmJm51bGw9PT1jLmNvbXBhcmUmJnZvaWQgMD09PWMuZGVmYXVsdFByb3BzKXJldHVybiBiLnRhZz0xNSxiLnR5cGU9ZyxjaShhLGIsZyxkLGUsZik7YT1VZyhjLnR5cGUsbnVsbCxkLG51bGwsYi5tb2RlLGYpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1nPWEuY2hpbGQ7aWYoZTxmJiYoZT1nLm1lbW9pemVkUHJvcHMsYz1jLmNvbXBhcmUsYz1udWxsIT09Yz9jOmJmLGMoZSxkKSYmYS5yZWY9PT1iLnJlZikpcmV0dXJuICRoKGEsYixmKTtiLmVmZmVjdFRhZ3w9MTthPVNnKGcsZCk7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfVxuZnVuY3Rpb24gY2koYSxiLGMsZCxlLGYpe3JldHVybiBudWxsIT09YSYmYmYoYS5tZW1vaXplZFByb3BzLGQpJiZhLnJlZj09PWIucmVmJiYocmc9ITEsZTxmKT8oYi5leHBpcmF0aW9uVGltZT1hLmV4cGlyYXRpb25UaW1lLCRoKGEsYixmKSk6ZGkoYSxiLGMsZCxmKX1mdW5jdGlvbiBlaShhLGIpe3ZhciBjPWIucmVmO2lmKG51bGw9PT1hJiZudWxsIT09Y3x8bnVsbCE9PWEmJmEucmVmIT09YyliLmVmZmVjdFRhZ3w9MTI4fWZ1bmN0aW9uIGRpKGEsYixjLGQsZSl7dmFyIGY9TChjKT9CZjpKLmN1cnJlbnQ7Zj1DZihiLGYpO3FnKGIsZSk7Yz1vaChhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiFyZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZWZmZWN0VGFnJj0tNTE3LGEuZXhwaXJhdGlvblRpbWU8PWUmJihhLmV4cGlyYXRpb25UaW1lPTApLCRoKGEsYixlKTtiLmVmZmVjdFRhZ3w9MTtSKGEsYixjLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gZmkoYSxiLGMsZCxlKXtpZihMKGMpKXt2YXIgZj0hMDtHZihiKX1lbHNlIGY9ITE7cWcoYixlKTtpZihudWxsPT09Yi5zdGF0ZU5vZGUpbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpLExnKGIsYyxkKSxOZyhiLGMsZCxlKSxkPSEwO2Vsc2UgaWYobnVsbD09PWEpe3ZhciBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzO2cucHJvcHM9aDt2YXIgaz1nLmNvbnRleHQsbD1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgbCYmbnVsbCE9PWw/bD1zZyhsKToobD1MKGMpP0JmOkouY3VycmVudCxsPUNmKGIsbCkpO3ZhciBtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLHA9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlO3B8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8ayE9PWwpJiZNZyhiLGcsZCxsKTt0Zz0hMTt2YXIgeD1iLm1lbW9pemVkU3RhdGU7Zy5zdGF0ZT14O3pnKGIsZCxnLGUpO2s9Yi5tZW1vaXplZFN0YXRlO2ghPT1kfHx4IT09a3x8Sy5jdXJyZW50fHx0Zz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihGZyhiLGMsbSxkKSxrPWIubWVtb2l6ZWRTdGF0ZSksKGg9dGd8fEtnKGIsYyxoLGQseCxrLGwpKT8ocHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50fHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50JiZnLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpKSxcImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWspLGcucHJvcHM9ZCxnLnN0YXRlPWssZy5jb250ZXh0PWwsZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksZD0hMSl9ZWxzZSBnPWIuc3RhdGVOb2RlLHZnKGEsYiksaD1iLm1lbW9pemVkUHJvcHMsZy5wcm9wcz1iLnR5cGU9PT1iLmVsZW1lbnRUeXBlP2g6aWcoYi50eXBlLGgpLGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZSxcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9c2cobCk6KGw9TChjKT9CZjpKLmN1cnJlbnQsbD1DZihiLGwpKSxtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLChwPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8ayE9PWwpJiZNZyhiLGcsZCxsKSx0Zz0hMSxrPWIubWVtb2l6ZWRTdGF0ZSxnLnN0YXRlPWssemcoYixkLGcsZSkseD1iLm1lbW9pemVkU3RhdGUsaCE9PWR8fGshPT14fHxLLmN1cnJlbnR8fHRnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKEZnKGIsYyxtLGQpLHg9Yi5tZW1vaXplZFN0YXRlKSwobT10Z3x8S2coYixjLGgsZCxrLHgsbCkpPyhwfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZXx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGUmJmcuY29tcG9uZW50V2lsbFVwZGF0ZShkLFxueCxsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShkLHgsbCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZSYmKGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSYmKGIuZWZmZWN0VGFnfD0yNTYpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPXgpLGcucHJvcHM9ZCxnLnN0YXRlPXgsZy5jb250ZXh0PWwsZD1tKTpcbihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxkPSExKTtyZXR1cm4gZ2koYSxiLGMsZCxmLGUpfVxuZnVuY3Rpb24gZ2koYSxiLGMsZCxlLGYpe2VpKGEsYik7dmFyIGc9MCE9PShiLmVmZmVjdFRhZyY2NCk7aWYoIWQmJiFnKXJldHVybiBlJiZIZihiLGMsITEpLCRoKGEsYixmKTtkPWIuc3RhdGVOb2RlO1loLmN1cnJlbnQ9Yjt2YXIgaD1nJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I/bnVsbDpkLnJlbmRlcigpO2IuZWZmZWN0VGFnfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPVhnKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9WGcoYixudWxsLGgsZikpOlIoYSxiLGgsZik7Yi5tZW1vaXplZFN0YXRlPWQuc3RhdGU7ZSYmSGYoYixjLCEwKTtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiBoaShhKXt2YXIgYj1hLnN0YXRlTm9kZTtiLnBlbmRpbmdDb250ZXh0P0VmKGEsYi5wZW5kaW5nQ29udGV4dCxiLnBlbmRpbmdDb250ZXh0IT09Yi5jb250ZXh0KTpiLmNvbnRleHQmJkVmKGEsYi5jb250ZXh0LCExKTtkaChhLGIuY29udGFpbmVySW5mbyl9XG52YXIgaWk9e2RlaHlkcmF0ZWQ6bnVsbCxyZXRyeVRpbWU6MH07XG5mdW5jdGlvbiBqaShhLGIsYyl7dmFyIGQ9Yi5tb2RlLGU9Yi5wZW5kaW5nUHJvcHMsZj1NLmN1cnJlbnQsZz0hMSxoOyhoPTAhPT0oYi5lZmZlY3RUYWcmNjQpKXx8KGg9MCE9PShmJjIpJiYobnVsbD09PWF8fG51bGwhPT1hLm1lbW9pemVkU3RhdGUpKTtoPyhnPSEwLGIuZWZmZWN0VGFnJj0tNjUpOm51bGwhPT1hJiZudWxsPT09YS5tZW1vaXplZFN0YXRlfHx2b2lkIDA9PT1lLmZhbGxiYWNrfHwhMD09PWUudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2t8fChmfD0xKTtJKE0sZiYxKTtpZihudWxsPT09YSl7dm9pZCAwIT09ZS5mYWxsYmFjayYmVWgoYik7aWYoZyl7Zz1lLmZhbGxiYWNrO2U9V2cobnVsbCxkLDAsbnVsbCk7ZS5yZXR1cm49YjtpZigwPT09KGIubW9kZSYyKSlmb3IoYT1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCxlLmNoaWxkPWE7bnVsbCE9PWE7KWEucmV0dXJuPWUsYT1hLnNpYmxpbmc7Yz1XZyhnLGQsYyxudWxsKTtjLnJldHVybj1cbmI7ZS5zaWJsaW5nPWM7Yi5tZW1vaXplZFN0YXRlPWlpO2IuY2hpbGQ9ZTtyZXR1cm4gY31kPWUuY2hpbGRyZW47Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGIuY2hpbGQ9WWcoYixudWxsLGQsYyl9aWYobnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSl7YT1hLmNoaWxkO2Q9YS5zaWJsaW5nO2lmKGcpe2U9ZS5mYWxsYmFjaztjPVNnKGEsYS5wZW5kaW5nUHJvcHMpO2MucmV0dXJuPWI7aWYoMD09PShiLm1vZGUmMikmJihnPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkLGchPT1hLmNoaWxkKSlmb3IoYy5jaGlsZD1nO251bGwhPT1nOylnLnJldHVybj1jLGc9Zy5zaWJsaW5nO2Q9U2coZCxlKTtkLnJldHVybj1iO2Muc2libGluZz1kO2MuY2hpbGRFeHBpcmF0aW9uVGltZT0wO2IubWVtb2l6ZWRTdGF0ZT1paTtiLmNoaWxkPWM7cmV0dXJuIGR9Yz1YZyhiLGEuY2hpbGQsZS5jaGlsZHJlbixjKTtiLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gYi5jaGlsZD1cbmN9YT1hLmNoaWxkO2lmKGcpe2c9ZS5mYWxsYmFjaztlPVdnKG51bGwsZCwwLG51bGwpO2UucmV0dXJuPWI7ZS5jaGlsZD1hO251bGwhPT1hJiYoYS5yZXR1cm49ZSk7aWYoMD09PShiLm1vZGUmMikpZm9yKGE9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQsZS5jaGlsZD1hO251bGwhPT1hOylhLnJldHVybj1lLGE9YS5zaWJsaW5nO2M9V2coZyxkLGMsbnVsbCk7Yy5yZXR1cm49YjtlLnNpYmxpbmc9YztjLmVmZmVjdFRhZ3w9MjtlLmNoaWxkRXhwaXJhdGlvblRpbWU9MDtiLm1lbW9pemVkU3RhdGU9aWk7Yi5jaGlsZD1lO3JldHVybiBjfWIubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBiLmNoaWxkPVhnKGIsYSxlLmNoaWxkcmVuLGMpfVxuZnVuY3Rpb24ga2koYSxiKXthLmV4cGlyYXRpb25UaW1lPGImJihhLmV4cGlyYXRpb25UaW1lPWIpO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZjLmV4cGlyYXRpb25UaW1lPGImJihjLmV4cGlyYXRpb25UaW1lPWIpO3BnKGEucmV0dXJuLGIpfWZ1bmN0aW9uIGxpKGEsYixjLGQsZSxmKXt2YXIgZz1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWc/YS5tZW1vaXplZFN0YXRlPXtpc0JhY2t3YXJkczpiLHJlbmRlcmluZzpudWxsLHJlbmRlcmluZ1N0YXJ0VGltZTowLGxhc3Q6ZCx0YWlsOmMsdGFpbEV4cGlyYXRpb246MCx0YWlsTW9kZTplLGxhc3RFZmZlY3Q6Zn06KGcuaXNCYWNrd2FyZHM9YixnLnJlbmRlcmluZz1udWxsLGcucmVuZGVyaW5nU3RhcnRUaW1lPTAsZy5sYXN0PWQsZy50YWlsPWMsZy50YWlsRXhwaXJhdGlvbj0wLGcudGFpbE1vZGU9ZSxnLmxhc3RFZmZlY3Q9Zil9XG5mdW5jdGlvbiBtaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1kLnJldmVhbE9yZGVyLGY9ZC50YWlsO1IoYSxiLGQuY2hpbGRyZW4sYyk7ZD1NLmN1cnJlbnQ7aWYoMCE9PShkJjIpKWQ9ZCYxfDIsYi5lZmZlY3RUYWd8PTY0O2Vsc2V7aWYobnVsbCE9PWEmJjAhPT0oYS5lZmZlY3RUYWcmNjQpKWE6Zm9yKGE9Yi5jaGlsZDtudWxsIT09YTspe2lmKDEzPT09YS50YWcpbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSYma2koYSxjKTtlbHNlIGlmKDE5PT09YS50YWcpa2koYSxjKTtlbHNlIGlmKG51bGwhPT1hLmNoaWxkKXthLmNoaWxkLnJldHVybj1hO2E9YS5jaGlsZDtjb250aW51ZX1pZihhPT09YilicmVhayBhO2Zvcig7bnVsbD09PWEuc2libGluZzspe2lmKG51bGw9PT1hLnJldHVybnx8YS5yZXR1cm49PT1iKWJyZWFrIGE7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2E9YS5zaWJsaW5nfWQmPTF9SShNLGQpO2lmKDA9PT0oYi5tb2RlJjIpKWIubWVtb2l6ZWRTdGF0ZT1cbm51bGw7ZWxzZSBzd2l0Y2goZSl7Y2FzZSBcImZvcndhcmRzXCI6Yz1iLmNoaWxkO2ZvcihlPW51bGw7bnVsbCE9PWM7KWE9Yy5hbHRlcm5hdGUsbnVsbCE9PWEmJm51bGw9PT1oaChhKSYmKGU9YyksYz1jLnNpYmxpbmc7Yz1lO251bGw9PT1jPyhlPWIuY2hpbGQsYi5jaGlsZD1udWxsKTooZT1jLnNpYmxpbmcsYy5zaWJsaW5nPW51bGwpO2xpKGIsITEsZSxjLGYsYi5sYXN0RWZmZWN0KTticmVhaztjYXNlIFwiYmFja3dhcmRzXCI6Yz1udWxsO2U9Yi5jaGlsZDtmb3IoYi5jaGlsZD1udWxsO251bGwhPT1lOyl7YT1lLmFsdGVybmF0ZTtpZihudWxsIT09YSYmbnVsbD09PWhoKGEpKXtiLmNoaWxkPWU7YnJlYWt9YT1lLnNpYmxpbmc7ZS5zaWJsaW5nPWM7Yz1lO2U9YX1saShiLCEwLGMsbnVsbCxmLGIubGFzdEVmZmVjdCk7YnJlYWs7Y2FzZSBcInRvZ2V0aGVyXCI6bGkoYiwhMSxudWxsLG51bGwsdm9pZCAwLGIubGFzdEVmZmVjdCk7YnJlYWs7ZGVmYXVsdDpiLm1lbW9pemVkU3RhdGU9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uICRoKGEsYixjKXtudWxsIT09YSYmKGIuZGVwZW5kZW5jaWVzPWEuZGVwZW5kZW5jaWVzKTt2YXIgZD1iLmV4cGlyYXRpb25UaW1lOzAhPT1kJiZCZyhkKTtpZihiLmNoaWxkRXhwaXJhdGlvblRpbWU8YylyZXR1cm4gbnVsbDtpZihudWxsIT09YSYmYi5jaGlsZCE9PWEuY2hpbGQpdGhyb3cgRXJyb3IodSgxNTMpKTtpZihudWxsIT09Yi5jaGlsZCl7YT1iLmNoaWxkO2M9U2coYSxhLnBlbmRpbmdQcm9wcyk7Yi5jaGlsZD1jO2ZvcihjLnJldHVybj1iO251bGwhPT1hLnNpYmxpbmc7KWE9YS5zaWJsaW5nLGM9Yy5zaWJsaW5nPVNnKGEsYS5wZW5kaW5nUHJvcHMpLGMucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGx9cmV0dXJuIGIuY2hpbGR9dmFyIG5pLG9pLHBpLHFpO1xubmk9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9Yi5jaGlsZDtudWxsIT09Yzspe2lmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKWEuYXBwZW5kQ2hpbGQoYy5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWMudGFnJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319O29pPWZ1bmN0aW9uKCl7fTtcbnBpPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9YS5tZW1vaXplZFByb3BzO2lmKGYhPT1kKXt2YXIgZz1iLnN0YXRlTm9kZTtjaCgkZy5jdXJyZW50KTthPW51bGw7c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOmY9emIoZyxmKTtkPXpiKGcsZCk7YT1bXTticmVhaztjYXNlIFwib3B0aW9uXCI6Zj1HYihnLGYpO2Q9R2IoZyxkKTthPVtdO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpmPW4oe30sZix7dmFsdWU6dm9pZCAwfSk7ZD1uKHt9LGQse3ZhbHVlOnZvaWQgMH0pO2E9W107YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Zj1JYihnLGYpO2Q9SWIoZyxkKTthPVtdO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiIT09dHlwZW9mIGYub25DbGljayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQub25DbGljayYmKGcub25jbGljaz1zZCl9b2QoYyxkKTt2YXIgaCxrO2M9bnVsbDtmb3IoaCBpbiBmKWlmKCFkLmhhc093blByb3BlcnR5KGgpJiZmLmhhc093blByb3BlcnR5KGgpJiZudWxsIT1mW2hdKWlmKFwic3R5bGVcIj09PVxuaClmb3IoayBpbiBnPWZbaF0sZylnLmhhc093blByb3BlcnR5KGspJiYoY3x8KGM9e30pLGNba109XCJcIik7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIiE9PWgmJlwiY2hpbGRyZW5cIiE9PWgmJlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1oJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09aCYmXCJhdXRvRm9jdXNcIiE9PWgmJih2YS5oYXNPd25Qcm9wZXJ0eShoKT9hfHwoYT1bXSk6KGE9YXx8W10pLnB1c2goaCxudWxsKSk7Zm9yKGggaW4gZCl7dmFyIGw9ZFtoXTtnPW51bGwhPWY/ZltoXTp2b2lkIDA7aWYoZC5oYXNPd25Qcm9wZXJ0eShoKSYmbCE9PWcmJihudWxsIT1sfHxudWxsIT1nKSlpZihcInN0eWxlXCI9PT1oKWlmKGcpe2ZvcihrIGluIGcpIWcuaGFzT3duUHJvcGVydHkoayl8fGwmJmwuaGFzT3duUHJvcGVydHkoayl8fChjfHwoYz17fSksY1trXT1cIlwiKTtmb3IoayBpbiBsKWwuaGFzT3duUHJvcGVydHkoaykmJmdba10hPT1sW2tdJiYoY3x8KGM9e30pLFxuY1trXT1sW2tdKX1lbHNlIGN8fChhfHwoYT1bXSksYS5wdXNoKGgsYykpLGM9bDtlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09aD8obD1sP2wuX19odG1sOnZvaWQgMCxnPWc/Zy5fX2h0bWw6dm9pZCAwLG51bGwhPWwmJmchPT1sJiYoYT1hfHxbXSkucHVzaChoLGwpKTpcImNoaWxkcmVuXCI9PT1oP2c9PT1sfHxcInN0cmluZ1wiIT09dHlwZW9mIGwmJlwibnVtYmVyXCIhPT10eXBlb2YgbHx8KGE9YXx8W10pLnB1c2goaCxcIlwiK2wpOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1oJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09aCYmKHZhLmhhc093blByb3BlcnR5KGgpPyhudWxsIT1sJiZyZChlLGgpLGF8fGc9PT1sfHwoYT1bXSkpOihhPWF8fFtdKS5wdXNoKGgsbCkpfWMmJihhPWF8fFtdKS5wdXNoKFwic3R5bGVcIixjKTtlPWE7aWYoYi51cGRhdGVRdWV1ZT1lKWIuZWZmZWN0VGFnfD00fX07XG5xaT1mdW5jdGlvbihhLGIsYyxkKXtjIT09ZCYmKGIuZWZmZWN0VGFnfD00KX07ZnVuY3Rpb24gcmkoYSxiKXtzd2l0Y2goYS50YWlsTW9kZSl7Y2FzZSBcImhpZGRlblwiOmI9YS50YWlsO2Zvcih2YXIgYz1udWxsO251bGwhPT1iOyludWxsIT09Yi5hbHRlcm5hdGUmJihjPWIpLGI9Yi5zaWJsaW5nO251bGw9PT1jP2EudGFpbD1udWxsOmMuc2libGluZz1udWxsO2JyZWFrO2Nhc2UgXCJjb2xsYXBzZWRcIjpjPWEudGFpbDtmb3IodmFyIGQ9bnVsbDtudWxsIT09YzspbnVsbCE9PWMuYWx0ZXJuYXRlJiYoZD1jKSxjPWMuc2libGluZztudWxsPT09ZD9ifHxudWxsPT09YS50YWlsP2EudGFpbD1udWxsOmEudGFpbC5zaWJsaW5nPW51bGw6ZC5zaWJsaW5nPW51bGx9fVxuZnVuY3Rpb24gc2koYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmNhc2UgMTY6Y2FzZSAxNTpjYXNlIDA6Y2FzZSAxMTpjYXNlIDc6Y2FzZSA4OmNhc2UgMTI6Y2FzZSA5OmNhc2UgMTQ6cmV0dXJuIG51bGw7Y2FzZSAxOnJldHVybiBMKGIudHlwZSkmJkRmKCksbnVsbDtjYXNlIDM6cmV0dXJuIGVoKCksSChLKSxIKEopLGM9Yi5zdGF0ZU5vZGUsYy5wZW5kaW5nQ29udGV4dCYmKGMuY29udGV4dD1jLnBlbmRpbmdDb250ZXh0LGMucGVuZGluZ0NvbnRleHQ9bnVsbCksbnVsbCE9PWEmJm51bGwhPT1hLmNoaWxkfHwhV2goYil8fChiLmVmZmVjdFRhZ3w9NCksb2koYiksbnVsbDtjYXNlIDU6Z2goYik7Yz1jaChiaC5jdXJyZW50KTt2YXIgZT1iLnR5cGU7aWYobnVsbCE9PWEmJm51bGwhPWIuc3RhdGVOb2RlKXBpKGEsYixlLGQsYyksYS5yZWYhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD0xMjgpO2Vsc2V7aWYoIWQpe2lmKG51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih1KDE2NikpO1xucmV0dXJuIG51bGx9YT1jaCgkZy5jdXJyZW50KTtpZihXaChiKSl7ZD1iLnN0YXRlTm9kZTtlPWIudHlwZTt2YXIgZj1iLm1lbW9pemVkUHJvcHM7ZFtNZF09YjtkW05kXT1mO3N3aXRjaChlKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJlbWJlZFwiOkYoXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGE9MDthPGFjLmxlbmd0aDthKyspRihhY1thXSxkKTticmVhaztjYXNlIFwic291cmNlXCI6RihcImVycm9yXCIsZCk7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RihcImVycm9yXCIsZCk7RihcImxvYWRcIixkKTticmVhaztjYXNlIFwiZm9ybVwiOkYoXCJyZXNldFwiLGQpO0YoXCJzdWJtaXRcIixkKTticmVhaztjYXNlIFwiZGV0YWlsc1wiOkYoXCJ0b2dnbGVcIixkKTticmVhaztjYXNlIFwiaW5wdXRcIjpBYihkLGYpO0YoXCJpbnZhbGlkXCIsZCk7cmQoYyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpkLl93cmFwcGVyU3RhdGU9XG57d2FzTXVsdGlwbGU6ISFmLm11bHRpcGxlfTtGKFwiaW52YWxpZFwiLGQpO3JkKGMsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpKYihkLGYpLEYoXCJpbnZhbGlkXCIsZCkscmQoYyxcIm9uQ2hhbmdlXCIpfW9kKGUsZik7YT1udWxsO2Zvcih2YXIgZyBpbiBmKWlmKGYuaGFzT3duUHJvcGVydHkoZykpe3ZhciBoPWZbZ107XCJjaGlsZHJlblwiPT09Zz9cInN0cmluZ1wiPT09dHlwZW9mIGg/ZC50ZXh0Q29udGVudCE9PWgmJihhPVtcImNoaWxkcmVuXCIsaF0pOlwibnVtYmVyXCI9PT10eXBlb2YgaCYmZC50ZXh0Q29udGVudCE9PVwiXCIraCYmKGE9W1wiY2hpbGRyZW5cIixcIlwiK2hdKTp2YS5oYXNPd25Qcm9wZXJ0eShnKSYmbnVsbCE9aCYmcmQoYyxnKX1zd2l0Y2goZSl7Y2FzZSBcImlucHV0XCI6eGIoZCk7RWIoZCxmLCEwKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjp4YihkKTtMYihkKTticmVhaztjYXNlIFwic2VsZWN0XCI6Y2FzZSBcIm9wdGlvblwiOmJyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGYub25DbGljayYmXG4oZC5vbmNsaWNrPXNkKX1jPWE7Yi51cGRhdGVRdWV1ZT1jO251bGwhPT1jJiYoYi5lZmZlY3RUYWd8PTQpfWVsc2V7Zz05PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudDthPT09cWQmJihhPU5iKGUpKTthPT09cWQ/XCJzY3JpcHRcIj09PWU/KGE9Zy5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGEuaW5uZXJIVE1MPVwiPHNjcmlwdD5cXHgzYy9zY3JpcHQ+XCIsYT1hLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCkpOlwic3RyaW5nXCI9PT10eXBlb2YgZC5pcz9hPWcuY3JlYXRlRWxlbWVudChlLHtpczpkLmlzfSk6KGE9Zy5jcmVhdGVFbGVtZW50KGUpLFwic2VsZWN0XCI9PT1lJiYoZz1hLGQubXVsdGlwbGU/Zy5tdWx0aXBsZT0hMDpkLnNpemUmJihnLnNpemU9ZC5zaXplKSkpOmE9Zy5jcmVhdGVFbGVtZW50TlMoYSxlKTthW01kXT1iO2FbTmRdPWQ7bmkoYSxiLCExLCExKTtiLnN0YXRlTm9kZT1hO2c9cGQoZSxkKTtzd2l0Y2goZSl7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwiZW1iZWRcIjpGKFwibG9hZFwiLFxuYSk7aD1kO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihoPTA7aDxhYy5sZW5ndGg7aCsrKUYoYWNbaF0sYSk7aD1kO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpGKFwiZXJyb3JcIixhKTtoPWQ7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RihcImVycm9yXCIsYSk7RihcImxvYWRcIixhKTtoPWQ7YnJlYWs7Y2FzZSBcImZvcm1cIjpGKFwicmVzZXRcIixhKTtGKFwic3VibWl0XCIsYSk7aD1kO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RihcInRvZ2dsZVwiLGEpO2g9ZDticmVhaztjYXNlIFwiaW5wdXRcIjpBYihhLGQpO2g9emIoYSxkKTtGKFwiaW52YWxpZFwiLGEpO3JkKGMsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwib3B0aW9uXCI6aD1HYihhLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLl93cmFwcGVyU3RhdGU9e3dhc011bHRpcGxlOiEhZC5tdWx0aXBsZX07aD1uKHt9LGQse3ZhbHVlOnZvaWQgMH0pO0YoXCJpbnZhbGlkXCIsYSk7cmQoYyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOkpiKGEsXG5kKTtoPUliKGEsZCk7RihcImludmFsaWRcIixhKTtyZChjLFwib25DaGFuZ2VcIik7YnJlYWs7ZGVmYXVsdDpoPWR9b2QoZSxoKTt2YXIgaz1oO2ZvcihmIGluIGspaWYoay5oYXNPd25Qcm9wZXJ0eShmKSl7dmFyIGw9a1tmXTtcInN0eWxlXCI9PT1mP21kKGEsbCk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zj8obD1sP2wuX19odG1sOnZvaWQgMCxudWxsIT1sJiZRYihhLGwpKTpcImNoaWxkcmVuXCI9PT1mP1wic3RyaW5nXCI9PT10eXBlb2YgbD8oXCJ0ZXh0YXJlYVwiIT09ZXx8XCJcIiE9PWwpJiZSYihhLGwpOlwibnVtYmVyXCI9PT10eXBlb2YgbCYmUmIoYSxcIlwiK2wpOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1mJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09ZiYmXCJhdXRvRm9jdXNcIiE9PWYmJih2YS5oYXNPd25Qcm9wZXJ0eShmKT9udWxsIT1sJiZyZChjLGYpOm51bGwhPWwmJlhhKGEsZixsLGcpKX1zd2l0Y2goZSl7Y2FzZSBcImlucHV0XCI6eGIoYSk7RWIoYSxkLCExKTtcbmJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOnhiKGEpO0xiKGEpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpudWxsIT1kLnZhbHVlJiZhLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsXCJcIityYihkLnZhbHVlKSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEubXVsdGlwbGU9ISFkLm11bHRpcGxlO2M9ZC52YWx1ZTtudWxsIT1jP0hiKGEsISFkLm11bHRpcGxlLGMsITEpOm51bGwhPWQuZGVmYXVsdFZhbHVlJiZIYihhLCEhZC5tdWx0aXBsZSxkLmRlZmF1bHRWYWx1ZSwhMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgaC5vbkNsaWNrJiYoYS5vbmNsaWNrPXNkKX1GZChlLGQpJiYoYi5lZmZlY3RUYWd8PTQpfW51bGwhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD0xMjgpfXJldHVybiBudWxsO2Nhc2UgNjppZihhJiZudWxsIT1iLnN0YXRlTm9kZSlxaShhLGIsYS5tZW1vaXplZFByb3BzLGQpO2Vsc2V7aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBkJiZudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IodSgxNjYpKTtcbmM9Y2goYmguY3VycmVudCk7Y2goJGcuY3VycmVudCk7V2goYik/KGM9Yi5zdGF0ZU5vZGUsZD1iLm1lbW9pemVkUHJvcHMsY1tNZF09YixjLm5vZGVWYWx1ZSE9PWQmJihiLmVmZmVjdFRhZ3w9NCkpOihjPSg5PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoZCksY1tNZF09YixiLnN0YXRlTm9kZT1jKX1yZXR1cm4gbnVsbDtjYXNlIDEzOkgoTSk7ZD1iLm1lbW9pemVkU3RhdGU7aWYoMCE9PShiLmVmZmVjdFRhZyY2NCkpcmV0dXJuIGIuZXhwaXJhdGlvblRpbWU9YyxiO2M9bnVsbCE9PWQ7ZD0hMTtudWxsPT09YT92b2lkIDAhPT1iLm1lbW9pemVkUHJvcHMuZmFsbGJhY2smJldoKGIpOihlPWEubWVtb2l6ZWRTdGF0ZSxkPW51bGwhPT1lLGN8fG51bGw9PT1lfHwoZT1hLmNoaWxkLnNpYmxpbmcsbnVsbCE9PWUmJihmPWIuZmlyc3RFZmZlY3QsbnVsbCE9PWY/KGIuZmlyc3RFZmZlY3Q9ZSxlLm5leHRFZmZlY3Q9Zik6KGIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PVxuZSxlLm5leHRFZmZlY3Q9bnVsbCksZS5lZmZlY3RUYWc9OCkpKTtpZihjJiYhZCYmMCE9PShiLm1vZGUmMikpaWYobnVsbD09PWEmJiEwIT09Yi5tZW1vaXplZFByb3BzLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrfHwwIT09KE0uY3VycmVudCYxKSlTPT09dGkmJihTPXVpKTtlbHNle2lmKFM9PT10aXx8Uz09PXVpKVM9dmk7MCE9PXdpJiZudWxsIT09VCYmKHhpKFQsVSkseWkoVCx3aSkpfWlmKGN8fGQpYi5lZmZlY3RUYWd8PTQ7cmV0dXJuIG51bGw7Y2FzZSA0OnJldHVybiBlaCgpLG9pKGIpLG51bGw7Y2FzZSAxMDpyZXR1cm4gb2coYiksbnVsbDtjYXNlIDE3OnJldHVybiBMKGIudHlwZSkmJkRmKCksbnVsbDtjYXNlIDE5OkgoTSk7ZD1iLm1lbW9pemVkU3RhdGU7aWYobnVsbD09PWQpcmV0dXJuIG51bGw7ZT0wIT09KGIuZWZmZWN0VGFnJjY0KTtmPWQucmVuZGVyaW5nO2lmKG51bGw9PT1mKWlmKGUpcmkoZCwhMSk7ZWxzZXtpZihTIT09dGl8fG51bGwhPT1hJiYwIT09KGEuZWZmZWN0VGFnJlxuNjQpKWZvcihmPWIuY2hpbGQ7bnVsbCE9PWY7KXthPWhoKGYpO2lmKG51bGwhPT1hKXtiLmVmZmVjdFRhZ3w9NjQ7cmkoZCwhMSk7ZT1hLnVwZGF0ZVF1ZXVlO251bGwhPT1lJiYoYi51cGRhdGVRdWV1ZT1lLGIuZWZmZWN0VGFnfD00KTtudWxsPT09ZC5sYXN0RWZmZWN0JiYoYi5maXJzdEVmZmVjdD1udWxsKTtiLmxhc3RFZmZlY3Q9ZC5sYXN0RWZmZWN0O2ZvcihkPWIuY2hpbGQ7bnVsbCE9PWQ7KWU9ZCxmPWMsZS5lZmZlY3RUYWcmPTIsZS5uZXh0RWZmZWN0PW51bGwsZS5maXJzdEVmZmVjdD1udWxsLGUubGFzdEVmZmVjdD1udWxsLGE9ZS5hbHRlcm5hdGUsbnVsbD09PWE/KGUuY2hpbGRFeHBpcmF0aW9uVGltZT0wLGUuZXhwaXJhdGlvblRpbWU9ZixlLmNoaWxkPW51bGwsZS5tZW1vaXplZFByb3BzPW51bGwsZS5tZW1vaXplZFN0YXRlPW51bGwsZS51cGRhdGVRdWV1ZT1udWxsLGUuZGVwZW5kZW5jaWVzPW51bGwpOihlLmNoaWxkRXhwaXJhdGlvblRpbWU9YS5jaGlsZEV4cGlyYXRpb25UaW1lLFxuZS5leHBpcmF0aW9uVGltZT1hLmV4cGlyYXRpb25UaW1lLGUuY2hpbGQ9YS5jaGlsZCxlLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzLGUubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGUsZS51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGY9YS5kZXBlbmRlbmNpZXMsZS5kZXBlbmRlbmNpZXM9bnVsbD09PWY/bnVsbDp7ZXhwaXJhdGlvblRpbWU6Zi5leHBpcmF0aW9uVGltZSxmaXJzdENvbnRleHQ6Zi5maXJzdENvbnRleHQscmVzcG9uZGVyczpmLnJlc3BvbmRlcnN9KSxkPWQuc2libGluZztJKE0sTS5jdXJyZW50JjF8Mik7cmV0dXJuIGIuY2hpbGR9Zj1mLnNpYmxpbmd9fWVsc2V7aWYoIWUpaWYoYT1oaChmKSxudWxsIT09YSl7aWYoYi5lZmZlY3RUYWd8PTY0LGU9ITAsYz1hLnVwZGF0ZVF1ZXVlLG51bGwhPT1jJiYoYi51cGRhdGVRdWV1ZT1jLGIuZWZmZWN0VGFnfD00KSxyaShkLCEwKSxudWxsPT09ZC50YWlsJiZcImhpZGRlblwiPT09ZC50YWlsTW9kZSYmIWYuYWx0ZXJuYXRlKXJldHVybiBiPVxuYi5sYXN0RWZmZWN0PWQubGFzdEVmZmVjdCxudWxsIT09YiYmKGIubmV4dEVmZmVjdD1udWxsKSxudWxsfWVsc2UgMiokZigpLWQucmVuZGVyaW5nU3RhcnRUaW1lPmQudGFpbEV4cGlyYXRpb24mJjE8YyYmKGIuZWZmZWN0VGFnfD02NCxlPSEwLHJpKGQsITEpLGIuZXhwaXJhdGlvblRpbWU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPWMtMSk7ZC5pc0JhY2t3YXJkcz8oZi5zaWJsaW5nPWIuY2hpbGQsYi5jaGlsZD1mKTooYz1kLmxhc3QsbnVsbCE9PWM/Yy5zaWJsaW5nPWY6Yi5jaGlsZD1mLGQubGFzdD1mKX1yZXR1cm4gbnVsbCE9PWQudGFpbD8oMD09PWQudGFpbEV4cGlyYXRpb24mJihkLnRhaWxFeHBpcmF0aW9uPSRmKCkrNTAwKSxjPWQudGFpbCxkLnJlbmRlcmluZz1jLGQudGFpbD1jLnNpYmxpbmcsZC5sYXN0RWZmZWN0PWIubGFzdEVmZmVjdCxkLnJlbmRlcmluZ1N0YXJ0VGltZT0kZigpLGMuc2libGluZz1udWxsLGI9TS5jdXJyZW50LEkoTSxlP2ImMXwyOmImMSksYyk6bnVsbH10aHJvdyBFcnJvcih1KDE1NixcbmIudGFnKSk7fWZ1bmN0aW9uIHppKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSAxOkwoYS50eXBlKSYmRGYoKTt2YXIgYj1hLmVmZmVjdFRhZztyZXR1cm4gYiY0MDk2PyhhLmVmZmVjdFRhZz1iJi00MDk3fDY0LGEpOm51bGw7Y2FzZSAzOmVoKCk7SChLKTtIKEopO2I9YS5lZmZlY3RUYWc7aWYoMCE9PShiJjY0KSl0aHJvdyBFcnJvcih1KDI4NSkpO2EuZWZmZWN0VGFnPWImLTQwOTd8NjQ7cmV0dXJuIGE7Y2FzZSA1OnJldHVybiBnaChhKSxudWxsO2Nhc2UgMTM6cmV0dXJuIEgoTSksYj1hLmVmZmVjdFRhZyxiJjQwOTY/KGEuZWZmZWN0VGFnPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDE5OnJldHVybiBIKE0pLG51bGw7Y2FzZSA0OnJldHVybiBlaCgpLG51bGw7Y2FzZSAxMDpyZXR1cm4gb2coYSksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX1mdW5jdGlvbiBBaShhLGIpe3JldHVybnt2YWx1ZTphLHNvdXJjZTpiLHN0YWNrOnFiKGIpfX1cbnZhciBCaT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha1NldD9XZWFrU2V0OlNldDtmdW5jdGlvbiBDaShhLGIpe3ZhciBjPWIuc291cmNlLGQ9Yi5zdGFjaztudWxsPT09ZCYmbnVsbCE9PWMmJihkPXFiKGMpKTtudWxsIT09YyYmcGIoYy50eXBlKTtiPWIudmFsdWU7bnVsbCE9PWEmJjE9PT1hLnRhZyYmcGIoYS50eXBlKTt0cnl7Y29uc29sZS5lcnJvcihiKX1jYXRjaChlKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgZTt9KX19ZnVuY3Rpb24gRGkoYSxiKXt0cnl7Yi5wcm9wcz1hLm1lbW9pemVkUHJvcHMsYi5zdGF0ZT1hLm1lbW9pemVkU3RhdGUsYi5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKGMpe0VpKGEsYyl9fWZ1bmN0aW9uIEZpKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXRyeXtiKG51bGwpfWNhdGNoKGMpe0VpKGEsYyl9ZWxzZSBiLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIEdpKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmNhc2UgMjI6cmV0dXJuO2Nhc2UgMTppZihiLmVmZmVjdFRhZyYyNTYmJm51bGwhPT1hKXt2YXIgYz1hLm1lbW9pemVkUHJvcHMsZD1hLm1lbW9pemVkU3RhdGU7YT1iLnN0YXRlTm9kZTtiPWEuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUoYi5lbGVtZW50VHlwZT09PWIudHlwZT9jOmlnKGIudHlwZSxjKSxkKTthLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlPWJ9cmV0dXJuO2Nhc2UgMzpjYXNlIDU6Y2FzZSA2OmNhc2UgNDpjYXNlIDE3OnJldHVybn10aHJvdyBFcnJvcih1KDE2MykpO31cbmZ1bmN0aW9uIEhpKGEsYil7Yj1iLnVwZGF0ZVF1ZXVlO2I9bnVsbCE9PWI/Yi5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWIpe3ZhciBjPWI9Yi5uZXh0O2Rve2lmKChjLnRhZyZhKT09PWEpe3ZhciBkPWMuZGVzdHJveTtjLmRlc3Ryb3k9dm9pZCAwO3ZvaWQgMCE9PWQmJmQoKX1jPWMubmV4dH13aGlsZShjIT09Yil9fWZ1bmN0aW9uIElpKGEsYil7Yj1iLnVwZGF0ZVF1ZXVlO2I9bnVsbCE9PWI/Yi5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWIpe3ZhciBjPWI9Yi5uZXh0O2Rve2lmKChjLnRhZyZhKT09PWEpe3ZhciBkPWMuY3JlYXRlO2MuZGVzdHJveT1kKCl9Yz1jLm5leHR9d2hpbGUoYyE9PWIpfX1cbmZ1bmN0aW9uIEppKGEsYixjKXtzd2l0Y2goYy50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpJaSgzLGMpO3JldHVybjtjYXNlIDE6YT1jLnN0YXRlTm9kZTtpZihjLmVmZmVjdFRhZyY0KWlmKG51bGw9PT1iKWEuY29tcG9uZW50RGlkTW91bnQoKTtlbHNle3ZhciBkPWMuZWxlbWVudFR5cGU9PT1jLnR5cGU/Yi5tZW1vaXplZFByb3BzOmlnKGMudHlwZSxiLm1lbW9pemVkUHJvcHMpO2EuY29tcG9uZW50RGlkVXBkYXRlKGQsYi5tZW1vaXplZFN0YXRlLGEuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUpfWI9Yy51cGRhdGVRdWV1ZTtudWxsIT09YiYmQ2coYyxiLGEpO3JldHVybjtjYXNlIDM6Yj1jLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iKXthPW51bGw7aWYobnVsbCE9PWMuY2hpbGQpc3dpdGNoKGMuY2hpbGQudGFnKXtjYXNlIDU6YT1jLmNoaWxkLnN0YXRlTm9kZTticmVhaztjYXNlIDE6YT1jLmNoaWxkLnN0YXRlTm9kZX1DZyhjLGIsYSl9cmV0dXJuO1xuY2FzZSA1OmE9Yy5zdGF0ZU5vZGU7bnVsbD09PWImJmMuZWZmZWN0VGFnJjQmJkZkKGMudHlwZSxjLm1lbW9pemVkUHJvcHMpJiZhLmZvY3VzKCk7cmV0dXJuO2Nhc2UgNjpyZXR1cm47Y2FzZSA0OnJldHVybjtjYXNlIDEyOnJldHVybjtjYXNlIDEzOm51bGw9PT1jLm1lbW9pemVkU3RhdGUmJihjPWMuYWx0ZXJuYXRlLG51bGwhPT1jJiYoYz1jLm1lbW9pemVkU3RhdGUsbnVsbCE9PWMmJihjPWMuZGVoeWRyYXRlZCxudWxsIT09YyYmVmMoYykpKSk7cmV0dXJuO2Nhc2UgMTk6Y2FzZSAxNzpjYXNlIDIwOmNhc2UgMjE6cmV0dXJufXRocm93IEVycm9yKHUoMTYzKSk7fVxuZnVuY3Rpb24gS2koYSxiLGMpe1wiZnVuY3Rpb25cIj09PXR5cGVvZiBMaSYmTGkoYik7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6Y2FzZSAyMjphPWIudXBkYXRlUXVldWU7aWYobnVsbCE9PWEmJihhPWEubGFzdEVmZmVjdCxudWxsIT09YSkpe3ZhciBkPWEubmV4dDtjZyg5NzxjPzk3OmMsZnVuY3Rpb24oKXt2YXIgYT1kO2Rve3ZhciBjPWEuZGVzdHJveTtpZih2b2lkIDAhPT1jKXt2YXIgZz1iO3RyeXtjKCl9Y2F0Y2goaCl7RWkoZyxoKX19YT1hLm5leHR9d2hpbGUoYSE9PWQpfSl9YnJlYWs7Y2FzZSAxOkZpKGIpO2M9Yi5zdGF0ZU5vZGU7XCJmdW5jdGlvblwiPT09dHlwZW9mIGMuY29tcG9uZW50V2lsbFVubW91bnQmJkRpKGIsYyk7YnJlYWs7Y2FzZSA1OkZpKGIpO2JyZWFrO2Nhc2UgNDpNaShhLGIsYyl9fVxuZnVuY3Rpb24gTmkoYSl7dmFyIGI9YS5hbHRlcm5hdGU7YS5yZXR1cm49bnVsbDthLmNoaWxkPW51bGw7YS5tZW1vaXplZFN0YXRlPW51bGw7YS51cGRhdGVRdWV1ZT1udWxsO2EuZGVwZW5kZW5jaWVzPW51bGw7YS5hbHRlcm5hdGU9bnVsbDthLmZpcnN0RWZmZWN0PW51bGw7YS5sYXN0RWZmZWN0PW51bGw7YS5wZW5kaW5nUHJvcHM9bnVsbDthLm1lbW9pemVkUHJvcHM9bnVsbDthLnN0YXRlTm9kZT1udWxsO251bGwhPT1iJiZOaShiKX1mdW5jdGlvbiBPaShhKXtyZXR1cm4gNT09PWEudGFnfHwzPT09YS50YWd8fDQ9PT1hLnRhZ31cbmZ1bmN0aW9uIFBpKGEpe2E6e2Zvcih2YXIgYj1hLnJldHVybjtudWxsIT09Yjspe2lmKE9pKGIpKXt2YXIgYz1iO2JyZWFrIGF9Yj1iLnJldHVybn10aHJvdyBFcnJvcih1KDE2MCkpO31iPWMuc3RhdGVOb2RlO3N3aXRjaChjLnRhZyl7Y2FzZSA1OnZhciBkPSExO2JyZWFrO2Nhc2UgMzpiPWIuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2Nhc2UgNDpiPWIuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgxNjEpKTt9Yy5lZmZlY3RUYWcmMTYmJihSYihiLFwiXCIpLGMuZWZmZWN0VGFnJj0tMTcpO2E6Yjpmb3IoYz1hOzspe2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8T2koYy5yZXR1cm4pKXtjPW51bGw7YnJlYWsgYX1jPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Zm9yKGM9Yy5zaWJsaW5nOzUhPT1jLnRhZyYmNiE9PWMudGFnJiYxOCE9PWMudGFnOyl7aWYoYy5lZmZlY3RUYWcmMiljb250aW51ZSBiO1xuaWYobnVsbD09PWMuY2hpbGR8fDQ9PT1jLnRhZyljb250aW51ZSBiO2Vsc2UgYy5jaGlsZC5yZXR1cm49YyxjPWMuY2hpbGR9aWYoIShjLmVmZmVjdFRhZyYyKSl7Yz1jLnN0YXRlTm9kZTticmVhayBhfX1kP1FpKGEsYyxiKTpSaShhLGMsYil9XG5mdW5jdGlvbiBRaShhLGIsYyl7dmFyIGQ9YS50YWcsZT01PT09ZHx8Nj09PWQ7aWYoZSlhPWU/YS5zdGF0ZU5vZGU6YS5zdGF0ZU5vZGUuaW5zdGFuY2UsYj84PT09Yy5ub2RlVHlwZT9jLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGEsYik6Yy5pbnNlcnRCZWZvcmUoYSxiKTooOD09PWMubm9kZVR5cGU/KGI9Yy5wYXJlbnROb2RlLGIuaW5zZXJ0QmVmb3JlKGEsYykpOihiPWMsYi5hcHBlbmRDaGlsZChhKSksYz1jLl9yZWFjdFJvb3RDb250YWluZXIsbnVsbCE9PWMmJnZvaWQgMCE9PWN8fG51bGwhPT1iLm9uY2xpY2t8fChiLm9uY2xpY2s9c2QpKTtlbHNlIGlmKDQhPT1kJiYoYT1hLmNoaWxkLG51bGwhPT1hKSlmb3IoUWkoYSxiLGMpLGE9YS5zaWJsaW5nO251bGwhPT1hOylRaShhLGIsYyksYT1hLnNpYmxpbmd9XG5mdW5jdGlvbiBSaShhLGIsYyl7dmFyIGQ9YS50YWcsZT01PT09ZHx8Nj09PWQ7aWYoZSlhPWU/YS5zdGF0ZU5vZGU6YS5zdGF0ZU5vZGUuaW5zdGFuY2UsYj9jLmluc2VydEJlZm9yZShhLGIpOmMuYXBwZW5kQ2hpbGQoYSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKFJpKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspUmkoYSxiLGMpLGE9YS5zaWJsaW5nfVxuZnVuY3Rpb24gTWkoYSxiLGMpe2Zvcih2YXIgZD1iLGU9ITEsZixnOzspe2lmKCFlKXtlPWQucmV0dXJuO2E6Zm9yKDs7KXtpZihudWxsPT09ZSl0aHJvdyBFcnJvcih1KDE2MCkpO2Y9ZS5zdGF0ZU5vZGU7c3dpdGNoKGUudGFnKXtjYXNlIDU6Zz0hMTticmVhayBhO2Nhc2UgMzpmPWYuY29udGFpbmVySW5mbztnPSEwO2JyZWFrIGE7Y2FzZSA0OmY9Zi5jb250YWluZXJJbmZvO2c9ITA7YnJlYWsgYX1lPWUucmV0dXJufWU9ITB9aWYoNT09PWQudGFnfHw2PT09ZC50YWcpe2E6Zm9yKHZhciBoPWEsaz1kLGw9YyxtPWs7OylpZihLaShoLG0sbCksbnVsbCE9PW0uY2hpbGQmJjQhPT1tLnRhZyltLmNoaWxkLnJldHVybj1tLG09bS5jaGlsZDtlbHNle2lmKG09PT1rKWJyZWFrIGE7Zm9yKDtudWxsPT09bS5zaWJsaW5nOyl7aWYobnVsbD09PW0ucmV0dXJufHxtLnJldHVybj09PWspYnJlYWsgYTttPW0ucmV0dXJufW0uc2libGluZy5yZXR1cm49bS5yZXR1cm47bT1tLnNpYmxpbmd9Zz8oaD1cbmYsaz1kLnN0YXRlTm9kZSw4PT09aC5ub2RlVHlwZT9oLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoayk6aC5yZW1vdmVDaGlsZChrKSk6Zi5yZW1vdmVDaGlsZChkLnN0YXRlTm9kZSl9ZWxzZSBpZig0PT09ZC50YWcpe2lmKG51bGwhPT1kLmNoaWxkKXtmPWQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87Zz0hMDtkLmNoaWxkLnJldHVybj1kO2Q9ZC5jaGlsZDtjb250aW51ZX19ZWxzZSBpZihLaShhLGQsYyksbnVsbCE9PWQuY2hpbGQpe2QuY2hpbGQucmV0dXJuPWQ7ZD1kLmNoaWxkO2NvbnRpbnVlfWlmKGQ9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWQuc2libGluZzspe2lmKG51bGw9PT1kLnJldHVybnx8ZC5yZXR1cm49PT1iKXJldHVybjtkPWQucmV0dXJuOzQ9PT1kLnRhZyYmKGU9ITEpfWQuc2libGluZy5yZXR1cm49ZC5yZXR1cm47ZD1kLnNpYmxpbmd9fVxuZnVuY3Rpb24gU2koYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpjYXNlIDIyOkhpKDMsYik7cmV0dXJuO2Nhc2UgMTpyZXR1cm47Y2FzZSA1OnZhciBjPWIuc3RhdGVOb2RlO2lmKG51bGwhPWMpe3ZhciBkPWIubWVtb2l6ZWRQcm9wcyxlPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpkO2E9Yi50eXBlO3ZhciBmPWIudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT1udWxsO2lmKG51bGwhPT1mKXtjW05kXT1kO1wiaW5wdXRcIj09PWEmJlwicmFkaW9cIj09PWQudHlwZSYmbnVsbCE9ZC5uYW1lJiZCYihjLGQpO3BkKGEsZSk7Yj1wZChhLGQpO2ZvcihlPTA7ZTxmLmxlbmd0aDtlKz0yKXt2YXIgZz1mW2VdLGg9ZltlKzFdO1wic3R5bGVcIj09PWc/bWQoYyxoKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1nP1FiKGMsaCk6XCJjaGlsZHJlblwiPT09Zz9SYihjLGgpOlhhKGMsZyxoLGIpfXN3aXRjaChhKXtjYXNlIFwiaW5wdXRcIjpDYihjLGQpO2JyZWFrO1xuY2FzZSBcInRleHRhcmVhXCI6S2IoYyxkKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1jLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGUsYy5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlPSEhZC5tdWx0aXBsZSxhPWQudmFsdWUsbnVsbCE9YT9IYihjLCEhZC5tdWx0aXBsZSxhLCExKTpiIT09ISFkLm11bHRpcGxlJiYobnVsbCE9ZC5kZWZhdWx0VmFsdWU/SGIoYywhIWQubXVsdGlwbGUsZC5kZWZhdWx0VmFsdWUsITApOkhiKGMsISFkLm11bHRpcGxlLGQubXVsdGlwbGU/W106XCJcIiwhMSkpfX19cmV0dXJuO2Nhc2UgNjppZihudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IodSgxNjIpKTtiLnN0YXRlTm9kZS5ub2RlVmFsdWU9Yi5tZW1vaXplZFByb3BzO3JldHVybjtjYXNlIDM6Yj1iLnN0YXRlTm9kZTtiLmh5ZHJhdGUmJihiLmh5ZHJhdGU9ITEsVmMoYi5jb250YWluZXJJbmZvKSk7cmV0dXJuO2Nhc2UgMTI6cmV0dXJuO2Nhc2UgMTM6Yz1iO251bGw9PT1iLm1lbW9pemVkU3RhdGU/XG5kPSExOihkPSEwLGM9Yi5jaGlsZCxUaT0kZigpKTtpZihudWxsIT09YylhOmZvcihhPWM7Oyl7aWYoNT09PWEudGFnKWY9YS5zdGF0ZU5vZGUsZD8oZj1mLnN0eWxlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLnNldFByb3BlcnR5P2Yuc2V0UHJvcGVydHkoXCJkaXNwbGF5XCIsXCJub25lXCIsXCJpbXBvcnRhbnRcIik6Zi5kaXNwbGF5PVwibm9uZVwiKTooZj1hLnN0YXRlTm9kZSxlPWEubWVtb2l6ZWRQcm9wcy5zdHlsZSxlPXZvaWQgMCE9PWUmJm51bGwhPT1lJiZlLmhhc093blByb3BlcnR5KFwiZGlzcGxheVwiKT9lLmRpc3BsYXk6bnVsbCxmLnN0eWxlLmRpc3BsYXk9bGQoXCJkaXNwbGF5XCIsZSkpO2Vsc2UgaWYoNj09PWEudGFnKWEuc3RhdGVOb2RlLm5vZGVWYWx1ZT1kP1wiXCI6YS5tZW1vaXplZFByb3BzO2Vsc2UgaWYoMTM9PT1hLnRhZyYmbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSYmbnVsbD09PWEubWVtb2l6ZWRTdGF0ZS5kZWh5ZHJhdGVkKXtmPWEuY2hpbGQuc2libGluZztmLnJldHVybj1hO2E9XG5mO2NvbnRpbnVlfWVsc2UgaWYobnVsbCE9PWEuY2hpbGQpe2EuY2hpbGQucmV0dXJuPWE7YT1hLmNoaWxkO2NvbnRpbnVlfWlmKGE9PT1jKWJyZWFrO2Zvcig7bnVsbD09PWEuc2libGluZzspe2lmKG51bGw9PT1hLnJldHVybnx8YS5yZXR1cm49PT1jKWJyZWFrIGE7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2E9YS5zaWJsaW5nfVVpKGIpO3JldHVybjtjYXNlIDE5OlVpKGIpO3JldHVybjtjYXNlIDE3OnJldHVybn10aHJvdyBFcnJvcih1KDE2MykpO31mdW5jdGlvbiBVaShhKXt2YXIgYj1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iKXthLnVwZGF0ZVF1ZXVlPW51bGw7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbD09PWMmJihjPWEuc3RhdGVOb2RlPW5ldyBCaSk7Yi5mb3JFYWNoKGZ1bmN0aW9uKGIpe3ZhciBkPVZpLmJpbmQobnVsbCxhLGIpO2MuaGFzKGIpfHwoYy5hZGQoYiksYi50aGVuKGQsZCkpfSl9fVxudmFyIFdpPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrTWFwP1dlYWtNYXA6TWFwO2Z1bmN0aW9uIFhpKGEsYixjKXtjPXdnKGMsbnVsbCk7Yy50YWc9MztjLnBheWxvYWQ9e2VsZW1lbnQ6bnVsbH07dmFyIGQ9Yi52YWx1ZTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7WWl8fChZaT0hMCxaaT1kKTtDaShhLGIpfTtyZXR1cm4gY31cbmZ1bmN0aW9uICRpKGEsYixjKXtjPXdnKGMsbnVsbCk7Yy50YWc9Mzt2YXIgZD1hLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgZT1iLnZhbHVlO2MucGF5bG9hZD1mdW5jdGlvbigpe0NpKGEsYik7cmV0dXJuIGQoZSl9fXZhciBmPWEuc3RhdGVOb2RlO251bGwhPT1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5jb21wb25lbnREaWRDYXRjaCYmKGMuY2FsbGJhY2s9ZnVuY3Rpb24oKXtcImZ1bmN0aW9uXCIhPT10eXBlb2YgZCYmKG51bGw9PT1haj9haj1uZXcgU2V0KFt0aGlzXSk6YWouYWRkKHRoaXMpLENpKGEsYikpO3ZhciBjPWIuc3RhY2s7dGhpcy5jb21wb25lbnREaWRDYXRjaChiLnZhbHVlLHtjb21wb25lbnRTdGFjazpudWxsIT09Yz9jOlwiXCJ9KX0pO3JldHVybiBjfVxudmFyIGJqPU1hdGguY2VpbCxjaj1XYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGRqPVdhLlJlYWN0Q3VycmVudE93bmVyLFY9MCxlaj04LGZqPTE2LGdqPTMyLHRpPTAsaGo9MSxpaj0yLHVpPTMsdmk9NCxqaj01LFc9VixUPW51bGwsWD1udWxsLFU9MCxTPXRpLGtqPW51bGwsbGo9MTA3Mzc0MTgyMyxtaj0xMDczNzQxODIzLG5qPW51bGwsd2k9MCxvaj0hMSxUaT0wLHBqPTUwMCxZPW51bGwsWWk9ITEsWmk9bnVsbCxhaj1udWxsLHFqPSExLHJqPW51bGwsc2o9OTAsdGo9bnVsbCx1aj0wLHZqPW51bGwsd2o9MDtmdW5jdGlvbiBHZygpe3JldHVybihXJihmanxnaikpIT09Vj8xMDczNzQxODIxLSgkZigpLzEwfDApOjAhPT13aj93ajp3aj0xMDczNzQxODIxLSgkZigpLzEwfDApfVxuZnVuY3Rpb24gSGcoYSxiLGMpe2I9Yi5tb2RlO2lmKDA9PT0oYiYyKSlyZXR1cm4gMTA3Mzc0MTgyMzt2YXIgZD1hZygpO2lmKDA9PT0oYiY0KSlyZXR1cm4gOTk9PT1kPzEwNzM3NDE4MjM6MTA3Mzc0MTgyMjtpZigoVyZmaikhPT1WKXJldHVybiBVO2lmKG51bGwhPT1jKWE9aGcoYSxjLnRpbWVvdXRNc3wwfHw1RTMsMjUwKTtlbHNlIHN3aXRjaChkKXtjYXNlIDk5OmE9MTA3Mzc0MTgyMzticmVhaztjYXNlIDk4OmE9aGcoYSwxNTAsMTAwKTticmVhaztjYXNlIDk3OmNhc2UgOTY6YT1oZyhhLDVFMywyNTApO2JyZWFrO2Nhc2UgOTU6YT0yO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgzMjYpKTt9bnVsbCE9PVQmJmE9PT1VJiYtLWE7cmV0dXJuIGF9XG5mdW5jdGlvbiBJZyhhLGIpe2lmKDUwPHVqKXRocm93IHVqPTAsdmo9bnVsbCxFcnJvcih1KDE4NSkpO2E9eGooYSxiKTtpZihudWxsIT09YSl7dmFyIGM9YWcoKTsxMDczNzQxODIzPT09Yj8oVyZlaikhPT1WJiYoVyYoZmp8Z2opKT09PVY/eWooYSk6KFooYSksVz09PVYmJmdnKCkpOlooYSk7KFcmNCk9PT1WfHw5OCE9PWMmJjk5IT09Y3x8KG51bGw9PT10aj90aj1uZXcgTWFwKFtbYSxiXV0pOihjPXRqLmdldChhKSwodm9pZCAwPT09Y3x8Yz5iKSYmdGouc2V0KGEsYikpKX19XG5mdW5jdGlvbiB4aihhLGIpe2EuZXhwaXJhdGlvblRpbWU8YiYmKGEuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU8YiYmKGMuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGQ9YS5yZXR1cm4sZT1udWxsO2lmKG51bGw9PT1kJiYzPT09YS50YWcpZT1hLnN0YXRlTm9kZTtlbHNlIGZvcig7bnVsbCE9PWQ7KXtjPWQuYWx0ZXJuYXRlO2QuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoZC5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO251bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGMuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtpZihudWxsPT09ZC5yZXR1cm4mJjM9PT1kLnRhZyl7ZT1kLnN0YXRlTm9kZTticmVha31kPWQucmV0dXJufW51bGwhPT1lJiYoVD09PWUmJihCZyhiKSxTPT09dmkmJnhpKGUsVSkpLHlpKGUsYikpO3JldHVybiBlfVxuZnVuY3Rpb24gemooYSl7dmFyIGI9YS5sYXN0RXhwaXJlZFRpbWU7aWYoMCE9PWIpcmV0dXJuIGI7Yj1hLmZpcnN0UGVuZGluZ1RpbWU7aWYoIUFqKGEsYikpcmV0dXJuIGI7dmFyIGM9YS5sYXN0UGluZ2VkVGltZTthPWEubmV4dEtub3duUGVuZGluZ0xldmVsO2E9Yz5hP2M6YTtyZXR1cm4gMj49YSYmYiE9PWE/MDphfVxuZnVuY3Rpb24gWihhKXtpZigwIT09YS5sYXN0RXhwaXJlZFRpbWUpYS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPTEwNzM3NDE4MjMsYS5jYWxsYmFja1ByaW9yaXR5PTk5LGEuY2FsbGJhY2tOb2RlPWVnKHlqLmJpbmQobnVsbCxhKSk7ZWxzZXt2YXIgYj16aihhKSxjPWEuY2FsbGJhY2tOb2RlO2lmKDA9PT1iKW51bGwhPT1jJiYoYS5jYWxsYmFja05vZGU9bnVsbCxhLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9MCxhLmNhbGxiYWNrUHJpb3JpdHk9OTApO2Vsc2V7dmFyIGQ9R2coKTsxMDczNzQxODIzPT09Yj9kPTk5OjE9PT1ifHwyPT09Yj9kPTk1OihkPTEwKigxMDczNzQxODIxLWIpLTEwKigxMDczNzQxODIxLWQpLGQ9MD49ZD85OToyNTA+PWQ/OTg6NTI1MD49ZD85Nzo5NSk7aWYobnVsbCE9PWMpe3ZhciBlPWEuY2FsbGJhY2tQcmlvcml0eTtpZihhLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9PT1iJiZlPj1kKXJldHVybjtjIT09VGYmJktmKGMpfWEuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT1cbmI7YS5jYWxsYmFja1ByaW9yaXR5PWQ7Yj0xMDczNzQxODIzPT09Yj9lZyh5ai5iaW5kKG51bGwsYSkpOmRnKGQsQmouYmluZChudWxsLGEpLHt0aW1lb3V0OjEwKigxMDczNzQxODIxLWIpLSRmKCl9KTthLmNhbGxiYWNrTm9kZT1ifX19XG5mdW5jdGlvbiBCaihhLGIpe3dqPTA7aWYoYilyZXR1cm4gYj1HZygpLENqKGEsYiksWihhKSxudWxsO3ZhciBjPXpqKGEpO2lmKDAhPT1jKXtiPWEuY2FsbGJhY2tOb2RlO2lmKChXJihmanxnaikpIT09Vil0aHJvdyBFcnJvcih1KDMyNykpO0RqKCk7YT09PVQmJmM9PT1VfHxFaihhLGMpO2lmKG51bGwhPT1YKXt2YXIgZD1XO1d8PWZqO3ZhciBlPUZqKCk7ZG8gdHJ5e0dqKCk7YnJlYWt9Y2F0Y2goaCl7SGooYSxoKX13aGlsZSgxKTtuZygpO1c9ZDtjai5jdXJyZW50PWU7aWYoUz09PWhqKXRocm93IGI9a2osRWooYSxjKSx4aShhLGMpLFooYSksYjtpZihudWxsPT09WClzd2l0Y2goZT1hLmZpbmlzaGVkV29yaz1hLmN1cnJlbnQuYWx0ZXJuYXRlLGEuZmluaXNoZWRFeHBpcmF0aW9uVGltZT1jLGQ9UyxUPW51bGwsZCl7Y2FzZSB0aTpjYXNlIGhqOnRocm93IEVycm9yKHUoMzQ1KSk7Y2FzZSBpajpDaihhLDI8Yz8yOmMpO2JyZWFrO2Nhc2UgdWk6eGkoYSxjKTtkPWEubGFzdFN1c3BlbmRlZFRpbWU7XG5jPT09ZCYmKGEubmV4dEtub3duUGVuZGluZ0xldmVsPUlqKGUpKTtpZigxMDczNzQxODIzPT09bGomJihlPVRpK3BqLSRmKCksMTA8ZSkpe2lmKG9qKXt2YXIgZj1hLmxhc3RQaW5nZWRUaW1lO2lmKDA9PT1mfHxmPj1jKXthLmxhc3RQaW5nZWRUaW1lPWM7RWooYSxjKTticmVha319Zj16aihhKTtpZigwIT09ZiYmZiE9PWMpYnJlYWs7aWYoMCE9PWQmJmQhPT1jKXthLmxhc3RQaW5nZWRUaW1lPWQ7YnJlYWt9YS50aW1lb3V0SGFuZGxlPUhkKEpqLmJpbmQobnVsbCxhKSxlKTticmVha31KaihhKTticmVhaztjYXNlIHZpOnhpKGEsYyk7ZD1hLmxhc3RTdXNwZW5kZWRUaW1lO2M9PT1kJiYoYS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9SWooZSkpO2lmKG9qJiYoZT1hLmxhc3RQaW5nZWRUaW1lLDA9PT1lfHxlPj1jKSl7YS5sYXN0UGluZ2VkVGltZT1jO0VqKGEsYyk7YnJlYWt9ZT16aihhKTtpZigwIT09ZSYmZSE9PWMpYnJlYWs7aWYoMCE9PWQmJmQhPT1jKXthLmxhc3RQaW5nZWRUaW1lPVxuZDticmVha30xMDczNzQxODIzIT09bWo/ZD0xMCooMTA3Mzc0MTgyMS1taiktJGYoKToxMDczNzQxODIzPT09bGo/ZD0wOihkPTEwKigxMDczNzQxODIxLWxqKS01RTMsZT0kZigpLGM9MTAqKDEwNzM3NDE4MjEtYyktZSxkPWUtZCwwPmQmJihkPTApLGQ9KDEyMD5kPzEyMDo0ODA+ZD80ODA6MTA4MD5kPzEwODA6MTkyMD5kPzE5MjA6M0UzPmQ/M0UzOjQzMjA+ZD80MzIwOjE5NjAqYmooZC8xOTYwKSktZCxjPGQmJihkPWMpKTtpZigxMDxkKXthLnRpbWVvdXRIYW5kbGU9SGQoSmouYmluZChudWxsLGEpLGQpO2JyZWFrfUpqKGEpO2JyZWFrO2Nhc2Ugamo6aWYoMTA3Mzc0MTgyMyE9PWxqJiZudWxsIT09bmope2Y9bGo7dmFyIGc9bmo7ZD1nLmJ1c3lNaW5EdXJhdGlvbk1zfDA7MD49ZD9kPTA6KGU9Zy5idXN5RGVsYXlNc3wwLGY9JGYoKS0oMTAqKDEwNzM3NDE4MjEtZiktKGcudGltZW91dE1zfDB8fDVFMykpLGQ9Zjw9ZT8wOmUrZC1mKTtpZigxMDxkKXt4aShhLGMpO2EudGltZW91dEhhbmRsZT1cbkhkKEpqLmJpbmQobnVsbCxhKSxkKTticmVha319SmooYSk7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDMyOSkpO31aKGEpO2lmKGEuY2FsbGJhY2tOb2RlPT09YilyZXR1cm4gQmouYmluZChudWxsLGEpfX1yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIHlqKGEpe3ZhciBiPWEubGFzdEV4cGlyZWRUaW1lO2I9MCE9PWI/YjoxMDczNzQxODIzO2lmKChXJihmanxnaikpIT09Vil0aHJvdyBFcnJvcih1KDMyNykpO0RqKCk7YT09PVQmJmI9PT1VfHxFaihhLGIpO2lmKG51bGwhPT1YKXt2YXIgYz1XO1d8PWZqO3ZhciBkPUZqKCk7ZG8gdHJ5e0tqKCk7YnJlYWt9Y2F0Y2goZSl7SGooYSxlKX13aGlsZSgxKTtuZygpO1c9Yztjai5jdXJyZW50PWQ7aWYoUz09PWhqKXRocm93IGM9a2osRWooYSxiKSx4aShhLGIpLFooYSksYztpZihudWxsIT09WCl0aHJvdyBFcnJvcih1KDI2MSkpO2EuZmluaXNoZWRXb3JrPWEuY3VycmVudC5hbHRlcm5hdGU7YS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPWI7VD1udWxsO0pqKGEpO1ooYSl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gTGooKXtpZihudWxsIT09dGope3ZhciBhPXRqO3RqPW51bGw7YS5mb3JFYWNoKGZ1bmN0aW9uKGEsYyl7Q2ooYyxhKTtaKGMpfSk7Z2coKX19XG5mdW5jdGlvbiBNaihhLGIpe3ZhciBjPVc7V3w9MTt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtXPWMsVz09PVYmJmdnKCl9fWZ1bmN0aW9uIE5qKGEsYil7dmFyIGM9VztXJj0tMjtXfD1lajt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtXPWMsVz09PVYmJmdnKCl9fVxuZnVuY3Rpb24gRWooYSxiKXthLmZpbmlzaGVkV29yaz1udWxsO2EuZmluaXNoZWRFeHBpcmF0aW9uVGltZT0wO3ZhciBjPWEudGltZW91dEhhbmRsZTstMSE9PWMmJihhLnRpbWVvdXRIYW5kbGU9LTEsSWQoYykpO2lmKG51bGwhPT1YKWZvcihjPVgucmV0dXJuO251bGwhPT1jOyl7dmFyIGQ9Yztzd2l0Y2goZC50YWcpe2Nhc2UgMTpkPWQudHlwZS5jaGlsZENvbnRleHRUeXBlcztudWxsIT09ZCYmdm9pZCAwIT09ZCYmRGYoKTticmVhaztjYXNlIDM6ZWgoKTtIKEspO0goSik7YnJlYWs7Y2FzZSA1OmdoKGQpO2JyZWFrO2Nhc2UgNDplaCgpO2JyZWFrO2Nhc2UgMTM6SChNKTticmVhaztjYXNlIDE5OkgoTSk7YnJlYWs7Y2FzZSAxMDpvZyhkKX1jPWMucmV0dXJufVQ9YTtYPVNnKGEuY3VycmVudCxudWxsKTtVPWI7Uz10aTtraj1udWxsO21qPWxqPTEwNzM3NDE4MjM7bmo9bnVsbDt3aT0wO29qPSExfVxuZnVuY3Rpb24gSGooYSxiKXtkb3t0cnl7bmcoKTtqaC5jdXJyZW50PXNoO2lmKG1oKWZvcih2YXIgYz1OLm1lbW9pemVkU3RhdGU7bnVsbCE9PWM7KXt2YXIgZD1jLnF1ZXVlO251bGwhPT1kJiYoZC5wZW5kaW5nPW51bGwpO2M9Yy5uZXh0fWxoPTA7UD1PPU49bnVsbDttaD0hMTtpZihudWxsPT09WHx8bnVsbD09PVgucmV0dXJuKXJldHVybiBTPWhqLGtqPWIsWD1udWxsO2E6e3ZhciBlPWEsZj1YLnJldHVybixnPVgsaD1iO2I9VTtnLmVmZmVjdFRhZ3w9MjA0ODtnLmZpcnN0RWZmZWN0PWcubGFzdEVmZmVjdD1udWxsO2lmKG51bGwhPT1oJiZcIm9iamVjdFwiPT09dHlwZW9mIGgmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBoLnRoZW4pe3ZhciBrPWg7aWYoMD09PShnLm1vZGUmMikpe3ZhciBsPWcuYWx0ZXJuYXRlO2w/KGcudXBkYXRlUXVldWU9bC51cGRhdGVRdWV1ZSxnLm1lbW9pemVkU3RhdGU9bC5tZW1vaXplZFN0YXRlLGcuZXhwaXJhdGlvblRpbWU9bC5leHBpcmF0aW9uVGltZSk6KGcudXBkYXRlUXVldWU9XG5udWxsLGcubWVtb2l6ZWRTdGF0ZT1udWxsKX12YXIgbT0wIT09KE0uY3VycmVudCYxKSxwPWY7ZG97dmFyIHg7aWYoeD0xMz09PXAudGFnKXt2YXIgej1wLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PXopeD1udWxsIT09ei5kZWh5ZHJhdGVkPyEwOiExO2Vsc2V7dmFyIGNhPXAubWVtb2l6ZWRQcm9wczt4PXZvaWQgMD09PWNhLmZhbGxiYWNrPyExOiEwIT09Y2EudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2s/ITA6bT8hMTohMH19aWYoeCl7dmFyIEQ9cC51cGRhdGVRdWV1ZTtpZihudWxsPT09RCl7dmFyIHQ9bmV3IFNldDt0LmFkZChrKTtwLnVwZGF0ZVF1ZXVlPXR9ZWxzZSBELmFkZChrKTtpZigwPT09KHAubW9kZSYyKSl7cC5lZmZlY3RUYWd8PTY0O2cuZWZmZWN0VGFnJj0tMjk4MTtpZigxPT09Zy50YWcpaWYobnVsbD09PWcuYWx0ZXJuYXRlKWcudGFnPTE3O2Vsc2V7dmFyIHk9d2coMTA3Mzc0MTgyMyxudWxsKTt5LnRhZz0yO3hnKGcseSl9Zy5leHBpcmF0aW9uVGltZT0xMDczNzQxODIzO1xuYnJlYWsgYX1oPXZvaWQgMDtnPWI7dmFyIEE9ZS5waW5nQ2FjaGU7bnVsbD09PUE/KEE9ZS5waW5nQ2FjaGU9bmV3IFdpLGg9bmV3IFNldCxBLnNldChrLGgpKTooaD1BLmdldChrKSx2b2lkIDA9PT1oJiYoaD1uZXcgU2V0LEEuc2V0KGssaCkpKTtpZighaC5oYXMoZykpe2guYWRkKGcpO3ZhciBxPU9qLmJpbmQobnVsbCxlLGssZyk7ay50aGVuKHEscSl9cC5lZmZlY3RUYWd8PTQwOTY7cC5leHBpcmF0aW9uVGltZT1iO2JyZWFrIGF9cD1wLnJldHVybn13aGlsZShudWxsIT09cCk7aD1FcnJvcigocGIoZy50eXBlKXx8XCJBIFJlYWN0IGNvbXBvbmVudFwiKStcIiBzdXNwZW5kZWQgd2hpbGUgcmVuZGVyaW5nLCBidXQgbm8gZmFsbGJhY2sgVUkgd2FzIHNwZWNpZmllZC5cXG5cXG5BZGQgYSA8U3VzcGVuc2UgZmFsbGJhY2s9Li4uPiBjb21wb25lbnQgaGlnaGVyIGluIHRoZSB0cmVlIHRvIHByb3ZpZGUgYSBsb2FkaW5nIGluZGljYXRvciBvciBwbGFjZWhvbGRlciB0byBkaXNwbGF5LlwiK3FiKGcpKX1TIT09XG5qaiYmKFM9aWopO2g9QWkoaCxnKTtwPWY7ZG97c3dpdGNoKHAudGFnKXtjYXNlIDM6az1oO3AuZWZmZWN0VGFnfD00MDk2O3AuZXhwaXJhdGlvblRpbWU9Yjt2YXIgQj1YaShwLGssYik7eWcocCxCKTticmVhayBhO2Nhc2UgMTprPWg7dmFyIHc9cC50eXBlLHViPXAuc3RhdGVOb2RlO2lmKDA9PT0ocC5lZmZlY3RUYWcmNjQpJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHcuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxudWxsIT09dWImJlwiZnVuY3Rpb25cIj09PXR5cGVvZiB1Yi5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1hanx8IWFqLmhhcyh1YikpKSl7cC5lZmZlY3RUYWd8PTQwOTY7cC5leHBpcmF0aW9uVGltZT1iO3ZhciB2Yj0kaShwLGssYik7eWcocCx2Yik7YnJlYWsgYX19cD1wLnJldHVybn13aGlsZShudWxsIT09cCl9WD1QaihYKX1jYXRjaChYYyl7Yj1YYztjb250aW51ZX1icmVha313aGlsZSgxKX1cbmZ1bmN0aW9uIEZqKCl7dmFyIGE9Y2ouY3VycmVudDtjai5jdXJyZW50PXNoO3JldHVybiBudWxsPT09YT9zaDphfWZ1bmN0aW9uIEFnKGEsYil7YTxsaiYmMjxhJiYobGo9YSk7bnVsbCE9PWImJmE8bWomJjI8YSYmKG1qPWEsbmo9Yil9ZnVuY3Rpb24gQmcoYSl7YT53aSYmKHdpPWEpfWZ1bmN0aW9uIEtqKCl7Zm9yKDtudWxsIT09WDspWD1RaihYKX1mdW5jdGlvbiBHaigpe2Zvcig7bnVsbCE9PVgmJiFVZigpOylYPVFqKFgpfWZ1bmN0aW9uIFFqKGEpe3ZhciBiPVJqKGEuYWx0ZXJuYXRlLGEsVSk7YS5tZW1vaXplZFByb3BzPWEucGVuZGluZ1Byb3BzO251bGw9PT1iJiYoYj1QaihhKSk7ZGouY3VycmVudD1udWxsO3JldHVybiBifVxuZnVuY3Rpb24gUGooYSl7WD1hO2Rve3ZhciBiPVguYWx0ZXJuYXRlO2E9WC5yZXR1cm47aWYoMD09PShYLmVmZmVjdFRhZyYyMDQ4KSl7Yj1zaShiLFgsVSk7aWYoMT09PVV8fDEhPT1YLmNoaWxkRXhwaXJhdGlvblRpbWUpe2Zvcih2YXIgYz0wLGQ9WC5jaGlsZDtudWxsIT09ZDspe3ZhciBlPWQuZXhwaXJhdGlvblRpbWUsZj1kLmNoaWxkRXhwaXJhdGlvblRpbWU7ZT5jJiYoYz1lKTtmPmMmJihjPWYpO2Q9ZC5zaWJsaW5nfVguY2hpbGRFeHBpcmF0aW9uVGltZT1jfWlmKG51bGwhPT1iKXJldHVybiBiO251bGwhPT1hJiYwPT09KGEuZWZmZWN0VGFnJjIwNDgpJiYobnVsbD09PWEuZmlyc3RFZmZlY3QmJihhLmZpcnN0RWZmZWN0PVguZmlyc3RFZmZlY3QpLG51bGwhPT1YLmxhc3RFZmZlY3QmJihudWxsIT09YS5sYXN0RWZmZWN0JiYoYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9WC5maXJzdEVmZmVjdCksYS5sYXN0RWZmZWN0PVgubGFzdEVmZmVjdCksMTxYLmVmZmVjdFRhZyYmKG51bGwhPT1cbmEubGFzdEVmZmVjdD9hLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1YOmEuZmlyc3RFZmZlY3Q9WCxhLmxhc3RFZmZlY3Q9WCkpfWVsc2V7Yj16aShYKTtpZihudWxsIT09YilyZXR1cm4gYi5lZmZlY3RUYWcmPTIwNDcsYjtudWxsIT09YSYmKGEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PW51bGwsYS5lZmZlY3RUYWd8PTIwNDgpfWI9WC5zaWJsaW5nO2lmKG51bGwhPT1iKXJldHVybiBiO1g9YX13aGlsZShudWxsIT09WCk7Uz09PXRpJiYoUz1qaik7cmV0dXJuIG51bGx9ZnVuY3Rpb24gSWooYSl7dmFyIGI9YS5leHBpcmF0aW9uVGltZTthPWEuY2hpbGRFeHBpcmF0aW9uVGltZTtyZXR1cm4gYj5hP2I6YX1mdW5jdGlvbiBKaihhKXt2YXIgYj1hZygpO2NnKDk5LFNqLmJpbmQobnVsbCxhLGIpKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIFNqKGEsYil7ZG8gRGooKTt3aGlsZShudWxsIT09cmopO2lmKChXJihmanxnaikpIT09Vil0aHJvdyBFcnJvcih1KDMyNykpO3ZhciBjPWEuZmluaXNoZWRXb3JrLGQ9YS5maW5pc2hlZEV4cGlyYXRpb25UaW1lO2lmKG51bGw9PT1jKXJldHVybiBudWxsO2EuZmluaXNoZWRXb3JrPW51bGw7YS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPTA7aWYoYz09PWEuY3VycmVudCl0aHJvdyBFcnJvcih1KDE3NykpO2EuY2FsbGJhY2tOb2RlPW51bGw7YS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPTA7YS5jYWxsYmFja1ByaW9yaXR5PTkwO2EubmV4dEtub3duUGVuZGluZ0xldmVsPTA7dmFyIGU9SWooYyk7YS5maXJzdFBlbmRpbmdUaW1lPWU7ZDw9YS5sYXN0U3VzcGVuZGVkVGltZT9hLmZpcnN0U3VzcGVuZGVkVGltZT1hLmxhc3RTdXNwZW5kZWRUaW1lPWEubmV4dEtub3duUGVuZGluZ0xldmVsPTA6ZDw9YS5maXJzdFN1c3BlbmRlZFRpbWUmJihhLmZpcnN0U3VzcGVuZGVkVGltZT1cbmQtMSk7ZDw9YS5sYXN0UGluZ2VkVGltZSYmKGEubGFzdFBpbmdlZFRpbWU9MCk7ZDw9YS5sYXN0RXhwaXJlZFRpbWUmJihhLmxhc3RFeHBpcmVkVGltZT0wKTthPT09VCYmKFg9VD1udWxsLFU9MCk7MTxjLmVmZmVjdFRhZz9udWxsIT09Yy5sYXN0RWZmZWN0PyhjLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGU9Yy5maXJzdEVmZmVjdCk6ZT1jOmU9Yy5maXJzdEVmZmVjdDtpZihudWxsIT09ZSl7dmFyIGY9VztXfD1najtkai5jdXJyZW50PW51bGw7RGQ9ZmQ7dmFyIGc9eGQoKTtpZih5ZChnKSl7aWYoXCJzZWxlY3Rpb25TdGFydFwiaW4gZyl2YXIgaD17c3RhcnQ6Zy5zZWxlY3Rpb25TdGFydCxlbmQ6Zy5zZWxlY3Rpb25FbmR9O2Vsc2UgYTp7aD0oaD1nLm93bmVyRG9jdW1lbnQpJiZoLmRlZmF1bHRWaWV3fHx3aW5kb3c7dmFyIGs9aC5nZXRTZWxlY3Rpb24mJmguZ2V0U2VsZWN0aW9uKCk7aWYoayYmMCE9PWsucmFuZ2VDb3VudCl7aD1rLmFuY2hvck5vZGU7dmFyIGw9ay5hbmNob3JPZmZzZXQsXG5tPWsuZm9jdXNOb2RlO2s9ay5mb2N1c09mZnNldDt0cnl7aC5ub2RlVHlwZSxtLm5vZGVUeXBlfWNhdGNoKHdiKXtoPW51bGw7YnJlYWsgYX12YXIgcD0wLHg9LTEsej0tMSxjYT0wLEQ9MCx0PWcseT1udWxsO2I6Zm9yKDs7KXtmb3IodmFyIEE7Oyl7dCE9PWh8fDAhPT1sJiYzIT09dC5ub2RlVHlwZXx8KHg9cCtsKTt0IT09bXx8MCE9PWsmJjMhPT10Lm5vZGVUeXBlfHwoej1wK2spOzM9PT10Lm5vZGVUeXBlJiYocCs9dC5ub2RlVmFsdWUubGVuZ3RoKTtpZihudWxsPT09KEE9dC5maXJzdENoaWxkKSlicmVhazt5PXQ7dD1BfWZvcig7Oyl7aWYodD09PWcpYnJlYWsgYjt5PT09aCYmKytjYT09PWwmJih4PXApO3k9PT1tJiYrK0Q9PT1rJiYoej1wKTtpZihudWxsIT09KEE9dC5uZXh0U2libGluZykpYnJlYWs7dD15O3k9dC5wYXJlbnROb2RlfXQ9QX1oPS0xPT09eHx8LTE9PT16P251bGw6e3N0YXJ0OngsZW5kOnp9fWVsc2UgaD1udWxsfWg9aHx8e3N0YXJ0OjAsZW5kOjB9fWVsc2UgaD1cbm51bGw7RWQ9e2FjdGl2ZUVsZW1lbnREZXRhY2hlZDpudWxsLGZvY3VzZWRFbGVtOmcsc2VsZWN0aW9uUmFuZ2U6aH07ZmQ9ITE7WT1lO2RvIHRyeXtUaigpfWNhdGNoKHdiKXtpZihudWxsPT09WSl0aHJvdyBFcnJvcih1KDMzMCkpO0VpKFksd2IpO1k9WS5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1ZKTtZPWU7ZG8gdHJ5e2ZvcihnPWEsaD1iO251bGwhPT1ZOyl7dmFyIHE9WS5lZmZlY3RUYWc7cSYxNiYmUmIoWS5zdGF0ZU5vZGUsXCJcIik7aWYocSYxMjgpe3ZhciBCPVkuYWx0ZXJuYXRlO2lmKG51bGwhPT1CKXt2YXIgdz1CLnJlZjtudWxsIT09dyYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiB3P3cobnVsbCk6dy5jdXJyZW50PW51bGwpfX1zd2l0Y2gocSYxMDM4KXtjYXNlIDI6UGkoWSk7WS5lZmZlY3RUYWcmPS0zO2JyZWFrO2Nhc2UgNjpQaShZKTtZLmVmZmVjdFRhZyY9LTM7U2koWS5hbHRlcm5hdGUsWSk7YnJlYWs7Y2FzZSAxMDI0OlkuZWZmZWN0VGFnJj0tMTAyNTticmVhaztjYXNlIDEwMjg6WS5lZmZlY3RUYWcmPVxuLTEwMjU7U2koWS5hbHRlcm5hdGUsWSk7YnJlYWs7Y2FzZSA0OlNpKFkuYWx0ZXJuYXRlLFkpO2JyZWFrO2Nhc2UgODpsPVksTWkoZyxsLGgpLE5pKGwpfVk9WS5uZXh0RWZmZWN0fX1jYXRjaCh3Yil7aWYobnVsbD09PVkpdGhyb3cgRXJyb3IodSgzMzApKTtFaShZLHdiKTtZPVkubmV4dEVmZmVjdH13aGlsZShudWxsIT09WSk7dz1FZDtCPXhkKCk7cT13LmZvY3VzZWRFbGVtO2g9dy5zZWxlY3Rpb25SYW5nZTtpZihCIT09cSYmcSYmcS5vd25lckRvY3VtZW50JiZ3ZChxLm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LHEpKXtudWxsIT09aCYmeWQocSkmJihCPWguc3RhcnQsdz1oLmVuZCx2b2lkIDA9PT13JiYodz1CKSxcInNlbGVjdGlvblN0YXJ0XCJpbiBxPyhxLnNlbGVjdGlvblN0YXJ0PUIscS5zZWxlY3Rpb25FbmQ9TWF0aC5taW4odyxxLnZhbHVlLmxlbmd0aCkpOih3PShCPXEub3duZXJEb2N1bWVudHx8ZG9jdW1lbnQpJiZCLmRlZmF1bHRWaWV3fHx3aW5kb3csdy5nZXRTZWxlY3Rpb24mJlxuKHc9dy5nZXRTZWxlY3Rpb24oKSxsPXEudGV4dENvbnRlbnQubGVuZ3RoLGc9TWF0aC5taW4oaC5zdGFydCxsKSxoPXZvaWQgMD09PWguZW5kP2c6TWF0aC5taW4oaC5lbmQsbCksIXcuZXh0ZW5kJiZnPmgmJihsPWgsaD1nLGc9bCksbD12ZChxLGcpLG09dmQocSxoKSxsJiZtJiYoMSE9PXcucmFuZ2VDb3VudHx8dy5hbmNob3JOb2RlIT09bC5ub2RlfHx3LmFuY2hvck9mZnNldCE9PWwub2Zmc2V0fHx3LmZvY3VzTm9kZSE9PW0ubm9kZXx8dy5mb2N1c09mZnNldCE9PW0ub2Zmc2V0KSYmKEI9Qi5jcmVhdGVSYW5nZSgpLEIuc2V0U3RhcnQobC5ub2RlLGwub2Zmc2V0KSx3LnJlbW92ZUFsbFJhbmdlcygpLGc+aD8ody5hZGRSYW5nZShCKSx3LmV4dGVuZChtLm5vZGUsbS5vZmZzZXQpKTooQi5zZXRFbmQobS5ub2RlLG0ub2Zmc2V0KSx3LmFkZFJhbmdlKEIpKSkpKSk7Qj1bXTtmb3Iodz1xO3c9dy5wYXJlbnROb2RlOykxPT09dy5ub2RlVHlwZSYmQi5wdXNoKHtlbGVtZW50OncsbGVmdDp3LnNjcm9sbExlZnQsXG50b3A6dy5zY3JvbGxUb3B9KTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgcS5mb2N1cyYmcS5mb2N1cygpO2ZvcihxPTA7cTxCLmxlbmd0aDtxKyspdz1CW3FdLHcuZWxlbWVudC5zY3JvbGxMZWZ0PXcubGVmdCx3LmVsZW1lbnQuc2Nyb2xsVG9wPXcudG9wfWZkPSEhRGQ7RWQ9RGQ9bnVsbDthLmN1cnJlbnQ9YztZPWU7ZG8gdHJ5e2ZvcihxPWE7bnVsbCE9PVk7KXt2YXIgdWI9WS5lZmZlY3RUYWc7dWImMzYmJkppKHEsWS5hbHRlcm5hdGUsWSk7aWYodWImMTI4KXtCPXZvaWQgMDt2YXIgdmI9WS5yZWY7aWYobnVsbCE9PXZiKXt2YXIgWGM9WS5zdGF0ZU5vZGU7c3dpdGNoKFkudGFnKXtjYXNlIDU6Qj1YYzticmVhaztkZWZhdWx0OkI9WGN9XCJmdW5jdGlvblwiPT09dHlwZW9mIHZiP3ZiKEIpOnZiLmN1cnJlbnQ9Qn19WT1ZLm5leHRFZmZlY3R9fWNhdGNoKHdiKXtpZihudWxsPT09WSl0aHJvdyBFcnJvcih1KDMzMCkpO0VpKFksd2IpO1k9WS5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1ZKTtZPVxubnVsbDtWZigpO1c9Zn1lbHNlIGEuY3VycmVudD1jO2lmKHFqKXFqPSExLHJqPWEsc2o9YjtlbHNlIGZvcihZPWU7bnVsbCE9PVk7KWI9WS5uZXh0RWZmZWN0LFkubmV4dEVmZmVjdD1udWxsLFk9YjtiPWEuZmlyc3RQZW5kaW5nVGltZTswPT09YiYmKGFqPW51bGwpOzEwNzM3NDE4MjM9PT1iP2E9PT12aj91aisrOih1aj0wLHZqPWEpOnVqPTA7XCJmdW5jdGlvblwiPT09dHlwZW9mIFVqJiZVaihjLnN0YXRlTm9kZSxkKTtaKGEpO2lmKFlpKXRocm93IFlpPSExLGE9WmksWmk9bnVsbCxhO2lmKChXJmVqKSE9PVYpcmV0dXJuIG51bGw7Z2coKTtyZXR1cm4gbnVsbH1mdW5jdGlvbiBUaigpe2Zvcig7bnVsbCE9PVk7KXt2YXIgYT1ZLmVmZmVjdFRhZzswIT09KGEmMjU2KSYmR2koWS5hbHRlcm5hdGUsWSk7MD09PShhJjUxMil8fHFqfHwocWo9ITAsZGcoOTcsZnVuY3Rpb24oKXtEaigpO3JldHVybiBudWxsfSkpO1k9WS5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIERqKCl7aWYoOTAhPT1zail7dmFyIGE9OTc8c2o/OTc6c2o7c2o9OTA7cmV0dXJuIGNnKGEsVmopfX1mdW5jdGlvbiBWaigpe2lmKG51bGw9PT1yailyZXR1cm4hMTt2YXIgYT1yajtyaj1udWxsO2lmKChXJihmanxnaikpIT09Vil0aHJvdyBFcnJvcih1KDMzMSkpO3ZhciBiPVc7V3w9Z2o7Zm9yKGE9YS5jdXJyZW50LmZpcnN0RWZmZWN0O251bGwhPT1hOyl7dHJ5e3ZhciBjPWE7aWYoMCE9PShjLmVmZmVjdFRhZyY1MTIpKXN3aXRjaChjLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpjYXNlIDIyOkhpKDUsYyksSWkoNSxjKX19Y2F0Y2goZCl7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IodSgzMzApKTtFaShhLGQpfWM9YS5uZXh0RWZmZWN0O2EubmV4dEVmZmVjdD1udWxsO2E9Y31XPWI7Z2coKTtyZXR1cm4hMH1cbmZ1bmN0aW9uIFdqKGEsYixjKXtiPUFpKGMsYik7Yj1YaShhLGIsMTA3Mzc0MTgyMyk7eGcoYSxiKTthPXhqKGEsMTA3Mzc0MTgyMyk7bnVsbCE9PWEmJlooYSl9ZnVuY3Rpb24gRWkoYSxiKXtpZigzPT09YS50YWcpV2ooYSxhLGIpO2Vsc2UgZm9yKHZhciBjPWEucmV0dXJuO251bGwhPT1jOyl7aWYoMz09PWMudGFnKXtXaihjLGEsYik7YnJlYWt9ZWxzZSBpZigxPT09Yy50YWcpe3ZhciBkPWMuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1hanx8IWFqLmhhcyhkKSkpe2E9QWkoYixhKTthPSRpKGMsYSwxMDczNzQxODIzKTt4ZyhjLGEpO2M9eGooYywxMDczNzQxODIzKTtudWxsIT09YyYmWihjKTticmVha319Yz1jLnJldHVybn19XG5mdW5jdGlvbiBPaihhLGIsYyl7dmFyIGQ9YS5waW5nQ2FjaGU7bnVsbCE9PWQmJmQuZGVsZXRlKGIpO1Q9PT1hJiZVPT09Yz9TPT09dml8fFM9PT11aSYmMTA3Mzc0MTgyMz09PWxqJiYkZigpLVRpPHBqP0VqKGEsVSk6b2o9ITA6QWooYSxjKSYmKGI9YS5sYXN0UGluZ2VkVGltZSwwIT09YiYmYjxjfHwoYS5sYXN0UGluZ2VkVGltZT1jLFooYSkpKX1mdW5jdGlvbiBWaShhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO251bGwhPT1jJiZjLmRlbGV0ZShiKTtiPTA7MD09PWImJihiPUdnKCksYj1IZyhiLGEsbnVsbCkpO2E9eGooYSxiKTtudWxsIT09YSYmWihhKX12YXIgUmo7XG5Saj1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZTtpZihudWxsIT09YSl7dmFyIGU9Yi5wZW5kaW5nUHJvcHM7aWYoYS5tZW1vaXplZFByb3BzIT09ZXx8Sy5jdXJyZW50KXJnPSEwO2Vsc2V7aWYoZDxjKXtyZz0hMTtzd2l0Y2goYi50YWcpe2Nhc2UgMzpoaShiKTtYaCgpO2JyZWFrO2Nhc2UgNTpmaChiKTtpZihiLm1vZGUmNCYmMSE9PWMmJmUuaGlkZGVuKXJldHVybiBiLmV4cGlyYXRpb25UaW1lPWIuY2hpbGRFeHBpcmF0aW9uVGltZT0xLG51bGw7YnJlYWs7Y2FzZSAxOkwoYi50eXBlKSYmR2YoYik7YnJlYWs7Y2FzZSA0OmRoKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7YnJlYWs7Y2FzZSAxMDpkPWIubWVtb2l6ZWRQcm9wcy52YWx1ZTtlPWIudHlwZS5fY29udGV4dDtJKGpnLGUuX2N1cnJlbnRWYWx1ZSk7ZS5fY3VycmVudFZhbHVlPWQ7YnJlYWs7Y2FzZSAxMzppZihudWxsIT09Yi5tZW1vaXplZFN0YXRlKXtkPWIuY2hpbGQuY2hpbGRFeHBpcmF0aW9uVGltZTtcbmlmKDAhPT1kJiZkPj1jKXJldHVybiBqaShhLGIsYyk7SShNLE0uY3VycmVudCYxKTtiPSRoKGEsYixjKTtyZXR1cm4gbnVsbCE9PWI/Yi5zaWJsaW5nOm51bGx9SShNLE0uY3VycmVudCYxKTticmVhaztjYXNlIDE5OmQ9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPj1jO2lmKDAhPT0oYS5lZmZlY3RUYWcmNjQpKXtpZihkKXJldHVybiBtaShhLGIsYyk7Yi5lZmZlY3RUYWd8PTY0fWU9Yi5tZW1vaXplZFN0YXRlO251bGwhPT1lJiYoZS5yZW5kZXJpbmc9bnVsbCxlLnRhaWw9bnVsbCk7SShNLE0uY3VycmVudCk7aWYoIWQpcmV0dXJuIG51bGx9cmV0dXJuICRoKGEsYixjKX1yZz0hMX19ZWxzZSByZz0hMTtiLmV4cGlyYXRpb25UaW1lPTA7c3dpdGNoKGIudGFnKXtjYXNlIDI6ZD1iLnR5cGU7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpO2E9Yi5wZW5kaW5nUHJvcHM7ZT1DZihiLEouY3VycmVudCk7cWcoYixjKTtlPW9oKG51bGwsXG5iLGQsYSxlLGMpO2IuZWZmZWN0VGFnfD0xO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZSYmbnVsbCE9PWUmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLnJlbmRlciYmdm9pZCAwPT09ZS4kJHR5cGVvZil7Yi50YWc9MTtiLm1lbW9pemVkU3RhdGU9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7aWYoTChkKSl7dmFyIGY9ITA7R2YoYil9ZWxzZSBmPSExO2IubWVtb2l6ZWRTdGF0ZT1udWxsIT09ZS5zdGF0ZSYmdm9pZCAwIT09ZS5zdGF0ZT9lLnN0YXRlOm51bGw7dWcoYik7dmFyIGc9ZC5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJkZnKGIsZCxnLGEpO2UudXBkYXRlcj1KZztiLnN0YXRlTm9kZT1lO2UuX3JlYWN0SW50ZXJuYWxGaWJlcj1iO05nKGIsZCxhLGMpO2I9Z2kobnVsbCxiLGQsITAsZixjKX1lbHNlIGIudGFnPTAsUihudWxsLGIsZSxjKSxiPWIuY2hpbGQ7cmV0dXJuIGI7Y2FzZSAxNjphOntlPWIuZWxlbWVudFR5cGU7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1cbm51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7YT1iLnBlbmRpbmdQcm9wcztvYihlKTtpZigxIT09ZS5fc3RhdHVzKXRocm93IGUuX3Jlc3VsdDtlPWUuX3Jlc3VsdDtiLnR5cGU9ZTtmPWIudGFnPVhqKGUpO2E9aWcoZSxhKTtzd2l0Y2goZil7Y2FzZSAwOmI9ZGkobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTpiPWZpKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDExOmI9WmgobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTQ6Yj1haShudWxsLGIsZSxpZyhlLnR5cGUsYSksZCxjKTticmVhayBhfXRocm93IEVycm9yKHUoMzA2LGUsXCJcIikpO31yZXR1cm4gYjtjYXNlIDA6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmlnKGQsZSksZGkoYSxiLGQsZSxjKTtjYXNlIDE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmlnKGQsZSksZmkoYSxiLGQsZSxjKTtcbmNhc2UgMzpoaShiKTtkPWIudXBkYXRlUXVldWU7aWYobnVsbD09PWF8fG51bGw9PT1kKXRocm93IEVycm9yKHUoMjgyKSk7ZD1iLnBlbmRpbmdQcm9wcztlPWIubWVtb2l6ZWRTdGF0ZTtlPW51bGwhPT1lP2UuZWxlbWVudDpudWxsO3ZnKGEsYik7emcoYixkLG51bGwsYyk7ZD1iLm1lbW9pemVkU3RhdGUuZWxlbWVudDtpZihkPT09ZSlYaCgpLGI9JGgoYSxiLGMpO2Vsc2V7aWYoZT1iLnN0YXRlTm9kZS5oeWRyYXRlKVBoPUpkKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8uZmlyc3RDaGlsZCksT2g9YixlPVFoPSEwO2lmKGUpZm9yKGM9WWcoYixudWxsLGQsYyksYi5jaGlsZD1jO2M7KWMuZWZmZWN0VGFnPWMuZWZmZWN0VGFnJi0zfDEwMjQsYz1jLnNpYmxpbmc7ZWxzZSBSKGEsYixkLGMpLFhoKCk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgNTpyZXR1cm4gZmgoYiksbnVsbD09PWEmJlVoKGIpLGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZj1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6XG5udWxsLGc9ZS5jaGlsZHJlbixHZChkLGUpP2c9bnVsbDpudWxsIT09ZiYmR2QoZCxmKSYmKGIuZWZmZWN0VGFnfD0xNiksZWkoYSxiKSxiLm1vZGUmNCYmMSE9PWMmJmUuaGlkZGVuPyhiLmV4cGlyYXRpb25UaW1lPWIuY2hpbGRFeHBpcmF0aW9uVGltZT0xLGI9bnVsbCk6KFIoYSxiLGcsYyksYj1iLmNoaWxkKSxiO2Nhc2UgNjpyZXR1cm4gbnVsbD09PWEmJlVoKGIpLG51bGw7Y2FzZSAxMzpyZXR1cm4gamkoYSxiLGMpO2Nhc2UgNDpyZXR1cm4gZGgoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxkPWIucGVuZGluZ1Byb3BzLG51bGw9PT1hP2IuY2hpbGQ9WGcoYixudWxsLGQsYyk6UihhLGIsZCxjKSxiLmNoaWxkO2Nhc2UgMTE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmlnKGQsZSksWmgoYSxiLGQsZSxjKTtjYXNlIDc6cmV0dXJuIFIoYSxiLGIucGVuZGluZ1Byb3BzLGMpLGIuY2hpbGQ7Y2FzZSA4OnJldHVybiBSKGEsXG5iLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLGMpLGIuY2hpbGQ7Y2FzZSAxMjpyZXR1cm4gUihhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEwOmE6e2Q9Yi50eXBlLl9jb250ZXh0O2U9Yi5wZW5kaW5nUHJvcHM7Zz1iLm1lbW9pemVkUHJvcHM7Zj1lLnZhbHVlO3ZhciBoPWIudHlwZS5fY29udGV4dDtJKGpnLGguX2N1cnJlbnRWYWx1ZSk7aC5fY3VycmVudFZhbHVlPWY7aWYobnVsbCE9PWcpaWYoaD1nLnZhbHVlLGY9JGUoaCxmKT8wOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHM/ZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHMoaCxmKToxMDczNzQxODIzKXwwLDA9PT1mKXtpZihnLmNoaWxkcmVuPT09ZS5jaGlsZHJlbiYmIUsuY3VycmVudCl7Yj0kaChhLGIsYyk7YnJlYWsgYX19ZWxzZSBmb3IoaD1iLmNoaWxkLG51bGwhPT1oJiYoaC5yZXR1cm49Yik7bnVsbCE9PWg7KXt2YXIgaz1oLmRlcGVuZGVuY2llcztpZihudWxsIT09XG5rKXtnPWguY2hpbGQ7Zm9yKHZhciBsPWsuZmlyc3RDb250ZXh0O251bGwhPT1sOyl7aWYobC5jb250ZXh0PT09ZCYmMCE9PShsLm9ic2VydmVkQml0cyZmKSl7MT09PWgudGFnJiYobD13ZyhjLG51bGwpLGwudGFnPTIseGcoaCxsKSk7aC5leHBpcmF0aW9uVGltZTxjJiYoaC5leHBpcmF0aW9uVGltZT1jKTtsPWguYWx0ZXJuYXRlO251bGwhPT1sJiZsLmV4cGlyYXRpb25UaW1lPGMmJihsLmV4cGlyYXRpb25UaW1lPWMpO3BnKGgucmV0dXJuLGMpO2suZXhwaXJhdGlvblRpbWU8YyYmKGsuZXhwaXJhdGlvblRpbWU9Yyk7YnJlYWt9bD1sLm5leHR9fWVsc2UgZz0xMD09PWgudGFnP2gudHlwZT09PWIudHlwZT9udWxsOmguY2hpbGQ6aC5jaGlsZDtpZihudWxsIT09ZylnLnJldHVybj1oO2Vsc2UgZm9yKGc9aDtudWxsIT09Zzspe2lmKGc9PT1iKXtnPW51bGw7YnJlYWt9aD1nLnNpYmxpbmc7aWYobnVsbCE9PWgpe2gucmV0dXJuPWcucmV0dXJuO2c9aDticmVha31nPWcucmV0dXJufWg9XG5nfVIoYSxiLGUuY2hpbGRyZW4sYyk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgOTpyZXR1cm4gZT1iLnR5cGUsZj1iLnBlbmRpbmdQcm9wcyxkPWYuY2hpbGRyZW4scWcoYixjKSxlPXNnKGUsZi51bnN0YWJsZV9vYnNlcnZlZEJpdHMpLGQ9ZChlKSxiLmVmZmVjdFRhZ3w9MSxSKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxNDpyZXR1cm4gZT1iLnR5cGUsZj1pZyhlLGIucGVuZGluZ1Byb3BzKSxmPWlnKGUudHlwZSxmKSxhaShhLGIsZSxmLGQsYyk7Y2FzZSAxNTpyZXR1cm4gY2koYSxiLGIudHlwZSxiLnBlbmRpbmdQcm9wcyxkLGMpO2Nhc2UgMTc6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmlnKGQsZSksbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpLGIudGFnPTEsTChkKT8oYT0hMCxHZihiKSk6YT0hMSxxZyhiLGMpLExnKGIsZCxlKSxOZyhiLGQsZSxjKSxnaShudWxsLFxuYixkLCEwLGEsYyk7Y2FzZSAxOTpyZXR1cm4gbWkoYSxiLGMpfXRocm93IEVycm9yKHUoMTU2LGIudGFnKSk7fTt2YXIgVWo9bnVsbCxMaT1udWxsO2Z1bmN0aW9uIFlqKGEpe2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXJldHVybiExO3ZhciBiPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZihiLmlzRGlzYWJsZWR8fCFiLnN1cHBvcnRzRmliZXIpcmV0dXJuITA7dHJ5e3ZhciBjPWIuaW5qZWN0KGEpO1VqPWZ1bmN0aW9uKGEpe3RyeXtiLm9uQ29tbWl0RmliZXJSb290KGMsYSx2b2lkIDAsNjQ9PT0oYS5jdXJyZW50LmVmZmVjdFRhZyY2NCkpfWNhdGNoKGUpe319O0xpPWZ1bmN0aW9uKGEpe3RyeXtiLm9uQ29tbWl0RmliZXJVbm1vdW50KGMsYSl9Y2F0Y2goZSl7fX19Y2F0Y2goZCl7fXJldHVybiEwfVxuZnVuY3Rpb24gWmooYSxiLGMsZCl7dGhpcy50YWc9YTt0aGlzLmtleT1jO3RoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXMucmV0dXJuPXRoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT10aGlzLmVsZW1lbnRUeXBlPW51bGw7dGhpcy5pbmRleD0wO3RoaXMucmVmPW51bGw7dGhpcy5wZW5kaW5nUHJvcHM9Yjt0aGlzLmRlcGVuZGVuY2llcz10aGlzLm1lbW9pemVkU3RhdGU9dGhpcy51cGRhdGVRdWV1ZT10aGlzLm1lbW9pemVkUHJvcHM9bnVsbDt0aGlzLm1vZGU9ZDt0aGlzLmVmZmVjdFRhZz0wO3RoaXMubGFzdEVmZmVjdD10aGlzLmZpcnN0RWZmZWN0PXRoaXMubmV4dEVmZmVjdD1udWxsO3RoaXMuY2hpbGRFeHBpcmF0aW9uVGltZT10aGlzLmV4cGlyYXRpb25UaW1lPTA7dGhpcy5hbHRlcm5hdGU9bnVsbH1mdW5jdGlvbiBTaChhLGIsYyxkKXtyZXR1cm4gbmV3IFpqKGEsYixjLGQpfVxuZnVuY3Rpb24gYmkoYSl7YT1hLnByb3RvdHlwZTtyZXR1cm4hKCFhfHwhYS5pc1JlYWN0Q29tcG9uZW50KX1mdW5jdGlvbiBYaihhKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYmkoYSk/MTowO2lmKHZvaWQgMCE9PWEmJm51bGwhPT1hKXthPWEuJCR0eXBlb2Y7aWYoYT09PWdiKXJldHVybiAxMTtpZihhPT09amIpcmV0dXJuIDE0fXJldHVybiAyfVxuZnVuY3Rpb24gU2coYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1TaChhLnRhZyxiLGEua2V5LGEubW9kZSksYy5lbGVtZW50VHlwZT1hLmVsZW1lbnRUeXBlLGMudHlwZT1hLnR5cGUsYy5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGUsYy5hbHRlcm5hdGU9YSxhLmFsdGVybmF0ZT1jKTooYy5wZW5kaW5nUHJvcHM9YixjLmVmZmVjdFRhZz0wLGMubmV4dEVmZmVjdD1udWxsLGMuZmlyc3RFZmZlY3Q9bnVsbCxjLmxhc3RFZmZlY3Q9bnVsbCk7Yy5jaGlsZEV4cGlyYXRpb25UaW1lPWEuY2hpbGRFeHBpcmF0aW9uVGltZTtjLmV4cGlyYXRpb25UaW1lPWEuZXhwaXJhdGlvblRpbWU7Yy5jaGlsZD1hLmNoaWxkO2MubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHM7Yy5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtjLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWU7Yj1hLmRlcGVuZGVuY2llcztjLmRlcGVuZGVuY2llcz1udWxsPT09Yj9udWxsOntleHBpcmF0aW9uVGltZTpiLmV4cGlyYXRpb25UaW1lLFxuZmlyc3RDb250ZXh0OmIuZmlyc3RDb250ZXh0LHJlc3BvbmRlcnM6Yi5yZXNwb25kZXJzfTtjLnNpYmxpbmc9YS5zaWJsaW5nO2MuaW5kZXg9YS5pbmRleDtjLnJlZj1hLnJlZjtyZXR1cm4gY31cbmZ1bmN0aW9uIFVnKGEsYixjLGQsZSxmKXt2YXIgZz0yO2Q9YTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSliaShhKSYmKGc9MSk7ZWxzZSBpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpZz01O2Vsc2UgYTpzd2l0Y2goYSl7Y2FzZSBhYjpyZXR1cm4gV2coYy5jaGlsZHJlbixlLGYsYik7Y2FzZSBmYjpnPTg7ZXw9NzticmVhaztjYXNlIGJiOmc9ODtlfD0xO2JyZWFrO2Nhc2UgY2I6cmV0dXJuIGE9U2goMTIsYyxiLGV8OCksYS5lbGVtZW50VHlwZT1jYixhLnR5cGU9Y2IsYS5leHBpcmF0aW9uVGltZT1mLGE7Y2FzZSBoYjpyZXR1cm4gYT1TaCgxMyxjLGIsZSksYS50eXBlPWhiLGEuZWxlbWVudFR5cGU9aGIsYS5leHBpcmF0aW9uVGltZT1mLGE7Y2FzZSBpYjpyZXR1cm4gYT1TaCgxOSxjLGIsZSksYS5lbGVtZW50VHlwZT1pYixhLmV4cGlyYXRpb25UaW1lPWYsYTtkZWZhdWx0OmlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgZGI6Zz1cbjEwO2JyZWFrIGE7Y2FzZSBlYjpnPTk7YnJlYWsgYTtjYXNlIGdiOmc9MTE7YnJlYWsgYTtjYXNlIGpiOmc9MTQ7YnJlYWsgYTtjYXNlIGtiOmc9MTY7ZD1udWxsO2JyZWFrIGE7Y2FzZSBsYjpnPTIyO2JyZWFrIGF9dGhyb3cgRXJyb3IodSgxMzAsbnVsbD09YT9hOnR5cGVvZiBhLFwiXCIpKTt9Yj1TaChnLGMsYixlKTtiLmVsZW1lbnRUeXBlPWE7Yi50eXBlPWQ7Yi5leHBpcmF0aW9uVGltZT1mO3JldHVybiBifWZ1bmN0aW9uIFdnKGEsYixjLGQpe2E9U2goNyxhLGQsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uIFRnKGEsYixjKXthPVNoKDYsYSxudWxsLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1cbmZ1bmN0aW9uIFZnKGEsYixjKXtiPVNoKDQsbnVsbCE9PWEuY2hpbGRyZW4/YS5jaGlsZHJlbjpbXSxhLmtleSxiKTtiLmV4cGlyYXRpb25UaW1lPWM7Yi5zdGF0ZU5vZGU9e2NvbnRhaW5lckluZm86YS5jb250YWluZXJJbmZvLHBlbmRpbmdDaGlsZHJlbjpudWxsLGltcGxlbWVudGF0aW9uOmEuaW1wbGVtZW50YXRpb259O3JldHVybiBifVxuZnVuY3Rpb24gYWsoYSxiLGMpe3RoaXMudGFnPWI7dGhpcy5jdXJyZW50PW51bGw7dGhpcy5jb250YWluZXJJbmZvPWE7dGhpcy5waW5nQ2FjaGU9dGhpcy5wZW5kaW5nQ2hpbGRyZW49bnVsbDt0aGlzLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9MDt0aGlzLmZpbmlzaGVkV29yaz1udWxsO3RoaXMudGltZW91dEhhbmRsZT0tMTt0aGlzLnBlbmRpbmdDb250ZXh0PXRoaXMuY29udGV4dD1udWxsO3RoaXMuaHlkcmF0ZT1jO3RoaXMuY2FsbGJhY2tOb2RlPW51bGw7dGhpcy5jYWxsYmFja1ByaW9yaXR5PTkwO3RoaXMubGFzdEV4cGlyZWRUaW1lPXRoaXMubGFzdFBpbmdlZFRpbWU9dGhpcy5uZXh0S25vd25QZW5kaW5nTGV2ZWw9dGhpcy5sYXN0U3VzcGVuZGVkVGltZT10aGlzLmZpcnN0U3VzcGVuZGVkVGltZT10aGlzLmZpcnN0UGVuZGluZ1RpbWU9MH1cbmZ1bmN0aW9uIEFqKGEsYil7dmFyIGM9YS5maXJzdFN1c3BlbmRlZFRpbWU7YT1hLmxhc3RTdXNwZW5kZWRUaW1lO3JldHVybiAwIT09YyYmYz49YiYmYTw9Yn1mdW5jdGlvbiB4aShhLGIpe3ZhciBjPWEuZmlyc3RTdXNwZW5kZWRUaW1lLGQ9YS5sYXN0U3VzcGVuZGVkVGltZTtjPGImJihhLmZpcnN0U3VzcGVuZGVkVGltZT1iKTtpZihkPmJ8fDA9PT1jKWEubGFzdFN1c3BlbmRlZFRpbWU9YjtiPD1hLmxhc3RQaW5nZWRUaW1lJiYoYS5sYXN0UGluZ2VkVGltZT0wKTtiPD1hLmxhc3RFeHBpcmVkVGltZSYmKGEubGFzdEV4cGlyZWRUaW1lPTApfVxuZnVuY3Rpb24geWkoYSxiKXtiPmEuZmlyc3RQZW5kaW5nVGltZSYmKGEuZmlyc3RQZW5kaW5nVGltZT1iKTt2YXIgYz1hLmZpcnN0U3VzcGVuZGVkVGltZTswIT09YyYmKGI+PWM/YS5maXJzdFN1c3BlbmRlZFRpbWU9YS5sYXN0U3VzcGVuZGVkVGltZT1hLm5leHRLbm93blBlbmRpbmdMZXZlbD0wOmI+PWEubGFzdFN1c3BlbmRlZFRpbWUmJihhLmxhc3RTdXNwZW5kZWRUaW1lPWIrMSksYj5hLm5leHRLbm93blBlbmRpbmdMZXZlbCYmKGEubmV4dEtub3duUGVuZGluZ0xldmVsPWIpKX1mdW5jdGlvbiBDaihhLGIpe3ZhciBjPWEubGFzdEV4cGlyZWRUaW1lO2lmKDA9PT1jfHxjPmIpYS5sYXN0RXhwaXJlZFRpbWU9Yn1cbmZ1bmN0aW9uIGJrKGEsYixjLGQpe3ZhciBlPWIuY3VycmVudCxmPUdnKCksZz1EZy5zdXNwZW5zZTtmPUhnKGYsZSxnKTthOmlmKGMpe2M9Yy5fcmVhY3RJbnRlcm5hbEZpYmVyO2I6e2lmKGRjKGMpIT09Y3x8MSE9PWMudGFnKXRocm93IEVycm9yKHUoMTcwKSk7dmFyIGg9Yztkb3tzd2l0Y2goaC50YWcpe2Nhc2UgMzpoPWguc3RhdGVOb2RlLmNvbnRleHQ7YnJlYWsgYjtjYXNlIDE6aWYoTChoLnR5cGUpKXtoPWguc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGJ9fWg9aC5yZXR1cm59d2hpbGUobnVsbCE9PWgpO3Rocm93IEVycm9yKHUoMTcxKSk7fWlmKDE9PT1jLnRhZyl7dmFyIGs9Yy50eXBlO2lmKEwoaykpe2M9RmYoYyxrLGgpO2JyZWFrIGF9fWM9aH1lbHNlIGM9QWY7bnVsbD09PWIuY29udGV4dD9iLmNvbnRleHQ9YzpiLnBlbmRpbmdDb250ZXh0PWM7Yj13ZyhmLGcpO2IucGF5bG9hZD17ZWxlbWVudDphfTtkPXZvaWQgMD09PVxuZD9udWxsOmQ7bnVsbCE9PWQmJihiLmNhbGxiYWNrPWQpO3hnKGUsYik7SWcoZSxmKTtyZXR1cm4gZn1mdW5jdGlvbiBjayhhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGU7ZGVmYXVsdDpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGV9fWZ1bmN0aW9uIGRrKGEsYil7YT1hLm1lbW9pemVkU3RhdGU7bnVsbCE9PWEmJm51bGwhPT1hLmRlaHlkcmF0ZWQmJmEucmV0cnlUaW1lPGImJihhLnJldHJ5VGltZT1iKX1mdW5jdGlvbiBlayhhLGIpe2RrKGEsYik7KGE9YS5hbHRlcm5hdGUpJiZkayhhLGIpfVxuZnVuY3Rpb24gZmsoYSxiLGMpe2M9bnVsbCE9YyYmITA9PT1jLmh5ZHJhdGU7dmFyIGQ9bmV3IGFrKGEsYixjKSxlPVNoKDMsbnVsbCxudWxsLDI9PT1iPzc6MT09PWI/MzowKTtkLmN1cnJlbnQ9ZTtlLnN0YXRlTm9kZT1kO3VnKGUpO2FbT2RdPWQuY3VycmVudDtjJiYwIT09YiYmSmMoYSw5PT09YS5ub2RlVHlwZT9hOmEub3duZXJEb2N1bWVudCk7dGhpcy5faW50ZXJuYWxSb290PWR9ZmsucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhKXtiayhhLHRoaXMuX2ludGVybmFsUm9vdCxudWxsLG51bGwpfTtmay5wcm90b3R5cGUudW5tb3VudD1mdW5jdGlvbigpe3ZhciBhPXRoaXMuX2ludGVybmFsUm9vdCxiPWEuY29udGFpbmVySW5mbztiayhudWxsLGEsbnVsbCxmdW5jdGlvbigpe2JbT2RdPW51bGx9KX07XG5mdW5jdGlvbiBnayhhKXtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZSYmOSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZSYmKDghPT1hLm5vZGVUeXBlfHxcIiByZWFjdC1tb3VudC1wb2ludC11bnN0YWJsZSBcIiE9PWEubm9kZVZhbHVlKSl9ZnVuY3Rpb24gaGsoYSxiKXtifHwoYj1hPzk9PT1hLm5vZGVUeXBlP2EuZG9jdW1lbnRFbGVtZW50OmEuZmlyc3RDaGlsZDpudWxsLGI9ISghYnx8MSE9PWIubm9kZVR5cGV8fCFiLmhhc0F0dHJpYnV0ZShcImRhdGEtcmVhY3Ryb290XCIpKSk7aWYoIWIpZm9yKHZhciBjO2M9YS5sYXN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYyk7cmV0dXJuIG5ldyBmayhhLDAsYj97aHlkcmF0ZTohMH06dm9pZCAwKX1cbmZ1bmN0aW9uIGlrKGEsYixjLGQsZSl7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpe3ZhciBnPWYuX2ludGVybmFsUm9vdDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGg9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9Y2soZyk7aC5jYWxsKGEpfX1iayhiLGcsYSxlKX1lbHNle2Y9Yy5fcmVhY3RSb290Q29udGFpbmVyPWhrKGMsZCk7Zz1mLl9pbnRlcm5hbFJvb3Q7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBrPWU7ZT1mdW5jdGlvbigpe3ZhciBhPWNrKGcpO2suY2FsbChhKX19TmooZnVuY3Rpb24oKXtiayhiLGcsYSxlKX0pfXJldHVybiBjayhnKX1mdW5jdGlvbiBqayhhLGIsYyl7dmFyIGQ9Mzxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOm51bGw7cmV0dXJueyQkdHlwZW9mOiRhLGtleTpudWxsPT1kP251bGw6XCJcIitkLGNoaWxkcmVuOmEsY29udGFpbmVySW5mbzpiLGltcGxlbWVudGF0aW9uOmN9fVxud2M9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9aGcoR2coKSwxNTAsMTAwKTtJZyhhLGIpO2VrKGEsYil9fTt4Yz1mdW5jdGlvbihhKXsxMz09PWEudGFnJiYoSWcoYSwzKSxlayhhLDMpKX07eWM9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9R2coKTtiPUhnKGIsYSxudWxsKTtJZyhhLGIpO2VrKGEsYil9fTtcbnphPWZ1bmN0aW9uKGEsYixjKXtzd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6Q2IoYSxjKTtiPWMubmFtZTtpZihcInJhZGlvXCI9PT1jLnR5cGUmJm51bGwhPWIpe2ZvcihjPWE7Yy5wYXJlbnROb2RlOyljPWMucGFyZW50Tm9kZTtjPWMucXVlcnlTZWxlY3RvckFsbChcImlucHV0W25hbWU9XCIrSlNPTi5zdHJpbmdpZnkoXCJcIitiKSsnXVt0eXBlPVwicmFkaW9cIl0nKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKXt2YXIgZD1jW2JdO2lmKGQhPT1hJiZkLmZvcm09PT1hLmZvcm0pe3ZhciBlPVFkKGQpO2lmKCFlKXRocm93IEVycm9yKHUoOTApKTt5YihkKTtDYihkLGUpfX19YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6S2IoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1jLnZhbHVlLG51bGwhPWImJkhiKGEsISFjLm11bHRpcGxlLGIsITEpfX07RmE9TWo7XG5HYT1mdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPVc7V3w9NDt0cnl7cmV0dXJuIGNnKDk4LGEuYmluZChudWxsLGIsYyxkLGUpKX1maW5hbGx5e1c9ZixXPT09ViYmZ2coKX19O0hhPWZ1bmN0aW9uKCl7KFcmKDF8Zmp8Z2opKT09PVYmJihMaigpLERqKCkpfTtJYT1mdW5jdGlvbihhLGIpe3ZhciBjPVc7V3w9Mjt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtXPWMsVz09PVYmJmdnKCl9fTtmdW5jdGlvbiBrayhhLGIpe3ZhciBjPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsO2lmKCFnayhiKSl0aHJvdyBFcnJvcih1KDIwMCkpO3JldHVybiBqayhhLGIsbnVsbCxjKX12YXIgbGs9e0V2ZW50czpbTmMsUGQsUWQseGEsdGEsWGQsZnVuY3Rpb24oYSl7amMoYSxXZCl9LERhLEVhLGlkLG1jLERqLHtjdXJyZW50OiExfV19O1xuKGZ1bmN0aW9uKGEpe3ZhciBiPWEuZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U7cmV0dXJuIFlqKG4oe30sYSx7b3ZlcnJpZGVIb29rU3RhdGU6bnVsbCxvdmVycmlkZVByb3BzOm51bGwsc2V0U3VzcGVuc2VIYW5kbGVyOm51bGwsc2NoZWR1bGVVcGRhdGU6bnVsbCxjdXJyZW50RGlzcGF0Y2hlclJlZjpXYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe2E9aGMoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOmZ1bmN0aW9uKGEpe3JldHVybiBiP2IoYSk6bnVsbH0sZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoOm51bGwsc2NoZWR1bGVSZWZyZXNoOm51bGwsc2NoZWR1bGVSb290Om51bGwsc2V0UmVmcmVzaEhhbmRsZXI6bnVsbCxnZXRDdXJyZW50RmliZXI6bnVsbH0pKX0pKHtmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTp0YyxidW5kbGVUeXBlOjAsdmVyc2lvbjpcIjE2LjE0LjBcIixcbnJlbmRlcmVyUGFja2FnZU5hbWU6XCJyZWFjdC1kb21cIn0pO2V4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9bGs7ZXhwb3J0cy5jcmVhdGVQb3J0YWw9a2s7ZXhwb3J0cy5maW5kRE9NTm9kZT1mdW5jdGlvbihhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKDE9PT1hLm5vZGVUeXBlKXJldHVybiBhO3ZhciBiPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjtpZih2b2lkIDA9PT1iKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5yZW5kZXIpdGhyb3cgRXJyb3IodSgxODgpKTt0aHJvdyBFcnJvcih1KDI2OCxPYmplY3Qua2V5cyhhKSkpO31hPWhjKGIpO2E9bnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZTtyZXR1cm4gYX07XG5leHBvcnRzLmZsdXNoU3luYz1mdW5jdGlvbihhLGIpe2lmKChXJihmanxnaikpIT09Vil0aHJvdyBFcnJvcih1KDE4NykpO3ZhciBjPVc7V3w9MTt0cnl7cmV0dXJuIGNnKDk5LGEuYmluZChudWxsLGIpKX1maW5hbGx5e1c9YyxnZygpfX07ZXhwb3J0cy5oeWRyYXRlPWZ1bmN0aW9uKGEsYixjKXtpZighZ2soYikpdGhyb3cgRXJyb3IodSgyMDApKTtyZXR1cm4gaWsobnVsbCxhLGIsITAsYyl9O2V4cG9ydHMucmVuZGVyPWZ1bmN0aW9uKGEsYixjKXtpZighZ2soYikpdGhyb3cgRXJyb3IodSgyMDApKTtyZXR1cm4gaWsobnVsbCxhLGIsITEsYyl9O1xuZXhwb3J0cy51bm1vdW50Q29tcG9uZW50QXROb2RlPWZ1bmN0aW9uKGEpe2lmKCFnayhhKSl0aHJvdyBFcnJvcih1KDQwKSk7cmV0dXJuIGEuX3JlYWN0Um9vdENvbnRhaW5lcj8oTmooZnVuY3Rpb24oKXtpayhudWxsLG51bGwsYSwhMSxmdW5jdGlvbigpe2EuX3JlYWN0Um9vdENvbnRhaW5lcj1udWxsO2FbT2RdPW51bGx9KX0pLCEwKTohMX07ZXhwb3J0cy51bnN0YWJsZV9iYXRjaGVkVXBkYXRlcz1NajtleHBvcnRzLnVuc3RhYmxlX2NyZWF0ZVBvcnRhbD1mdW5jdGlvbihhLGIpe3JldHVybiBrayhhLGIsMjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGwpfTtcbmV4cG9ydHMudW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI9ZnVuY3Rpb24oYSxiLGMsZCl7aWYoIWdrKGMpKXRocm93IEVycm9yKHUoMjAwKSk7aWYobnVsbD09YXx8dm9pZCAwPT09YS5fcmVhY3RJbnRlcm5hbEZpYmVyKXRocm93IEVycm9yKHUoMzgpKTtyZXR1cm4gaWsoYSxiLGMsITEsZCl9O2V4cG9ydHMudmVyc2lvbj1cIjE2LjE0LjBcIjtcbiIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY2hlY2tEQ0UoKSB7XG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbiAgaWYgKFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gPT09ICd1bmRlZmluZWQnIHx8XG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJ1xuICApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBUaGlzIGJyYW5jaCBpcyB1bnJlYWNoYWJsZSBiZWNhdXNlIHRoaXMgZnVuY3Rpb24gaXMgb25seSBjYWxsZWRcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXG4gICAgLy8gVGhlcmVmb3JlIGlmIHRoZSBicmFuY2ggaXMgc3RpbGwgaGVyZSwgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdhc24ndFxuICAgIC8vIHByb3Blcmx5IGFwcGxpZWQuXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXG4gICAgLy8gdGhpcyBtZXNzYWdlIGRvZXNuJ3Qgb2NjdXIgZWxzZXdoZXJlIGluIHRoaXMgZnVuY3Rpb24sIG9yIGl0IHdpbGwgY2F1c2VcbiAgICAvLyBhIGZhbHNlIHBvc2l0aXZlLlxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gRENFIGNoZWNrIHNob3VsZCBoYXBwZW4gYmVmb3JlIFJlYWN0RE9NIGJ1bmRsZSBleGVjdXRlcyBzbyB0aGF0XG4gIC8vIERldlRvb2xzIGNhbiByZXBvcnQgYmFkIG1pbmlmaWNhdGlvbiBkdXJpbmcgaW5qZWN0aW9uLlxuICBjaGVja0RDRSgpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTQuMFxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGw9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLHA9bj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxxPW4/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixyPW4/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LHQ9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsdT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCx2PW4/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LHc9bj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCx4PW4/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHk9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMsej1uP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LEE9bj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTpcbjYwMTE2LEI9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIEMoYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9XG52YXIgRD17aXNNb3VudGVkOmZ1bmN0aW9uKCl7cmV0dXJuITF9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKCl7fX0sRT17fTtmdW5jdGlvbiBGKGEsYixjKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUU7dGhpcy51cGRhdGVyPWN8fER9Ri5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtGLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWEpdGhyb3cgRXJyb3IoQyg4NSkpO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07Ri5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07XG5mdW5jdGlvbiBHKCl7fUcucHJvdG90eXBlPUYucHJvdG90eXBlO2Z1bmN0aW9uIEgoYSxiLGMpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9RTt0aGlzLnVwZGF0ZXI9Y3x8RH12YXIgST1ILnByb3RvdHlwZT1uZXcgRztJLmNvbnN0cnVjdG9yPUg7bChJLEYucHJvdG90eXBlKTtJLmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO3ZhciBKPXtjdXJyZW50Om51bGx9LEs9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxMPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBNKGEsYixjKXt2YXIgZSxkPXt9LGc9bnVsbCxrPW51bGw7aWYobnVsbCE9Yilmb3IoZSBpbiB2b2lkIDAhPT1iLnJlZiYmKGs9Yi5yZWYpLHZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KSxiKUsuY2FsbChiLGUpJiYhTC5oYXNPd25Qcm9wZXJ0eShlKSYmKGRbZV09YltlXSk7dmFyIGY9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1mKWQuY2hpbGRyZW49YztlbHNlIGlmKDE8Zil7Zm9yKHZhciBoPUFycmF5KGYpLG09MDttPGY7bSsrKWhbbV09YXJndW1lbnRzW20rMl07ZC5jaGlsZHJlbj1ofWlmKGEmJmEuZGVmYXVsdFByb3BzKWZvcihlIGluIGY9YS5kZWZhdWx0UHJvcHMsZil2b2lkIDA9PT1kW2VdJiYoZFtlXT1mW2VdKTtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEsa2V5OmcscmVmOmsscHJvcHM6ZCxfb3duZXI6Si5jdXJyZW50fX1cbmZ1bmN0aW9uIE4oYSxiKXtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxrZXk6YixyZWY6YS5yZWYscHJvcHM6YS5wcm9wcyxfb3duZXI6YS5fb3duZXJ9fWZ1bmN0aW9uIE8oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PXB9ZnVuY3Rpb24gZXNjYXBlKGEpe3ZhciBiPXtcIj1cIjpcIj0wXCIsXCI6XCI6XCI9MlwifTtyZXR1cm5cIiRcIisoXCJcIithKS5yZXBsYWNlKC9bPTpdL2csZnVuY3Rpb24oYSl7cmV0dXJuIGJbYV19KX12YXIgUD0vXFwvKy9nLFE9W107ZnVuY3Rpb24gUihhLGIsYyxlKXtpZihRLmxlbmd0aCl7dmFyIGQ9US5wb3AoKTtkLnJlc3VsdD1hO2Qua2V5UHJlZml4PWI7ZC5mdW5jPWM7ZC5jb250ZXh0PWU7ZC5jb3VudD0wO3JldHVybiBkfXJldHVybntyZXN1bHQ6YSxrZXlQcmVmaXg6YixmdW5jOmMsY29udGV4dDplLGNvdW50OjB9fVxuZnVuY3Rpb24gUyhhKXthLnJlc3VsdD1udWxsO2Eua2V5UHJlZml4PW51bGw7YS5mdW5jPW51bGw7YS5jb250ZXh0PW51bGw7YS5jb3VudD0wOzEwPlEubGVuZ3RoJiZRLnB1c2goYSl9XG5mdW5jdGlvbiBUKGEsYixjLGUpe3ZhciBkPXR5cGVvZiBhO2lmKFwidW5kZWZpbmVkXCI9PT1kfHxcImJvb2xlYW5cIj09PWQpYT1udWxsO3ZhciBnPSExO2lmKG51bGw9PT1hKWc9ITA7ZWxzZSBzd2l0Y2goZCl7Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJudW1iZXJcIjpnPSEwO2JyZWFrO2Nhc2UgXCJvYmplY3RcIjpzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBwOmNhc2UgcTpnPSEwfX1pZihnKXJldHVybiBjKGUsYSxcIlwiPT09Yj9cIi5cIitVKGEsMCk6YiksMTtnPTA7Yj1cIlwiPT09Yj9cIi5cIjpiK1wiOlwiO2lmKEFycmF5LmlzQXJyYXkoYSkpZm9yKHZhciBrPTA7azxhLmxlbmd0aDtrKyspe2Q9YVtrXTt2YXIgZj1iK1UoZCxrKTtnKz1UKGQsZixjLGUpfWVsc2UgaWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYT9mPW51bGw6KGY9QiYmYVtCXXx8YVtcIkBAaXRlcmF0b3JcIl0sZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgZj9mOm51bGwpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmKWZvcihhPWYuY2FsbChhKSxrPVxuMDshKGQ9YS5uZXh0KCkpLmRvbmU7KWQ9ZC52YWx1ZSxmPWIrVShkLGsrKyksZys9VChkLGYsYyxlKTtlbHNlIGlmKFwib2JqZWN0XCI9PT1kKXRocm93IGM9XCJcIithLEVycm9yKEMoMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PWM/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6YyxcIlwiKSk7cmV0dXJuIGd9ZnVuY3Rpb24gVihhLGIsYyl7cmV0dXJuIG51bGw9PWE/MDpUKGEsXCJcIixiLGMpfWZ1bmN0aW9uIFUoYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoYS5rZXkpOmIudG9TdHJpbmcoMzYpfWZ1bmN0aW9uIFcoYSxiKXthLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspfVxuZnVuY3Rpb24gYWEoYSxiLGMpe3ZhciBlPWEucmVzdWx0LGQ9YS5rZXlQcmVmaXg7YT1hLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspO0FycmF5LmlzQXJyYXkoYSk/WChhLGUsYyxmdW5jdGlvbihhKXtyZXR1cm4gYX0pOm51bGwhPWEmJihPKGEpJiYoYT1OKGEsZCsoIWEua2V5fHxiJiZiLmtleT09PWEua2V5P1wiXCI6KFwiXCIrYS5rZXkpLnJlcGxhY2UoUCxcIiQmL1wiKStcIi9cIikrYykpLGUucHVzaChhKSl9ZnVuY3Rpb24gWChhLGIsYyxlLGQpe3ZhciBnPVwiXCI7bnVsbCE9YyYmKGc9KFwiXCIrYykucmVwbGFjZShQLFwiJCYvXCIpK1wiL1wiKTtiPVIoYixnLGUsZCk7VihhLGFhLGIpO1MoYil9dmFyIFk9e2N1cnJlbnQ6bnVsbH07ZnVuY3Rpb24gWigpe3ZhciBhPVkuY3VycmVudDtpZihudWxsPT09YSl0aHJvdyBFcnJvcihDKDMyMSkpO3JldHVybiBhfVxudmFyIGJhPXtSZWFjdEN1cnJlbnREaXNwYXRjaGVyOlksUmVhY3RDdXJyZW50QmF0Y2hDb25maWc6e3N1c3BlbnNlOm51bGx9LFJlYWN0Q3VycmVudE93bmVyOkosSXNTb21lUmVuZGVyZXJBY3Rpbmc6e2N1cnJlbnQ6ITF9LGFzc2lnbjpsfTtleHBvcnRzLkNoaWxkcmVuPXttYXA6ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGw9PWEpcmV0dXJuIGE7dmFyIGU9W107WChhLGUsbnVsbCxiLGMpO3JldHVybiBlfSxmb3JFYWNoOmZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT1hKXJldHVybiBhO2I9UihudWxsLG51bGwsYixjKTtWKGEsVyxiKTtTKGIpfSxjb3VudDpmdW5jdGlvbihhKXtyZXR1cm4gVihhLGZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LG51bGwpfSx0b0FycmF5OmZ1bmN0aW9uKGEpe3ZhciBiPVtdO1goYSxiLG51bGwsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTtyZXR1cm4gYn0sb25seTpmdW5jdGlvbihhKXtpZighTyhhKSl0aHJvdyBFcnJvcihDKDE0MykpO3JldHVybiBhfX07XG5leHBvcnRzLkNvbXBvbmVudD1GO2V4cG9ydHMuRnJhZ21lbnQ9cjtleHBvcnRzLlByb2ZpbGVyPXU7ZXhwb3J0cy5QdXJlQ29tcG9uZW50PUg7ZXhwb3J0cy5TdHJpY3RNb2RlPXQ7ZXhwb3J0cy5TdXNwZW5zZT15O2V4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9YmE7XG5leHBvcnRzLmNsb25lRWxlbWVudD1mdW5jdGlvbihhLGIsYyl7aWYobnVsbD09PWF8fHZvaWQgMD09PWEpdGhyb3cgRXJyb3IoQygyNjcsYSkpO3ZhciBlPWwoe30sYS5wcm9wcyksZD1hLmtleSxnPWEucmVmLGs9YS5fb3duZXI7aWYobnVsbCE9Yil7dm9pZCAwIT09Yi5yZWYmJihnPWIucmVmLGs9Si5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGQ9XCJcIitiLmtleSk7aWYoYS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzKXZhciBmPWEudHlwZS5kZWZhdWx0UHJvcHM7Zm9yKGggaW4gYilLLmNhbGwoYixoKSYmIUwuaGFzT3duUHJvcGVydHkoaCkmJihlW2hdPXZvaWQgMD09PWJbaF0mJnZvaWQgMCE9PWY/ZltoXTpiW2hdKX12YXIgaD1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWgpZS5jaGlsZHJlbj1jO2Vsc2UgaWYoMTxoKXtmPUFycmF5KGgpO2Zvcih2YXIgbT0wO208aDttKyspZlttXT1hcmd1bWVudHNbbSsyXTtlLmNoaWxkcmVuPWZ9cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLnR5cGUsXG5rZXk6ZCxyZWY6Zyxwcm9wczplLF9vd25lcjprfX07ZXhwb3J0cy5jcmVhdGVDb250ZXh0PWZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9bnVsbCk7YT17JCR0eXBlb2Y6dyxfY2FsY3VsYXRlQ2hhbmdlZEJpdHM6YixfY3VycmVudFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTI6YSxfdGhyZWFkQ291bnQ6MCxQcm92aWRlcjpudWxsLENvbnN1bWVyOm51bGx9O2EuUHJvdmlkZXI9eyQkdHlwZW9mOnYsX2NvbnRleHQ6YX07cmV0dXJuIGEuQ29uc3VtZXI9YX07ZXhwb3J0cy5jcmVhdGVFbGVtZW50PU07ZXhwb3J0cy5jcmVhdGVGYWN0b3J5PWZ1bmN0aW9uKGEpe3ZhciBiPU0uYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifTtleHBvcnRzLmNyZWF0ZVJlZj1mdW5jdGlvbigpe3JldHVybntjdXJyZW50Om51bGx9fTtleHBvcnRzLmZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOngscmVuZGVyOmF9fTtleHBvcnRzLmlzVmFsaWRFbGVtZW50PU87XG5leHBvcnRzLmxhenk9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOkEsX2N0b3I6YSxfc3RhdHVzOi0xLF9yZXN1bHQ6bnVsbH19O2V4cG9ydHMubWVtbz1mdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjp6LHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX07ZXhwb3J0cy51c2VDYWxsYmFjaz1mdW5jdGlvbihhLGIpe3JldHVybiBaKCkudXNlQ2FsbGJhY2soYSxiKX07ZXhwb3J0cy51c2VDb250ZXh0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VDb250ZXh0KGEsYil9O2V4cG9ydHMudXNlRGVidWdWYWx1ZT1mdW5jdGlvbigpe307ZXhwb3J0cy51c2VFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZUVmZmVjdChhLGIpfTtleHBvcnRzLnVzZUltcGVyYXRpdmVIYW5kbGU9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBaKCkudXNlSW1wZXJhdGl2ZUhhbmRsZShhLGIsYyl9O1xuZXhwb3J0cy51c2VMYXlvdXRFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZUxheW91dEVmZmVjdChhLGIpfTtleHBvcnRzLnVzZU1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZU1lbW8oYSxiKX07ZXhwb3J0cy51c2VSZWR1Y2VyPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gWigpLnVzZVJlZHVjZXIoYSxiLGMpfTtleHBvcnRzLnVzZVJlZj1mdW5jdGlvbihhKXtyZXR1cm4gWigpLnVzZVJlZihhKX07ZXhwb3J0cy51c2VTdGF0ZT1mdW5jdGlvbihhKXtyZXR1cm4gWigpLnVzZVN0YXRlKGEpfTtleHBvcnRzLnZlcnNpb249XCIxNi4xNC4wXCI7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE0LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxudmFyIHJ1bnRpbWUgPSAoZnVuY3Rpb24gKGV4cG9ydHMpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgdmFyIE9wID0gT2JqZWN0LnByb3RvdHlwZTtcbiAgdmFyIGhhc093biA9IE9wLmhhc093blByb3BlcnR5O1xuICB2YXIgdW5kZWZpbmVkOyAvLyBNb3JlIGNvbXByZXNzaWJsZSB0aGFuIHZvaWQgMC5cbiAgdmFyICRTeW1ib2wgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgPyBTeW1ib2wgOiB7fTtcbiAgdmFyIGl0ZXJhdG9yU3ltYm9sID0gJFN5bWJvbC5pdGVyYXRvciB8fCBcIkBAaXRlcmF0b3JcIjtcbiAgdmFyIGFzeW5jSXRlcmF0b3JTeW1ib2wgPSAkU3ltYm9sLmFzeW5jSXRlcmF0b3IgfHwgXCJAQGFzeW5jSXRlcmF0b3JcIjtcbiAgdmFyIHRvU3RyaW5nVGFnU3ltYm9sID0gJFN5bWJvbC50b1N0cmluZ1RhZyB8fCBcIkBAdG9TdHJpbmdUYWdcIjtcblxuICBmdW5jdGlvbiBkZWZpbmUob2JqLCBrZXksIHZhbHVlKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgd3JpdGFibGU6IHRydWVcbiAgICB9KTtcbiAgICByZXR1cm4gb2JqW2tleV07XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBJRSA4IGhhcyBhIGJyb2tlbiBPYmplY3QuZGVmaW5lUHJvcGVydHkgdGhhdCBvbmx5IHdvcmtzIG9uIERPTSBvYmplY3RzLlxuICAgIGRlZmluZSh7fSwgXCJcIik7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGRlZmluZSA9IGZ1bmN0aW9uKG9iaiwga2V5LCB2YWx1ZSkge1xuICAgICAgcmV0dXJuIG9ialtrZXldID0gdmFsdWU7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHdyYXAoaW5uZXJGbiwgb3V0ZXJGbiwgc2VsZiwgdHJ5TG9jc0xpc3QpIHtcbiAgICAvLyBJZiBvdXRlckZuIHByb3ZpZGVkIGFuZCBvdXRlckZuLnByb3RvdHlwZSBpcyBhIEdlbmVyYXRvciwgdGhlbiBvdXRlckZuLnByb3RvdHlwZSBpbnN0YW5jZW9mIEdlbmVyYXRvci5cbiAgICB2YXIgcHJvdG9HZW5lcmF0b3IgPSBvdXRlckZuICYmIG91dGVyRm4ucHJvdG90eXBlIGluc3RhbmNlb2YgR2VuZXJhdG9yID8gb3V0ZXJGbiA6IEdlbmVyYXRvcjtcbiAgICB2YXIgZ2VuZXJhdG9yID0gT2JqZWN0LmNyZWF0ZShwcm90b0dlbmVyYXRvci5wcm90b3R5cGUpO1xuICAgIHZhciBjb250ZXh0ID0gbmV3IENvbnRleHQodHJ5TG9jc0xpc3QgfHwgW10pO1xuXG4gICAgLy8gVGhlIC5faW52b2tlIG1ldGhvZCB1bmlmaWVzIHRoZSBpbXBsZW1lbnRhdGlvbnMgb2YgdGhlIC5uZXh0LFxuICAgIC8vIC50aHJvdywgYW5kIC5yZXR1cm4gbWV0aG9kcy5cbiAgICBnZW5lcmF0b3IuX2ludm9rZSA9IG1ha2VJbnZva2VNZXRob2QoaW5uZXJGbiwgc2VsZiwgY29udGV4dCk7XG5cbiAgICByZXR1cm4gZ2VuZXJhdG9yO1xuICB9XG4gIGV4cG9ydHMud3JhcCA9IHdyYXA7XG5cbiAgLy8gVHJ5L2NhdGNoIGhlbHBlciB0byBtaW5pbWl6ZSBkZW9wdGltaXphdGlvbnMuIFJldHVybnMgYSBjb21wbGV0aW9uXG4gIC8vIHJlY29yZCBsaWtlIGNvbnRleHQudHJ5RW50cmllc1tpXS5jb21wbGV0aW9uLiBUaGlzIGludGVyZmFjZSBjb3VsZFxuICAvLyBoYXZlIGJlZW4gKGFuZCB3YXMgcHJldmlvdXNseSkgZGVzaWduZWQgdG8gdGFrZSBhIGNsb3N1cmUgdG8gYmVcbiAgLy8gaW52b2tlZCB3aXRob3V0IGFyZ3VtZW50cywgYnV0IGluIGFsbCB0aGUgY2FzZXMgd2UgY2FyZSBhYm91dCB3ZVxuICAvLyBhbHJlYWR5IGhhdmUgYW4gZXhpc3RpbmcgbWV0aG9kIHdlIHdhbnQgdG8gY2FsbCwgc28gdGhlcmUncyBubyBuZWVkXG4gIC8vIHRvIGNyZWF0ZSBhIG5ldyBmdW5jdGlvbiBvYmplY3QuIFdlIGNhbiBldmVuIGdldCBhd2F5IHdpdGggYXNzdW1pbmdcbiAgLy8gdGhlIG1ldGhvZCB0YWtlcyBleGFjdGx5IG9uZSBhcmd1bWVudCwgc2luY2UgdGhhdCBoYXBwZW5zIHRvIGJlIHRydWVcbiAgLy8gaW4gZXZlcnkgY2FzZSwgc28gd2UgZG9uJ3QgaGF2ZSB0byB0b3VjaCB0aGUgYXJndW1lbnRzIG9iamVjdC4gVGhlXG4gIC8vIG9ubHkgYWRkaXRpb25hbCBhbGxvY2F0aW9uIHJlcXVpcmVkIGlzIHRoZSBjb21wbGV0aW9uIHJlY29yZCwgd2hpY2hcbiAgLy8gaGFzIGEgc3RhYmxlIHNoYXBlIGFuZCBzbyBob3BlZnVsbHkgc2hvdWxkIGJlIGNoZWFwIHRvIGFsbG9jYXRlLlxuICBmdW5jdGlvbiB0cnlDYXRjaChmbiwgb2JqLCBhcmcpIHtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIHsgdHlwZTogXCJub3JtYWxcIiwgYXJnOiBmbi5jYWxsKG9iaiwgYXJnKSB9O1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgcmV0dXJuIHsgdHlwZTogXCJ0aHJvd1wiLCBhcmc6IGVyciB9O1xuICAgIH1cbiAgfVxuXG4gIHZhciBHZW5TdGF0ZVN1c3BlbmRlZFN0YXJ0ID0gXCJzdXNwZW5kZWRTdGFydFwiO1xuICB2YXIgR2VuU3RhdGVTdXNwZW5kZWRZaWVsZCA9IFwic3VzcGVuZGVkWWllbGRcIjtcbiAgdmFyIEdlblN0YXRlRXhlY3V0aW5nID0gXCJleGVjdXRpbmdcIjtcbiAgdmFyIEdlblN0YXRlQ29tcGxldGVkID0gXCJjb21wbGV0ZWRcIjtcblxuICAvLyBSZXR1cm5pbmcgdGhpcyBvYmplY3QgZnJvbSB0aGUgaW5uZXJGbiBoYXMgdGhlIHNhbWUgZWZmZWN0IGFzXG4gIC8vIGJyZWFraW5nIG91dCBvZiB0aGUgZGlzcGF0Y2ggc3dpdGNoIHN0YXRlbWVudC5cbiAgdmFyIENvbnRpbnVlU2VudGluZWwgPSB7fTtcblxuICAvLyBEdW1teSBjb25zdHJ1Y3RvciBmdW5jdGlvbnMgdGhhdCB3ZSB1c2UgYXMgdGhlIC5jb25zdHJ1Y3RvciBhbmRcbiAgLy8gLmNvbnN0cnVjdG9yLnByb3RvdHlwZSBwcm9wZXJ0aWVzIGZvciBmdW5jdGlvbnMgdGhhdCByZXR1cm4gR2VuZXJhdG9yXG4gIC8vIG9iamVjdHMuIEZvciBmdWxsIHNwZWMgY29tcGxpYW5jZSwgeW91IG1heSB3aXNoIHRvIGNvbmZpZ3VyZSB5b3VyXG4gIC8vIG1pbmlmaWVyIG5vdCB0byBtYW5nbGUgdGhlIG5hbWVzIG9mIHRoZXNlIHR3byBmdW5jdGlvbnMuXG4gIGZ1bmN0aW9uIEdlbmVyYXRvcigpIHt9XG4gIGZ1bmN0aW9uIEdlbmVyYXRvckZ1bmN0aW9uKCkge31cbiAgZnVuY3Rpb24gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUoKSB7fVxuXG4gIC8vIFRoaXMgaXMgYSBwb2x5ZmlsbCBmb3IgJUl0ZXJhdG9yUHJvdG90eXBlJSBmb3IgZW52aXJvbm1lbnRzIHRoYXRcbiAgLy8gZG9uJ3QgbmF0aXZlbHkgc3VwcG9ydCBpdC5cbiAgdmFyIEl0ZXJhdG9yUHJvdG90eXBlID0ge307XG4gIEl0ZXJhdG9yUHJvdG90eXBlW2l0ZXJhdG9yU3ltYm9sXSA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuICB2YXIgZ2V0UHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Y7XG4gIHZhciBOYXRpdmVJdGVyYXRvclByb3RvdHlwZSA9IGdldFByb3RvICYmIGdldFByb3RvKGdldFByb3RvKHZhbHVlcyhbXSkpKTtcbiAgaWYgKE5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlICYmXG4gICAgICBOYXRpdmVJdGVyYXRvclByb3RvdHlwZSAhPT0gT3AgJiZcbiAgICAgIGhhc093bi5jYWxsKE5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlLCBpdGVyYXRvclN5bWJvbCkpIHtcbiAgICAvLyBUaGlzIGVudmlyb25tZW50IGhhcyBhIG5hdGl2ZSAlSXRlcmF0b3JQcm90b3R5cGUlOyB1c2UgaXQgaW5zdGVhZFxuICAgIC8vIG9mIHRoZSBwb2x5ZmlsbC5cbiAgICBJdGVyYXRvclByb3RvdHlwZSA9IE5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlO1xuICB9XG5cbiAgdmFyIEdwID0gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUucHJvdG90eXBlID1cbiAgICBHZW5lcmF0b3IucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShJdGVyYXRvclByb3RvdHlwZSk7XG4gIEdlbmVyYXRvckZ1bmN0aW9uLnByb3RvdHlwZSA9IEdwLmNvbnN0cnVjdG9yID0gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGU7XG4gIEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlLmNvbnN0cnVjdG9yID0gR2VuZXJhdG9yRnVuY3Rpb247XG4gIEdlbmVyYXRvckZ1bmN0aW9uLmRpc3BsYXlOYW1lID0gZGVmaW5lKFxuICAgIEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlLFxuICAgIHRvU3RyaW5nVGFnU3ltYm9sLFxuICAgIFwiR2VuZXJhdG9yRnVuY3Rpb25cIlxuICApO1xuXG4gIC8vIEhlbHBlciBmb3IgZGVmaW5pbmcgdGhlIC5uZXh0LCAudGhyb3csIGFuZCAucmV0dXJuIG1ldGhvZHMgb2YgdGhlXG4gIC8vIEl0ZXJhdG9yIGludGVyZmFjZSBpbiB0ZXJtcyBvZiBhIHNpbmdsZSAuX2ludm9rZSBtZXRob2QuXG4gIGZ1bmN0aW9uIGRlZmluZUl0ZXJhdG9yTWV0aG9kcyhwcm90b3R5cGUpIHtcbiAgICBbXCJuZXh0XCIsIFwidGhyb3dcIiwgXCJyZXR1cm5cIl0uZm9yRWFjaChmdW5jdGlvbihtZXRob2QpIHtcbiAgICAgIGRlZmluZShwcm90b3R5cGUsIG1ldGhvZCwgZnVuY3Rpb24oYXJnKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pbnZva2UobWV0aG9kLCBhcmcpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBleHBvcnRzLmlzR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbihnZW5GdW4pIHtcbiAgICB2YXIgY3RvciA9IHR5cGVvZiBnZW5GdW4gPT09IFwiZnVuY3Rpb25cIiAmJiBnZW5GdW4uY29uc3RydWN0b3I7XG4gICAgcmV0dXJuIGN0b3JcbiAgICAgID8gY3RvciA9PT0gR2VuZXJhdG9yRnVuY3Rpb24gfHxcbiAgICAgICAgLy8gRm9yIHRoZSBuYXRpdmUgR2VuZXJhdG9yRnVuY3Rpb24gY29uc3RydWN0b3IsIHRoZSBiZXN0IHdlIGNhblxuICAgICAgICAvLyBkbyBpcyB0byBjaGVjayBpdHMgLm5hbWUgcHJvcGVydHkuXG4gICAgICAgIChjdG9yLmRpc3BsYXlOYW1lIHx8IGN0b3IubmFtZSkgPT09IFwiR2VuZXJhdG9yRnVuY3Rpb25cIlxuICAgICAgOiBmYWxzZTtcbiAgfTtcblxuICBleHBvcnRzLm1hcmsgPSBmdW5jdGlvbihnZW5GdW4pIHtcbiAgICBpZiAoT2JqZWN0LnNldFByb3RvdHlwZU9mKSB7XG4gICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YoZ2VuRnVuLCBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGdlbkZ1bi5fX3Byb3RvX18gPSBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZTtcbiAgICAgIGRlZmluZShnZW5GdW4sIHRvU3RyaW5nVGFnU3ltYm9sLCBcIkdlbmVyYXRvckZ1bmN0aW9uXCIpO1xuICAgIH1cbiAgICBnZW5GdW4ucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShHcCk7XG4gICAgcmV0dXJuIGdlbkZ1bjtcbiAgfTtcblxuICAvLyBXaXRoaW4gdGhlIGJvZHkgb2YgYW55IGFzeW5jIGZ1bmN0aW9uLCBgYXdhaXQgeGAgaXMgdHJhbnNmb3JtZWQgdG9cbiAgLy8gYHlpZWxkIHJlZ2VuZXJhdG9yUnVudGltZS5hd3JhcCh4KWAsIHNvIHRoYXQgdGhlIHJ1bnRpbWUgY2FuIHRlc3RcbiAgLy8gYGhhc093bi5jYWxsKHZhbHVlLCBcIl9fYXdhaXRcIilgIHRvIGRldGVybWluZSBpZiB0aGUgeWllbGRlZCB2YWx1ZSBpc1xuICAvLyBtZWFudCB0byBiZSBhd2FpdGVkLlxuICBleHBvcnRzLmF3cmFwID0gZnVuY3Rpb24oYXJnKSB7XG4gICAgcmV0dXJuIHsgX19hd2FpdDogYXJnIH07XG4gIH07XG5cbiAgZnVuY3Rpb24gQXN5bmNJdGVyYXRvcihnZW5lcmF0b3IsIFByb21pc2VJbXBsKSB7XG4gICAgZnVuY3Rpb24gaW52b2tlKG1ldGhvZCwgYXJnLCByZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIHZhciByZWNvcmQgPSB0cnlDYXRjaChnZW5lcmF0b3JbbWV0aG9kXSwgZ2VuZXJhdG9yLCBhcmcpO1xuICAgICAgaWYgKHJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgICAgcmVqZWN0KHJlY29yZC5hcmcpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IHJlY29yZC5hcmc7XG4gICAgICAgIHZhciB2YWx1ZSA9IHJlc3VsdC52YWx1ZTtcbiAgICAgICAgaWYgKHZhbHVlICYmXG4gICAgICAgICAgICB0eXBlb2YgdmFsdWUgPT09IFwib2JqZWN0XCIgJiZcbiAgICAgICAgICAgIGhhc093bi5jYWxsKHZhbHVlLCBcIl9fYXdhaXRcIikpIHtcbiAgICAgICAgICByZXR1cm4gUHJvbWlzZUltcGwucmVzb2x2ZSh2YWx1ZS5fX2F3YWl0KS50aGVuKGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgICAgICBpbnZva2UoXCJuZXh0XCIsIHZhbHVlLCByZXNvbHZlLCByZWplY3QpO1xuICAgICAgICAgIH0sIGZ1bmN0aW9uKGVycikge1xuICAgICAgICAgICAgaW52b2tlKFwidGhyb3dcIiwgZXJyLCByZXNvbHZlLCByZWplY3QpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIFByb21pc2VJbXBsLnJlc29sdmUodmFsdWUpLnRoZW4oZnVuY3Rpb24odW53cmFwcGVkKSB7XG4gICAgICAgICAgLy8gV2hlbiBhIHlpZWxkZWQgUHJvbWlzZSBpcyByZXNvbHZlZCwgaXRzIGZpbmFsIHZhbHVlIGJlY29tZXNcbiAgICAgICAgICAvLyB0aGUgLnZhbHVlIG9mIHRoZSBQcm9taXNlPHt2YWx1ZSxkb25lfT4gcmVzdWx0IGZvciB0aGVcbiAgICAgICAgICAvLyBjdXJyZW50IGl0ZXJhdGlvbi5cbiAgICAgICAgICByZXN1bHQudmFsdWUgPSB1bndyYXBwZWQ7XG4gICAgICAgICAgcmVzb2x2ZShyZXN1bHQpO1xuICAgICAgICB9LCBmdW5jdGlvbihlcnJvcikge1xuICAgICAgICAgIC8vIElmIGEgcmVqZWN0ZWQgUHJvbWlzZSB3YXMgeWllbGRlZCwgdGhyb3cgdGhlIHJlamVjdGlvbiBiYWNrXG4gICAgICAgICAgLy8gaW50byB0aGUgYXN5bmMgZ2VuZXJhdG9yIGZ1bmN0aW9uIHNvIGl0IGNhbiBiZSBoYW5kbGVkIHRoZXJlLlxuICAgICAgICAgIHJldHVybiBpbnZva2UoXCJ0aHJvd1wiLCBlcnJvciwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIHByZXZpb3VzUHJvbWlzZTtcblxuICAgIGZ1bmN0aW9uIGVucXVldWUobWV0aG9kLCBhcmcpIHtcbiAgICAgIGZ1bmN0aW9uIGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnKCkge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2VJbXBsKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICAgIGludm9rZShtZXRob2QsIGFyZywgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBwcmV2aW91c1Byb21pc2UgPVxuICAgICAgICAvLyBJZiBlbnF1ZXVlIGhhcyBiZWVuIGNhbGxlZCBiZWZvcmUsIHRoZW4gd2Ugd2FudCB0byB3YWl0IHVudGlsXG4gICAgICAgIC8vIGFsbCBwcmV2aW91cyBQcm9taXNlcyBoYXZlIGJlZW4gcmVzb2x2ZWQgYmVmb3JlIGNhbGxpbmcgaW52b2tlLFxuICAgICAgICAvLyBzbyB0aGF0IHJlc3VsdHMgYXJlIGFsd2F5cyBkZWxpdmVyZWQgaW4gdGhlIGNvcnJlY3Qgb3JkZXIuIElmXG4gICAgICAgIC8vIGVucXVldWUgaGFzIG5vdCBiZWVuIGNhbGxlZCBiZWZvcmUsIHRoZW4gaXQgaXMgaW1wb3J0YW50IHRvXG4gICAgICAgIC8vIGNhbGwgaW52b2tlIGltbWVkaWF0ZWx5LCB3aXRob3V0IHdhaXRpbmcgb24gYSBjYWxsYmFjayB0byBmaXJlLFxuICAgICAgICAvLyBzbyB0aGF0IHRoZSBhc3luYyBnZW5lcmF0b3IgZnVuY3Rpb24gaGFzIHRoZSBvcHBvcnR1bml0eSB0byBkb1xuICAgICAgICAvLyBhbnkgbmVjZXNzYXJ5IHNldHVwIGluIGEgcHJlZGljdGFibGUgd2F5LiBUaGlzIHByZWRpY3RhYmlsaXR5XG4gICAgICAgIC8vIGlzIHdoeSB0aGUgUHJvbWlzZSBjb25zdHJ1Y3RvciBzeW5jaHJvbm91c2x5IGludm9rZXMgaXRzXG4gICAgICAgIC8vIGV4ZWN1dG9yIGNhbGxiYWNrLCBhbmQgd2h5IGFzeW5jIGZ1bmN0aW9ucyBzeW5jaHJvbm91c2x5XG4gICAgICAgIC8vIGV4ZWN1dGUgY29kZSBiZWZvcmUgdGhlIGZpcnN0IGF3YWl0LiBTaW5jZSB3ZSBpbXBsZW1lbnQgc2ltcGxlXG4gICAgICAgIC8vIGFzeW5jIGZ1bmN0aW9ucyBpbiB0ZXJtcyBvZiBhc3luYyBnZW5lcmF0b3JzLCBpdCBpcyBlc3BlY2lhbGx5XG4gICAgICAgIC8vIGltcG9ydGFudCB0byBnZXQgdGhpcyByaWdodCwgZXZlbiB0aG91Z2ggaXQgcmVxdWlyZXMgY2FyZS5cbiAgICAgICAgcHJldmlvdXNQcm9taXNlID8gcHJldmlvdXNQcm9taXNlLnRoZW4oXG4gICAgICAgICAgY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmcsXG4gICAgICAgICAgLy8gQXZvaWQgcHJvcGFnYXRpbmcgZmFpbHVyZXMgdG8gUHJvbWlzZXMgcmV0dXJuZWQgYnkgbGF0ZXJcbiAgICAgICAgICAvLyBpbnZvY2F0aW9ucyBvZiB0aGUgaXRlcmF0b3IuXG4gICAgICAgICAgY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmdcbiAgICAgICAgKSA6IGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnKCk7XG4gICAgfVxuXG4gICAgLy8gRGVmaW5lIHRoZSB1bmlmaWVkIGhlbHBlciBtZXRob2QgdGhhdCBpcyB1c2VkIHRvIGltcGxlbWVudCAubmV4dCxcbiAgICAvLyAudGhyb3csIGFuZCAucmV0dXJuIChzZWUgZGVmaW5lSXRlcmF0b3JNZXRob2RzKS5cbiAgICB0aGlzLl9pbnZva2UgPSBlbnF1ZXVlO1xuICB9XG5cbiAgZGVmaW5lSXRlcmF0b3JNZXRob2RzKEFzeW5jSXRlcmF0b3IucHJvdG90eXBlKTtcbiAgQXN5bmNJdGVyYXRvci5wcm90b3R5cGVbYXN5bmNJdGVyYXRvclN5bWJvbF0gPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG4gIGV4cG9ydHMuQXN5bmNJdGVyYXRvciA9IEFzeW5jSXRlcmF0b3I7XG5cbiAgLy8gTm90ZSB0aGF0IHNpbXBsZSBhc3luYyBmdW5jdGlvbnMgYXJlIGltcGxlbWVudGVkIG9uIHRvcCBvZlxuICAvLyBBc3luY0l0ZXJhdG9yIG9iamVjdHM7IHRoZXkganVzdCByZXR1cm4gYSBQcm9taXNlIGZvciB0aGUgdmFsdWUgb2ZcbiAgLy8gdGhlIGZpbmFsIHJlc3VsdCBwcm9kdWNlZCBieSB0aGUgaXRlcmF0b3IuXG4gIGV4cG9ydHMuYXN5bmMgPSBmdW5jdGlvbihpbm5lckZuLCBvdXRlckZuLCBzZWxmLCB0cnlMb2NzTGlzdCwgUHJvbWlzZUltcGwpIHtcbiAgICBpZiAoUHJvbWlzZUltcGwgPT09IHZvaWQgMCkgUHJvbWlzZUltcGwgPSBQcm9taXNlO1xuXG4gICAgdmFyIGl0ZXIgPSBuZXcgQXN5bmNJdGVyYXRvcihcbiAgICAgIHdyYXAoaW5uZXJGbiwgb3V0ZXJGbiwgc2VsZiwgdHJ5TG9jc0xpc3QpLFxuICAgICAgUHJvbWlzZUltcGxcbiAgICApO1xuXG4gICAgcmV0dXJuIGV4cG9ydHMuaXNHZW5lcmF0b3JGdW5jdGlvbihvdXRlckZuKVxuICAgICAgPyBpdGVyIC8vIElmIG91dGVyRm4gaXMgYSBnZW5lcmF0b3IsIHJldHVybiB0aGUgZnVsbCBpdGVyYXRvci5cbiAgICAgIDogaXRlci5uZXh0KCkudGhlbihmdW5jdGlvbihyZXN1bHQpIHtcbiAgICAgICAgICByZXR1cm4gcmVzdWx0LmRvbmUgPyByZXN1bHQudmFsdWUgOiBpdGVyLm5leHQoKTtcbiAgICAgICAgfSk7XG4gIH07XG5cbiAgZnVuY3Rpb24gbWFrZUludm9rZU1ldGhvZChpbm5lckZuLCBzZWxmLCBjb250ZXh0KSB7XG4gICAgdmFyIHN0YXRlID0gR2VuU3RhdGVTdXNwZW5kZWRTdGFydDtcblxuICAgIHJldHVybiBmdW5jdGlvbiBpbnZva2UobWV0aG9kLCBhcmcpIHtcbiAgICAgIGlmIChzdGF0ZSA9PT0gR2VuU3RhdGVFeGVjdXRpbmcpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiR2VuZXJhdG9yIGlzIGFscmVhZHkgcnVubmluZ1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHN0YXRlID09PSBHZW5TdGF0ZUNvbXBsZXRlZCkge1xuICAgICAgICBpZiAobWV0aG9kID09PSBcInRocm93XCIpIHtcbiAgICAgICAgICB0aHJvdyBhcmc7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBCZSBmb3JnaXZpbmcsIHBlciAyNS4zLjMuMy4zIG9mIHRoZSBzcGVjOlxuICAgICAgICAvLyBodHRwczovL3Blb3BsZS5tb3ppbGxhLm9yZy9+am9yZW5kb3JmZi9lczYtZHJhZnQuaHRtbCNzZWMtZ2VuZXJhdG9ycmVzdW1lXG4gICAgICAgIHJldHVybiBkb25lUmVzdWx0KCk7XG4gICAgICB9XG5cbiAgICAgIGNvbnRleHQubWV0aG9kID0gbWV0aG9kO1xuICAgICAgY29udGV4dC5hcmcgPSBhcmc7XG5cbiAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgIHZhciBkZWxlZ2F0ZSA9IGNvbnRleHQuZGVsZWdhdGU7XG4gICAgICAgIGlmIChkZWxlZ2F0ZSkge1xuICAgICAgICAgIHZhciBkZWxlZ2F0ZVJlc3VsdCA9IG1heWJlSW52b2tlRGVsZWdhdGUoZGVsZWdhdGUsIGNvbnRleHQpO1xuICAgICAgICAgIGlmIChkZWxlZ2F0ZVJlc3VsdCkge1xuICAgICAgICAgICAgaWYgKGRlbGVnYXRlUmVzdWx0ID09PSBDb250aW51ZVNlbnRpbmVsKSBjb250aW51ZTtcbiAgICAgICAgICAgIHJldHVybiBkZWxlZ2F0ZVJlc3VsdDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY29udGV4dC5tZXRob2QgPT09IFwibmV4dFwiKSB7XG4gICAgICAgICAgLy8gU2V0dGluZyBjb250ZXh0Ll9zZW50IGZvciBsZWdhY3kgc3VwcG9ydCBvZiBCYWJlbCdzXG4gICAgICAgICAgLy8gZnVuY3Rpb24uc2VudCBpbXBsZW1lbnRhdGlvbi5cbiAgICAgICAgICBjb250ZXh0LnNlbnQgPSBjb250ZXh0Ll9zZW50ID0gY29udGV4dC5hcmc7XG5cbiAgICAgICAgfSBlbHNlIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgICAgaWYgKHN0YXRlID09PSBHZW5TdGF0ZVN1c3BlbmRlZFN0YXJ0KSB7XG4gICAgICAgICAgICBzdGF0ZSA9IEdlblN0YXRlQ29tcGxldGVkO1xuICAgICAgICAgICAgdGhyb3cgY29udGV4dC5hcmc7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY29udGV4dC5kaXNwYXRjaEV4Y2VwdGlvbihjb250ZXh0LmFyZyk7XG5cbiAgICAgICAgfSBlbHNlIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJyZXR1cm5cIikge1xuICAgICAgICAgIGNvbnRleHQuYWJydXB0KFwicmV0dXJuXCIsIGNvbnRleHQuYXJnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHN0YXRlID0gR2VuU3RhdGVFeGVjdXRpbmc7XG5cbiAgICAgICAgdmFyIHJlY29yZCA9IHRyeUNhdGNoKGlubmVyRm4sIHNlbGYsIGNvbnRleHQpO1xuICAgICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwibm9ybWFsXCIpIHtcbiAgICAgICAgICAvLyBJZiBhbiBleGNlcHRpb24gaXMgdGhyb3duIGZyb20gaW5uZXJGbiwgd2UgbGVhdmUgc3RhdGUgPT09XG4gICAgICAgICAgLy8gR2VuU3RhdGVFeGVjdXRpbmcgYW5kIGxvb3AgYmFjayBmb3IgYW5vdGhlciBpbnZvY2F0aW9uLlxuICAgICAgICAgIHN0YXRlID0gY29udGV4dC5kb25lXG4gICAgICAgICAgICA/IEdlblN0YXRlQ29tcGxldGVkXG4gICAgICAgICAgICA6IEdlblN0YXRlU3VzcGVuZGVkWWllbGQ7XG5cbiAgICAgICAgICBpZiAocmVjb3JkLmFyZyA9PT0gQ29udGludWVTZW50aW5lbCkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHZhbHVlOiByZWNvcmQuYXJnLFxuICAgICAgICAgICAgZG9uZTogY29udGV4dC5kb25lXG4gICAgICAgICAgfTtcblxuICAgICAgICB9IGVsc2UgaWYgKHJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgICAgICBzdGF0ZSA9IEdlblN0YXRlQ29tcGxldGVkO1xuICAgICAgICAgIC8vIERpc3BhdGNoIHRoZSBleGNlcHRpb24gYnkgbG9vcGluZyBiYWNrIGFyb3VuZCB0byB0aGVcbiAgICAgICAgICAvLyBjb250ZXh0LmRpc3BhdGNoRXhjZXB0aW9uKGNvbnRleHQuYXJnKSBjYWxsIGFib3ZlLlxuICAgICAgICAgIGNvbnRleHQubWV0aG9kID0gXCJ0aHJvd1wiO1xuICAgICAgICAgIGNvbnRleHQuYXJnID0gcmVjb3JkLmFyZztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG4gIH1cblxuICAvLyBDYWxsIGRlbGVnYXRlLml0ZXJhdG9yW2NvbnRleHQubWV0aG9kXShjb250ZXh0LmFyZykgYW5kIGhhbmRsZSB0aGVcbiAgLy8gcmVzdWx0LCBlaXRoZXIgYnkgcmV0dXJuaW5nIGEgeyB2YWx1ZSwgZG9uZSB9IHJlc3VsdCBmcm9tIHRoZVxuICAvLyBkZWxlZ2F0ZSBpdGVyYXRvciwgb3IgYnkgbW9kaWZ5aW5nIGNvbnRleHQubWV0aG9kIGFuZCBjb250ZXh0LmFyZyxcbiAgLy8gc2V0dGluZyBjb250ZXh0LmRlbGVnYXRlIHRvIG51bGwsIGFuZCByZXR1cm5pbmcgdGhlIENvbnRpbnVlU2VudGluZWwuXG4gIGZ1bmN0aW9uIG1heWJlSW52b2tlRGVsZWdhdGUoZGVsZWdhdGUsIGNvbnRleHQpIHtcbiAgICB2YXIgbWV0aG9kID0gZGVsZWdhdGUuaXRlcmF0b3JbY29udGV4dC5tZXRob2RdO1xuICAgIGlmIChtZXRob2QgPT09IHVuZGVmaW5lZCkge1xuICAgICAgLy8gQSAudGhyb3cgb3IgLnJldHVybiB3aGVuIHRoZSBkZWxlZ2F0ZSBpdGVyYXRvciBoYXMgbm8gLnRocm93XG4gICAgICAvLyBtZXRob2QgYWx3YXlzIHRlcm1pbmF0ZXMgdGhlIHlpZWxkKiBsb29wLlxuICAgICAgY29udGV4dC5kZWxlZ2F0ZSA9IG51bGw7XG5cbiAgICAgIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgIC8vIE5vdGU6IFtcInJldHVyblwiXSBtdXN0IGJlIHVzZWQgZm9yIEVTMyBwYXJzaW5nIGNvbXBhdGliaWxpdHkuXG4gICAgICAgIGlmIChkZWxlZ2F0ZS5pdGVyYXRvcltcInJldHVyblwiXSkge1xuICAgICAgICAgIC8vIElmIHRoZSBkZWxlZ2F0ZSBpdGVyYXRvciBoYXMgYSByZXR1cm4gbWV0aG9kLCBnaXZlIGl0IGFcbiAgICAgICAgICAvLyBjaGFuY2UgdG8gY2xlYW4gdXAuXG4gICAgICAgICAgY29udGV4dC5tZXRob2QgPSBcInJldHVyblwiO1xuICAgICAgICAgIGNvbnRleHQuYXJnID0gdW5kZWZpbmVkO1xuICAgICAgICAgIG1heWJlSW52b2tlRGVsZWdhdGUoZGVsZWdhdGUsIGNvbnRleHQpO1xuXG4gICAgICAgICAgaWYgKGNvbnRleHQubWV0aG9kID09PSBcInRocm93XCIpIHtcbiAgICAgICAgICAgIC8vIElmIG1heWJlSW52b2tlRGVsZWdhdGUoY29udGV4dCkgY2hhbmdlZCBjb250ZXh0Lm1ldGhvZCBmcm9tXG4gICAgICAgICAgICAvLyBcInJldHVyblwiIHRvIFwidGhyb3dcIiwgbGV0IHRoYXQgb3ZlcnJpZGUgdGhlIFR5cGVFcnJvciBiZWxvdy5cbiAgICAgICAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnRleHQubWV0aG9kID0gXCJ0aHJvd1wiO1xuICAgICAgICBjb250ZXh0LmFyZyA9IG5ldyBUeXBlRXJyb3IoXG4gICAgICAgICAgXCJUaGUgaXRlcmF0b3IgZG9lcyBub3QgcHJvdmlkZSBhICd0aHJvdycgbWV0aG9kXCIpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICB9XG5cbiAgICB2YXIgcmVjb3JkID0gdHJ5Q2F0Y2gobWV0aG9kLCBkZWxlZ2F0ZS5pdGVyYXRvciwgY29udGV4dC5hcmcpO1xuXG4gICAgaWYgKHJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgIGNvbnRleHQubWV0aG9kID0gXCJ0aHJvd1wiO1xuICAgICAgY29udGV4dC5hcmcgPSByZWNvcmQuYXJnO1xuICAgICAgY29udGV4dC5kZWxlZ2F0ZSA9IG51bGw7XG4gICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICB9XG5cbiAgICB2YXIgaW5mbyA9IHJlY29yZC5hcmc7XG5cbiAgICBpZiAoISBpbmZvKSB7XG4gICAgICBjb250ZXh0Lm1ldGhvZCA9IFwidGhyb3dcIjtcbiAgICAgIGNvbnRleHQuYXJnID0gbmV3IFR5cGVFcnJvcihcIml0ZXJhdG9yIHJlc3VsdCBpcyBub3QgYW4gb2JqZWN0XCIpO1xuICAgICAgY29udGV4dC5kZWxlZ2F0ZSA9IG51bGw7XG4gICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICB9XG5cbiAgICBpZiAoaW5mby5kb25lKSB7XG4gICAgICAvLyBBc3NpZ24gdGhlIHJlc3VsdCBvZiB0aGUgZmluaXNoZWQgZGVsZWdhdGUgdG8gdGhlIHRlbXBvcmFyeVxuICAgICAgLy8gdmFyaWFibGUgc3BlY2lmaWVkIGJ5IGRlbGVnYXRlLnJlc3VsdE5hbWUgKHNlZSBkZWxlZ2F0ZVlpZWxkKS5cbiAgICAgIGNvbnRleHRbZGVsZWdhdGUucmVzdWx0TmFtZV0gPSBpbmZvLnZhbHVlO1xuXG4gICAgICAvLyBSZXN1bWUgZXhlY3V0aW9uIGF0IHRoZSBkZXNpcmVkIGxvY2F0aW9uIChzZWUgZGVsZWdhdGVZaWVsZCkuXG4gICAgICBjb250ZXh0Lm5leHQgPSBkZWxlZ2F0ZS5uZXh0TG9jO1xuXG4gICAgICAvLyBJZiBjb250ZXh0Lm1ldGhvZCB3YXMgXCJ0aHJvd1wiIGJ1dCB0aGUgZGVsZWdhdGUgaGFuZGxlZCB0aGVcbiAgICAgIC8vIGV4Y2VwdGlvbiwgbGV0IHRoZSBvdXRlciBnZW5lcmF0b3IgcHJvY2VlZCBub3JtYWxseS4gSWZcbiAgICAgIC8vIGNvbnRleHQubWV0aG9kIHdhcyBcIm5leHRcIiwgZm9yZ2V0IGNvbnRleHQuYXJnIHNpbmNlIGl0IGhhcyBiZWVuXG4gICAgICAvLyBcImNvbnN1bWVkXCIgYnkgdGhlIGRlbGVnYXRlIGl0ZXJhdG9yLiBJZiBjb250ZXh0Lm1ldGhvZCB3YXNcbiAgICAgIC8vIFwicmV0dXJuXCIsIGFsbG93IHRoZSBvcmlnaW5hbCAucmV0dXJuIGNhbGwgdG8gY29udGludWUgaW4gdGhlXG4gICAgICAvLyBvdXRlciBnZW5lcmF0b3IuXG4gICAgICBpZiAoY29udGV4dC5tZXRob2QgIT09IFwicmV0dXJuXCIpIHtcbiAgICAgICAgY29udGV4dC5tZXRob2QgPSBcIm5leHRcIjtcbiAgICAgICAgY29udGV4dC5hcmcgPSB1bmRlZmluZWQ7XG4gICAgICB9XG5cbiAgICB9IGVsc2Uge1xuICAgICAgLy8gUmUteWllbGQgdGhlIHJlc3VsdCByZXR1cm5lZCBieSB0aGUgZGVsZWdhdGUgbWV0aG9kLlxuICAgICAgcmV0dXJuIGluZm87XG4gICAgfVxuXG4gICAgLy8gVGhlIGRlbGVnYXRlIGl0ZXJhdG9yIGlzIGZpbmlzaGVkLCBzbyBmb3JnZXQgaXQgYW5kIGNvbnRpbnVlIHdpdGhcbiAgICAvLyB0aGUgb3V0ZXIgZ2VuZXJhdG9yLlxuICAgIGNvbnRleHQuZGVsZWdhdGUgPSBudWxsO1xuICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICB9XG5cbiAgLy8gRGVmaW5lIEdlbmVyYXRvci5wcm90b3R5cGUue25leHQsdGhyb3cscmV0dXJufSBpbiB0ZXJtcyBvZiB0aGVcbiAgLy8gdW5pZmllZCAuX2ludm9rZSBoZWxwZXIgbWV0aG9kLlxuICBkZWZpbmVJdGVyYXRvck1ldGhvZHMoR3ApO1xuXG4gIGRlZmluZShHcCwgdG9TdHJpbmdUYWdTeW1ib2wsIFwiR2VuZXJhdG9yXCIpO1xuXG4gIC8vIEEgR2VuZXJhdG9yIHNob3VsZCBhbHdheXMgcmV0dXJuIGl0c2VsZiBhcyB0aGUgaXRlcmF0b3Igb2JqZWN0IHdoZW4gdGhlXG4gIC8vIEBAaXRlcmF0b3IgZnVuY3Rpb24gaXMgY2FsbGVkIG9uIGl0LiBTb21lIGJyb3dzZXJzJyBpbXBsZW1lbnRhdGlvbnMgb2YgdGhlXG4gIC8vIGl0ZXJhdG9yIHByb3RvdHlwZSBjaGFpbiBpbmNvcnJlY3RseSBpbXBsZW1lbnQgdGhpcywgY2F1c2luZyB0aGUgR2VuZXJhdG9yXG4gIC8vIG9iamVjdCB0byBub3QgYmUgcmV0dXJuZWQgZnJvbSB0aGlzIGNhbGwuIFRoaXMgZW5zdXJlcyB0aGF0IGRvZXNuJ3QgaGFwcGVuLlxuICAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlZ2VuZXJhdG9yL2lzc3Vlcy8yNzQgZm9yIG1vcmUgZGV0YWlscy5cbiAgR3BbaXRlcmF0b3JTeW1ib2xdID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG5cbiAgR3AudG9TdHJpbmcgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gXCJbb2JqZWN0IEdlbmVyYXRvcl1cIjtcbiAgfTtcblxuICBmdW5jdGlvbiBwdXNoVHJ5RW50cnkobG9jcykge1xuICAgIHZhciBlbnRyeSA9IHsgdHJ5TG9jOiBsb2NzWzBdIH07XG5cbiAgICBpZiAoMSBpbiBsb2NzKSB7XG4gICAgICBlbnRyeS5jYXRjaExvYyA9IGxvY3NbMV07XG4gICAgfVxuXG4gICAgaWYgKDIgaW4gbG9jcykge1xuICAgICAgZW50cnkuZmluYWxseUxvYyA9IGxvY3NbMl07XG4gICAgICBlbnRyeS5hZnRlckxvYyA9IGxvY3NbM107XG4gICAgfVxuXG4gICAgdGhpcy50cnlFbnRyaWVzLnB1c2goZW50cnkpO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVzZXRUcnlFbnRyeShlbnRyeSkge1xuICAgIHZhciByZWNvcmQgPSBlbnRyeS5jb21wbGV0aW9uIHx8IHt9O1xuICAgIHJlY29yZC50eXBlID0gXCJub3JtYWxcIjtcbiAgICBkZWxldGUgcmVjb3JkLmFyZztcbiAgICBlbnRyeS5jb21wbGV0aW9uID0gcmVjb3JkO1xuICB9XG5cbiAgZnVuY3Rpb24gQ29udGV4dCh0cnlMb2NzTGlzdCkge1xuICAgIC8vIFRoZSByb290IGVudHJ5IG9iamVjdCAoZWZmZWN0aXZlbHkgYSB0cnkgc3RhdGVtZW50IHdpdGhvdXQgYSBjYXRjaFxuICAgIC8vIG9yIGEgZmluYWxseSBibG9jaykgZ2l2ZXMgdXMgYSBwbGFjZSB0byBzdG9yZSB2YWx1ZXMgdGhyb3duIGZyb21cbiAgICAvLyBsb2NhdGlvbnMgd2hlcmUgdGhlcmUgaXMgbm8gZW5jbG9zaW5nIHRyeSBzdGF0ZW1lbnQuXG4gICAgdGhpcy50cnlFbnRyaWVzID0gW3sgdHJ5TG9jOiBcInJvb3RcIiB9XTtcbiAgICB0cnlMb2NzTGlzdC5mb3JFYWNoKHB1c2hUcnlFbnRyeSwgdGhpcyk7XG4gICAgdGhpcy5yZXNldCh0cnVlKTtcbiAgfVxuXG4gIGV4cG9ydHMua2V5cyA9IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgIHZhciBrZXlzID0gW107XG4gICAgZm9yICh2YXIga2V5IGluIG9iamVjdCkge1xuICAgICAga2V5cy5wdXNoKGtleSk7XG4gICAgfVxuICAgIGtleXMucmV2ZXJzZSgpO1xuXG4gICAgLy8gUmF0aGVyIHRoYW4gcmV0dXJuaW5nIGFuIG9iamVjdCB3aXRoIGEgbmV4dCBtZXRob2QsIHdlIGtlZXBcbiAgICAvLyB0aGluZ3Mgc2ltcGxlIGFuZCByZXR1cm4gdGhlIG5leHQgZnVuY3Rpb24gaXRzZWxmLlxuICAgIHJldHVybiBmdW5jdGlvbiBuZXh0KCkge1xuICAgICAgd2hpbGUgKGtleXMubGVuZ3RoKSB7XG4gICAgICAgIHZhciBrZXkgPSBrZXlzLnBvcCgpO1xuICAgICAgICBpZiAoa2V5IGluIG9iamVjdCkge1xuICAgICAgICAgIG5leHQudmFsdWUgPSBrZXk7XG4gICAgICAgICAgbmV4dC5kb25lID0gZmFsc2U7XG4gICAgICAgICAgcmV0dXJuIG5leHQ7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gVG8gYXZvaWQgY3JlYXRpbmcgYW4gYWRkaXRpb25hbCBvYmplY3QsIHdlIGp1c3QgaGFuZyB0aGUgLnZhbHVlXG4gICAgICAvLyBhbmQgLmRvbmUgcHJvcGVydGllcyBvZmYgdGhlIG5leHQgZnVuY3Rpb24gb2JqZWN0IGl0c2VsZi4gVGhpc1xuICAgICAgLy8gYWxzbyBlbnN1cmVzIHRoYXQgdGhlIG1pbmlmaWVyIHdpbGwgbm90IGFub255bWl6ZSB0aGUgZnVuY3Rpb24uXG4gICAgICBuZXh0LmRvbmUgPSB0cnVlO1xuICAgICAgcmV0dXJuIG5leHQ7XG4gICAgfTtcbiAgfTtcblxuICBmdW5jdGlvbiB2YWx1ZXMoaXRlcmFibGUpIHtcbiAgICBpZiAoaXRlcmFibGUpIHtcbiAgICAgIHZhciBpdGVyYXRvck1ldGhvZCA9IGl0ZXJhYmxlW2l0ZXJhdG9yU3ltYm9sXTtcbiAgICAgIGlmIChpdGVyYXRvck1ldGhvZCkge1xuICAgICAgICByZXR1cm4gaXRlcmF0b3JNZXRob2QuY2FsbChpdGVyYWJsZSk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgaXRlcmFibGUubmV4dCA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHJldHVybiBpdGVyYWJsZTtcbiAgICAgIH1cblxuICAgICAgaWYgKCFpc05hTihpdGVyYWJsZS5sZW5ndGgpKSB7XG4gICAgICAgIHZhciBpID0gLTEsIG5leHQgPSBmdW5jdGlvbiBuZXh0KCkge1xuICAgICAgICAgIHdoaWxlICgrK2kgPCBpdGVyYWJsZS5sZW5ndGgpIHtcbiAgICAgICAgICAgIGlmIChoYXNPd24uY2FsbChpdGVyYWJsZSwgaSkpIHtcbiAgICAgICAgICAgICAgbmV4dC52YWx1ZSA9IGl0ZXJhYmxlW2ldO1xuICAgICAgICAgICAgICBuZXh0LmRvbmUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgcmV0dXJuIG5leHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgbmV4dC52YWx1ZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICBuZXh0LmRvbmUgPSB0cnVlO1xuXG4gICAgICAgICAgcmV0dXJuIG5leHQ7XG4gICAgICAgIH07XG5cbiAgICAgICAgcmV0dXJuIG5leHQubmV4dCA9IG5leHQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gUmV0dXJuIGFuIGl0ZXJhdG9yIHdpdGggbm8gdmFsdWVzLlxuICAgIHJldHVybiB7IG5leHQ6IGRvbmVSZXN1bHQgfTtcbiAgfVxuICBleHBvcnRzLnZhbHVlcyA9IHZhbHVlcztcblxuICBmdW5jdGlvbiBkb25lUmVzdWx0KCkge1xuICAgIHJldHVybiB7IHZhbHVlOiB1bmRlZmluZWQsIGRvbmU6IHRydWUgfTtcbiAgfVxuXG4gIENvbnRleHQucHJvdG90eXBlID0ge1xuICAgIGNvbnN0cnVjdG9yOiBDb250ZXh0LFxuXG4gICAgcmVzZXQ6IGZ1bmN0aW9uKHNraXBUZW1wUmVzZXQpIHtcbiAgICAgIHRoaXMucHJldiA9IDA7XG4gICAgICB0aGlzLm5leHQgPSAwO1xuICAgICAgLy8gUmVzZXR0aW5nIGNvbnRleHQuX3NlbnQgZm9yIGxlZ2FjeSBzdXBwb3J0IG9mIEJhYmVsJ3NcbiAgICAgIC8vIGZ1bmN0aW9uLnNlbnQgaW1wbGVtZW50YXRpb24uXG4gICAgICB0aGlzLnNlbnQgPSB0aGlzLl9zZW50ID0gdW5kZWZpbmVkO1xuICAgICAgdGhpcy5kb25lID0gZmFsc2U7XG4gICAgICB0aGlzLmRlbGVnYXRlID0gbnVsbDtcblxuICAgICAgdGhpcy5tZXRob2QgPSBcIm5leHRcIjtcbiAgICAgIHRoaXMuYXJnID0gdW5kZWZpbmVkO1xuXG4gICAgICB0aGlzLnRyeUVudHJpZXMuZm9yRWFjaChyZXNldFRyeUVudHJ5KTtcblxuICAgICAgaWYgKCFza2lwVGVtcFJlc2V0KSB7XG4gICAgICAgIGZvciAodmFyIG5hbWUgaW4gdGhpcykge1xuICAgICAgICAgIC8vIE5vdCBzdXJlIGFib3V0IHRoZSBvcHRpbWFsIG9yZGVyIG9mIHRoZXNlIGNvbmRpdGlvbnM6XG4gICAgICAgICAgaWYgKG5hbWUuY2hhckF0KDApID09PSBcInRcIiAmJlxuICAgICAgICAgICAgICBoYXNPd24uY2FsbCh0aGlzLCBuYW1lKSAmJlxuICAgICAgICAgICAgICAhaXNOYU4oK25hbWUuc2xpY2UoMSkpKSB7XG4gICAgICAgICAgICB0aGlzW25hbWVdID0gdW5kZWZpbmVkO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG5cbiAgICBzdG9wOiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMuZG9uZSA9IHRydWU7XG5cbiAgICAgIHZhciByb290RW50cnkgPSB0aGlzLnRyeUVudHJpZXNbMF07XG4gICAgICB2YXIgcm9vdFJlY29yZCA9IHJvb3RFbnRyeS5jb21wbGV0aW9uO1xuICAgICAgaWYgKHJvb3RSZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgIHRocm93IHJvb3RSZWNvcmQuYXJnO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5ydmFsO1xuICAgIH0sXG5cbiAgICBkaXNwYXRjaEV4Y2VwdGlvbjogZnVuY3Rpb24oZXhjZXB0aW9uKSB7XG4gICAgICBpZiAodGhpcy5kb25lKSB7XG4gICAgICAgIHRocm93IGV4Y2VwdGlvbjtcbiAgICAgIH1cblxuICAgICAgdmFyIGNvbnRleHQgPSB0aGlzO1xuICAgICAgZnVuY3Rpb24gaGFuZGxlKGxvYywgY2F1Z2h0KSB7XG4gICAgICAgIHJlY29yZC50eXBlID0gXCJ0aHJvd1wiO1xuICAgICAgICByZWNvcmQuYXJnID0gZXhjZXB0aW9uO1xuICAgICAgICBjb250ZXh0Lm5leHQgPSBsb2M7XG5cbiAgICAgICAgaWYgKGNhdWdodCkge1xuICAgICAgICAgIC8vIElmIHRoZSBkaXNwYXRjaGVkIGV4Y2VwdGlvbiB3YXMgY2F1Z2h0IGJ5IGEgY2F0Y2ggYmxvY2ssXG4gICAgICAgICAgLy8gdGhlbiBsZXQgdGhhdCBjYXRjaCBibG9jayBoYW5kbGUgdGhlIGV4Y2VwdGlvbiBub3JtYWxseS5cbiAgICAgICAgICBjb250ZXh0Lm1ldGhvZCA9IFwibmV4dFwiO1xuICAgICAgICAgIGNvbnRleHQuYXJnID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuICEhIGNhdWdodDtcbiAgICAgIH1cblxuICAgICAgZm9yICh2YXIgaSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICB2YXIgZW50cnkgPSB0aGlzLnRyeUVudHJpZXNbaV07XG4gICAgICAgIHZhciByZWNvcmQgPSBlbnRyeS5jb21wbGV0aW9uO1xuXG4gICAgICAgIGlmIChlbnRyeS50cnlMb2MgPT09IFwicm9vdFwiKSB7XG4gICAgICAgICAgLy8gRXhjZXB0aW9uIHRocm93biBvdXRzaWRlIG9mIGFueSB0cnkgYmxvY2sgdGhhdCBjb3VsZCBoYW5kbGVcbiAgICAgICAgICAvLyBpdCwgc28gc2V0IHRoZSBjb21wbGV0aW9uIHZhbHVlIG9mIHRoZSBlbnRpcmUgZnVuY3Rpb24gdG9cbiAgICAgICAgICAvLyB0aHJvdyB0aGUgZXhjZXB0aW9uLlxuICAgICAgICAgIHJldHVybiBoYW5kbGUoXCJlbmRcIik7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZW50cnkudHJ5TG9jIDw9IHRoaXMucHJldikge1xuICAgICAgICAgIHZhciBoYXNDYXRjaCA9IGhhc093bi5jYWxsKGVudHJ5LCBcImNhdGNoTG9jXCIpO1xuICAgICAgICAgIHZhciBoYXNGaW5hbGx5ID0gaGFzT3duLmNhbGwoZW50cnksIFwiZmluYWxseUxvY1wiKTtcblxuICAgICAgICAgIGlmIChoYXNDYXRjaCAmJiBoYXNGaW5hbGx5KSB7XG4gICAgICAgICAgICBpZiAodGhpcy5wcmV2IDwgZW50cnkuY2F0Y2hMb2MpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZShlbnRyeS5jYXRjaExvYywgdHJ1ZSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMucHJldiA8IGVudHJ5LmZpbmFsbHlMb2MpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZShlbnRyeS5maW5hbGx5TG9jKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgIH0gZWxzZSBpZiAoaGFzQ2F0Y2gpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnByZXYgPCBlbnRyeS5jYXRjaExvYykge1xuICAgICAgICAgICAgICByZXR1cm4gaGFuZGxlKGVudHJ5LmNhdGNoTG9jLCB0cnVlKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgIH0gZWxzZSBpZiAoaGFzRmluYWxseSkge1xuICAgICAgICAgICAgaWYgKHRoaXMucHJldiA8IGVudHJ5LmZpbmFsbHlMb2MpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZShlbnRyeS5maW5hbGx5TG9jKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJ0cnkgc3RhdGVtZW50IHdpdGhvdXQgY2F0Y2ggb3IgZmluYWxseVwiKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuXG4gICAgYWJydXB0OiBmdW5jdGlvbih0eXBlLCBhcmcpIHtcbiAgICAgIGZvciAodmFyIGkgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgICAgdmFyIGVudHJ5ID0gdGhpcy50cnlFbnRyaWVzW2ldO1xuICAgICAgICBpZiAoZW50cnkudHJ5TG9jIDw9IHRoaXMucHJldiAmJlxuICAgICAgICAgICAgaGFzT3duLmNhbGwoZW50cnksIFwiZmluYWxseUxvY1wiKSAmJlxuICAgICAgICAgICAgdGhpcy5wcmV2IDwgZW50cnkuZmluYWxseUxvYykge1xuICAgICAgICAgIHZhciBmaW5hbGx5RW50cnkgPSBlbnRyeTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoZmluYWxseUVudHJ5ICYmXG4gICAgICAgICAgKHR5cGUgPT09IFwiYnJlYWtcIiB8fFxuICAgICAgICAgICB0eXBlID09PSBcImNvbnRpbnVlXCIpICYmXG4gICAgICAgICAgZmluYWxseUVudHJ5LnRyeUxvYyA8PSBhcmcgJiZcbiAgICAgICAgICBhcmcgPD0gZmluYWxseUVudHJ5LmZpbmFsbHlMb2MpIHtcbiAgICAgICAgLy8gSWdub3JlIHRoZSBmaW5hbGx5IGVudHJ5IGlmIGNvbnRyb2wgaXMgbm90IGp1bXBpbmcgdG8gYVxuICAgICAgICAvLyBsb2NhdGlvbiBvdXRzaWRlIHRoZSB0cnkvY2F0Y2ggYmxvY2suXG4gICAgICAgIGZpbmFsbHlFbnRyeSA9IG51bGw7XG4gICAgICB9XG5cbiAgICAgIHZhciByZWNvcmQgPSBmaW5hbGx5RW50cnkgPyBmaW5hbGx5RW50cnkuY29tcGxldGlvbiA6IHt9O1xuICAgICAgcmVjb3JkLnR5cGUgPSB0eXBlO1xuICAgICAgcmVjb3JkLmFyZyA9IGFyZztcblxuICAgICAgaWYgKGZpbmFsbHlFbnRyeSkge1xuICAgICAgICB0aGlzLm1ldGhvZCA9IFwibmV4dFwiO1xuICAgICAgICB0aGlzLm5leHQgPSBmaW5hbGx5RW50cnkuZmluYWxseUxvYztcbiAgICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLmNvbXBsZXRlKHJlY29yZCk7XG4gICAgfSxcblxuICAgIGNvbXBsZXRlOiBmdW5jdGlvbihyZWNvcmQsIGFmdGVyTG9jKSB7XG4gICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgICB0aHJvdyByZWNvcmQuYXJnO1xuICAgICAgfVxuXG4gICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwiYnJlYWtcIiB8fFxuICAgICAgICAgIHJlY29yZC50eXBlID09PSBcImNvbnRpbnVlXCIpIHtcbiAgICAgICAgdGhpcy5uZXh0ID0gcmVjb3JkLmFyZztcbiAgICAgIH0gZWxzZSBpZiAocmVjb3JkLnR5cGUgPT09IFwicmV0dXJuXCIpIHtcbiAgICAgICAgdGhpcy5ydmFsID0gdGhpcy5hcmcgPSByZWNvcmQuYXJnO1xuICAgICAgICB0aGlzLm1ldGhvZCA9IFwicmV0dXJuXCI7XG4gICAgICAgIHRoaXMubmV4dCA9IFwiZW5kXCI7XG4gICAgICB9IGVsc2UgaWYgKHJlY29yZC50eXBlID09PSBcIm5vcm1hbFwiICYmIGFmdGVyTG9jKSB7XG4gICAgICAgIHRoaXMubmV4dCA9IGFmdGVyTG9jO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICB9LFxuXG4gICAgZmluaXNoOiBmdW5jdGlvbihmaW5hbGx5TG9jKSB7XG4gICAgICBmb3IgKHZhciBpID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIHZhciBlbnRyeSA9IHRoaXMudHJ5RW50cmllc1tpXTtcbiAgICAgICAgaWYgKGVudHJ5LmZpbmFsbHlMb2MgPT09IGZpbmFsbHlMb2MpIHtcbiAgICAgICAgICB0aGlzLmNvbXBsZXRlKGVudHJ5LmNvbXBsZXRpb24sIGVudHJ5LmFmdGVyTG9jKTtcbiAgICAgICAgICByZXNldFRyeUVudHJ5KGVudHJ5KTtcbiAgICAgICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG5cbiAgICBcImNhdGNoXCI6IGZ1bmN0aW9uKHRyeUxvYykge1xuICAgICAgZm9yICh2YXIgaSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICB2YXIgZW50cnkgPSB0aGlzLnRyeUVudHJpZXNbaV07XG4gICAgICAgIGlmIChlbnRyeS50cnlMb2MgPT09IHRyeUxvYykge1xuICAgICAgICAgIHZhciByZWNvcmQgPSBlbnRyeS5jb21wbGV0aW9uO1xuICAgICAgICAgIGlmIChyZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgICAgICB2YXIgdGhyb3duID0gcmVjb3JkLmFyZztcbiAgICAgICAgICAgIHJlc2V0VHJ5RW50cnkoZW50cnkpO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gdGhyb3duO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIFRoZSBjb250ZXh0LmNhdGNoIG1ldGhvZCBtdXN0IG9ubHkgYmUgY2FsbGVkIHdpdGggYSBsb2NhdGlvblxuICAgICAgLy8gYXJndW1lbnQgdGhhdCBjb3JyZXNwb25kcyB0byBhIGtub3duIGNhdGNoIGJsb2NrLlxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiaWxsZWdhbCBjYXRjaCBhdHRlbXB0XCIpO1xuICAgIH0sXG5cbiAgICBkZWxlZ2F0ZVlpZWxkOiBmdW5jdGlvbihpdGVyYWJsZSwgcmVzdWx0TmFtZSwgbmV4dExvYykge1xuICAgICAgdGhpcy5kZWxlZ2F0ZSA9IHtcbiAgICAgICAgaXRlcmF0b3I6IHZhbHVlcyhpdGVyYWJsZSksXG4gICAgICAgIHJlc3VsdE5hbWU6IHJlc3VsdE5hbWUsXG4gICAgICAgIG5leHRMb2M6IG5leHRMb2NcbiAgICAgIH07XG5cbiAgICAgIGlmICh0aGlzLm1ldGhvZCA9PT0gXCJuZXh0XCIpIHtcbiAgICAgICAgLy8gRGVsaWJlcmF0ZWx5IGZvcmdldCB0aGUgbGFzdCBzZW50IHZhbHVlIHNvIHRoYXQgd2UgZG9uJ3RcbiAgICAgICAgLy8gYWNjaWRlbnRhbGx5IHBhc3MgaXQgb24gdG8gdGhlIGRlbGVnYXRlLlxuICAgICAgICB0aGlzLmFyZyA9IHVuZGVmaW5lZDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgfVxuICB9O1xuXG4gIC8vIFJlZ2FyZGxlc3Mgb2Ygd2hldGhlciB0aGlzIHNjcmlwdCBpcyBleGVjdXRpbmcgYXMgYSBDb21tb25KUyBtb2R1bGVcbiAgLy8gb3Igbm90LCByZXR1cm4gdGhlIHJ1bnRpbWUgb2JqZWN0IHNvIHRoYXQgd2UgY2FuIGRlY2xhcmUgdGhlIHZhcmlhYmxlXG4gIC8vIHJlZ2VuZXJhdG9yUnVudGltZSBpbiB0aGUgb3V0ZXIgc2NvcGUsIHdoaWNoIGFsbG93cyB0aGlzIG1vZHVsZSB0byBiZVxuICAvLyBpbmplY3RlZCBlYXNpbHkgYnkgYGJpbi9yZWdlbmVyYXRvciAtLWluY2x1ZGUtcnVudGltZSBzY3JpcHQuanNgLlxuICByZXR1cm4gZXhwb3J0cztcblxufShcbiAgLy8gSWYgdGhpcyBzY3JpcHQgaXMgZXhlY3V0aW5nIGFzIGEgQ29tbW9uSlMgbW9kdWxlLCB1c2UgbW9kdWxlLmV4cG9ydHNcbiAgLy8gYXMgdGhlIHJlZ2VuZXJhdG9yUnVudGltZSBuYW1lc3BhY2UuIE90aGVyd2lzZSBjcmVhdGUgYSBuZXcgZW1wdHlcbiAgLy8gb2JqZWN0LiBFaXRoZXIgd2F5LCB0aGUgcmVzdWx0aW5nIG9iamVjdCB3aWxsIGJlIHVzZWQgdG8gaW5pdGlhbGl6ZVxuICAvLyB0aGUgcmVnZW5lcmF0b3JSdW50aW1lIHZhcmlhYmxlIGF0IHRoZSB0b3Agb2YgdGhpcyBmaWxlLlxuICB0eXBlb2YgbW9kdWxlID09PSBcIm9iamVjdFwiID8gbW9kdWxlLmV4cG9ydHMgOiB7fVxuKSk7XG5cbnRyeSB7XG4gIHJlZ2VuZXJhdG9yUnVudGltZSA9IHJ1bnRpbWU7XG59IGNhdGNoIChhY2NpZGVudGFsU3RyaWN0TW9kZSkge1xuICAvLyBUaGlzIG1vZHVsZSBzaG91bGQgbm90IGJlIHJ1bm5pbmcgaW4gc3RyaWN0IG1vZGUsIHNvIHRoZSBhYm92ZVxuICAvLyBhc3NpZ25tZW50IHNob3VsZCBhbHdheXMgd29yayB1bmxlc3Mgc29tZXRoaW5nIGlzIG1pc2NvbmZpZ3VyZWQuIEp1c3RcbiAgLy8gaW4gY2FzZSBydW50aW1lLmpzIGFjY2lkZW50YWxseSBydW5zIGluIHN0cmljdCBtb2RlLCB3ZSBjYW4gZXNjYXBlXG4gIC8vIHN0cmljdCBtb2RlIHVzaW5nIGEgZ2xvYmFsIEZ1bmN0aW9uIGNhbGwuIFRoaXMgY291bGQgY29uY2VpdmFibHkgZmFpbFxuICAvLyBpZiBhIENvbnRlbnQgU2VjdXJpdHkgUG9saWN5IGZvcmJpZHMgdXNpbmcgRnVuY3Rpb24sIGJ1dCBpbiB0aGF0IGNhc2VcbiAgLy8gdGhlIHByb3BlciBzb2x1dGlvbiBpcyB0byBmaXggdGhlIGFjY2lkZW50YWwgc3RyaWN0IG1vZGUgcHJvYmxlbS4gSWZcbiAgLy8geW91J3ZlIG1pc2NvbmZpZ3VyZWQgeW91ciBidW5kbGVyIHRvIGZvcmNlIHN0cmljdCBtb2RlIGFuZCBhcHBsaWVkIGFcbiAgLy8gQ1NQIHRvIGZvcmJpZCBGdW5jdGlvbiwgYW5kIHlvdSdyZSBub3Qgd2lsbGluZyB0byBmaXggZWl0aGVyIG9mIHRob3NlXG4gIC8vIHByb2JsZW1zLCBwbGVhc2UgZGV0YWlsIHlvdXIgdW5pcXVlIHByZWRpY2FtZW50IGluIGEgR2l0SHViIGlzc3VlLlxuICBGdW5jdGlvbihcInJcIiwgXCJyZWdlbmVyYXRvclJ1bnRpbWUgPSByXCIpKHJ1bnRpbWUpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYwLjE5LjFcbiAqIHNjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0Jzt2YXIgZixnLGgsayxsO1xuaWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBNZXNzYWdlQ2hhbm5lbCl7dmFyIHA9bnVsbCxxPW51bGwsdD1mdW5jdGlvbigpe2lmKG51bGwhPT1wKXRyeXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO3AoITAsYSk7cD1udWxsfWNhdGNoKGIpe3Rocm93IHNldFRpbWVvdXQodCwwKSxiO319LHU9RGF0ZS5ub3coKTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBEYXRlLm5vdygpLXV9O2Y9ZnVuY3Rpb24oYSl7bnVsbCE9PXA/c2V0VGltZW91dChmLDAsYSk6KHA9YSxzZXRUaW1lb3V0KHQsMCkpfTtnPWZ1bmN0aW9uKGEsYil7cT1zZXRUaW1lb3V0KGEsYil9O2g9ZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQocSl9O2s9ZnVuY3Rpb24oKXtyZXR1cm4hMX07bD1leHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKCl7fX1lbHNle3ZhciB3PXdpbmRvdy5wZXJmb3JtYW5jZSx4PXdpbmRvdy5EYXRlLFxueT13aW5kb3cuc2V0VGltZW91dCx6PXdpbmRvdy5jbGVhclRpbWVvdXQ7aWYoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjb25zb2xlKXt2YXIgQT13aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWU7XCJmdW5jdGlvblwiIT09dHlwZW9mIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUmJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IHJlcXVlc3RBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9mYi5tZS9yZWFjdC1wb2x5ZmlsbHNcIik7XCJmdW5jdGlvblwiIT09dHlwZW9mIEEmJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IGNhbmNlbEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL2ZiLm1lL3JlYWN0LXBvbHlmaWxsc1wiKX1pZihcIm9iamVjdFwiPT09XG50eXBlb2YgdyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHcubm93KWV4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIHcubm93KCl9O2Vsc2V7dmFyIEI9eC5ub3coKTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiB4Lm5vdygpLUJ9fXZhciBDPSExLEQ9bnVsbCxFPS0xLEY9NSxHPTA7az1mdW5jdGlvbigpe3JldHVybiBleHBvcnRzLnVuc3RhYmxlX25vdygpPj1HfTtsPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKGEpezA+YXx8MTI1PGE/Y29uc29sZS5lcnJvcihcImZvcmNlRnJhbWVSYXRlIHRha2VzIGEgcG9zaXRpdmUgaW50IGJldHdlZW4gMCBhbmQgMTI1LCBmb3JjaW5nIGZyYW1lcmF0ZXMgaGlnaGVyIHRoYW4gMTI1IGZwcyBpcyBub3QgdW5zdXBwb3J0ZWRcIik6Rj0wPGE/TWF0aC5mbG9vcigxRTMvYSk6NX07dmFyIEg9bmV3IE1lc3NhZ2VDaGFubmVsLEk9SC5wb3J0MjtILnBvcnQxLm9ubWVzc2FnZT1cbmZ1bmN0aW9uKCl7aWYobnVsbCE9PUQpe3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7Rz1hK0Y7dHJ5e0QoITAsYSk/SS5wb3N0TWVzc2FnZShudWxsKTooQz0hMSxEPW51bGwpfWNhdGNoKGIpe3Rocm93IEkucG9zdE1lc3NhZ2UobnVsbCksYjt9fWVsc2UgQz0hMX07Zj1mdW5jdGlvbihhKXtEPWE7Q3x8KEM9ITAsSS5wb3N0TWVzc2FnZShudWxsKSl9O2c9ZnVuY3Rpb24oYSxiKXtFPXkoZnVuY3Rpb24oKXthKGV4cG9ydHMudW5zdGFibGVfbm93KCkpfSxiKX07aD1mdW5jdGlvbigpe3ooRSk7RT0tMX19ZnVuY3Rpb24gSihhLGIpe3ZhciBjPWEubGVuZ3RoO2EucHVzaChiKTthOmZvcig7Oyl7dmFyIGQ9Yy0xPj4+MSxlPWFbZF07aWYodm9pZCAwIT09ZSYmMDxLKGUsYikpYVtkXT1iLGFbY109ZSxjPWQ7ZWxzZSBicmVhayBhfX1mdW5jdGlvbiBMKGEpe2E9YVswXTtyZXR1cm4gdm9pZCAwPT09YT9udWxsOmF9XG5mdW5jdGlvbiBNKGEpe3ZhciBiPWFbMF07aWYodm9pZCAwIT09Yil7dmFyIGM9YS5wb3AoKTtpZihjIT09Yil7YVswXT1jO2E6Zm9yKHZhciBkPTAsZT1hLmxlbmd0aDtkPGU7KXt2YXIgbT0yKihkKzEpLTEsbj1hW21dLHY9bSsxLHI9YVt2XTtpZih2b2lkIDAhPT1uJiYwPksobixjKSl2b2lkIDAhPT1yJiYwPksocixuKT8oYVtkXT1yLGFbdl09YyxkPXYpOihhW2RdPW4sYVttXT1jLGQ9bSk7ZWxzZSBpZih2b2lkIDAhPT1yJiYwPksocixjKSlhW2RdPXIsYVt2XT1jLGQ9djtlbHNlIGJyZWFrIGF9fXJldHVybiBifXJldHVybiBudWxsfWZ1bmN0aW9uIEsoYSxiKXt2YXIgYz1hLnNvcnRJbmRleC1iLnNvcnRJbmRleDtyZXR1cm4gMCE9PWM/YzphLmlkLWIuaWR9dmFyIE49W10sTz1bXSxQPTEsUT1udWxsLFI9MyxTPSExLFQ9ITEsVT0hMTtcbmZ1bmN0aW9uIFYoYSl7Zm9yKHZhciBiPUwoTyk7bnVsbCE9PWI7KXtpZihudWxsPT09Yi5jYWxsYmFjaylNKE8pO2Vsc2UgaWYoYi5zdGFydFRpbWU8PWEpTShPKSxiLnNvcnRJbmRleD1iLmV4cGlyYXRpb25UaW1lLEooTixiKTtlbHNlIGJyZWFrO2I9TChPKX19ZnVuY3Rpb24gVyhhKXtVPSExO1YoYSk7aWYoIVQpaWYobnVsbCE9PUwoTikpVD0hMCxmKFgpO2Vsc2V7dmFyIGI9TChPKTtudWxsIT09YiYmZyhXLGIuc3RhcnRUaW1lLWEpfX1cbmZ1bmN0aW9uIFgoYSxiKXtUPSExO1UmJihVPSExLGgoKSk7Uz0hMDt2YXIgYz1SO3RyeXtWKGIpO2ZvcihRPUwoTik7bnVsbCE9PVEmJighKFEuZXhwaXJhdGlvblRpbWU+Yil8fGEmJiFrKCkpOyl7dmFyIGQ9US5jYWxsYmFjaztpZihudWxsIT09ZCl7US5jYWxsYmFjaz1udWxsO1I9US5wcmlvcml0eUxldmVsO3ZhciBlPWQoUS5leHBpcmF0aW9uVGltZTw9Yik7Yj1leHBvcnRzLnVuc3RhYmxlX25vdygpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlP1EuY2FsbGJhY2s9ZTpRPT09TChOKSYmTShOKTtWKGIpfWVsc2UgTShOKTtRPUwoTil9aWYobnVsbCE9PVEpdmFyIG09ITA7ZWxzZXt2YXIgbj1MKE8pO251bGwhPT1uJiZnKFcsbi5zdGFydFRpbWUtYik7bT0hMX1yZXR1cm4gbX1maW5hbGx5e1E9bnVsbCxSPWMsUz0hMX19XG5mdW5jdGlvbiBZKGEpe3N3aXRjaChhKXtjYXNlIDE6cmV0dXJuLTE7Y2FzZSAyOnJldHVybiAyNTA7Y2FzZSA1OnJldHVybiAxMDczNzQxODIzO2Nhc2UgNDpyZXR1cm4gMUU0O2RlZmF1bHQ6cmV0dXJuIDVFM319dmFyIFo9bDtleHBvcnRzLnVuc3RhYmxlX0lkbGVQcmlvcml0eT01O2V4cG9ydHMudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHk9MTtleHBvcnRzLnVuc3RhYmxlX0xvd1ByaW9yaXR5PTQ7ZXhwb3J0cy51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eT0zO2V4cG9ydHMudW5zdGFibGVfUHJvZmlsaW5nPW51bGw7ZXhwb3J0cy51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eT0yO2V4cG9ydHMudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7YS5jYWxsYmFjaz1udWxsfTtleHBvcnRzLnVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7VHx8U3x8KFQ9ITAsZihYKSl9O1xuZXhwb3J0cy51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbD1mdW5jdGlvbigpe3JldHVybiBSfTtleHBvcnRzLnVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIEwoTil9O2V4cG9ydHMudW5zdGFibGVfbmV4dD1mdW5jdGlvbihhKXtzd2l0Y2goUil7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6dmFyIGI9MzticmVhaztkZWZhdWx0OmI9Un12YXIgYz1SO1I9Yjt0cnl7cmV0dXJuIGEoKX1maW5hbGx5e1I9Y319O2V4cG9ydHMudW5zdGFibGVfcGF1c2VFeGVjdXRpb249ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfcmVxdWVzdFBhaW50PVo7ZXhwb3J0cy51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHk9ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6Y2FzZSA0OmNhc2UgNTpicmVhaztkZWZhdWx0OmE9M312YXIgYz1SO1I9YTt0cnl7cmV0dXJuIGIoKX1maW5hbGx5e1I9Y319O1xuZXhwb3J0cy51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1leHBvcnRzLnVuc3RhYmxlX25vdygpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3ZhciBlPWMuZGVsYXk7ZT1cIm51bWJlclwiPT09dHlwZW9mIGUmJjA8ZT9kK2U6ZDtjPVwibnVtYmVyXCI9PT10eXBlb2YgYy50aW1lb3V0P2MudGltZW91dDpZKGEpfWVsc2UgYz1ZKGEpLGU9ZDtjPWUrYzthPXtpZDpQKyssY2FsbGJhY2s6Yixwcmlvcml0eUxldmVsOmEsc3RhcnRUaW1lOmUsZXhwaXJhdGlvblRpbWU6Yyxzb3J0SW5kZXg6LTF9O2U+ZD8oYS5zb3J0SW5kZXg9ZSxKKE8sYSksbnVsbD09PUwoTikmJmE9PT1MKE8pJiYoVT9oKCk6VT0hMCxnKFcsZS1kKSkpOihhLnNvcnRJbmRleD1jLEooTixhKSxUfHxTfHwoVD0hMCxmKFgpKSk7cmV0dXJuIGF9O1xuZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZD1mdW5jdGlvbigpe3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7VihhKTt2YXIgYj1MKE4pO3JldHVybiBiIT09USYmbnVsbCE9PVEmJm51bGwhPT1iJiZudWxsIT09Yi5jYWxsYmFjayYmYi5zdGFydFRpbWU8PWEmJmIuZXhwaXJhdGlvblRpbWU8US5leHBpcmF0aW9uVGltZXx8aygpfTtleHBvcnRzLnVuc3RhYmxlX3dyYXBDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj1SO3JldHVybiBmdW5jdGlvbigpe3ZhciBjPVI7Uj1iO3RyeXtyZXR1cm4gYS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZmluYWxseXtSPWN9fX07XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBpc09sZElFID0gZnVuY3Rpb24gaXNPbGRJRSgpIHtcbiAgdmFyIG1lbW87XG4gIHJldHVybiBmdW5jdGlvbiBtZW1vcml6ZSgpIHtcbiAgICBpZiAodHlwZW9mIG1lbW8gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAvLyBUZXN0IGZvciBJRSA8PSA5IGFzIHByb3Bvc2VkIGJ5IEJyb3dzZXJoYWNrc1xuICAgICAgLy8gQHNlZSBodHRwOi8vYnJvd3NlcmhhY2tzLmNvbS8jaGFjay1lNzFkODY5MmY2NTMzNDE3M2ZlZTcxNWMyMjJjYjgwNVxuICAgICAgLy8gVGVzdHMgZm9yIGV4aXN0ZW5jZSBvZiBzdGFuZGFyZCBnbG9iYWxzIGlzIHRvIGFsbG93IHN0eWxlLWxvYWRlclxuICAgICAgLy8gdG8gb3BlcmF0ZSBjb3JyZWN0bHkgaW50byBub24tc3RhbmRhcmQgZW52aXJvbm1lbnRzXG4gICAgICAvLyBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc3R5bGUtbG9hZGVyL2lzc3Vlcy8xNzdcbiAgICAgIG1lbW8gPSBCb29sZWFuKHdpbmRvdyAmJiBkb2N1bWVudCAmJiBkb2N1bWVudC5hbGwgJiYgIXdpbmRvdy5hdG9iKTtcbiAgICB9XG5cbiAgICByZXR1cm4gbWVtbztcbiAgfTtcbn0oKTtcblxudmFyIGdldFRhcmdldCA9IGZ1bmN0aW9uIGdldFRhcmdldCgpIHtcbiAgdmFyIG1lbW8gPSB7fTtcbiAgcmV0dXJuIGZ1bmN0aW9uIG1lbW9yaXplKHRhcmdldCkge1xuICAgIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpOyAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXG4gICAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgICB9XG5cbiAgICByZXR1cm4gbWVtb1t0YXJnZXRdO1xuICB9O1xufSgpO1xuXG52YXIgc3R5bGVzSW5Eb20gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRvbS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRvbVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdXG4gICAgfTtcblxuICAgIGlmIChpbmRleCAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdHlsZXNJbkRvbS5wdXNoKHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogYWRkU3R5bGUob2JqLCBvcHRpb25zKSxcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTtcbiAgdmFyIGF0dHJpYnV0ZXMgPSBvcHRpb25zLmF0dHJpYnV0ZXMgfHwge307XG5cbiAgaWYgKHR5cGVvZiBhdHRyaWJ1dGVzLm5vbmNlID09PSAndW5kZWZpbmVkJykge1xuICAgIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gJ3VuZGVmaW5lZCcgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgICBpZiAobm9uY2UpIHtcbiAgICAgIGF0dHJpYnV0ZXMubm9uY2UgPSBub25jZTtcbiAgICB9XG4gIH1cblxuICBPYmplY3Qua2V5cyhhdHRyaWJ1dGVzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICBzdHlsZS5zZXRBdHRyaWJ1dGUoa2V5LCBhdHRyaWJ1dGVzW2tleV0pO1xuICB9KTtcblxuICBpZiAodHlwZW9mIG9wdGlvbnMuaW5zZXJ0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgb3B0aW9ucy5pbnNlcnQoc3R5bGUpO1xuICB9IGVsc2Uge1xuICAgIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQob3B0aW9ucy5pbnNlcnQgfHwgJ2hlYWQnKTtcblxuICAgIGlmICghdGFyZ2V0KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICAgIH1cblxuICAgIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG4gIH1cblxuICByZXR1cm4gc3R5bGU7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlLnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzdHlsZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlKTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbnZhciByZXBsYWNlVGV4dCA9IGZ1bmN0aW9uIHJlcGxhY2VUZXh0KCkge1xuICB2YXIgdGV4dFN0b3JlID0gW107XG4gIHJldHVybiBmdW5jdGlvbiByZXBsYWNlKGluZGV4LCByZXBsYWNlbWVudCkge1xuICAgIHRleHRTdG9yZVtpbmRleF0gPSByZXBsYWNlbWVudDtcbiAgICByZXR1cm4gdGV4dFN0b3JlLmZpbHRlcihCb29sZWFuKS5qb2luKCdcXG4nKTtcbiAgfTtcbn0oKTtcblxuZnVuY3Rpb24gYXBwbHlUb1NpbmdsZXRvblRhZyhzdHlsZSwgaW5kZXgsIHJlbW92ZSwgb2JqKSB7XG4gIHZhciBjc3MgPSByZW1vdmUgPyAnJyA6IG9iai5tZWRpYSA/IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIikuY29uY2F0KG9iai5jc3MsIFwifVwiKSA6IG9iai5jc3M7IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cbiAgaWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSByZXBsYWNlVGV4dChpbmRleCwgY3NzKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgY3NzTm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcyk7XG4gICAgdmFyIGNoaWxkTm9kZXMgPSBzdHlsZS5jaGlsZE5vZGVzO1xuXG4gICAgaWYgKGNoaWxkTm9kZXNbaW5kZXhdKSB7XG4gICAgICBzdHlsZS5yZW1vdmVDaGlsZChjaGlsZE5vZGVzW2luZGV4XSk7XG4gICAgfVxuXG4gICAgaWYgKGNoaWxkTm9kZXMubGVuZ3RoKSB7XG4gICAgICBzdHlsZS5pbnNlcnRCZWZvcmUoY3NzTm9kZSwgY2hpbGROb2Rlc1tpbmRleF0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdHlsZS5hcHBlbmRDaGlsZChjc3NOb2RlKTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gYXBwbHlUb1RhZyhzdHlsZSwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBvYmouY3NzO1xuICB2YXIgbWVkaWEgPSBvYmoubWVkaWE7XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChtZWRpYSkge1xuICAgIHN0eWxlLnNldEF0dHJpYnV0ZSgnbWVkaWEnLCBtZWRpYSk7XG4gIH0gZWxzZSB7XG4gICAgc3R5bGUucmVtb3ZlQXR0cmlidXRlKCdtZWRpYScpO1xuICB9XG5cbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgaWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlLmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKHN0eWxlLmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbnZhciBzaW5nbGV0b24gPSBudWxsO1xudmFyIHNpbmdsZXRvbkNvdW50ZXIgPSAwO1xuXG5mdW5jdGlvbiBhZGRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlO1xuICB2YXIgdXBkYXRlO1xuICB2YXIgcmVtb3ZlO1xuXG4gIGlmIChvcHRpb25zLnNpbmdsZXRvbikge1xuICAgIHZhciBzdHlsZUluZGV4ID0gc2luZ2xldG9uQ291bnRlcisrO1xuICAgIHN0eWxlID0gc2luZ2xldG9uIHx8IChzaW5nbGV0b24gPSBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykpO1xuICAgIHVwZGF0ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgZmFsc2UpO1xuICAgIHJlbW92ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgdHJ1ZSk7XG4gIH0gZWxzZSB7XG4gICAgc3R5bGUgPSBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gICAgdXBkYXRlID0gYXBwbHlUb1RhZy5iaW5kKG51bGwsIHN0eWxlLCBvcHRpb25zKTtcblxuICAgIHJlbW92ZSA9IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG4gICAgfTtcbiAgfVxuXG4gIHVwZGF0ZShvYmopO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlU3R5bGUobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICByZW1vdmUoKTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307IC8vIEZvcmNlIHNpbmdsZS10YWcgc29sdXRpb24gb24gSUU2LTksIHdoaWNoIGhhcyBhIGhhcmQgbGltaXQgb24gdGhlICMgb2YgPHN0eWxlPlxuICAvLyB0YWdzIGl0IHdpbGwgYWxsb3cgb24gYSBwYWdlXG5cbiAgaWYgKCFvcHRpb25zLnNpbmdsZXRvbiAmJiB0eXBlb2Ygb3B0aW9ucy5zaW5nbGV0b24gIT09ICdib29sZWFuJykge1xuICAgIG9wdGlvbnMuc2luZ2xldG9uID0gaXNPbGRJRSgpO1xuICB9XG5cbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChuZXdMaXN0KSAhPT0gJ1tvYmplY3QgQXJyYXldJykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRvbVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5Eb21bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5Eb20uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHRpZihfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdKSB7XG5cdFx0cmV0dXJuIF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0uZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IG1vZHVsZVsnZGVmYXVsdCddIDpcblx0XHQoKSA9PiBtb2R1bGU7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApIiwidmFyIHNjcmlwdFVybDtcbmlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmcuaW1wb3J0U2NyaXB0cykgc2NyaXB0VXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmxvY2F0aW9uICsgXCJcIjtcbnZhciBkb2N1bWVudCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5kb2N1bWVudDtcbmlmICghc2NyaXB0VXJsICYmIGRvY3VtZW50KSB7XG5cdGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0KVxuXHRcdHNjcmlwdFVybCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjXG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkgc2NyaXB0VXJsID0gc2NyaXB0c1tzY3JpcHRzLmxlbmd0aCAtIDFdLnNyY1xuXHR9XG59XG4vLyBXaGVuIHN1cHBvcnRpbmcgYnJvd3NlcnMgd2hlcmUgYW4gYXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCB5b3UgbXVzdCBzcGVjaWZ5IGFuIG91dHB1dC5wdWJsaWNQYXRoIG1hbnVhbGx5IHZpYSBjb25maWd1cmF0aW9uXG4vLyBvciBwYXNzIGFuIGVtcHR5IHN0cmluZyAoXCJcIikgYW5kIHNldCB0aGUgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gdmFyaWFibGUgZnJvbSB5b3VyIGNvZGUgdG8gdXNlIHlvdXIgb3duIGxvZ2ljLlxuaWYgKCFzY3JpcHRVcmwpIHRocm93IG5ldyBFcnJvcihcIkF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyXCIpO1xuc2NyaXB0VXJsID0gc2NyaXB0VXJsLnJlcGxhY2UoLyMuKiQvLCBcIlwiKS5yZXBsYWNlKC9cXD8uKiQvLCBcIlwiKS5yZXBsYWNlKC9cXC9bXlxcL10rJC8sIFwiL1wiKTtcbl9fd2VicGFja19yZXF1aXJlX18ucCA9IHNjcmlwdFVybDsiLCJcInVzZSBzdHJpY3RcIjtcblxucmVxdWlyZShcIi4vbm9Db25mbGljdFwiKTtcblxudmFyIF9nbG9iYWwgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJjb3JlLWpzL2xpYnJhcnkvZm4vZ2xvYmFsXCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgXCJkZWZhdWx0XCI6IG9iaiB9OyB9XG5cbmlmIChfZ2xvYmFsW1wiZGVmYXVsdFwiXS5fYmFiZWxQb2x5ZmlsbCAmJiB0eXBlb2YgY29uc29sZSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBjb25zb2xlLndhcm4pIHtcbiAgY29uc29sZS53YXJuKFwiQGJhYmVsL3BvbHlmaWxsIGlzIGxvYWRlZCBtb3JlIHRoYW4gb25jZSBvbiB0aGlzIHBhZ2UuIFRoaXMgaXMgcHJvYmFibHkgbm90IGRlc2lyYWJsZS9pbnRlbmRlZCBcIiArIFwiYW5kIG1heSBoYXZlIGNvbnNlcXVlbmNlcyBpZiBkaWZmZXJlbnQgdmVyc2lvbnMgb2YgdGhlIHBvbHlmaWxscyBhcmUgYXBwbGllZCBzZXF1ZW50aWFsbHkuIFwiICsgXCJJZiB5b3UgZG8gbmVlZCB0byBsb2FkIHRoZSBwb2x5ZmlsbCBtb3JlIHRoYW4gb25jZSwgdXNlIEBiYWJlbC9wb2x5ZmlsbC9ub0NvbmZsaWN0IFwiICsgXCJpbnN0ZWFkIHRvIGJ5cGFzcyB0aGUgd2FybmluZy5cIik7XG59XG5cbl9nbG9iYWxbXCJkZWZhdWx0XCJdLl9iYWJlbFBvbHlmaWxsID0gdHJ1ZTsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuY2xhc3MgVGh1bWJzIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy50aHVtYkNsaWNrID0gdGhpcy50aHVtYkNsaWNrLmJpbmQodGhpcyk7XG4gIH1cblxuICB0aHVtYkNsaWNrKGV2ZW50KSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zdCB7IHRodW1icyB9ID0gdGhpcy5wcm9wcztcbiAgICB0aHVtYnMoZXZlbnQudGFyZ2V0Lm5hbWUpO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgaW1hZ2VzLCB0aHVtYkNsYXNzIH0gPSB0aGlzLnByb3BzO1xuICAgIGlmICh0aHVtYkNsYXNzWzBdID09PSAnaW1hZ2UtbW9kYWxUaHVtYicpIHtcbiAgICAgIGNvbnN0IGltYWdlQXJyYXkgPSBbXTtcbiAgICAgIGxldCBzdWJBcnJheSA9IFtdO1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbWFnZXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgaWYgKChpICsgMSkgJSAzID09PSAwKSB7XG4gICAgICAgICAgc3ViQXJyYXkucHVzaChpbWFnZXNbaV0pO1xuICAgICAgICAgIGltYWdlQXJyYXkucHVzaChzdWJBcnJheSk7XG4gICAgICAgICAgc3ViQXJyYXkgPSBbXTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzdWJBcnJheS5wdXNoKGltYWdlc1tpXSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChpbWFnZXMubGVuZ3RoICUgMyA9PT0gMCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaW1hZ2UtbW9kYWxDb2wyXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImltYWdlLW1vZGFsVGh1bWJCb3hcIj5cbiAgICAgICAgICAgICAge2ltYWdlQXJyYXkubWFwKCh0cmlwbGV0LCBpbmRleCkgPT4gKFxuICAgICAgICAgICAgICAgIDxkaXYga2V5PXt0cmlwbGV0WzBdICsgKE1hdGgucmFuZG9tKCkgKiBNYXRoLmZsb29yKDEwMCkpfT5cbiAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9XCJ0aHVtYkNvdXBsZVwiIGNsYXNzTmFtZT1cImltYWdlLXRodW1iQ291cGxlXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgbmFtZT17aW5kZXggKiAzfSByb2xlPVwiYnV0dG9uXCIgdGFiSW5kZXg9ezB9IG9uQ2xpY2s9e3RoaXMudGh1bWJDbGlja30gb25LZXlVcD17dGhpcy50aHVtYkNsaWNrfT5cbiAgICAgICAgICAgICAgICAgICAgICA8aW1nIG5hbWU9e2luZGV4ICogM30gY2xhc3NOYW1lPXt0aHVtYkNsYXNzWzBdfSBhbHQ9XCJub2ltYWdlXCIgc3JjPXt0cmlwbGV0WzBdfSAvPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBuYW1lPXtpbmRleCAqIDMgKyAxfSByb2xlPVwiYnV0dG9uXCIgdGFiSW5kZXg9ezB9IG9uQ2xpY2s9e3RoaXMudGh1bWJDbGlja30gb25LZXlVcD17dGhpcy50aHVtYkNsaWNrfT5cbiAgICAgICAgICAgICAgICAgICAgICA8aW1nIG5hbWU9e2luZGV4ICogMyArIDF9IGNsYXNzTmFtZT17dGh1bWJDbGFzc1sxXX0gYWx0PVwibm9pbWFnZVwiIHNyYz17dHJpcGxldFsxXX0gLz5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgbmFtZT17aW5kZXggKiAzICsgMn0gcm9sZT1cImJ1dHRvblwiIHRhYkluZGV4PXswfSBvbkNsaWNrPXt0aGlzLnRodW1iQ2xpY2t9IG9uS2V5VXA9e3RoaXMudGh1bWJDbGlja30+XG4gICAgICAgICAgICAgICAgICAgIDxpbWcgbmFtZT17aW5kZXggKiAzICsgMn0gaWQ9XCJ0aHVtYk1haW5cIiBjbGFzc05hbWU9e3RodW1iQ2xhc3NbMl19IGFsdD1cIm5vaW1hZ2VcIiBzcmM9e3RyaXBsZXRbMl19IC8+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaW1hZ2UtbW9kYWxDb2wyXCI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJpbWFnZS1tb2RhbFRodW1iQm94XCI+XG4gICAgICAgICAgICB7aW1hZ2VBcnJheS5tYXAoKHRyaXBsZXQsIGluZGV4KSA9PiAoXG4gICAgICAgICAgICAgIDxkaXYga2V5PXt0cmlwbGV0WzBdICsgKE1hdGgucmFuZG9tKCkgKiBNYXRoLmZsb29yKDEwMCkpfT5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImltYWdlLXRodW1iQ291cGxlXCI+XG4gICAgICAgICAgICAgICAgICA8ZGl2IG5hbWU9e2luZGV4ICogM30gcm9sZT1cImJ1dHRvblwiIHRhYkluZGV4PXswfSBvbkNsaWNrPXt0aGlzLnRodW1iQ2xpY2t9IG9uS2V5VXA9e3RoaXMudGh1bWJDbGlja30+XG4gICAgICAgICAgICAgICAgICAgIDxpbWcgbmFtZT17aW5kZXggKiAzfSBjbGFzc05hbWU9e3RodW1iQ2xhc3NbMF19IGFsdD1cIm5vaW1hZ2VcIiBzcmM9e3RyaXBsZXRbMF19IC8+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgbmFtZT17aW5kZXggKiAzICsgMX0gcm9sZT1cImJ1dHRvblwiIHRhYkluZGV4PXswfSBvbkNsaWNrPXt0aGlzLnRodW1iQ2xpY2t9IG9uS2V5VXA9e3RoaXMudGh1bWJDbGlja30+XG4gICAgICAgICAgICAgICAgICAgIDxpbWcgbmFtZT17aW5kZXggKiAzICsgMX0gY2xhc3NOYW1lPXt0aHVtYkNsYXNzWzFdfSBhbHQ9XCJub2ltYWdlXCIgc3JjPXt0cmlwbGV0WzFdfSAvPlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBuYW1lPXtpbmRleCAqIDMgKyAyfSByb2xlPVwiYnV0dG9uXCIgdGFiSW5kZXg9ezB9IG9uQ2xpY2s9e3RoaXMudGh1bWJDbGlja30gb25LZXlVcD17dGhpcy50aHVtYkNsaWNrfT5cbiAgICAgICAgICAgICAgICAgIDxpbWcgbmFtZT17aW5kZXggKiAzICsgMn0gY2xhc3NOYW1lPXt0aHVtYkNsYXNzWzJdfSBhbHQ9XCJub2ltYWdlXCIgc3JjPXt0cmlwbGV0WzJdfSAvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJpbWFnZS10aHVtYkNvdXBsZVwiPlxuICAgICAgICAgICAgICB7c3ViQXJyYXkubWFwKChpbWFnZSwgaW5kZXgpID0+IChcbiAgICAgICAgICAgICAgICA8ZGl2IG5hbWU9e2luZGV4ICsgaW1hZ2VBcnJheS5sZW5ndGh9IHJvbGU9XCJidXR0b25cIiB0YWJJbmRleD17MH0gb25DbGljaz17dGhpcy50aHVtYkNsaWNrfSBvbktleVVwPXt0aGlzLnRodW1iQ2xpY2t9IGtleT17aW1hZ2UgKyAoTWF0aC5yYW5kb20oKSAqIE1hdGguZmxvb3IoMTAwKSl9PlxuICAgICAgICAgICAgICAgICAgPGltZyBuYW1lPXtpbmRleCArIGltYWdlQXJyYXkubGVuZ3RofSBjbGFzc05hbWU9e3RodW1iQ2xhc3NbMF19IGFsdD1cIm5vaW1hZ2VcIiBzcmM9e2ltYWdlfSAvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICk7XG4gICAgfVxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImltYWdlLWNvbDFcIj5cbiAgICAgICAge2ltYWdlcy5tYXAoKGltYWdlLCBpbmRleCkgPT4gKFxuICAgICAgICAgIDxkaXYgbmFtZT17aW5kZXh9IHJvbGU9XCJidXR0b25cIiB0YWJJbmRleD17MH0gb25DbGljaz17dGhpcy50aHVtYkNsaWNrfSBvbktleVVwPXt0aGlzLnRodW1iQ2xpY2t9IGtleT17aW1hZ2UgKyAoTWF0aC5yYW5kb20oKSAqIE1hdGguZmxvb3IoMTAwKSl9PlxuICAgICAgICAgICAgPGltZyBuYW1lPXtpbmRleH0gY2xhc3NOYW1lPXt0aHVtYkNsYXNzW2luZGV4XX0gYWx0PVwibm9pbWFnZVwiIHNyYz17aW1hZ2V9IC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICkpfVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5UaHVtYnMucHJvcFR5cGVzID0ge1xuICBpbWFnZXM6IFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5zdHJpbmcpLmlzUmVxdWlyZWQsXG4gIHRodW1iQ2xhc3M6IFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5zdHJpbmcpLmlzUmVxdWlyZWQsXG4gIHRodW1iczogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFRodW1icztcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFRodW1icyBmcm9tICcuL1RodW1icyc7XG5cbmNsYXNzIE1vZGFsIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIHNob3dab29tTW9kYWw6IGZhbHNlLFxuICAgIH07XG4gICAgdGhpcy50aHVtYkNsaWNrID0gdGhpcy50aHVtYkNsaWNrLmJpbmQodGhpcyk7XG4gICAgdGhpcy5sZWZ0Q2xpY2sgPSB0aGlzLmxlZnRDbGljay5iaW5kKHRoaXMpO1xuICAgIHRoaXMucmlnaHRDbGljayA9IHRoaXMucmlnaHRDbGljay5iaW5kKHRoaXMpO1xuICAgIHRoaXMuem9vbSA9IHRoaXMuem9vbS5iaW5kKHRoaXMpO1xuICB9XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgbGV0IHRyYW5zZm9ybSA9ICcnO1xuICAgIGlmICgobmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdPcGVyYScpIHx8IG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignT1BSJykpICE9PSAtMSkge1xuICAgICAgdHJhbnNmb3JtID0gJy1vLXRyYW5zZm9ybTonO1xuICAgIH0gZWxzZSBpZiAobmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdDaHJvbWUnKSAhPT0gLTEpIHtcbiAgICAgIHRyYW5zZm9ybSA9ICd0cmFuc2Zvcm06JztcbiAgICB9IGVsc2UgaWYgKG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignU2FmYXJpJykgIT09IC0xKSB7XG4gICAgICB0cmFuc2Zvcm0gPSAnLXdlYmtpdC10cmFuc2Zvcm06JztcbiAgICB9IGVsc2UgaWYgKG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignRmlyZWZveCcpICE9PSAtMSkge1xuICAgICAgdHJhbnNmb3JtID0gJy1tb3otdHJhbnNmb3JtOic7XG4gICAgfSBlbHNlIGlmICgobmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdNU0lFJykgIT09IC0xKSB8fCAoISFkb2N1bWVudC5kb2N1bWVudE1vZGUgPT09IHRydWUpKSB7IC8vIElGIElFID4gMTBcbiAgICAgIHRyYW5zZm9ybSA9ICctbXMtdHJhbnNmb3JtOic7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRyYW5zZm9ybSA9ICd0cmFuc2Zvcm06JztcbiAgICB9XG4gICAgZG9jdW1lbnQuYm9keS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCAoZSkgPT4ge1xuICAgICAgaWYgKGRvY3VtZW50LmJvZHkuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnaW1hZ2UtbW9kYWxab29tTWFpbicpWzBdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdpbWFnZS1tb2RhbFpvb21NYWluJylbMF0uc2V0QXR0cmlidXRlKCdzdHlsZScsIGAke3RyYW5zZm9ybX0gdHJhbnNsYXRlKCR7LWUucGFnZVggKyA1MDB9cHgsICR7LWUucGFnZVkgKyA1MDB9cHgpIHNjYWxlKDIpO2ApO1xuICAgICAgICBjb25zdCBib3ggPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdpbWFnZS1tb2RhbFpvb21Cb3gnKVswXS5xdWVyeVNlbGVjdG9yKCc6aG92ZXInKTtcbiAgICAgICAgaWYgKGJveCA9PT0gbnVsbCkge1xuICAgICAgICAgIHRoaXMuc2V0U3RhdGUoeyBzaG93Wm9vbU1vZGFsOiBmYWxzZSB9KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgb25DbG9zZShldmVudCkge1xuICAgIHRoaXMuc2V0U3RhdGUoeyBzaG93Wm9vbU1vZGFsOiBmYWxzZSB9KTtcbiAgICBjb25zdCB7IG9uQ2xvc2UgfSA9IHRoaXMucHJvcHM7XG4gICAgaWYgKG9uQ2xvc2UpIHtcbiAgICAgIG9uQ2xvc2UoZXZlbnQpO1xuICAgIH1cbiAgfVxuXG4gIHRodW1iQ2xpY2soaW5kZXgpIHtcbiAgICBjb25zdCB7IG1vZGFsVGh1bWJzIH0gPSB0aGlzLnByb3BzO1xuICAgIG1vZGFsVGh1bWJzKGluZGV4KTtcbiAgfVxuXG4gIGxlZnRDbGljaygpIHtcbiAgICBjb25zdCB7IGxlZnQgfSA9IHRoaXMucHJvcHM7XG4gICAgbGVmdCgpO1xuICB9XG5cbiAgcmlnaHRDbGljaygpIHtcbiAgICBjb25zdCB7IHJpZ2h0IH0gPSB0aGlzLnByb3BzO1xuICAgIHJpZ2h0KCk7XG4gIH1cblxuICB6b29tKCkge1xuICAgIGNvbnN0IHsgc2hvd1pvb21Nb2RhbCB9ID0gdGhpcy5zdGF0ZTtcbiAgICB0aGlzLnNldFN0YXRlKHsgc2hvd1pvb21Nb2RhbDogIXNob3dab29tTW9kYWwgfSk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBzaG93Wm9vbU1vZGFsIH0gPSB0aGlzLnN0YXRlO1xuICAgIGNvbnN0IHtcbiAgICAgIHNob3dNb2RhbCwgaW1hZ2VzLCBtYWluLCB0aHVtYkNsYXNzLFxuICAgIH0gPSB0aGlzLnByb3BzO1xuICAgIGlmICghc2hvd01vZGFsKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgaWYgKCFzaG93Wm9vbU1vZGFsKSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImltYWdlLWJhY2tHcm91bmRcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImltYWdlLW1vZGFsSGVhZGVyXCI+XG4gICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9eyhldmVudCkgPT4gdGhpcy5vbkNsb3NlKGV2ZW50KX0gY2xhc3NOYW1lPVwiaW1hZ2UtbW9kYWxDbG9zZVwiIHR5cGU9XCJidXR0b25cIj5cbiAgICAgICAgICAgICAgPHN2ZyB2aWV3Qm94PVwiMCAwIDI0IDI0XCI+XG4gICAgICAgICAgICAgICAgPHBhdGggZD1cIk0xMy40MTQsMTJsNi4yOTMtNi4yOTNhMSwxLDAsMCwwLTEuNDE0LTEuNDE0TDEyLDEwLjU4Niw1LjcwNyw0LjI5M0ExLDEsMCwwLDAsNC4yOTMsNS43MDdMMTAuNTg2LDEyLDQuMjkzLDE4LjI5M2ExLDEsMCwxLDAsMS40MTQsMS40MTRMMTIsMTMuNDE0bDYuMjkzLDYuMjkzYTEsMSwwLDAsMCwxLjQxNC0xLjQxNFpcIiAvPlxuICAgICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJpbWFnZS1tb2RhbEdyaWRcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaW1hZ2UtbW9kZWxDYXJvdXNlbFwiPlxuICAgICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e3RoaXMubGVmdENsaWNrfSBjbGFzc05hbWU9XCJpbWFnZS1tb2RhbExlZnRcIiB0eXBlPVwiYnV0dG9uXCI+XG4gICAgICAgICAgICAgICAgPHN2ZyB2aWV3Qm94PVwiMCAwIDI0IDI0XCI+XG4gICAgICAgICAgICAgICAgICA8cGF0aCBkPVwiTTE2LDIxYTAuOTk0LDAuOTk0LDAsMCwxLS42NjQtMC4yNTNMNS41LDEybDkuODQxLTguNzQ3YTEsMSwwLDAsMSwxLjMyOCwxLjQ5NEw4LjUsMTJsOC4xNTksNy4yNTNBMSwxLDAsMCwxLDE2LDIxWlwiIC8+XG4gICAgICAgICAgICAgICAgPC9zdmc+XG4gICAgICAgICAgICAgIDwvYnV0dG9uPlxuXG4gICAgICAgICAgICAgIDxzcGFuIG9uQ2xpY2s9e3RoaXMuem9vbX0gbmFtZT1cIm1haW5cIiByb2xlPVwiYnV0dG9uXCIgdGFiSW5kZXg9ezB9IG9uS2V5VXA9e3RoaXMuem9vbX0+XG4gICAgICAgICAgICAgICAgPGltZ1xuICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiaW1hZ2UtbW9kYWxNYWluXCJcbiAgICAgICAgICAgICAgICAgIGFsdD1cIm5vaW1hZ2VcIlxuICAgICAgICAgICAgICAgICAgc3JjPXtpbWFnZXNbbWFpbl19XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPC9zcGFuPlxuXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaW1hZ2UtbW9kYWxDb2wzXCI+XG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXt0aGlzLnJpZ2h0Q2xpY2t9IGNsYXNzTmFtZT1cImltYWdlLW1vZGFsUmlnaHRcIiB0eXBlPVwiYnV0dG9uXCI+XG4gICAgICAgICAgICAgICAgICA8c3ZnIHZpZXdCb3g9XCIwIDAgMjQgMjRcIj5cbiAgICAgICAgICAgICAgICAgICAgPHBhdGggZD1cIk04LDIxYTEsMSwwLDAsMS0uNjY0LTEuNzQ3TDE1LjUsMTIsNy4zMzYsNC43NDdBMSwxLDAsMCwxLDguNjY0LDMuMjUzTDE4LjUsMTIsOC42NjQsMjAuNzQ3QTAuOTk0LDAuOTk0LDAsMCwxLDgsMjFaXCIgLz5cbiAgICAgICAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICA8VGh1bWJzIHRodW1iQ2xhc3M9e3RodW1iQ2xhc3N9IGltYWdlcz17aW1hZ2VzfSB0aHVtYnM9e3RoaXMudGh1bWJDbGlja30gLz5cblxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICk7XG4gICAgfVxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImltYWdlLWJhY2tHcm91bmRcIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJpbWFnZS1tb2RhbEhlYWRlclwiPlxuICAgICAgICAgIDxidXR0b24gb25DbGljaz17KGV2ZW50KSA9PiB0aGlzLm9uQ2xvc2UoZXZlbnQpfSBjbGFzc05hbWU9XCJpbWFnZS1tb2RhbENsb3NlXCIgdHlwZT1cImJ1dHRvblwiPlxuICAgICAgICAgICAgPHN2ZyB2aWV3Qm94PVwiMCAwIDI0IDI0XCI+XG4gICAgICAgICAgICAgIDxwYXRoIGQ9XCJNMTMuNDE0LDEybDYuMjkzLTYuMjkzYTEsMSwwLDAsMC0xLjQxNC0xLjQxNEwxMiwxMC41ODYsNS43MDcsNC4yOTNBMSwxLDAsMCwwLDQuMjkzLDUuNzA3TDEwLjU4NiwxMiw0LjI5MywxOC4yOTNhMSwxLDAsMSwwLDEuNDE0LDEuNDE0TDEyLDEzLjQxNGw2LjI5Myw2LjI5M2ExLDEsMCwwLDAsMS40MTQtMS40MTRaXCIgLz5cbiAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImltYWdlLW1vZGFsR3JpZFwiPlxuICAgICAgICAgIDxzcGFuIG9uQ2xpY2s9e3RoaXMuem9vbX0gY2xhc3NOYW1lPVwiaW1hZ2UtbW9kYWxab29tQm94XCIgbmFtZT1cIm1haW5cIiByb2xlPVwiYnV0dG9uXCIgdGFiSW5kZXg9ezB9IG9uS2V5VXA9e3RoaXMuem9vbX0+XG4gICAgICAgICAgICA8aW1nXG4gICAgICAgICAgICAgIGNsYXNzTmFtZT1cImltYWdlLW1vZGFsWm9vbU1haW5cIlxuICAgICAgICAgICAgICBhbHQ9XCJub2ltYWdlXCJcbiAgICAgICAgICAgICAgc3JjPXtpbWFnZXNbbWFpbl19XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvc3Bhbj5cblxuICAgICAgICAgIDxUaHVtYnMgdGh1bWJDbGFzcz17dGh1bWJDbGFzc30gaW1hZ2VzPXtpbWFnZXN9IHRodW1icz17dGhpcy50aHVtYkNsaWNrfSAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuTW9kYWwucHJvcFR5cGVzID0ge1xuICBpbWFnZXM6IFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5zdHJpbmcpLmlzUmVxdWlyZWQsXG4gIHRodW1iQ2xhc3M6IFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5zdHJpbmcpLmlzUmVxdWlyZWQsXG4gIHNob3dNb2RhbDogUHJvcFR5cGVzLmJvb2wuaXNSZXF1aXJlZCxcbiAgb25DbG9zZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgbGVmdDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgbW9kYWxUaHVtYnM6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIHJpZ2h0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBtYWluOiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBNb2RhbDtcbiIsIi8qIGVzbGludC1kaXNhYmxlIG5vLXVuZGVyc2NvcmUtZGFuZ2xlICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJztcbmltcG9ydCBUaHVtYnMgZnJvbSAnLi9UaHVtYnMnO1xuaW1wb3J0IE1vZGFsIGZyb20gJy4vTW9kYWwnO1xuXG5jbGFzcyBJbWFnZSBleHRlbmRzIFJlYWN0LlB1cmVDb21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgaWQ6IDAsXG4gICAgICBpbWFnZXM6IFtdLFxuICAgICAgdGh1bWJDbGFzczogW10sXG4gICAgICBtb2RhbFRodW1iQ2xhc3M6IFtdLFxuICAgICAgbWFpbjogMCxcbiAgICAgIG1vZGFsTWFpbjogMCxcbiAgICAgIGZhdm9yaXRlOiBmYWxzZSxcbiAgICAgIHNob3dNb2RhbDogZmFsc2UsXG4gICAgfTtcbiAgICB0aGlzLmdldEl0ZW1zID0gdGhpcy5nZXRJdGVtcy5iaW5kKHRoaXMpO1xuICAgIHRoaXMudGh1bWJDbGljayA9IHRoaXMudGh1bWJDbGljay5iaW5kKHRoaXMpO1xuICAgIHRoaXMubGVmdENsaWNrID0gdGhpcy5sZWZ0Q2xpY2suYmluZCh0aGlzKTtcbiAgICB0aGlzLnJpZ2h0Q2xpY2sgPSB0aGlzLnJpZ2h0Q2xpY2suYmluZCh0aGlzKTtcbiAgICB0aGlzLmxlZnRNb2RhbENsaWNrID0gdGhpcy5sZWZ0TW9kYWxDbGljay5iaW5kKHRoaXMpO1xuICAgIHRoaXMucmlnaHRNb2RhbENsaWNrID0gdGhpcy5yaWdodE1vZGFsQ2xpY2suYmluZCh0aGlzKTtcbiAgICB0aGlzLm1vZGFsVGh1bWJzID0gdGhpcy5tb2RhbFRodW1icy5iaW5kKHRoaXMpO1xuICAgIHRoaXMubWFpbkNsaWNrID0gdGhpcy5tYWluQ2xpY2suYmluZCh0aGlzKTtcbiAgICB0aGlzLmNoYW5nZUZhdiA9IHRoaXMuY2hhbmdlRmF2LmJpbmQodGhpcyk7XG4gIH1cblxuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICB0aGlzLmdldEl0ZW1zKCk7XG4gIH1cblxuICBnZXRJdGVtcyhpdGVtSWQpIHtcbiAgICBjb25zdCB7IGlkLCBtYWluIH0gPSB0aGlzLnN0YXRlO1xuICAgIC8vIGNvbnN0IGl0ZW0gPSBpdGVtSWQgfHwgaWQ7XG4gICAgY29uc3QgaXRlbSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIE1hdGguZmxvb3IoMTAwMDAwMDApKTtcbiAgICBheGlvcy5nZXQoYC9hcGkvaXRlbXMvJHtpdGVtfWApXG4gICAgICAudGhlbigoeyBkYXRhIH0pID0+IHtcbiAgICAgICAgY29uc3QgdGh1bWJzQXJyYXkgPSBbXTtcbiAgICAgICAgY29uc3QgbW9kYWxUaHVtYnNBcnJheSA9IFtdO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGRhdGEuaW1hZ2VzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgICAgaWYgKGkgPT09IG1haW4pIHtcbiAgICAgICAgICAgIHRodW1ic0FycmF5LnB1c2goJ2ltYWdlLXRodW1iTWFpbicpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHVtYnNBcnJheS5wdXNoKCdpbWFnZS10aHVtYicpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoKGkgKyAxKSAlIDMgPT09IDApIHtcbiAgICAgICAgICAgIG1vZGFsVGh1bWJzQXJyYXkucHVzaCgnaW1hZ2UtbW9kYWxUaHVtYk1haW4nKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbW9kYWxUaHVtYnNBcnJheS5wdXNoKCdpbWFnZS1tb2RhbFRodW1iJyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgIGlkOiBkYXRhLl9pZCxcbiAgICAgICAgICBpbWFnZXM6IGRhdGEuaW1hZ2VzLFxuICAgICAgICAgIGZhdm9yaXRlOiBkYXRhLmZhdm9yaXRlLFxuICAgICAgICAgIHRodW1iQ2xhc3M6IHRodW1ic0FycmF5LFxuICAgICAgICAgIG1vZGFsVGh1bWJDbGFzczogbW9kYWxUaHVtYnNBcnJheSxcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgfVxuXG4gIHRodW1iQ2xpY2soaW5kZXgpIHtcbiAgICBpZiAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21haW4nKSkge1xuICAgICAgc2V0VGltZW91dCgoKSA9PiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFpbicpLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnaW1hZ2UtbWFpbicpLCA1MDApO1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21haW4nKS5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ2ltYWdlLW1haW4gaW1hZ2UtZmFkZUluJyk7XG4gICAgfVxuICAgIGNvbnN0IHsgdGh1bWJDbGFzcyB9ID0gdGhpcy5zdGF0ZTtcbiAgICB0aHVtYkNsYXNzW3RodW1iQ2xhc3MuaW5kZXhPZignaW1hZ2UtdGh1bWJNYWluJyldID0gJ2ltYWdlLXRodW1iJztcbiAgICB0aHVtYkNsYXNzW2luZGV4XSA9ICdpbWFnZS10aHVtYk1haW4nO1xuICAgIHRoaXMuc2V0U3RhdGUoeyBtYWluOiBOdW1iZXIoaW5kZXgpLCB0aHVtYkNsYXNzIH0pO1xuICB9XG5cbiAgbGVmdENsaWNrKCkge1xuICAgIGlmIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFpbicpKSB7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYWluJykuc2V0QXR0cmlidXRlKCdjbGFzcycsICdpbWFnZS1tYWluJyksIDUwMCk7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFpbicpLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnaW1hZ2UtbWFpbiBpbWFnZS1mYWRlSW4nKTtcbiAgICB9XG4gICAgY29uc3QgeyBpbWFnZXMsIG1haW4sIHRodW1iQ2xhc3MgfSA9IHRoaXMuc3RhdGU7XG4gICAgdGh1bWJDbGFzcy5wdXNoKHRodW1iQ2xhc3Muc2hpZnQoKSk7XG4gICAgY29uc3QgbWF4ID0gaW1hZ2VzLmxlbmd0aDtcbiAgICBpZiAobWFpbiA9PT0gMCkge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7IG1haW46IG1heCAtIDEgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoeyBtYWluOiBtYWluIC0gMSB9KTtcbiAgICB9XG4gIH1cblxuICByaWdodENsaWNrKCkge1xuICAgIGlmIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFpbicpKSB7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYWluJykuc2V0QXR0cmlidXRlKCdjbGFzcycsICdpbWFnZS1tYWluJyksIDUwMCk7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFpbicpLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnaW1hZ2UtbWFpbiBpbWFnZS1mYWRlSW4nKTtcbiAgICB9XG4gICAgY29uc3QgeyBpbWFnZXMsIG1haW4sIHRodW1iQ2xhc3MgfSA9IHRoaXMuc3RhdGU7XG4gICAgdGh1bWJDbGFzcy51bnNoaWZ0KHRodW1iQ2xhc3MucG9wKCkpO1xuICAgIGNvbnN0IG1heCA9IGltYWdlcy5sZW5ndGg7XG4gICAgaWYgKG1haW4gPT09IG1heCAtIDEpIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoeyBtYWluOiAwIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHsgbWFpbjogbWFpbiArIDEgfSk7XG4gICAgfVxuICB9XG5cbiAgbGVmdE1vZGFsQ2xpY2soKSB7XG4gICAgY29uc3QgeyBtb2RhbE1haW4sIGltYWdlcyB9ID0gdGhpcy5zdGF0ZTtcbiAgICBjb25zdCBtYXggPSBpbWFnZXMubGVuZ3RoO1xuICAgIGlmIChtb2RhbE1haW4gPT09IDApIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoeyBtb2RhbE1haW46IG1heCAtIDEgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoeyBtb2RhbE1haW46IG1vZGFsTWFpbiAtIDEgfSk7XG4gICAgfVxuICB9XG5cbiAgcmlnaHRNb2RhbENsaWNrKCkge1xuICAgIGNvbnN0IHsgbW9kYWxNYWluLCBpbWFnZXMgfSA9IHRoaXMuc3RhdGU7XG4gICAgY29uc3QgbWF4ID0gaW1hZ2VzLmxlbmd0aDtcbiAgICBpZiAobW9kYWxNYWluID09PSBtYXggLSAxKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHsgbW9kYWxNYWluOiAwIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHsgbW9kYWxNYWluOiBtb2RhbE1haW4gKyAxIH0pO1xuICAgIH1cbiAgfVxuXG4gIG1vZGFsVGh1bWJzKGluZGV4KSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IG1vZGFsTWFpbjogTnVtYmVyKGluZGV4KSB9KTtcbiAgfVxuXG4gIG1haW5DbGljayhldmVudCkge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgY29uc3QgeyBzaG93TW9kYWwsIG1haW4gfSA9IHRoaXMuc3RhdGU7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IHNob3dNb2RhbDogIXNob3dNb2RhbCwgbW9kYWxNYWluOiBtYWluIH0pO1xuICB9XG5cbiAgY2hhbmdlRmF2KGV2ZW50KSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zdCB7IGlkLCBmYXZvcml0ZSB9ID0gdGhpcy5zdGF0ZTtcbiAgICBheGlvcy5wYXRjaChgL2FwaS9pdGVtcy8ke2lkfWAsIHsgZmF2b3JpdGUgfSlcbiAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgdGhpcy5nZXRJdGVtcygpO1xuICAgICAgfSk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge1xuICAgICAgaW1hZ2VzLCBtYWluLCB0aHVtYkNsYXNzLCBtb2RhbFRodW1iQ2xhc3MsXG4gICAgICBzaG93TW9kYWwsIG1vZGFsTWFpbiwgZmF2b3JpdGUsXG4gICAgfSA9IHRoaXMuc3RhdGU7XG4gICAgbGV0IGZhdm9yaXRlQnV0dG9uO1xuICAgIGxldCBmYXY7XG4gICAgaWYgKGZhdm9yaXRlKSB7XG4gICAgICBmYXZvcml0ZUJ1dHRvbiA9IDxwYXRoIGQ9XCJNMTYuNSwzQTYuOTUzLDYuOTUzLDAsMCwwLDEyLDUuMDUxLDYuOTEyLDYuOTEyLDAsMCwwLDcuNSwzQzQuMzY0LDMsMiw1LjU3OSwyLDljMCw1LjY4OCw4LjM0OSwxMiwxMCwxMlMyMiwxNC42ODgsMjIsOUMyMiw1LjU3OSwxOS42MzYsMywxNi41LDNaXCIgLz47XG4gICAgICBmYXYgPSAnaW1hZ2UtZmF2JztcbiAgICB9IGVsc2Uge1xuICAgICAgZmF2b3JpdGVCdXR0b24gPSA8cGF0aCBkPVwiTTEyLDIxQzEwLjM0OSwyMSwyLDE0LjY4OCwyLDksMiw1LjU3OSw0LjM2NCwzLDcuNSwzQTYuOTEyLDYuOTEyLDAsMCwxLDEyLDUuMDUxLDYuOTUzLDYuOTUzLDAsMCwxLDE2LjUsM0MxOS42MzYsMywyMiw1LjU3OSwyMiw5LDIyLDE0LjY4OCwxMy42NTEsMjEsMTIsMjFaTTcuNSw1QzUuNDcyLDUsNCw2LjY4Myw0LDljMCw0LjEwOCw2LjQzMiw5LjMyNSw4LDEwLDEuNTY0LS42NTcsOC01LjgzMiw4LTEwLDAtMi4zMTctMS40NzItNC0zLjUtNC0xLjk3OSwwLTMuNywyLjEwNS0zLjcyMSwyLjEyN0wxMS45OTEsOC4xLDExLjIxNiw3LjEyQzExLjE4Niw3LjA4Myw5LjUsNSw3LjUsNVpcIiAvPjtcbiAgICAgIGZhdiA9ICdpbWFnZS1ub3RGYXYnO1xuICAgIH1cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJpbWFnZS1ncmlkXCI+XG5cbiAgICAgICAgPFRodW1icyB0aHVtYkNsYXNzPXt0aHVtYkNsYXNzfSBpbWFnZXM9e2ltYWdlc30gdGh1bWJzPXt0aGlzLnRodW1iQ2xpY2t9IC8+XG5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJpbWFnZS1jb2wyXCI+XG4gICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXt0aGlzLmxlZnRDbGlja30gY2xhc3NOYW1lPVwiaW1hZ2UtbGVmdFwiIHR5cGU9XCJidXR0b25cIj5cbiAgICAgICAgICAgIDxzdmcgdmlld0JveD1cIjAgMCAyNCAyNFwiPlxuICAgICAgICAgICAgICA8cGF0aCBkPVwiTTE2LDIxYTAuOTk0LDAuOTk0LDAsMCwxLS42NjQtMC4yNTNMNS41LDEybDkuODQxLTguNzQ3YTEsMSwwLDAsMSwxLjMyOCwxLjQ5NEw4LjUsMTJsOC4xNTksNy4yNTNBMSwxLDAsMCwxLDE2LDIxWlwiIC8+XG4gICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICA8c3BhbiBvbkNsaWNrPXt0aGlzLm1haW5DbGlja30gbmFtZT1cIm1haW5cIiByb2xlPVwiYnV0dG9uXCIgdGFiSW5kZXg9ezB9IG9uS2V5VXA9e3RoaXMubWFpbkNsaWNrfT48aW1nIGlkPVwibWFpblwiIG5hbWU9XCJtYWluXCIgY2xhc3NOYW1lPVwiaW1hZ2UtbWFpblwiIGFsdD1cIm5vaW1hZ2VcIiBzcmM9e2ltYWdlc1ttYWluXX0gLz48L3NwYW4+XG4gICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXt0aGlzLnJpZ2h0Q2xpY2t9IGNsYXNzTmFtZT1cImltYWdlLXJpZ2h0XCIgdHlwZT1cImJ1dHRvblwiPlxuICAgICAgICAgICAgPHN2ZyB2aWV3Qm94PVwiMCAwIDI0IDI0XCI+XG4gICAgICAgICAgICAgIDxwYXRoIGQ9XCJNOCwyMWExLDEsMCwwLDEtLjY2NC0xLjc0N0wxNS41LDEyLDcuMzM2LDQuNzQ3QTEsMSwwLDAsMSw4LjY2NCwzLjI1M0wxOC41LDEyLDguNjY0LDIwLjc0N0EwLjk5NCwwLjk5NCwwLDAsMSw4LDIxWlwiIC8+XG4gICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e3RoaXMuY2hhbmdlRmF2fSBjbGFzc05hbWU9e2Zhdn0gdHlwZT1cImJ1dHRvblwiPlxuICAgICAgICAgICAgPHN2ZyB2aWV3Qm94PVwiMCAwIDI0IDI0XCI+XG4gICAgICAgICAgICAgIHtmYXZvcml0ZUJ1dHRvbn1cbiAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICA8TW9kYWxcbiAgICAgICAgICB0aHVtYkNsYXNzPXttb2RhbFRodW1iQ2xhc3N9XG4gICAgICAgICAgaW1hZ2VzPXtpbWFnZXN9XG4gICAgICAgICAgbWFpbj17bW9kYWxNYWlufVxuICAgICAgICAgIHNob3dNb2RhbD17c2hvd01vZGFsfVxuICAgICAgICAgIG9uQ2xvc2U9e3RoaXMubWFpbkNsaWNrfVxuICAgICAgICAgIGxlZnQ9e3RoaXMubGVmdE1vZGFsQ2xpY2t9XG4gICAgICAgICAgcmlnaHQ9e3RoaXMucmlnaHRNb2RhbENsaWNrfVxuICAgICAgICAgIG1vZGFsVGh1bWJzPXt0aGlzLm1vZGFsVGh1bWJzfVxuICAgICAgICAvPlxuXG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG5leHBvcnQgZGVmYXVsdCBJbWFnZTtcbiIsImltcG9ydCBhcGkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgICAgICAgIGltcG9ydCBjb250ZW50IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0IGRlZmF1bHQgY29udGVudC5sb2NhbHMgfHwge307IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nO1xuaW1wb3J0IEltYWdlIGZyb20gJy4vY29tcG9uZW50cy9JbWFnZSc7XG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vc3R5bGUuY3NzJztcbmltcG9ydCBleHBhbmQgZnJvbSAnLi4vcHVibGljL2V4cGFuZC5wbmcnO1xuaW1wb3J0IHpvb21JbiBmcm9tICcuLi9wdWJsaWMvem9vbUluLnBuZyc7XG5pbXBvcnQgem9vbU91dCBmcm9tICcuLi9wdWJsaWMvem9vbU91dC5wbmcnO1xuXG5SZWFjdERPTS5yZW5kZXIoPEltYWdlIC8+LCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW1hZ2UnKSk7XG4iXSwic291cmNlUm9vdCI6IiJ9